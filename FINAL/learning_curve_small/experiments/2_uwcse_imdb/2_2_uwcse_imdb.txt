Starting experiment #2 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(C, E), tempadvisedby(F, E) )
%   | | | then return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(G, A) )
%   | | then if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return -0.05851773156715445;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.3152917922423695;  // std dev = 2,947, 35,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.5393083553893678;  // std dev = 3,871, 69,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.14185106490048824;  // std dev = 0,000, 201,000 (wgt'ed) examples reached here.  /* #neg=201 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.24040630315867176;  // std dev = 1,014, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7234606295343292;  // std dev = 0,052, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( publication(G, I), professor(I) )
%   | | | then return 0.08368703353857507;  // std dev = 1,907, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.8152826746574514;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | | then return 0.35057371899859174;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.601496223982766;  // std dev = 3,157, 69,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=57 */
%   else return -0.1254446385283913;  // std dev = 4,71e-08, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then return 0.5651292853391189;  // std dev = 0,205, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, F), professor(F) )
%   | | | then return 0.113455435392726;  // std dev = 2,526, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.4442759440861877;  // std dev = 1,256, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | | then return 0.3435199441958323;  // std dev = 2,952, 40,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | | | else return 0.5391321844388225;  // std dev = 1,662, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   else if ( ta(I, A, J) )
%   | then return -0.1193723527597805;  // std dev = 0,300, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( professor(B) )
%   | | then if ( publication(K, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.11988131969123084;  // std dev = 0,569, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1123163781936062;  // std dev = 8,02e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.43511564937234093;  // std dev = 0,205, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.2965264053926705;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.42585077710129327;  // std dev = 0,050, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(H, A, I), publication(J, B) )
%   | | then if ( publication(K, A) )
%   | | | then return 0.12180964056608054;  // std dev = 1,885, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.3522073558091995;  // std dev = 2,334, 33,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | else if ( publication(L, A) )
%   | | | then return 0.20986725405709614;  // std dev = 2,068, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.08100979659865087;  // std dev = 3,666, 53,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   else return -0.10240321776579223;  // std dev = 0,065, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B), ta(F, D, G) )
%   | | | then return 0.49546007016264576;  // std dev = 0,227, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.052002673673392646;  // std dev = 1,790, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( publication(C, H), ta(I, H, J) )
%   | | | then return 0.2929130276364639;  // std dev = 2,809, 63,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=51 */
%   | | | else return 0.16587061190336833;  // std dev = 3,009, 51,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=33 */
%   | else if ( projectmember(K, B), publication(L, A) )
%   | | then return 0.25270655831252287;  // std dev = 1,052, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(M, A, N), tempadvisedby(P, B) )
%   | | | then return 0.07416552744041348;  // std dev = 1,040, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06334461843135661;  // std dev = 2,203, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else return -0.09272867026552094;  // std dev = 0,031, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.2908084619439268;  // std dev = 0,237, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return 0.025623911997694204;  // std dev = 2,429, 27,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.38292047267544643;  // std dev = 1,164, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.24685911654592801;  // std dev = 2,263, 35,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | then return 0.34843699039112813;  // std dev = 0,774, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.12657648359999887;  // std dev = 1,428, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.007706784558915597;  // std dev = 1,664, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else return -0.08521672014280504;  // std dev = 0,028, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), projectmember(D, B) )
%   | then return 0.5265821198428394;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(E, B), publication(E, A) )
%   | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return 0.10022978453465631;  // std dev = 1,297, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.22828079214568303;  // std dev = 0,172, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then return 0.028671271340560113;  // std dev = 2,327, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.102149370903216;  // std dev = 4,131, 83,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=58 */
%   else return -0.07888940485491348;  // std dev = 0,032, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( projectmember(C, B), ta(D, A, E) )
%   | then return -0.2718115409921202;  // std dev = 1,121, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( ta(I, A, J), ta(G, K, J) )
%   | | | then return 0.2777371871987432;  // std dev = 0,423, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.12301426742604159;  // std dev = 1,918, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | else if ( tempadvisedby(L, B), ta(M, A, N) )
%   | | | then return 0.19231213152269747;  // std dev = 1,481, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.05571680994060886;  // std dev = 4,030, 92,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=59 */
%   else return -0.07389245116667101;  // std dev = 0,048, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.18249987800129078;  // std dev = 0,193, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(C, E), ta(F, E, G) )
%   | | | then return 0.23668509355466746;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07435420374576775;  // std dev = 0,941, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( publication(H, B), ta(I, A, J) )
%   | | then if ( ta(I, K, L), publication(H, K) )
%   | | | then return 0.46757401041172963;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10821662383272633;  // std dev = 2,490, 42,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=30 */
%   | | else if ( projectmember(M, B) )
%   | | | then return 0.1631250977384397;  // std dev = 1,249, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.048167776673826546;  // std dev = 3,749, 66,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=32 */
%   else return -0.06840983530609533;  // std dev = 0,023, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then if ( ta(E, C, F), publication(G, C) )
%   | | | then return -0.07613352709995948;  // std dev = 1,236, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.10889932322179774;  // std dev = 1,027, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else if ( publication(H, B) )
%   | | | then return -0.18471990363715687;  // std dev = 1,507, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.20384247736413608;  // std dev = 0,953, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( ta(I, A, J) )
%   | | then if ( publication(K, B), publication(L, A) )
%   | | | then return 0.29653298563817926;  // std dev = 0,776, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.049799010836040575;  // std dev = 2,923, 41,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   | | else if ( tempadvisedby(M, B), ta(N, M, P) )
%   | | | then return 0.26690272520656616;  // std dev = 0,959, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.14640665125695773;  // std dev = 2,614, 42,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   else return -0.06445310402188249;  // std dev = 0,038, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.2518113266019146;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2684867646209801;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11615080292622802;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.16514221624163775;  // std dev = 0,296, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13993276246796343;  // std dev = 0,117, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1713804139651598;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.13699537209418908;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1483936496677427;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.12158897946269726;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065383
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.886 seconds
Total inference time: 1.481 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106477
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.522 seconds
Parameter learned model CLL: -0.106477


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)'}, {'true,true': [0.0, 0, 5], 'false,false': [0.0, 4, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.49e-08, 0, 5], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.377, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.296, 1, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.117, 1, 5], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,false,true': [0.0, 1, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true,false,true': [0.0, nan], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'false': [nan, 0.0]}, {'': [0.03742709756190412, 0.0], 'true,false,true': [0.0, nan], 'true,true': [4.4408920985006264e-17, nan], 'true': [4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.02373640866597888, 0.0], 'true,true,true': [0.02373640866597888, nan], 'true,true': [0.02373640866597888, nan], 'true': [0.02373640866597888, nan]}, {'': [0.02054806366231014, 0.0], 'true,true,true': [0.0, 0.0], 'true,true': [0.02054806366231014, nan], 'true': [0.02054806366231014, nan]}, {'': [0.014568144650107162, 0.0], 'true': [0.014568144650107162, nan]}, {'': [0.013645961698637315, 0.0]}, {'': [0.013207725753850182, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-5.551115123125783e-18, nan], 'true': [-5.551115123125783e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.010123697226692317, 0.0], 'true,true,true': [0.0, nan], 'true,true': [0.0, 0.0], 'true': [0.010123697226692317, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2518113266019146;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.2043805033631121;  // std dev = 0,351, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16876657905621142;  // std dev = 0,337, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.14140483492615988;  // std dev = 0,330, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17992353775464776;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.18022184936831093;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.103219131672787;  // std dev = 0,283, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067838
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.68 seconds
Total inference time: 1.309 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.119954
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.482 seconds
Refined model CLL: -0.119954


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065383
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.5700000000000003 seconds
Total inference time: 1.481 seconds
AUC ROC: 1.0
Total revision time: 2.5700000000000003
Best scored revision CLL: -0.106477


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:11
{'AUC ROC': 1.0, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065383, 'Precision': [1.0, 0.5], 'Learning time': 0.886, 'F1': 1.0, 'Inference time': 1.481, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.065383, 'Precision': [1.0, 0.5], 'Learning time': 2.5700000000000003, 'F1': 1.0, 'Inference time': 1.481, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6056364498471037;  // std dev = 0,801, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.15612031201574286;  // std dev = 0,106, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4845912943420874;  // std dev = 0,759, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.13701473982051887;  // std dev = 0,096, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14726242728701588;  // std dev = 0,175, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.38755131270767945;  // std dev = 0,641, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.13069242947318732;  // std dev = 0,160, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.29623661057414924;  // std dev = 0,616, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24221489086665268;  // std dev = 0,533, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.13818278300855044;  // std dev = 0,219, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1909477009467079;  // std dev = 0,529, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12398127764140526;  // std dev = 0,201, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12716513372863272;  // std dev = 0,237, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.162844788542252;  // std dev = 0,477, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13309504077101025;  // std dev = 0,480, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11562152024706876;  // std dev = 0,220, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11844933513460962;  // std dev = 0,249, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.11850265039157866;  // std dev = 0,439, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.148646
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 0.985 seconds
Total inference time: 1.16 seconds
AUC ROC: 0.999547


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:13
{'AUC ROC': 0.999547, 'Recall': 1.0, 'CLL': -0.148646, 'Precision': [0.949153, 0.5], 'Learning time': 0.985, 'F1': 0.973913, 'Inference time': 1.16, 'AUC PR': 0.949153}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.982164
   AUC PR    = 0.321839
   CLL	      = -0.160312
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.495 seconds
Total inference time: 0.808 seconds
AUC ROC: 0.982164


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:15
{'AUC ROC': 0.982164, 'Recall': 0.0, 'CLL': -0.160312, 'Precision': [nan, 0.5], 'Learning time': 0.495, 'F1': nan, 'Inference time': 0.808, 'AUC PR': 0.321839}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.2518113266019146;  // std dev = 0,534, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2684867646209801;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11615080292622802;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.1651422162416378;  // std dev = 0,418, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1399327624679634;  // std dev = 0,117, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1713804139651598;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.13699537209418908;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1483936496677427;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.12158897946269726;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065364
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.945 seconds
Total inference time: 1.399 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106477
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.543 seconds
Parameter learned model CLL: -0.106477


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 10], 'false,false': [0.0, 7, 0], 'true,false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [3.65e-08, 0, 10], 'false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.534, 2, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 8, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.418, 2, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.117, 2, 10], 'false': [2.63e-09, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,true,false,true': [0.0, 2, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.09915090450905217, 0.0], 'true,false,true': [0.0, nan], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.0619167140786188, -1.734723475976807e-18], 'true,false,true': [0.0, nan], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.0, -1.982541115402065e-18], 'false,true': [0.0, nan]}, {'': [0.037427097561904134, 1.734723475976807e-18], 'true,false,true': [0.0, nan], 'true,true': [1.3322676295501878e-16, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02373640866597886, 0.0], 'true,true,true': [0.02373640866597886, nan], 'true,true': [0.02373640866597886, nan], 'true': [0.02373640866597886, nan]}, {'': [0.02054806366231014, 1.734723475976807e-18], 'true,true,true': [0.0, 0.0], 'true,true': [0.02054806366231014, nan], 'true': [0.02054806366231014, nan]}, {'': [0.014568144650107145, 0.0], 'true': [0.014568144650107145, nan]}, {'': [0.013645961698637315, 8.673617379884035e-19]}, {'': [0.013207725753850172, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-5.551115123125783e-18, nan], 'true': [-5.551115123125783e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.010123697226692313, 0.0], 'true,true,true': [0.0, nan], 'true,true': [0.0, 0.0], 'true': [0.010123697226692313, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( female(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2518113266019146;  // std dev = 0,154, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( female(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.2043805033631121;  // std dev = 0,143, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16876657905621137;  // std dev = 0,138, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( female(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.14140483492616;  // std dev = 0,135, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1799235377546479;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.18022184936831093;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( female(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.103219131672787;  // std dev = 0,116, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067838
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.072 seconds
Total inference time: 1.271 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.119954
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.484 seconds
Refined model CLL: -0.119954


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065364
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.044 seconds
Total inference time: 1.399 seconds
AUC ROC: 1.0
Total revision time: 3.044
Best scored revision CLL: -0.106477


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:21
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065364, 'Precision': [1.0, 0.5], 'Learning time': 3.044, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065364, 'Precision': [1.0, 0.5], 'Learning time': 0.945, 'F1': 1.0, 'Inference time': 1.399, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.399, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6914822684328455;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.6056364498471036;  // std dev = 0,327, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( female(B) )
%   | then return -0.18679598550309434;  // std dev = 0,123, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.48459129434208764;  // std dev = 0,310, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( female(B) )
%   | then return -0.16064913365526878;  // std dev = 0,109, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.38896271225081497;  // std dev = 0,259, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( actor(B) )
%   | then return -0.09776313156282461;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.23326040307595516;  // std dev = 0,161, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2982182428849635;  // std dev = 0,246, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( female(B) )
%   | then return -0.17006940973314522;  // std dev = 0,172, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09030970206989976;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24479659924981698;  // std dev = 0,210, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( actor(B) )
%   | then return -0.0801817963918929;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.23380186818373308;  // std dev = 0,194, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1943821372862258;  // std dev = 0,205, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( female(B) )
%   | then return -0.16861940037847278;  // std dev = 0,204, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07490251051495928;  // std dev = 0,016, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16710824564446733;  // std dev = 0,181, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( actor(B) )
%   | then return -0.06736821457592158;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.22187738417180972;  // std dev = 0,202, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13870737917971485;  // std dev = 0,178, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( female(B) )
%   | then return -0.16182736070178275;  // std dev = 0,217, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0638128034763777;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12310736441762615;  // std dev = 0,162, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( actor(B) )
%   | then return -0.05779317730725756;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.20583728548235536;  // std dev = 0,199, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.150667
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.532 seconds
Total inference time: 1.176 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:24
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.150667, 'Precision': [1.0, 0.5], 'Learning time': 1.532, 'F1': 1.0, 'Inference time': 1.176, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6914822684328455;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.857618
   AUC PR    = 0.056112
   CLL	      = -0.197342
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.642 seconds
Total inference time: 0.849 seconds
AUC ROC: 0.857618


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:26
{'AUC ROC': 0.857618, 'Recall': 0.0, 'CLL': -0.197342, 'Precision': [nan, 0.5], 'Learning time': 0.642, 'F1': nan, 'Inference time': 0.849, 'AUC PR': 0.056112}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,49e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return 0.22152502927633905;  // std dev = 0,472, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4230268889371149;  // std dev = 0,080, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10449415481921309;  // std dev = 0,033, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.25506054396645694;  // std dev = 0,664, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09512090991135068;  // std dev = 0,031, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2714432500241158;  // std dev = 0,068, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.11648478316070997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08724958707544238;  // std dev = 0,028, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.1668771632306576;  // std dev = 0,519, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08055221590533553;  // std dev = 0,027, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.14126904284183006;  // std dev = 0,118, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else return -0.07478851538571075;  // std dev = 0,025, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17277231531703835;  // std dev = 0,050, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.13770467694605068;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06977877230435132;  // std dev = 0,023, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.14948036341566953;  // std dev = 0,045, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.1221537334900956;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06538609122326063;  // std dev = 0,022, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064649
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.011 seconds
Total inference time: 1.621 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107528
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.601 seconds
Parameter learned model CLL: -0.107528


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 3, 0], 'true,true,true': [0.0, 0, 15], 'false': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 12, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 14], 'false,false': [7.45e-09, 11, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.472, 1, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.08, 0, 15], 'false': [0.033, 12, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.664, 3, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.031, 12, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.068, 0, 15], 'true,true,true,false': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false': [0.028, 12, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.519, 3, 15], 'true,false': [0.0, 0, 0], 'false': [0.027, 12, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.118, 3, 15], 'false': [0.025, 12, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [3.73e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.05, 0, 15], 'false': [0.023, 12, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.045, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.022, 12, 0], 'true,true,false,true': [2.63e-09, 3, 0]}]]
[{'': [0.1388888888888886, -1.1564823173178714e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.09915090450905224, 2.3129646346357427e-18], 'true,false,true': [0.0, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.06478759286288682, 0.0316544621088324], 'true,false,true': [2.3129646346357427e-18, nan], 'true': [-2.5376526277146434e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'false': [0.11145008534151415, 5.046468293750712e-18], 'false,true': [0.11145008534151415, nan]}, {'': [0.03858094858272364, 9.237130816285947e-05], 'true,false,true': [-1.1564823173178713e-18, nan], 'true,true': [0.0004255514141760545, nan], 'true': [0.0004255514141760545, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan]}, {'': [0.02448959394879528, 7.859728893823414e-05], 'true,true,true': [0.02448959394879528, nan], 'true,true': [0.02448959394879528, nan], 'true': [0.02448959394879528, nan]}, {'': [0.0211560024600306, 6.760416742931467e-05], 'true,true,true': [0.0003058431302621845, 0.0], 'true,true': [0.0211560024600306, nan], 'true': [0.0211560024600306, nan]}, {'': [0.014985302209013833, 5.871029039447121e-05], 'true': [0.014985302209013833, nan]}, {'': [0.01400506795015341, 5.14251728366844e-05]}, {'': [0.013529782933889465, 4.5390472145993496e-05], 'true,false,true': [4.625929269271485e-18, nan], 'true,true': [0.00016974573321164958, nan], 'true': [0.00016974573321164958, 4.625929269271485e-18], 'true,false': [4.625929269271485e-18, nan]}, {'': [0.010361502306256268, 4.034045812947631e-05], 'true,true,true': [0.00013628900053908415, nan], 'true,true': [0.00013628900053908415, 2.3129646346357427e-18], 'true': [0.010361502306256268, nan], 'true,true,false': [2.3129646346357427e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then return 0.22152502927633905;  // std dev = 0,472, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4230268889371149;  // std dev = 0,080, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10449415481921309;  // std dev = 0,033, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32461090799760056;  // std dev = 0,074, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09512090991135068;  // std dev = 0,031, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.26701440798387804;  // std dev = 0,061, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1752554114807447;  // std dev = 0,143, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08724958707544238;  // std dev = 0,028, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22053987654149848;  // std dev = 0,054, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09987229967639537;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08055221590533553;  // std dev = 0,027, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18500074452980084;  // std dev = 0,048, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09124589212988093;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07478851538571075;  // std dev = 0,025, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15873744379732485;  // std dev = 0,042, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08395669822533591;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06977877230435132;  // std dev = 0,023, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13868508204625024;  // std dev = 0,038, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.07772122391857707;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06538609122326063;  // std dev = 0,022, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063239
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.921 seconds
Total inference time: 1.397 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098526
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.54 seconds
Refined model CLL: -0.098526


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063239
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.073 seconds
Total inference time: 1.397 seconds
AUC ROC: 1.0
Total revision time: 3.073
Best scored revision CLL: -0.098526


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:33
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063239, 'Precision': [1.0, 0.5], 'Learning time': 3.073, 'F1': 1.0, 'Inference time': 1.397, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064649, 'Precision': [1.0, 0.5], 'Learning time': 1.011, 'F1': 1.0, 'Inference time': 1.621, 'AUC PR': 1.0}, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.349 seconds
Total inference time: 1.277 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:35
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Learning time': 1.349, 'F1': 1.0, 'Inference time': 1.277, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.605 seconds
Total inference time: 0.848 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:37
{'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Precision': [nan, 0.5], 'Learning time': 0.605, 'F1': nan, 'Inference time': 0.848, 'AUC PR': 1.0}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return 0.3328054984329875;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4230043315806314;  // std dev = 0,074, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10444443563404344;  // std dev = 0,047, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.2701157695506923;  // std dev = 0,677, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09508292989265157;  // std dev = 0,043, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2683819648121549;  // std dev = 0,061, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.11804317652280545;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08722020933413298;  // std dev = 0,040, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.17664639769595625;  // std dev = 0,528, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08052926286631092;  // std dev = 0,038, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.14934363566416697;  // std dev = 0,106, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.07477044074130487;  // std dev = 0,035, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1684393442806913;  // std dev = 0,044, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14146856186764778;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06976445580086396;  // std dev = 0,033, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.14615824431175298;  // std dev = 0,040, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.12514179727778033;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06537470673654147;  // std dev = 0,031, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.055 seconds
Total inference time: 1.482 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104896
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.632 seconds
Parameter learned model CLL: -0.104896


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 3, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 18], 'false,false': [1.39e-08, 16, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.545, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.074, 0, 20], 'false': [0.047, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.677, 3, 20], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.043, 17, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.061, 0, 20], 'true,true,true,false': [3.73e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false': [0.04, 17, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.528, 3, 20], 'true,false': [0.0, 0, 0], 'false': [0.038, 17, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.106, 3, 20], 'false': [0.035, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.044, 0, 20], 'false': [0.033, 17, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.04, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.031, 17, 0], 'true,true,false,true': [2.63e-09, 3, 0]}]]
[{'': [0.11342155009451807, -3.2653618371328133e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.08097011483536962, 0.0], 'true,false,true': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.05458779690196581, 0.0419867357519278], 'true,false,true': [2.3129646346357427e-18, nan], 'true': [-2.4671622769447924e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'false': [0.09906674252579038, 1.214306433183765e-17], 'false,true': [0.09906674252579038, nan]}, {'': [0.03145021778383216, 0.0001297873379210005], 'true,false,true': [-1.1564823173178713e-18, nan], 'true,true': [0.00027133476530172285, nan], 'true': [0.00027133476530172285, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan]}, {'': [0.019941562664007016, 0.00011074620738231863], 'true,true,true': [0.019941562664007016, nan], 'true,true': [0.019941562664007016, nan], 'true': [0.019941562664007016, nan]}, {'': [0.017098110383936743, 9.548393664195595e-05], 'true,true,true': [0.00018573261251715324, 4.625929269271485e-18], 'true,true': [0.017098110383936743, nan], 'true': [0.017098110383936743, nan]}, {'': [0.012133408151905039, 8.309142677351686e-05], 'true': [0.012133408151905039, nan]}, {'': [0.011333087014930927, 7.290919213938619e-05]}, {'': [0.010978602301907042, 6.445219634294678e-05], 'true,false,true': [-2.3129646346357427e-18, nan], 'true,true': [9.805652198687232e-05, nan], 'true': [9.805652198687232e-05, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan]}, {'': [0.00841649628689736, 5.735874658531889e-05], 'true,true,true': [7.848648212989418e-05, nan], 'true,true': [7.848648212989418e-05, 2.3129646346357427e-18], 'true': [0.00841649628689736, nan], 'true,true,false': [2.3129646346357427e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then return 0.3328054984329875;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4230043315806314;  // std dev = 0,074, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10444443563404344;  // std dev = 0,047, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3245368264116853;  // std dev = 0,067, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09508292989265157;  // std dev = 0,043, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.26607948898286893;  // std dev = 0,053, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.25340574315026665;  // std dev = 2,36e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08722020933413298;  // std dev = 0,040, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2116633367388101;  // std dev = 0,050, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08052926286631092;  // std dev = 0,038, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17851510140085375;  // std dev = 0,044, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07477044074130487;  // std dev = 0,035, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15383396753939726;  // std dev = 0,040, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06976445580086396;  // std dev = 0,033, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13486776396023684;  // std dev = 0,036, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06537470673654147;  // std dev = 0,031, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063106
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.036 seconds
Total inference time: 1.509 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095539
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.565 seconds
Refined model CLL: -0.095539


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063106
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.288 seconds
Total inference time: 1.509 seconds
AUC ROC: 1.0
Total revision time: 3.288
Best scored revision CLL: -0.095539


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:44
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063106, 'Precision': [1.0, 0.5], 'Learning time': 3.288, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064726, 'Precision': [1.0, 0.5], 'Learning time': 1.055, 'F1': 1.0, 'Inference time': 1.482, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.509, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839686;  // std dev = 8,33e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.444 seconds
Total inference time: 1.458 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:47
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Learning time': 1.444, 'F1': 1.0, 'Inference time': 1.458, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.611 seconds
Total inference time: 0.839 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:49
{'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Precision': [nan, 0.5], 'Learning time': 0.611, 'F1': nan, 'Inference time': 0.839, 'AUC PR': 1.0}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return 0.3328054984329875;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4219061820961672;  // std dev = 0,074, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10390193922524213;  // std dev = 0,047, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.26632966129638347;  // std dev = 0,776, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09462822421192874;  // std dev = 0,044, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.26843072777658;  // std dev = 0,062, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.11764957829967741;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08683385689140188;  // std dev = 0,041, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.17427474909683555;  // std dev = 0,606, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08019709896746649;  // std dev = 0,038, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1474038251192713;  // std dev = 0,109, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   else return -0.07448191965824756;  // std dev = 0,035, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.16905951471052044;  // std dev = 0,045, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14053545664916978;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06951157591322879;  // std dev = 0,033, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.14663082489577228;  // std dev = 0,040, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.12440239361660303;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06515129369224144;  // std dev = 0,031, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064862
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.119 seconds
Total inference time: 1.495 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105236
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.632 seconds
Parameter learned model CLL: -0.105236


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 4, 0], 'true,true,true': [1.33e-07, 0, 25], 'false': [1.05e-08, 21, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 23], 'false,false': [1.49e-08, 20, 0], 'true,false,true,true': [0.0, 4, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.545, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.074, 0, 25], 'false': [0.047, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.776, 4, 25], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.044, 21, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.062, 0, 25], 'true,true,true,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false': [0.041, 21, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.606, 4, 25], 'true,false': [0.0, 0, 0], 'false': [0.038, 21, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.109, 4, 25], 'false': [0.035, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.045, 0, 25], 'false': [0.033, 21, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.04, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.031, 21, 0], 'true,true,false,true': [0.0, 4, 0]}]]
[{'': [0.11890606420927562, 5.28677630773884e-18], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.08488543548931946, -2.64338815386942e-18], 'true,false,true': [0.0, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.05626012538501639, 0.03539435602528241], 'true,false,true': [0.0, nan], 'true': [-2.703151712130816e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.09906674252579038, 1.1102230246251566e-17], 'false,true': [0.09906674252579038, nan]}, {'': [0.03277807292626939, 0.0001063167252244035], 'true,false,true': [0.0, nan], 'true,true': [0.0002218915414021083, nan], 'true': [0.0002218915414021083, 0.0], 'true,false': [0.0, nan]}, {'': [0.020783366057120695, 9.079482717356892e-05], 'true,true,true': [0.020783366057120695, nan], 'true,true': [0.020783366057120695, nan], 'true': [0.020783366057120695, nan]}, {'': [0.01785538426497531, 7.83398665913992e-05], 'true,true,true': [0.00015252123151801022, 0.0], 'true,true': [0.01785538426497531, nan], 'true': [0.01785538426497531, nan]}, {'': [0.01266815134750265, 6.821697346268538e-05], 'true': [0.01266815134750265, nan]}, {'': [0.011839510810613331, 5.989230454419596e-05]}, {'': [0.01146696899324256, 5.297271932202754e-05], 'true,false,true': [0.0, nan], 'true,true': [8.112592302930821e-05, nan], 'true': [8.112592302930821e-05, 0.0], 'true,false': [0.0, nan]}, {'': [0.008790700869147839, 4.7164701384131e-05], 'true,true,true': [6.493638239397636e-05, nan], 'true,true': [6.493638239397636e-05, 0.0], 'true': [0.008790700869147839, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B) )
%   | then return 0.3328054984329875;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4219061820961672;  // std dev = 0,074, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10390193922524213;  // std dev = 0,047, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3237730112940866;  // std dev = 0,068, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09462822421192874;  // std dev = 0,044, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.23101702754558984;  // std dev = 0,101, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.1972676850341122;  // std dev = 0,126, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08683385689140188;  // std dev = 0,041, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2191311913854983;  // std dev = 0,050, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10265104020594343;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08019709896746649;  // std dev = 0,038, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1839600208425221;  // std dev = 0,044, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09357384838155211;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07448191965824756;  // std dev = 0,035, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15794304698973397;  // std dev = 0,040, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08593340384711537;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06951157591322879;  // std dev = 0,033, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13806139658909466;  // std dev = 0,036, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.07941933312257185;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06515129369224144;  // std dev = 0,031, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063403
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.0 seconds
Total inference time: 1.349 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098032
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.566 seconds
Refined model CLL: -0.098032


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063403
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.3169999999999997 seconds
Total inference time: 1.349 seconds
AUC ROC: 1.0
Total revision time: 3.3169999999999997
Best scored revision CLL: -0.098032


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:56
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063403, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.064862, 'Precision': [1.0, 0.5], 'Learning time': 1.119, 'F1': 1.0, 'Inference time': 1.495, 'AUC PR': 1.0}, 'Learning time': 3.3169999999999997, 'F1': 1.0, 'Inference time': 1.349, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926103;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839683;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0641918400820262;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.499 seconds
Total inference time: 1.428 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:59
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Learning time': 1.499, 'F1': 1.0, 'Inference time': 1.428, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.601 seconds
Total inference time: 0.876 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:07:00
{'AUC ROC': 1.0, 'Recall': 0.0, 'CLL': -0.152968, 'Precision': [nan, 0.5], 'Learning time': 0.601, 'F1': nan, 'Inference time': 0.876, 'AUC PR': 1.0}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074237
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.802 seconds
Total inference time: 1.715 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.53 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false,true': 'movie(E, A)', 'false': 'director(B)'}, {'false,true,true': [0.0, 0, 1], 'true,true': [0.0, 0, 4], 'false,false': [0.0, 5, 0], 'false,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [1.49e-08, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.061916714078618956], 'true': [0.0, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.0]}, {'': [4.4408920985006264e-17, 0.0], 'true,true': [4.4408920985006264e-17, nan], 'true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true,true,true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( director(B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.15976
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.624 seconds
Total inference time: 1.282 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.474 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074237
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.4299999999999997 seconds
Total inference time: 1.715 seconds
AUC ROC: 1.0
Total revision time: 2.4299999999999997
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:06
{'AUC ROC': 1.0, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.074237, 'Precision': [1.0, 0.5], 'Learning time': 0.802, 'F1': 1.0, 'Inference time': 1.715, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.074237, 'Precision': [1.0, 0.5], 'Learning time': 2.4299999999999997, 'F1': 1.0, 'Inference time': 1.715, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.168993
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.016 seconds
Total inference time: 1.056 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:09
{'AUC ROC': 0.973999, 'Recall': 1.0, 'CLL': -0.168993, 'Precision': [0.245763, 0.5], 'Learning time': 1.016, 'F1': 0.394558, 'Inference time': 1.056, 'AUC PR': 0.245763}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.162966
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.498 seconds
Total inference time: 0.819 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:10
{'AUC ROC': 0.973999, 'Recall': 0.0, 'CLL': -0.162966, 'Precision': [nan, 0.5], 'Learning time': 0.498, 'F1': nan, 'Inference time': 0.819, 'AUC PR': 0.245763}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074237
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.879 seconds
Total inference time: 1.331 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.524 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false,true': 'movie(E, A)', 'false': 'director(B)'}, {'false,true,true': [0.0, 0, 1], 'true,true': [0.0, 0, 9], 'false,false': [0.0, 10, 0], 'false,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [3.65e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [1.83e-08, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [2.63e-09, 0, 10], 'false': [2.63e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [8.881784197001253e-17, nan]}, {'': [-1.4802973661668753e-16, 0.036843003418682345], 'true': [-1.4802973661668753e-16, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.0]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true,true': [1.3322676295501878e-16, nan], 'true': [1.3322676295501878e-16, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true,true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [3.3306690738754695e-17, 1.3877787807814458e-18], 'true,true,true': [3.3306690738754695e-17, nan], 'true,true': [3.3306690738754695e-17, nan], 'true': [3.3306690738754695e-17, nan]}, {'': [-2.7755575615628914e-17, 0.0], 'true': [-2.7755575615628914e-17, nan]}, {'': [5.551115123125783e-18, 6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 1.3877787807814458e-18], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( director(B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.15976
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.642 seconds
Total inference time: 1.186 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.474 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074237
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.519 seconds
Total inference time: 1.331 seconds
AUC ROC: 1.0
Total revision time: 2.519
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:16
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.074237, 'Precision': [1.0, 0.5], 'Learning time': 2.519, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.074237, 'Precision': [1.0, 0.5], 'Learning time': 0.879, 'F1': 1.0, 'Inference time': 1.331, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.331, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.168993
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.103 seconds
Total inference time: 1.125 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:18
{'AUC ROC': 0.973999, 'Recall': 1.0, 'CLL': -0.168993, 'Precision': [0.245763, 0.5], 'Learning time': 1.103, 'F1': 0.394558, 'Inference time': 1.125, 'AUC PR': 0.245763}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.162966
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.54 seconds
Total inference time: 0.837 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:20
{'AUC ROC': 0.973999, 'Recall': 0.0, 'CLL': -0.162966, 'Precision': [nan, 0.5], 'Learning time': 0.54, 'F1': nan, 'Inference time': 0.837, 'AUC PR': 0.245763}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,49e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.2948741519508115;  // std dev = 0,400, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2601139237211473;  // std dev = 2,58e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.12064522024263256;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.19313851344485405;  // std dev = 0,311, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16318134567180104;  // std dev = 0,075, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1595191349589708;  // std dev = 1,97e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14796401994940436;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.13927442740494994;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.13026433044036972;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066605
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.975 seconds
Total inference time: 1.711 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099065
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.564 seconds
Parameter learned model CLL: -0.099065


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 15], 'false': [0.0, 14, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 13], 'false,false': [1.18e-08, 14, 0], 'true,false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [4.71e-08, 0, 15], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.4, 1, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [2.58e-08, 0, 15], 'true,true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [8.33e-09, 14, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.311, 1, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.075, 1, 15], 'false': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.97e-08, 0, 15], 'false': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.97e-09, 14, 0], 'true,true,false,true': [0.0, 1, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02956838998856472, 0.04875941233691247], 'true,false,true': [0.0, nan], 'true': [-2.7328566760003855e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.0, 9.912705577010326e-18], 'false,true': [0.0, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true,true': [1.4802973661668753e-16, nan], 'true': [1.4802973661668753e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.010013797405959826, 3.96508223080413e-18], 'true,true,true': [0.010013797405959826, nan], 'true,true': [0.010013797405959826, nan], 'true': [0.010013797405959826, nan]}, {'': [0.008494776897189332, 4.956352788505163e-18], 'true,true,true': [4.4408920985006264e-17, 0.0], 'true,true': [0.008494776897189332, nan], 'true': [0.008494776897189332, nan]}, {'': [0.006062514581407365, -9.912705577010326e-19], 'true': [0.006062514581407365, nan]}, {'': [0.005673810088919786, 9.912705577010326e-19]}, {'': [0.005539798274555169, 9.912705577010326e-19], 'true,false,true': [0.0, nan], 'true,true': [2.590520390792032e-17, nan], 'true': [2.590520390792032e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.004256902850437361, 3.469446951953614e-18], 'true,true,true': [-1.4802973661668754e-17, nan], 'true,true': [-1.4802973661668754e-17, 0.0], 'true': [0.004256902850437361, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2616542581102339;  // std dev = 0,145, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.21174042082252867;  // std dev = 0,134, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17465795081010935;  // std dev = 0,129, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.14641065144459467;  // std dev = 0,126, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16197214468258128;  // std dev = 0,044, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1844107682900546;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1329397076740222;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.10901397014629581;  // std dev = 0,109, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070388
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.971 seconds
Total inference time: 1.331 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103374
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.517 seconds
Refined model CLL: -0.103374


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066605
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.0269999999999997 seconds
Total inference time: 1.711 seconds
AUC ROC: 1.0
Total revision time: 3.0269999999999997
Best scored revision CLL: -0.099065


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:27
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066605, 'Precision': [1.0, 0.5], 'Learning time': 3.0269999999999997, 'F1': 1.0, 'Inference time': 1.711, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066605, 'Precision': [1.0, 0.5], 'Learning time': 0.975, 'F1': 1.0, 'Inference time': 1.711, 'AUC PR': 1.0}, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2697478132793615;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2062525881598365;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.24737970684094404;  // std dev = 0,178, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.20225886505416205;  // std dev = 0,552, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.20466906419123418;  // std dev = 0,156, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.18259408755893858;  // std dev = 0,525, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(B) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.17363246606636393;  // std dev = 0,138, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1658556610035677;  // std dev = 0,496, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.15029698105718894;  // std dev = 0,123, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.15142395632675226;  // std dev = 0,467, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.999617
   AUC PR    = 0.971227
   CLL	      = -0.116965
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.605 seconds
Total inference time: 1.429 seconds
AUC ROC: 0.999617


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:30
{'AUC ROC': 0.999617, 'Recall': 1.0, 'CLL': -0.116965, 'Precision': [0.245763, 0.5], 'Learning time': 1.605, 'F1': 0.394558, 'Inference time': 1.429, 'AUC PR': 0.971227}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */


Results
   AUC ROC   = 0.975954
   AUC PR    = 0.272034
   CLL	      = -0.162689
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.656 seconds
Total inference time: 0.836 seconds
AUC ROC: 0.975954


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:32
{'AUC ROC': 0.975954, 'Recall': 0.0, 'CLL': -0.162689, 'Precision': [nan, 0.5], 'Learning time': 0.656, 'F1': nan, 'Inference time': 0.836, 'AUC PR': 0.272034}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.2831297450374759;  // std dev = 0,557, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2623805494389356;  // std dev = 2,98e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.11940479739755018;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.18554175840305123;  // std dev = 0,435, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.15685378738293584;  // std dev = 0,090, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.16268177430769576;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1449107371254263;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.14171843380427768;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.12786171632532867;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 8,33e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06654
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.012 seconds
Total inference time: 1.403 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101082
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.628 seconds
Parameter learned model CLL: -0.101082


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 18], 'false,false': [1.67e-08, 18, 0], 'true,false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.16e-08, 0, 20], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.557, 2, 20], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 18, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [2.98e-08, 0, 20], 'true,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 18, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.435, 2, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.09, 2, 20], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.33e-09, 18, 0], 'true,true,false,true': [0.0, 2, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.05899888532770057, 0.0], 'true,false,true': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.040122030722944804, 0.04012203072294513], 'true,false,true': [0.0, nan], 'true': [-2.4671622769447924e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.0, 1.5419764230904953e-17], 'false,true': [0.0, nan]}, {'': [0.022270669623612512, -4.625929269271485e-18], 'true,false,true': [0.0, nan], 'true,true': [1.3322676295501878e-16, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014124143999590782, 6.1679056923619804e-18], 'true,true,true': [0.014124143999590782, nan], 'true,true': [0.014124143999590782, nan], 'true': [0.014124143999590782, nan]}, {'': [0.012046285211492242, 7.709882115452476e-18], 'true,true,true': [4.4408920985006264e-17, 0.0], 'true,true': [0.012046285211492242, nan], 'true': [0.012046285211492242, nan]}, {'': [0.008582020461166866, -7.709882115452476e-19], 'true': [0.008582020461166866, nan]}, {'': [0.008030966870094651, 0.0]}, {'': [0.007819268850391326, -1.5419764230904951e-18], 'true,false,true': [0.0, nan], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.006006070854867843, 3.854941057726238e-18], 'true,true,true': [-1.6653345369377347e-17, nan], 'true,true': [-1.6653345369377347e-17, 0.0], 'true': [0.006006070854867843, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.28626158688103215;  // std dev = 0,114, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.27937153482520866;  // std dev = 0,124, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.22998242605461575;  // std dev = 0,105, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.224896676614818;  // std dev = 0,115, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.18931602667837574;  // std dev = 0,101, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.18521974221599982;  // std dev = 0,110, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1590300610229393;  // std dev = 0,100, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.15547796472246292;  // std dev = 0,108, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1671127070906114;  // std dev = 0,006, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.19366008393373285;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11814930149429657;  // std dev = 0,086, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.11543627408636985;  // std dev = 0,093, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 8,33e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070323
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.165 seconds
Total inference time: 1.579 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108427
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.521 seconds
Refined model CLL: -0.108427


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06654
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.326 seconds
Total inference time: 1.403 seconds
AUC ROC: 1.0
Total revision time: 3.326
Best scored revision CLL: -0.101082


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:39
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.06654, 'Precision': [1.0, 0.5], 'Learning time': 3.326, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.06654, 'Precision': [1.0, 0.5], 'Learning time': 1.012, 'F1': 1.0, 'Inference time': 1.403, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.403, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.38266873164552506;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.3758491322444214;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.37802214588333927;  // std dev = 0,024, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.3570620211676235;  // std dev = 0,529, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.2940220717978111;  // std dev = 0,021, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.3006574603437343;  // std dev = 0,468, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.23686930703117123;  // std dev = 0,019, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.25492556475125316;  // std dev = 0,409, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.19674421948239185;  // std dev = 0,016, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.21832935735175454;  // std dev = 0,358, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.16749338429861696;  // std dev = 0,014, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.18912546797182778;  // std dev = 0,315, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.14542063157778948;  // std dev = 0,013, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.1657078372369689;  // std dev = 0,278, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999617
   AUC PR    = 0.971227
   CLL	      = -0.076577
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.048 seconds
Total inference time: 1.473 seconds
AUC ROC: 0.999617


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:42
{'AUC ROC': 0.999617, 'Recall': 1.0, 'CLL': -0.076577, 'Precision': [0.935484, 0.5], 'Learning time': 2.048, 'F1': 0.966667, 'Inference time': 1.473, 'AUC PR': 0.971227}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */


Results
   AUC ROC   = 0.975954
   AUC PR    = 0.272034
   CLL	      = -0.162788
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.71 seconds
Total inference time: 0.844 seconds
AUC ROC: 0.975954


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:44
{'AUC ROC': 0.975954, 'Recall': 0.0, 'CLL': -0.162788, 'Precision': [nan, 0.5], 'Learning time': 0.71, 'F1': nan, 'Inference time': 0.844, 'AUC PR': 0.272034}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return 0.3328054984329875;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4219061820961672;  // std dev = 0,074, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10370145142198946;  // std dev = 0,047, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.2929238048138386;  // std dev = 0,571, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09446007994289059;  // std dev = 0,044, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.26324453919603025;  // std dev = 0,061, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.12043846105147968;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08669091353366563;  // std dev = 0,041, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.19149641922687086;  // std dev = 0,444, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08007414717122194;  // std dev = 0,038, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16169525657981676;  // std dev = 0,083, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else return -0.07437507814891585;  // std dev = 0,036, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.16175896310362298;  // std dev = 0,044, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1473508852516538;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06941789779671356;  // std dev = 0,033, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1410166704902986;  // std dev = 0,039, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.12978260517274817;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06506850367023453;  // std dev = 0,032, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065922
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.094 seconds
Total inference time: 1.496 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100658
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.641 seconds
Parameter learned model CLL: -0.100658


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [1.33e-07, 0, 25], 'false': [1.49e-08, 23, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 23], 'false,false': [1.29e-08, 22, 0], 'true,false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.545, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.074, 0, 25], 'false': [0.047, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.571, 2, 25], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.044, 23, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.061, 0, 25], 'true,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [0.041, 23, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.444, 2, 25], 'true,false': [0.0, 0, 0], 'false': [0.038, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.083, 2, 25], 'false': [0.036, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.044, 0, 25], 'false': [0.033, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.039, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.032, 23, 0], 'true,true,false,true': [0.0, 2, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true,false,true': [0.0, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.032810905124541455, 0.0328109051245418], 'true,false,true': [0.0, nan], 'true': [-2.703151712130816e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.09906674252579038, 7.569702440626067e-18], 'false,true': [0.09906674252579038, nan]}, {'': [0.0190020861072489, 9.749384386835243e-05], 'true,false,true': [0.0, nan], 'true,true': [0.0002218915414021083, nan], 'true': [0.0002218915414021083, 0.0], 'true,false': [0.0, nan]}, {'': [0.01206777184725291, 8.328577660994722e-05], 'true,true,true': [0.01206777184725291, nan], 'true,true': [0.01206777184725291, nan], 'true': [0.01206777184725291, nan]}, {'': [0.010234917011100604, 7.188047890573151e-05], 'true,true,true': [0.00014907002540118342, 0.0], 'true,true': [0.010234917011100604, nan], 'true': [0.010234917011100604, nan]}, {'': [0.007294743976430542, 6.26073779617134e-05], 'true': [0.007294743976430542, nan]}, {'': [0.006807717237760726, 5.497908651280627e-05]}, {'': [0.006623605778607199, 4.863650317993838e-05], 'true,false,true': [0.0, nan], 'true,true': [7.579806680524381e-05, nan], 'true': [7.579806680524381e-05, 0.0], 'true,false': [0.0, nan]}, {'': [0.005086115503432886, 4.331140647459732e-05], 'true,true,true': [6.098639558671737e-05, nan], 'true,true': [6.098639558671737e-05, 0.0], 'true': [0.005086115503432886, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B) )
%   | then return 0.3328054984329875;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4219061820961672;  // std dev = 0,074, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10370145142198946;  // std dev = 0,047, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2938820849629241;  // std dev = 0,108, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.2918918108071314;  // std dev = 0,112, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09446007994289059;  // std dev = 0,044, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.23553041801410315;  // std dev = 0,099, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.23406206481303357;  // std dev = 0,103, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08669091353366563;  // std dev = 0,041, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.19364069121990493;  // std dev = 0,095, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.19243957956273378;  // std dev = 0,099, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08007414717122194;  // std dev = 0,038, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.16262199347850353;  // std dev = 0,094, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.16155442260323843;  // std dev = 0,097, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07437507814891585;  // std dev = 0,036, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1653738572499197;  // std dev = 0,044, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.198071019153997;  // std dev = 0,000643, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06941789779671356;  // std dev = 0,033, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.12107057165169945;  // std dev = 0,081, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.12024032674375339;  // std dev = 0,084, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06506850367023453;  // std dev = 0,032, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069855
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.128 seconds
Total inference time: 1.585 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106715
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.553 seconds
Refined model CLL: -0.106715


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065922
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.416 seconds
Total inference time: 1.496 seconds
AUC ROC: 1.0
Total revision time: 3.416
Best scored revision CLL: -0.100658


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:51
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065922, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065922, 'Precision': [1.0, 0.5], 'Learning time': 1.094, 'F1': 1.0, 'Inference time': 1.496, 'AUC PR': 1.0}, 'Learning time': 3.416, 'F1': 1.0, 'Inference time': 1.496, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6622329172201352;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5154428111118985;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3875647182006322;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.367112862295995;  // std dev = 0,009, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.45277453785199523;  // std dev = 0,441, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.2866457602237288;  // std dev = 0,008, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.3689134318642475;  // std dev = 0,377, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.2317646840484785;  // std dev = 0,007, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.3017302490549142;  // std dev = 0,317, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15244697462299303;  // std dev = 0,142, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.1518764261691658;  // std dev = 0,147, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.0714594847981667;  // std dev = 0,040, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06854096102159114;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.17046910319911318;  // std dev = 0,006, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.06854096102159114;  // std dev = 6,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.2732407158952947;  // std dev = 0,298, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06429239801295404;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.14769766142825136;  // std dev = 0,005, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.06429239801295404;  // std dev = 2,63e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.22884842989720355;  // std dev = 0,252, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.908 seconds
Total inference time: 1.567 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:55
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.076363, 'Precision': [1.0, 0.5], 'Learning time': 1.908, 'F1': 1.0, 'Inference time': 1.567, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.977485
   AUC PR    = 0.280399
   CLL	      = -0.162021
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.686 seconds
Total inference time: 0.851 seconds
AUC ROC: 0.977485


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:57
{'AUC ROC': 0.977485, 'Recall': 0.0, 'CLL': -0.162021, 'Precision': [nan, 0.5], 'Learning time': 0.686, 'F1': nan, 'Inference time': 0.851, 'AUC PR': 0.280399}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.2025966690603181;  // std dev = 0,494, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.27826200782511923;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1111930930809726;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.13262528227368212;  // std dev = 0,390, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.11304400670697855;  // std dev = 0,143, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18587638887006974;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12519422639478403;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.15937218975879697;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.11211373850245562;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07531
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.867 seconds
Total inference time: 1.611 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.115017
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.536 seconds
Parameter learned model CLL: -0.115017


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 5], 'false,false': [2.63e-09, 3, 0], 'true,false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.49e-08, 0, 5], 'false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.494, 2, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 3, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 3, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.39, 2, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.143, 2, 5], 'false': [1.86e-09, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.32e-09, 3, 0], 'true,true,false,true': [0.0, 2, 0]}]]
[{'': [0.20408163265306106, 0.0], 'true,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.1456911249928931, 0.0], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true,false,true': [0.0, nan], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'false': [0.0, 2.3129646346357427e-18], 'false,true': [0.0, nan]}, {'': [0.05499491886647134, -1.1564823173178713e-18], 'true,false,true': [0.0, nan], 'true,true': [4.4408920985006264e-17, nan], 'true': [4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03487798824388733, 2.3129646346357427e-18], 'true,true,true': [0.03487798824388733, nan], 'true,true': [0.03487798824388733, nan], 'true': [0.03487798824388733, nan]}, {'': [0.030954137881994737, 0.0], 'true,true,true': [0.0, 0.0], 'true,true': [0.030954137881994737, nan], 'true': [0.030954137881994737, nan]}, {'': [0.021770630981405647, 0.0], 'true': [0.021770630981405647, nan]}, {'': [0.020497883520284692, 1.1564823173178713e-18]}, {'': [0.01974794442474585, -5.782411586589357e-19], 'true,false,true': [0.0, nan], 'true,true': [-5.551115123125783e-18, nan], 'true': [-5.551115123125783e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.01504175698854571, 5.782411586589357e-19], 'true,true,true': [0.0, nan], 'true,true': [0.0, 0.0], 'true': [0.01504175698854571, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.18291080604367946;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.217361066322797;  // std dev = 0,358, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1517343808231003;  // std dev = 0,320, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17831476626978;  // std dev = 0,336, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.12671255503161927;  // std dev = 0,308, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.14795221143499082;  // std dev = 0,323, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.10643079678234467;  // std dev = 0,301, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.12396075374759356;  // std dev = 0,316, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20141771480713144;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1594036763554599;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.07526450278918205;  // std dev = 0,255, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.08766277047113522;  // std dev = 0,269, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.085574
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.832 seconds
Total inference time: 1.397 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137996
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.502 seconds
Refined model CLL: -0.137996


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07531
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.737 seconds
Total inference time: 1.611 seconds
AUC ROC: 1.0
Total revision time: 2.737
Best scored revision CLL: -0.115017


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:03
{'AUC ROC': 1.0, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.07531, 'Precision': [1.0, 0.5], 'Learning time': 0.867, 'F1': 1.0, 'Inference time': 1.611, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.07531, 'Precision': [1.0, 0.5], 'Learning time': 2.737, 'F1': 1.0, 'Inference time': 1.611, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.888089
   AUC PR    = 0.183316
   CLL	      = -0.505426
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 0.989 seconds
Total inference time: 1.2 seconds
AUC ROC: 0.888089


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:05
{'AUC ROC': 0.888089, 'Recall': 1.0, 'CLL': -0.505426, 'Precision': [0.183316, 0.5], 'Learning time': 0.989, 'F1': 0.309835, 'Inference time': 1.2, 'AUC PR': 0.183316}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.888089
   AUC PR    = 0.183316
   CLL	      = -0.230031
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.492 seconds
Total inference time: 0.907 seconds
AUC ROC: 0.888089


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:07
{'AUC ROC': 0.888089, 'Recall': 0.0, 'CLL': -0.230031, 'Precision': [nan, 0.5], 'Learning time': 0.492, 'F1': nan, 'Inference time': 0.907, 'AUC PR': 0.183316}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.2518113266019146;  // std dev = 0,534, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2684867646209801;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11615080292622802;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.1651422162416378;  // std dev = 0,418, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1399327624679634;  // std dev = 0,117, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1713804139651598;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.13699537209418908;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1483936496677427;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.12158897946269726;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076131
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.941 seconds
Total inference time: 1.524 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106477
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.606 seconds
Parameter learned model CLL: -0.106477


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 10], 'false,false': [0.0, 8, 0], 'true,false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [3.65e-08, 0, 10], 'false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.534, 2, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 8, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.418, 2, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.117, 2, 10], 'false': [2.63e-09, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,true,false,true': [0.0, 2, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.09915090450905217, 0.0], 'true,false,true': [0.0, nan], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true,false,true': [0.0, nan], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.0, -1.734723475976807e-18], 'false,true': [0.0, nan]}, {'': [0.037427097561904134, 1.734723475976807e-18], 'true,false,true': [0.0, nan], 'true,true': [1.3322676295501878e-16, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02373640866597886, 0.0], 'true,true,true': [0.02373640866597886, nan], 'true,true': [0.02373640866597886, nan], 'true': [0.02373640866597886, nan]}, {'': [0.02054806366231014, 1.734723475976807e-18], 'true,true,true': [0.0, 0.0], 'true,true': [0.02054806366231014, nan], 'true': [0.02054806366231014, nan]}, {'': [0.014568144650107145, 0.0], 'true': [0.014568144650107145, nan]}, {'': [0.013645961698637315, 8.673617379884035e-19]}, {'': [0.013207725753850172, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-5.551115123125783e-18, nan], 'true': [-5.551115123125783e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.010123697226692313, 0.0], 'true,true,true': [0.0, nan], 'true,true': [0.0, 0.0], 'true': [0.010123697226692313, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( female(A) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2518113266019146;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2518113266019146;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( female(A) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2043805033631121;  // std dev = 0,351, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.2043805033631121;  // std dev = 0,351, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.16876657905621142;  // std dev = 0,337, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.16876657905621142;  // std dev = 0,337, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( female(A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.14140483492615988;  // std dev = 0,330, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.14140483492615988;  // std dev = 0,330, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.17992353775464776;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17992353775464776;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.18022184936831093;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.103219131672787;  // std dev = 0,283, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.103219131672787;  // std dev = 0,283, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088035
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.103 seconds
Total inference time: 1.473 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.119954
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.514 seconds
Refined model CLL: -0.119954


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076131
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1639999999999997 seconds
Total inference time: 1.524 seconds
AUC ROC: 1.0
Total revision time: 3.1639999999999997
Best scored revision CLL: -0.106477


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:14
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.076131, 'Precision': [1.0, 0.5], 'Learning time': 3.1639999999999997, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.076131, 'Precision': [1.0, 0.5], 'Learning time': 0.941, 'F1': 1.0, 'Inference time': 1.524, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.524, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.7518526675222027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5582032880961626;  // std dev = 0,883, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.42922884108840886;  // std dev = 0,871, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.5947526002045307;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.1936386299070691;  // std dev = 0,319, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.3846231214585045;  // std dev = 0,533, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.3559163811824812;  // std dev = 0,501, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.1694170109898923;  // std dev = 0,292, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.2993007927806743;  // std dev = 0,484, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2784385402457029;  // std dev = 0,457, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.31940931170096143;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1867760036053426;  // std dev = 0,622, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1020380784375625;  // std dev = 0,125, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.18385277256063715;  // std dev = 0,386, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.19196326596280341;  // std dev = 0,387, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( female(A) )
%   | then return -0.1562874735453374;  // std dev = 0,312, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07756234218561164;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.11943203288622994;  // std dev = 0,556, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.22719834632968752;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06473111071164787;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1523326165486317;  // std dev = 0,098, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.144709134835778;  // std dev = 0,315, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0666382143052126;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.1388240448055559;  // std dev = 0,341, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.13033665213477677;  // std dev = 0,326, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.1797553553762986;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.07837422546810614;  // std dev = 0,505, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0554144215232929;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14605610941515387;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.99252
   AUC PR    = 0.872151
   CLL	      = -0.268
   Precision = 0.245179 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.393805


Total learning time: 1.586 seconds
Total inference time: 1.415 seconds
AUC ROC: 0.99252


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:17
{'AUC ROC': 0.99252, 'Recall': 1.0, 'CLL': -0.268, 'Precision': [0.245179, 0.5], 'Learning time': 1.586, 'F1': 0.393805, 'Inference time': 1.415, 'AUC PR': 0.872151}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.866709
   AUC PR    = 0.15214
   CLL	      = -0.230066
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.639 seconds
Total inference time: 0.935 seconds
AUC ROC: 0.866709


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:19
{'AUC ROC': 0.866709, 'Recall': 0.0, 'CLL': -0.230066, 'Precision': [nan, 0.5], 'Learning time': 0.639, 'F1': nan, 'Inference time': 0.935, 'AUC PR': 0.15214}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,49e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.27207618558963076;  // std dev = 0,549, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2645254339252671;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.11824742632246286;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.1783660529761999;  // std dev = 0,429, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.15089176008491278;  // std dev = 0,101, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.16570723367456747;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1420798460515093;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.14404783822934267;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.12562570099704395;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 4,56e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076495
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.986 seconds
Total inference time: 1.348 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102984
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.589 seconds
Parameter learned model CLL: -0.102984


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 15], 'false': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 15], 'false,false': [1.05e-08, 13, 0], 'true,false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [4.71e-08, 0, 15], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.549, 2, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 13, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 15], 'true,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.429, 2, 15], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.101, 2, 15], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'false': [2.63e-09, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.56e-09, 13, 0], 'true,true,false,true': [0.0, 2, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0741058663458661, 4.270088556250602e-18], 'true,false,true': [0.0, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.0, 8.540177112501205e-18], 'false,true': [0.0, nan]}, {'': [0.027973194025506288, -2.135044278125301e-18], 'true,false,true': [0.0, nan], 'true,true': [1.4802973661668753e-16, nan], 'true': [1.4802973661668753e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.017740706823015356, 2.135044278125301e-18], 'true,true,true': [0.017740706823015356, nan], 'true,true': [0.017740706823015356, nan], 'true': [0.017740706823015356, nan]}, {'': [0.015209176042445819, 4.270088556250602e-18], 'true,true,true': [-1.4802973661668754e-17, 0.0], 'true,true': [0.015209176042445819, nan], 'true': [0.015209176042445819, nan]}, {'': [0.010817088405302613, 2.135044278125301e-18], 'true': [0.010817088405302613, nan]}, {'': [0.010123906507433523, 0.0]}, {'': [0.009833863644945273, 5.337610695313253e-19], 'true,false,true': [0.0, nan], 'true,true': [-1.850371707708594e-17, nan], 'true': [-1.850371707708594e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.007549185234486374, 1.6012832085939759e-18], 'true,true,true': [-7.401486830834377e-18, nan], 'true,true': [-7.401486830834377e-18, 0.0], 'true': [0.007549185234486374, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.41751358415830986;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.27477816678799294;  // std dev = 0,130, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.26903645674147336;  // std dev = 0,137, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.22149681199880344;  // std dev = 0,120, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.2172362292937696;  // std dev = 0,127, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.18248588091940954;  // std dev = 0,115, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.1790645220790836;  // std dev = 0,122, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( female(A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.15311869430994632;  // std dev = 0,113, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.15017842235261564;  // std dev = 0,119, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.17045840822271185;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.17278479865746998;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.18885152504304803;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11320018316904482;  // std dev = 0,098, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.1107199673059717;  // std dev = 0,103, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.089172
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.185 seconds
Total inference time: 1.497 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112488
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.552 seconds
Refined model CLL: -0.112488


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076495
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.312 seconds
Total inference time: 1.348 seconds
AUC ROC: 1.0
Total revision time: 3.312
Best scored revision CLL: -0.102984


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:26
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.076495, 'Precision': [1.0, 0.5], 'Learning time': 3.312, 'F1': 1.0, 'Inference time': 1.348, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.076495, 'Precision': [1.0, 0.5], 'Learning time': 0.986, 'F1': 1.0, 'Inference time': 1.348, 'AUC PR': 1.0}, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.7413433124639606;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5507882248174403;  // std dev = 0,361, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.14573462284642488;  // std dev = 0,172, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.42197665954010954;  // std dev = 0,311, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.6262266667306386;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12879640285484878;  // std dev = 0,156, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.1572135528473758;  // std dev = 0,204, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09828898763256404;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return 0.3966593132472822;  // std dev = 0,214, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.38751564670112665;  // std dev = 0,225, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.37589304465933027;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.23965709500196938;  // std dev = 0,259, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08782329657527137;  // std dev = 0,007, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.18517345803984844;  // std dev = 0,191, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.2326497847757961;  // std dev = 0,169, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.25282639764733855;  // std dev = 0,187, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( female(A) )
%   | then return -0.14967272099898968;  // std dev = 0,246, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0809502266660321;  // std dev = 0,009, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.14509632359635413;  // std dev = 0,203, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.2708798900164849;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07320518951179981;  // std dev = 0,013, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.181285940101308;  // std dev = 0,222, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.13955700620039968;  // std dev = 0,262, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06838872262842967;  // std dev = 0,015, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return 0.16782938357191146;  // std dev = 0,150, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.16121025584251347;  // std dev = 0,158, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.19333474781783788;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.09269921202318049;  // std dev = 0,190, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.062435119677756196;  // std dev = 0,017, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.1722162062984129;  // std dev = 0,233, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.12898667571173675;  // std dev = 0,264, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.059027460178042404;  // std dev = 0,020, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return 0.11822713508519622;  // std dev = 0,132, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.12595664594903566;  // std dev = 0,144, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */


Results
   AUC ROC   = 0.99252
   AUC PR    = 0.872151
   CLL	      = -0.235546
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.76 seconds
Total inference time: 1.632 seconds
AUC ROC: 0.99252


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:29
{'AUC ROC': 0.99252, 'Recall': 1.0, 'CLL': -0.235546, 'Precision': [0.626761, 0.5], 'Learning time': 1.76, 'F1': 0.770563, 'Inference time': 1.632, 'AUC PR': 0.872151}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.891758
   AUC PR    = 0.203944
   CLL	      = -0.232831
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.654 seconds
Total inference time: 0.874 seconds
AUC ROC: 0.891758


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:31
{'AUC ROC': 0.891758, 'Recall': 0.0, 'CLL': -0.232831, 'Precision': [nan, 0.5], 'Learning time': 0.654, 'F1': nan, 'Inference time': 0.874, 'AUC PR': 0.203944}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.2831297450374759;  // std dev = 0,557, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2623805494389356;  // std dev = 2,98e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.11940479739755018;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.18554175840305123;  // std dev = 0,435, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.15685378738293584;  // std dev = 0,090, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.16268177430769576;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1449107371254263;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.14171843380427768;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.12786171632532867;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 9,13e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0767
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.006 seconds
Total inference time: 1.513 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101082
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.588 seconds
Parameter learned model CLL: -0.101082


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 20], 'false,false': [1.67e-08, 18, 0], 'true,false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.16e-08, 0, 20], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.557, 2, 20], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 18, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [2.98e-08, 0, 20], 'true,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 18, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.435, 2, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.09, 2, 20], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 18, 0], 'true,true,false,true': [0.0, 2, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.05899888532770057, 0.0], 'true,false,true': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true,false,true': [0.0, nan], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.0, 1.5419764230904953e-17], 'false,true': [0.0, nan]}, {'': [0.022270669623612512, -4.625929269271485e-18], 'true,false,true': [0.0, nan], 'true,true': [1.3322676295501878e-16, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014124143999590782, 6.1679056923619804e-18], 'true,true,true': [0.014124143999590782, nan], 'true,true': [0.014124143999590782, nan], 'true': [0.014124143999590782, nan]}, {'': [0.012046285211492242, 7.709882115452476e-18], 'true,true,true': [4.4408920985006264e-17, 0.0], 'true,true': [0.012046285211492242, nan], 'true': [0.012046285211492242, nan]}, {'': [0.008582020461166866, 0.0], 'true': [0.008582020461166866, nan]}, {'': [0.008030966870094651, 0.0]}, {'': [0.007819268850391326, -1.5419764230904951e-18], 'true,false,true': [0.0, nan], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.006006070854867843, 4.625929269271485e-18], 'true,true,true': [-1.6653345369377347e-17, nan], 'true,true': [-1.6653345369377347e-17, 0.0], 'true': [0.006006070854867843, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4175135841583098;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.27937153482520866;  // std dev = 0,124, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.28626158688103215;  // std dev = 0,114, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( female(A) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.224896676614818;  // std dev = 0,115, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.22998242605461575;  // std dev = 0,105, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.18521974221599982;  // std dev = 0,110, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.18931602667837574;  // std dev = 0,101, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.07877675473109173;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.15547796472246292;  // std dev = 0,108, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.1590300610229393;  // std dev = 0,100, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.16861593763991833;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.16588279118663296;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.19366008393373285;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11526723064538594;  // std dev = 0,093, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.118288357941139;  // std dev = 0,086, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.089825
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.424 seconds
Total inference time: 1.531 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108426
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.547 seconds
Refined model CLL: -0.108426


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0767
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.565 seconds
Total inference time: 1.513 seconds
AUC ROC: 1.0
Total revision time: 3.565
Best scored revision CLL: -0.101082


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:38
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.0767, 'Precision': [1.0, 0.5], 'Learning time': 3.565, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.0767, 'Precision': [1.0, 0.5], 'Learning time': 1.006, 'F1': 1.0, 'Inference time': 1.513, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.513, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.47043324524836194;  // std dev = 0,022, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.3153353654380982;  // std dev = 0,428, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3569115032025315;  // std dev = 0,020, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.26332872101364313;  // std dev = 0,374, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2797552208363879;  // std dev = 0,018, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.22304493409431503;  // std dev = 0,327, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.22698563539524347;  // std dev = 0,015, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.19168881862657713;  // std dev = 0,287, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1896352355291106;  // std dev = 0,014, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.16700974576725205;  // std dev = 0,254, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.16219220116833213;  // std dev = 0,012, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.1473133790968244;  // std dev = 0,226, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14134168966893917;  // std dev = 0,011, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.13136170142724357;  // std dev = 0,203, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.15618
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.951 seconds
Total inference time: 1.613 seconds
AUC ROC: 0.977561


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:42
{'AUC ROC': 0.977561, 'Recall': 1.0, 'CLL': -0.15618, 'Precision': [0.626761, 0.5], 'Learning time': 1.951, 'F1': 0.770563, 'Inference time': 1.613, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.233919
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.683 seconds
Total inference time: 0.944 seconds
AUC ROC: 0.848575


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:44
{'AUC ROC': 0.848575, 'Recall': 0.0, 'CLL': -0.233919, 'Precision': [nan, 0.5], 'Learning time': 0.683, 'F1': nan, 'Inference time': 0.944, 'AUC PR': 0.136922}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.2900893935787117;  // std dev = 0,563, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2610358292180772;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.12013852613880088;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.19004687708760024;  // std dev = 0,438, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109175;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16060407607842683;  // std dev = 0,082, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.16080123556674408;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14671438490164024;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.14026631829433403;  // std dev = 2,69e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.12928212588350152;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076831
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.021 seconds
Total inference time: 1.518 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099887
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.607 seconds
Parameter learned model CLL: -0.099887


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [1.33e-07, 0, 25], 'false': [1.49e-08, 23, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'false,false': [1.05e-08, 23, 0], 'true,false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 25], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.563, 2, 25], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 23, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 25], 'true,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-08, 23, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.438, 2, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.082, 2, 25], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 25], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [2.69e-08, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0], 'true,true,false,true': [0.0, 2, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true,false,true': [0.0, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.016486699015016572, 2.3129646346357427e-18], 'true,false,true': [0.0, nan], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.0, 4.827056628805028e-18], 'false,true': [0.0, nan]}, {'': [0.01848251731452055, -2.413528314402514e-18], 'true,false,true': [0.0, nan], 'true,true': [-3.552713678800501e-17, nan], 'true': [-3.552713678800501e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.011721683291841456, 6.033820786006285e-18], 'true,true,true': [0.011721683291841456, nan], 'true,true': [0.011721683291841456, nan], 'true': [0.011721683291841456, nan]}, {'': [0.009965287323849915, 1.0860877414811314e-17], 'true,true,true': [0.0, 0.0], 'true,true': [0.009965287323849915, nan], 'true': [0.009965287323849915, nan]}, {'': [0.007106910692379302, -3.620292471603771e-18], 'true': [0.007106910692379302, nan]}, {'': [0.006650767320356977, -1.206764157201257e-18]}, {'': [0.006485998410977724, -3.620292471603771e-18], 'true,false,true': [0.0, nan], 'true,true': [-1.3322676295501878e-17, nan], 'true': [-1.3322676295501878e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.0049832896953835425, -1.206764157201257e-18], 'true,true,true': [2.886579864025407e-17, nan], 'true,true': [2.886579864025407e-17, 0.0], 'true': [0.0049832896953835425, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.283129745037476;  // std dev = 0,119, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.2948741519508115;  // std dev = 0,100, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( female(A) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.22767279063561868;  // std dev = 0,110, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.23631647722341104;  // std dev = 0,092, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.18745468719186686;  // std dev = 0,105, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.19443048008769695;  // std dev = 0,088, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.07877675473109175;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.15741340616759886;  // std dev = 0,104, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.1634952585273205;  // std dev = 0,087, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.16712062074650635;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.16251694791237936;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.19643444291065715;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11694537073084868;  // std dev = 0,089, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.12214237584942172;  // std dev = 0,075, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090209
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.36 seconds
Total inference time: 1.527 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105852
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.552 seconds
Refined model CLL: -0.105852


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076831
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.54 seconds
Total inference time: 1.518 seconds
AUC ROC: 1.0
Total revision time: 3.54
Best scored revision CLL: -0.099887


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:51
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.076831, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.076831, 'Precision': [1.0, 0.5], 'Learning time': 1.021, 'F1': 1.0, 'Inference time': 1.518, 'AUC PR': 1.0}, 'Learning time': 3.54, 'F1': 1.0, 'Inference time': 1.518, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.7956489350995123;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.6694131893798132;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5204603507259603;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.37956420580342304;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.3912519545392304;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.367027398474794;  // std dev = 0,045, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.3080685799329475;  // std dev = 0,590, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.28661180206327386;  // std dev = 0,040, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.2647127130011834;  // std dev = 0,534, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.2317553177835928;  // std dev = 0,035, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.2291380469836734;  // std dev = 0,479, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.1930795117598933;  // std dev = 0,030, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.1999858099715946;  // std dev = 0,428, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.16476955855777242;  // std dev = 0,027, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.17606665836505708;  // std dev = 0,383, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14333076115969579;  // std dev = 0,024, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.15635669247500164;  // std dev = 0,345, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.18649
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.88 seconds
Total inference time: 1.328 seconds
AUC ROC: 0.977561


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:54
{'AUC ROC': 0.977561, 'Recall': 1.0, 'CLL': -0.18649, 'Precision': [0.626761, 0.5], 'Learning time': 1.88, 'F1': 0.770563, 'Inference time': 1.328, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.7956489350995123;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.234502
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.722 seconds
Total inference time: 0.908 seconds
AUC ROC: 0.848575


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:56
{'AUC ROC': 0.848575, 'Recall': 0.0, 'CLL': -0.234502, 'Precision': [nan, 0.5], 'Learning time': 0.722, 'F1': nan, 'Inference time': 0.908, 'AUC PR': 0.136922}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077785
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.842 seconds
Total inference time: 1.297 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.518 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false,true': 'movie(E, A)', 'false': 'director(B)'}, {'false,true,true': [0.0, 0, 2], 'true,true': [1.05e-08, 0, 3], 'false,false': [0.0, 5, 0], 'false,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [1.49e-08, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [3.700743415417188e-17, 0.09097966150327688], 'true': [3.700743415417188e-17, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.0]}, {'': [4.4408920985006264e-17, 0.0], 'true,true': [4.4408920985006264e-17, nan], 'true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true,true,true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( director(B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.186946
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 0.639 seconds
Total inference time: 0.941 seconds
AUC ROC: 0.969593


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.473 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077785
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.472 seconds
Total inference time: 1.297 seconds
AUC ROC: 1.0
Total revision time: 2.472
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:02
{'AUC ROC': 1.0, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077785, 'Precision': [1.0, 0.5], 'Learning time': 0.842, 'F1': 1.0, 'Inference time': 1.297, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.077785, 'Precision': [1.0, 0.5], 'Learning time': 2.472, 'F1': 1.0, 'Inference time': 1.297, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.203547
   Precision = 0.255682 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.40724


Total learning time: 1.069 seconds
Total inference time: 0.931 seconds
AUC ROC: 0.965362


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:04
{'AUC ROC': 0.965362, 'Recall': 1.0, 'CLL': -0.203547, 'Precision': [0.255682, 0.5], 'Learning time': 1.069, 'F1': 0.40724, 'Inference time': 0.931, 'AUC PR': 0.255682}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.173677
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.518 seconds
Total inference time: 0.715 seconds
AUC ROC: 0.965362


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:05
{'AUC ROC': 0.965362, 'Recall': 0.0, 'CLL': -0.173677, 'Precision': [nan, 0.5], 'Learning time': 0.518, 'F1': nan, 'Inference time': 0.715, 'AUC PR': 0.255682}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.283129745037476;  // std dev = 0,394, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2623805494389356;  // std dev = 2,11e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11940479739755021;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.1855417584030512;  // std dev = 0,307, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.15685378738293584;  // std dev = 0,090, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.16268177430769573;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1449107371254263;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.14171843380427762;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.12786171632532867;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.977 seconds
Total inference time: 1.207 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101082
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.551 seconds
Parameter learned model CLL: -0.101082


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 8], 'false,false': [0.0, 9, 0], 'true,false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [3.65e-08, 0, 10], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.394, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [2.11e-08, 0, 10], 'true,true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.307, 1, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.09, 1, 10], 'false': [2.63e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 9, 0], 'true,true,false,true': [0.0, 1, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.058998885327700486, 0.0], 'true,false,true': [0.0, nan], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.04402966334479563, 0.06631740615362829], 'true,false,true': [0.0, nan], 'true': [-1.1102230246251565e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.0, -1.5419764230904951e-18], 'false,true': [0.0, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true,false,true': [0.0, nan], 'true,true': [1.3322676295501878e-16, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014124143999590711, 0.0], 'true,true,true': [0.014124143999590711, nan], 'true,true': [0.014124143999590711, nan], 'true': [0.014124143999590711, nan]}, {'': [0.012046285211492253, 1.5419764230904951e-18], 'true,true,true': [4.4408920985006264e-17, 0.0], 'true,true': [0.012046285211492253, nan], 'true': [0.012046285211492253, nan]}, {'': [0.00858202046116688, 0.0], 'true': [0.00858202046116688, nan]}, {'': [0.008030966870094651, 7.709882115452476e-19]}, {'': [0.007819268850391336, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-1.1102230246251566e-17, nan], 'true': [-1.1102230246251566e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.006006070854867856, 7.709882115452476e-19], 'true,true,true': [0.0, nan], 'true,true': [0.0, 0.0], 'true': [0.006006070854867856, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2616542581102339;  // std dev = 0,145, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.21174042082252867;  // std dev = 0,134, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.17465795081010935;  // std dev = 0,129, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.14641065144459467;  // std dev = 0,126, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16658628797703648;  // std dev = 0,036, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1844107682900546;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.10850072224378239;  // std dev = 0,109, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.1324087506176964;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07369
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.966 seconds
Total inference time: 1.2 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107712
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.496 seconds
Refined model CLL: -0.107712


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.9899999999999998 seconds
Total inference time: 1.207 seconds
AUC ROC: 1.0
Total revision time: 2.9899999999999998
Best scored revision CLL: -0.101082


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:11
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067975, 'Precision': [1.0, 0.5], 'Learning time': 2.9899999999999998, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067975, 'Precision': [1.0, 0.5], 'Learning time': 0.977, 'F1': 1.0, 'Inference time': 1.207, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.207, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5013119587709255;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.24447694627626118;  // std dev = 0,599, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( female(A), actor(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.20086925742314585;  // std dev = 0,344, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3784660620049208;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19761619591113222;  // std dev = 0,561, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( female(A), actor(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.17566803555517008;  // std dev = 0,315, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2943125422215409;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.16037775696173293;  // std dev = 0,537, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( female(A) )
%   | then return -0.1492870841570573;  // std dev = 0,287, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07201444957359587;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09349321910304825;  // std dev = 0,125, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.15030265023308448;  // std dev = 0,213, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.28181837708569557;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.21096051742817493;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09949733907238971;  // std dev = 0,447, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( female(A), actor(B) )
%   | then return -0.0680726089696598;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1477659154000191;  // std dev = 0,298, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1779781942902573;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.08355207054701541;  // std dev = 0,443, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( female(A) )
%   | then return -0.12527497579648827;  // std dev = 0,275, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.05368596033749005;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.05678470385073588;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10432756823067775;  // std dev = 0,146, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return 0.08262041955152079;  // std dev = 0,173, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.19776415205432607;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */


Results
   AUC ROC   = 0.999201
   AUC PR    = 0.95488
   CLL	      = -0.149886
   Precision = 0.298013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.459184


Total learning time: 1.576 seconds
Total inference time: 1.147 seconds
AUC ROC: 0.999201


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:14
{'AUC ROC': 0.999201, 'Recall': 1.0, 'CLL': -0.149886, 'Precision': [0.298013, 0.5], 'Learning time': 1.576, 'F1': 0.459184, 'Inference time': 1.147, 'AUC PR': 0.95488}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */


Results
   AUC ROC   = 0.963505
   AUC PR    = 0.244543
   CLL	      = -0.173781
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.638 seconds
Total inference time: 0.726 seconds
AUC ROC: 0.963505


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:16
{'AUC ROC': 0.963505, 'Recall': 0.0, 'CLL': -0.173781, 'Precision': [nan, 0.5], 'Learning time': 0.638, 'F1': nan, 'Inference time': 0.726, 'AUC PR': 0.244543}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,49e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.2948741519508115;  // std dev = 0,400, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2601139237211473;  // std dev = 2,58e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.12064522024263256;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.19313851344485405;  // std dev = 0,311, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16318134567180104;  // std dev = 0,075, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1595191349589708;  // std dev = 1,97e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14796401994940436;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.13927442740494994;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.13026433044036972;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068053
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.018 seconds
Total inference time: 1.263 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099065
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.604 seconds
Parameter learned model CLL: -0.099065


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 15], 'false': [0.0, 14, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 12], 'false,false': [1.18e-08, 14, 0], 'true,false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.05e-08, 0, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [4.71e-08, 0, 15], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.4, 1, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [2.58e-08, 0, 15], 'true,true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [8.33e-09, 14, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.311, 1, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.075, 1, 15], 'false': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.97e-08, 0, 15], 'false': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.97e-09, 14, 0], 'true,true,false,true': [0.0, 1, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.03165446210883223, 0.06478759286288716], 'true,false,true': [0.0, nan], 'true': [-2.590520390792032e-16, 0.0], 'true,false': [0.0, nan], 'false': [3.700743415417188e-17, 9.912705577010326e-18], 'false,true': [3.700743415417188e-17, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true,true': [1.4802973661668753e-16, nan], 'true': [1.4802973661668753e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.010013797405959826, 3.96508223080413e-18], 'true,true,true': [0.010013797405959826, nan], 'true,true': [0.010013797405959826, nan], 'true': [0.010013797405959826, nan]}, {'': [0.008494776897189332, 4.956352788505163e-18], 'true,true,true': [4.4408920985006264e-17, 0.0], 'true,true': [0.008494776897189332, nan], 'true': [0.008494776897189332, nan]}, {'': [0.006062514581407365, -9.912705577010326e-19], 'true': [0.006062514581407365, nan]}, {'': [0.005673810088919786, 9.912705577010326e-19]}, {'': [0.005539798274555169, 9.912705577010326e-19], 'true,false,true': [0.0, nan], 'true,true': [2.590520390792032e-17, nan], 'true': [2.590520390792032e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.004256902850437361, 3.469446951953614e-18], 'true,true,true': [-1.4802973661668754e-17, nan], 'true,true': [-1.4802973661668754e-17, 0.0], 'true': [0.004256902850437361, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.28626158688103215;  // std dev = 0,114, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.22998242605461575;  // std dev = 0,105, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.18931602667837574;  // std dev = 0,101, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1590300610229393;  // std dev = 0,100, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16237907569517643;  // std dev = 0,023, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.19519227328507;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11870287652806637;  // std dev = 0,086, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.13289280906787226;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073703
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.96 seconds
Total inference time: 1.17 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103931
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.524 seconds
Refined model CLL: -0.103931


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068053
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.106 seconds
Total inference time: 1.263 seconds
AUC ROC: 1.0
Total revision time: 3.106
Best scored revision CLL: -0.099065


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:22
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.068053, 'Precision': [1.0, 0.5], 'Learning time': 3.106, 'F1': 1.0, 'Inference time': 1.263, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.068053, 'Precision': [1.0, 0.5], 'Learning time': 1.018, 'F1': 1.0, 'Inference time': 1.263, 'AUC PR': 1.0}, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.38266873164552506;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3591418189507028;  // std dev = 0,090, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.18172333779983954;  // std dev = 0,488, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2814157927009754;  // std dev = 0,078, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.1626645701397661;  // std dev = 0,461, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2282291640902174;  // std dev = 0,068, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A), actor(B) )
%   | then return -0.06750914218393725;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.19496015403880537;  // std dev = 0,402, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.19058758166844816;  // std dev = 0,059, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A), actor(B) )
%   | then return -0.06338141492280823;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.17302532601195594;  // std dev = 0,372, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16293986990337608;  // std dev = 0,052, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.1250635654365428;  // std dev = 0,358, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06215287756435104;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14194227878179155;  // std dev = 0,046, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A), actor(B) )
%   | then return -0.053073162766871254;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.06456976523690823;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14477296988427474;  // std dev = 0,319, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.998684
   AUC PR    = 0.897867
   CLL	      = -0.099583
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.789 seconds
Total inference time: 1.218 seconds
AUC ROC: 0.998684


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:25
{'AUC ROC': 0.998684, 'Recall': 1.0, 'CLL': -0.099583, 'Precision': [0.918367, 0.5], 'Learning time': 1.789, 'F1': 0.957447, 'Inference time': 1.218, 'AUC PR': 0.897867}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */


Results
   AUC ROC   = 0.963505
   AUC PR    = 0.244543
   CLL	      = -0.173729
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.633 seconds
Total inference time: 0.703 seconds
AUC ROC: 0.963505


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:27
{'AUC ROC': 0.963505, 'Recall': 0.0, 'CLL': -0.173729, 'Precision': [nan, 0.5], 'Learning time': 0.633, 'F1': nan, 'Inference time': 0.703, 'AUC PR': 0.244543}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.301025984143511;  // std dev = 0,403, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.25893172323169933;  // std dev = 2,98e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.12129939241510941;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.1971068790780563;  // std dev = 0,314, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1664942327411076;  // std dev = 0,066, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.157883467960505;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14958232416312628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.13800677232089026;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.13153400364419202;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 8,33e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068095
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.022 seconds
Total inference time: 1.253 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09801
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.615 seconds
Parameter learned model CLL: -0.09801


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 16], 'false,false': [1.67e-08, 19, 0], 'true,false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.16e-08, 0, 20], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.403, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 19, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [2.98e-08, 0, 20], 'true,true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 19, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.314, 1, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.066, 1, 20], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [1.49e-08, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.33e-09, 19, 0], 'true,true,false,true': [0.0, 1, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03237580555397633, 0.0], 'true,false,true': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.024680987757290114, 0.064046929950511], 'true,false,true': [0.0, nan], 'true': [-2.220446049250313e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.0, 1.460819769243627e-17], 'false,true': [0.0, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true,false,true': [0.0, nan], 'true,true': [1.3322676295501878e-16, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.007750664054197215, 7.304098846218135e-18], 'true,true,true': [0.007750664054197215, nan], 'true,true': [0.007750664054197215, nan], 'true': [0.007750664054197215, nan]}, {'': [0.006556721147665209, 8.764918615461762e-18], 'true,true,true': [4.4408920985006264e-17, 0.0], 'true,true': [0.006556721147665209, nan], 'true': [0.006556721147665209, nan]}, {'': [0.0046836287941776815, -7.304098846218135e-19], 'true': [0.0046836287941776815, nan]}, {'': [0.0043840077768387935, 0.0]}, {'': [0.004287311261959732, -2.1912296538654404e-18], 'true,false,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.003294885710106977, 3.652049423109067e-18], 'true,true,true': [1.1102230246251566e-17, nan], 'true,true': [1.1102230246251566e-17, 0.0], 'true': [0.003294885710106977, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.29118305263519184;  // std dev = 0,106, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.23360498594643936;  // std dev = 0,098, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.19223923853469138;  // std dev = 0,094, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1615779656903909;  // std dev = 0,093, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16002957039068236;  // std dev = 0,024, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.19740335286963798;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.12095287988289549;  // std dev = 0,080, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.13316378158697129;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 8,33e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073712
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.069 seconds
Total inference time: 1.233 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.1017
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.513 seconds
Refined model CLL: -0.1017


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068095
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.219 seconds
Total inference time: 1.253 seconds
AUC ROC: 1.0
Total revision time: 3.219
Best scored revision CLL: -0.09801


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:33
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.068095, 'Precision': [1.0, 0.5], 'Learning time': 3.219, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.068095, 'Precision': [1.0, 0.5], 'Learning time': 1.022, 'F1': 1.0, 'Inference time': 1.253, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.253, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.6622329172201352;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.5154428111118985;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.3875647182006322;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.29398103437200096;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.2288562690978686;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2388347970170262;  // std dev = 0,095, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return -0.18989868111036146;  // std dev = 0,609, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.198236262580291;  // std dev = 0,083, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( female(A) )
%   | then return -0.1730158390360018;  // std dev = 0,586, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16865550909248256;  // std dev = 0,073, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return -0.1585919601178022;  // std dev = 0,561, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1463478126693595;  // std dev = 0,065, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return -0.14607520044122727;  // std dev = 0,535, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.998684
   AUC PR    = 0.897867
   CLL	      = -0.1444
   Precision = 0.255682 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.40724


Total learning time: 1.669 seconds
Total inference time: 1.035 seconds
AUC ROC: 0.998684


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:36
{'AUC ROC': 0.998684, 'Recall': 1.0, 'CLL': -0.1444, 'Precision': [0.255682, 0.5], 'Learning time': 1.669, 'F1': 0.40724, 'Inference time': 1.035, 'AUC PR': 0.897867}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */


Results
   AUC ROC   = 0.963505
   AUC PR    = 0.244543
   CLL	      = -0.17372
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.654 seconds
Total inference time: 0.719 seconds
AUC ROC: 0.963505


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:38
{'AUC ROC': 0.963505, 'Recall': 0.0, 'CLL': -0.17372, 'Precision': [nan, 0.5], 'Learning time': 0.654, 'F1': nan, 'Inference time': 0.719, 'AUC PR': 0.244543}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return 0.4218298737583063;  // std dev = 0,597, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.42275966521283287;  // std dev = 0,060, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1042105194089514;  // std dev = 0,059, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.29343342282936863;  // std dev = 0,570, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09488976072412494;  // std dev = 0,054, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.26361644086871655;  // std dev = 0,049, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.12049245687948122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08705835599754858;  // std dev = 0,051, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.19172393778075245;  // std dev = 0,443, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08039193278837492;  // std dev = 0,047, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16185703167096277;  // std dev = 0,082, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else return -0.07465263282437747;  // std dev = 0,044, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1618948126716214;  // std dev = 0,034, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14745707092819352;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06966241542258236;  // std dev = 0,042, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.14111757685846185;  // std dev = 0,031, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.12986605949754698;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06528556578821192;  // std dev = 0,039, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.125 seconds
Total inference time: 1.19 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.1008
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.657 seconds
Parameter learned model CLL: -0.1008


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [1.33e-07, 0, 25], 'false': [1.49e-08, 23, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 21], 'false,false': [1.29e-08, 22, 0], 'true,false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.597, 1, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.06, 0, 25], 'false': [0.059, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.57, 2, 25], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.054, 23, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.049, 0, 25], 'true,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [0.051, 23, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.443, 2, 25], 'true,false': [0.0, 0, 0], 'false': [0.047, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.082, 2, 25], 'false': [0.044, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.034, 0, 25], 'false': [0.042, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.031, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.039, 23, 0], 'true,true,false,true': [0.0, 2, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true,false,true': [0.0, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03539435602528206, 0.05626012538501678], 'true,false,true': [0.0, nan], 'true': [-2.9605947323337506e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.0713280546185691, 7.569702440626067e-18], 'false,true': [0.0713280546185691, nan]}, {'': [0.01899175487135103, 0.0001503477567605117], 'true,false,true': [0.0, nan], 'true,true': [0.00014448717376069453, nan], 'true': [0.00014448717376069453, 0.0], 'true,false': [0.0, nan]}, {'': [0.012037216880978412, 0.0001286388759580293], 'true,true,true': [0.012037216880978412, nan], 'true,true': [0.012037216880978412, nan], 'true': [0.012037216880978412, nan]}, {'': [0.0102064696745559, 0.00011116722060735624], 'true,true,true': [9.412463153254613e-05, 0.0], 'true,true': [0.0102064696745559, nan], 'true': [0.0102064696745559, nan]}, {'': [0.007267735235314177, 9.693162080775241e-05], 'true': [0.007267735235314177, nan]}, {'': [0.006786219080276619, 8.520025499418061e-05]}, {'': [0.006607069550484266, 7.54314932073206e-05], 'true,false,true': [0.0, nan], 'true,true': [4.6850826615347786e-05, nan], 'true': [4.6850826615347786e-05, 0.0], 'true,false': [0.0, nan]}, {'': [0.005071244468614624, 6.721929806257764e-05], 'true,true,true': [3.752690219818833e-05, nan], 'true,true': [3.752690219818833e-05, 0.0], 'true': [0.005071244468614624, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B) )
%   | then return 0.4218298737583063;  // std dev = 0,597, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.42275966521283287;  // std dev = 0,060, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1042105194089514;  // std dev = 0,059, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3000082206843142;  // std dev = 0,106, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.28521492551068667;  // std dev = 0,114, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.09488976072412494;  // std dev = 0,054, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2398695994026337;  // std dev = 0,097, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.22924845492759782;  // std dev = 0,105, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08705835599754858;  // std dev = 0,051, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.19686849421140368;  // std dev = 0,093, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.18879027783862182;  // std dev = 0,101, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.08039193278837492;  // std dev = 0,047, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.16514845776162737;  // std dev = 0,092, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.15864455340676548;  // std dev = 0,099, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.07465263282437747;  // std dev = 0,044, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16548172157402313;  // std dev = 0,032, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1979445001422984;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06966241542258236;  // std dev = 0,042, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.12284860277643365;  // std dev = 0,079, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.11812551352798219;  // std dev = 0,086, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06528556578821192;  // std dev = 0,039, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072156
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.164 seconds
Total inference time: 1.191 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106834
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.544 seconds
Refined model CLL: -0.106834


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.4899999999999998 seconds
Total inference time: 1.19 seconds
AUC ROC: 1.0
Total revision time: 3.4899999999999998
Best scored revision CLL: -0.1008


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:44
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067223, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.067223, 'Precision': [1.0, 0.5], 'Learning time': 1.125, 'F1': 1.0, 'Inference time': 1.19, 'AUC PR': 1.0}, 'Learning time': 3.4899999999999998, 'F1': 1.0, 'Inference time': 1.19, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7914822684328456;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6660633000779167;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5181199435476403;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.38952954024068537;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.38266873164552506;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.3670851120933641;  // std dev = 0,027, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.45240954766366065;  // std dev = 0,441, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.2866347688550672;  // std dev = 0,024, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.36859807513217024;  // std dev = 0,377, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.23176168098006553;  // std dev = 0,020, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.30148148311295797;  // std dev = 0,317, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.19307818763694257;  // std dev = 0,018, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.24995672818369086;  // std dev = 0,267, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.1647647507236982;  // std dev = 0,016, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.21080089872661367;  // std dev = 0,227, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11373553109122526;  // std dev = 0,101, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.11293315288677182;  // std dev = 0,111, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.06229408449695515;  // std dev = 0,043, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080348
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.854 seconds
Total inference time: 1.156 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:47
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.080348, 'Precision': [1.0, 0.5], 'Learning time': 1.854, 'F1': 1.0, 'Inference time': 1.156, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7914822684328456;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.970415
   AUC PR    = 0.292127
   CLL	      = -0.172114
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.693 seconds
Total inference time: 0.778 seconds
AUC ROC: 0.970415


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:49
{'AUC ROC': 0.970415, 'Recall': 0.0, 'CLL': -0.172114, 'Precision': [nan, 0.5], 'Learning time': 0.693, 'F1': nan, 'Inference time': 0.778, 'AUC PR': 0.292127}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, A) )
%   | | then return 0.11024456011969057;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.43961165457218704;  // std dev = 0,099, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11047241209397267;  // std dev = 0,024, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3365043290587483;  // std dev = 0,092, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10008596223948292;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2663993558969877;  // std dev = 0,082, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09143403890124682;  // std dev = 0,021, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.21795505658308473;  // std dev = 0,073, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08412362070941302;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1832767992539397;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07787032827072027;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1575438138984569;  // std dev = 0,057, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0724637922201364;  // std dev = 0,017, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1378317330172824;  // std dev = 0,052, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06774532060940035;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071429
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.848 seconds
Total inference time: 1.264 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098247
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.494 seconds
Parameter learned model CLL: -0.098247


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false,true': 'movie(E, A)', 'false': 'director(B)'}, {'false,true,true': [0.545, 2, 1], 'true,true': [0.0, 0, 4], 'false,false': [2.63e-09, 3, 0], 'false,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.099, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.024, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.092, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.022, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.082, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.021, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.073, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.019, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.029, 0, 5], 'false': [0.018, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.057, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.017, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.052, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.016, 5, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.06191671407861896], 'true': [0.0, nan], 'false,true': [0.09906674252579034, nan], 'false': [0.09906674252579034, 2.3129646346357427e-18]}, {'': [0.0019532988640666104, 0.0001181772636464351], 'true,true': [0.0019532988640666104, nan], 'true': [0.0019532988640666104, nan]}, {'': [0.0016953775360885937, 9.935197251218636e-05], 'true,true,true': [0.0016953775360885937, nan], 'true,true': [0.0016953775360885937, nan], 'true': [0.0016953775360885937, nan]}, {'': [0.0013485832374217188, 8.457115423599615e-05], 'true,true,true': [0.0013485832374217188, nan], 'true,true': [0.0013485832374217188, nan], 'true': [0.0013485832374217188, nan]}, {'': [0.0010527466388019879, 7.278237227254375e-05], 'true': [0.0010527466388019879, nan]}, {'': [0.0008270258172306255, 6.324620812406395e-05]}, {'': [0.0006591718659928498, 5.543370237935941e-05], 'true,true': [0.0006591718659928498, nan], 'true': [0.0006591718659928498, nan]}, {'': [0.0005339893726198058, 4.895984110088389e-05], 'true,true,true': [0.0005339893726198058, nan], 'true,true': [0.0005339893726198058, nan], 'true': [0.0005339893726198058, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( director(B) )
%   | then return 0.11024456011969057;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.43961165457218704;  // std dev = 0,099, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11047241209397267;  // std dev = 0,024, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.3365043290587483;  // std dev = 0,092, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10008596223948292;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2663993558969877;  // std dev = 0,082, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09143403890124682;  // std dev = 0,021, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21795505658308473;  // std dev = 0,073, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08412362070941302;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1832767992539397;  // std dev = 0,064, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07787032827072027;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1575438138984569;  // std dev = 0,057, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0724637922201364;  // std dev = 0,017, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1378317330172824;  // std dev = 0,052, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06774532060940035;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.140156
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.637 seconds
Total inference time: 0.954 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098247
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.457 seconds
Refined model CLL: -0.098247


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071429
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.436 seconds
Total inference time: 1.264 seconds
AUC ROC: 1.0
Total revision time: 2.436
Best scored revision CLL: -0.098247


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:54
{'AUC ROC': 1.0, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.071429, 'Precision': [1.0, 0.5], 'Learning time': 0.848, 'F1': 1.0, 'Inference time': 1.264, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.071429, 'Precision': [1.0, 0.5], 'Learning time': 2.436, 'F1': 1.0, 'Inference time': 1.264, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.998 seconds
Total inference time: 0.892 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:09:56
{'AUC ROC': 0.97972, 'Recall': 1.0, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'Learning time': 0.998, 'F1': 0.517241, 'Inference time': 0.892, 'AUC PR': 0.348837}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.16597
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.494 seconds
Total inference time: 0.744 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:09:58
{'AUC ROC': 0.97972, 'Recall': 0.0, 'CLL': -0.16597, 'Precision': [nan, 0.5], 'Learning time': 0.494, 'F1': nan, 'Inference time': 0.744, 'AUC PR': 0.348837}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, A) )
%   | | then return 0.11024456011969057;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4285626193652484;  // std dev = 0,105, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10603437079090447;  // std dev = 0,028, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.32863319560285603;  // std dev = 0,098, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09640233533092614;  // std dev = 0,026, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2608354671532327;  // std dev = 0,088, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08833106736544723;  // std dev = 0,024, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.21391728088329023;  // std dev = 0,078, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08147629384922742;  // std dev = 0,022, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.18024993128920067;  // std dev = 0,022, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0755866355066504;  // std dev = 0,021, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15520512751261034;  // std dev = 0,062, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07047463513431758;  // std dev = 0,019, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.13597683653485032;  // std dev = 0,056, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06599787325741285;  // std dev = 0,018, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.898 seconds
Total inference time: 1.143 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096502
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.533 seconds
Parameter learned model CLL: -0.096502


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false,true': 'movie(E, A)', 'false': 'director(B)'}, {'false,true,true': [0.545, 2, 1], 'true,true': [0.0, 0, 9], 'false,false': [0.0, 8, 0], 'false,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.105, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.028, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.098, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.026, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.088, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.024, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.078, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.022, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.022, 0, 10], 'false': [0.021, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.062, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.019, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.056, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.018, 10, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, -2.7755575615628915e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 0.0], 'true': [8.881784197001253e-17, nan]}, {'': [-1.4802973661668753e-16, 0.03684300341868235], 'true': [-1.4802973661668753e-16, nan], 'false,true': [0.09906674252579034, nan], 'false': [0.09906674252579034, -1.734723475976807e-18]}, {'': [0.0010987306110376016, 7.878484243095812e-05], 'true,true': [0.0010987306110376016, nan], 'true': [0.0010987306110376016, nan]}, {'': [0.0009592017987778645, 6.670389346122574e-05], 'true,true,true': [0.0009592017987778645, nan], 'true,true': [0.0009592017987778645, nan], 'true': [0.0009592017987778645, nan]}, {'': [0.0007703869371823213, 5.712997443064194e-05], 'true,true,true': [0.0007703869371823213, nan], 'true,true': [0.0007703869371823213, nan], 'true': [0.0007703869371823213, nan]}, {'': [0.0006071730731508184, 4.943125516879282e-05], 'true': [0.0006071730731508184, nan]}, {'': [0.00048100651530879056, 4.3158302947055025e-05]}, {'': [0.0003861078628216025, 3.7985976607510935e-05], 'true,true': [0.0003861078628216025, nan], 'true': [0.0003861078628216025, nan]}, {'': [0.0003146474631911228, 3.3675203410352125e-05], 'true,true,true': [0.0003146474631911228, nan], 'true,true': [0.0003146474631911228, nan], 'true': [0.0003146474631911228, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14185106490048777;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( director(B) )
%   | then return 0.11024456011969057;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4285626193652484;  // std dev = 0,105, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10603437079090447;  // std dev = 0,028, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32863319560285603;  // std dev = 0,098, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09640233533092614;  // std dev = 0,026, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2608354671532327;  // std dev = 0,088, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08833106736544723;  // std dev = 0,024, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21391728088329023;  // std dev = 0,078, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08147629384922742;  // std dev = 0,022, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.18024993128920067;  // std dev = 0,069, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0755866355066504;  // std dev = 0,021, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15520512751261034;  // std dev = 0,062, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07047463513431758;  // std dev = 0,019, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13597683653485032;  // std dev = 0,056, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06599787325741285;  // std dev = 0,018, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.140122
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.657 seconds
Total inference time: 0.953 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096502
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.482 seconds
Refined model CLL: -0.096502


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.5700000000000003 seconds
Total inference time: 1.143 seconds
AUC ROC: 1.0
Total revision time: 2.5700000000000003
Best scored revision CLL: -0.096502


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:03
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072467, 'Precision': [1.0, 0.5], 'Learning time': 2.5700000000000003, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072467, 'Precision': [1.0, 0.5], 'Learning time': 0.898, 'F1': 1.0, 'Inference time': 1.143, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.143, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14185106490048777;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.059 seconds
Total inference time: 0.954 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:05
{'AUC ROC': 0.97972, 'Recall': 1.0, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'Learning time': 1.059, 'F1': 0.517241, 'Inference time': 0.954, 'AUC PR': 0.348837}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14185106490048777;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.16597
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.532 seconds
Total inference time: 0.722 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:07
{'AUC ROC': 0.97972, 'Recall': 0.0, 'CLL': -0.16597, 'Precision': [nan, 0.5], 'Learning time': 0.532, 'F1': nan, 'Inference time': 0.722, 'AUC PR': 0.348837}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1,49e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, A) )
%   | | then return 0.2215250292763391;  // std dev = 0,818, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.43405349849472497;  // std dev = 0,128, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10855111028314063;  // std dev = 0,054, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3323678639152014;  // std dev = 0,118, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09850300426711997;  // std dev = 0,050, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.26336803632468075;  // std dev = 0,105, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09010955913646229;  // std dev = 0,046, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.21568937349895953;  // std dev = 0,092, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08300059257140717;  // std dev = 0,043, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.18153645118367584;  // std dev = 0,021, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07690706826726837;  // std dev = 0,040, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1561713302865692;  // std dev = 0,073, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07162919518689821;  // std dev = 0,037, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.13672397746753487;  // std dev = 0,065, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06701574585759568;  // std dev = 0,035, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072313
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.955 seconds
Total inference time: 1.261 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097324
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.572 seconds
Parameter learned model CLL: -0.097324


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.49e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 15, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false,true': 'movie(E, A)', 'false': 'director(B)'}, {'false,true,true': [0.818, 3, 3], 'true,true': [0.0, 0, 12], 'false,false': [9.13e-09, 12, 0], 'false,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.128, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.054, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.118, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.05, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.105, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.046, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.092, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.043, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.021, 0, 15], 'false': [0.04, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.073, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.037, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.065, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.035, 15, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 1.8503717077085942e-18], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.590520390792032e-16, 0.061916714078619], 'true': [-2.590520390792032e-16, nan], 'false,true': [0.11145008534151417, nan], 'false': [0.11145008534151417, 6.938893903907228e-18]}, {'': [0.001094275065023916, 0.00019347590364293492], 'true,true': [0.001094275065023916, nan], 'true': [0.001094275065023916, nan]}, {'': [0.000930078836674945, 0.00016358245602731322], 'true,true,true': [0.000930078836674945, nan], 'true,true': [0.000930078836674945, nan], 'true': [0.000930078836674945, nan]}, {'': [0.0007309025603197868, 0.00013992173957149505], 'true,true,true': [0.0007309025603197868, nan], 'true,true': [0.0007309025603197868, nan], 'true': [0.0007309025603197868, nan]}, {'': [0.0005664616787926624, 0.00012092012344532831], 'true': [0.0005664616787926624, nan]}, {'': [0.00044300384502532486, 0.00010545759691557115]}, {'': [0.00035204959802599044, 9.2724046827188e-05], 'true,true': [0.00035204959802599044, nan], 'true': [0.00035204959802599044, nan]}, {'': [0.00028461743175361987, 8.212418265608109e-05], 'true,true,true': [0.00028461743175361987, nan], 'true,true': [0.00028461743175361987, nan], 'true': [0.00028461743175361987, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( director(B) )
%   | then return 0.2215250292763391;  // std dev = 0,818, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.43405349849472497;  // std dev = 0,128, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10855111028314063;  // std dev = 0,054, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.3323678639152014;  // std dev = 0,118, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09850300426711997;  // std dev = 0,050, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26336803632468075;  // std dev = 0,105, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09010955913646229;  // std dev = 0,046, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21568937349895953;  // std dev = 0,092, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08300059257140717;  // std dev = 0,043, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.18153645118367584;  // std dev = 0,082, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07690706826726837;  // std dev = 0,040, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1561713302865692;  // std dev = 0,073, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07162919518689821;  // std dev = 0,037, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13672397746753487;  // std dev = 0,065, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06701574585759568;  // std dev = 0,035, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.141423
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.683 seconds
Total inference time: 0.99 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097324
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.51 seconds
Refined model CLL: -0.097324


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072313
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.7199999999999998 seconds
Total inference time: 1.261 seconds
AUC ROC: 1.0
Total revision time: 2.7199999999999998
Best scored revision CLL: -0.097324


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:12
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072313, 'Precision': [1.0, 0.5], 'Learning time': 2.7199999999999998, 'F1': 1.0, 'Inference time': 1.261, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072313, 'Precision': [1.0, 0.5], 'Learning time': 0.955, 'F1': 1.0, 'Inference time': 1.261, 'AUC PR': 1.0}, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360638;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1015963294878363;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926097;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839689;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0641918400820262;  // std dev = 4,56e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.216 seconds
Total inference time: 1.017 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:15
{'AUC ROC': 0.97972, 'Recall': 1.0, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'Learning time': 1.216, 'F1': 0.517241, 'Inference time': 1.017, 'AUC PR': 0.348837}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.16597
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.528 seconds
Total inference time: 0.722 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:16
{'AUC ROC': 0.97972, 'Recall': 0.0, 'CLL': -0.16597, 'Precision': [nan, 0.5], 'Learning time': 0.528, 'F1': nan, 'Inference time': 0.722, 'AUC PR': 0.348837}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, A) )
%   | | then return 0.17383339963777547;  // std dev = 0,874, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4317065986185634;  // std dev = 0,151, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.1308502035510386;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10621536223465772;  // std dev = 0,046, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.309480504721584;  // std dev = 0,459, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09655616146402062;  // std dev = 0,043, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2664351061457607;  // std dev = 0,126, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.15253803264532237;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08846343270037507;  // std dev = 0,040, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.20110977998645932;  // std dev = 0,361, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08159141898360914;  // std dev = 0,037, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16922979010652822;  // std dev = 0,077, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else return -0.07568770615863152;  // std dev = 0,034, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1614727537712335;  // std dev = 0,090, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.18286883713030283;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07056409900826081;  // std dev = 0,032, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.14084055824959663;  // std dev = 0,081, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.1571088033806883;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06607764104577024;  // std dev = 0,030, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065696
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.034 seconds
Total inference time: 1.222 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100844
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.62 seconds
Parameter learned model CLL: -0.100844


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 19, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false,true': 'movie(E, A)', 'false': 'director(B)'}, {'false,true,true': [0.874, 4, 3], 'true,true': [0.0, 0, 17], 'false,false': [1.39e-08, 16, 0], 'false,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.151, 0, 20], 'false': [0.046, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.459, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.043, 19, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.126, 0, 20], 'true,true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.04, 19, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.361, 1, 20], 'true,false': [0.0, 0, 0], 'false': [0.037, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.077, 1, 20], 'false': [0.034, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.09, 0, 20], 'false': [0.032, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.081, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.03, 19, 0], 'true,true,false,true': [0.0, 1, 0]}]]
[{'': [0.04535147392290242, -5.843279076974508e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03237580555397633, 2.921639538487254e-18], 'true,false,true': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [-2.0898315757650005e-16, 0.050563365750403426], 'true': [-2.0898315757650005e-16, nan], 'false,true': [0.10917559380393224, nan], 'false': [0.10917559380393224, 1.214306433183765e-17]}, {'': [0.015439533475922815, 0.00011378913875311145], 'true,false,true': [0.0, nan], 'true,true': [0.0011415027369909181, nan], 'true': [0.0011415027369909181, 0.0], 'true,false': [0.0, nan]}, {'': [0.01001509866750236, 9.645186865969129e-05], 'true,true,true': [0.01001509866750236, nan], 'true,true': [0.01001509866750236, nan], 'true': [0.01001509866750236, nan]}, {'': [0.008715615289316657, 8.26873408164914e-05], 'true,true,true': [0.0007924202905228661, 0.0], 'true,true': [0.008715615289316657, nan], 'true': [0.008715615289316657, nan]}, {'': [0.006198899328010644, 7.160215230400815e-05], 'true': [0.006198899328010644, nan]}, {'': [0.005856251156202977, 6.255850391166808e-05]}, {'': [0.005761108803944785, 5.509363590498166e-05], 'true,false,true': [0.0, nan], 'true,true': [0.0004029199001134076, nan], 'true': [0.0004029199001134076, 0.0], 'true,false': [0.0, nan]}, {'': [0.004336022783184351, 4.8866470707235365e-05], 'true,true,true': [0.00032549906063431835, nan], 'true,true': [0.00032549906063431835, 0.0], 'true': [0.004336022783184351, nan], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( director(B) )
%   | then if ( director(A) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3884457330113118;  // std dev = 0,578, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.42367326643100894;  // std dev = 0,066, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.15724781181727557;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783631;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.26476579857973176;  // std dev = 0,165, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.32203732333384655;  // std dev = 0,036, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.21199247825385262;  // std dev = 0,157, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.256101068225418;  // std dev = 0,032, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.17287491188152987;  // std dev = 0,155, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.21042871161985546;  // std dev = 0,028, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.07877675473109173;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16613562220112169;  // std dev = 0,091, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16230426118697583;  // std dev = 0,064, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.26496332586207305;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420272;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.10404818548811444;  // std dev = 0,131, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.13457976867080376;  // std dev = 0,020, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074151
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.986 seconds
Total inference time: 1.162 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104285
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.513 seconds
Refined model CLL: -0.104285


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065696
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1529999999999996 seconds
Total inference time: 1.222 seconds
AUC ROC: 1.0
Total revision time: 3.1529999999999996
Best scored revision CLL: -0.100844


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:23
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065696, 'Precision': [1.0, 0.5], 'Learning time': 3.1529999999999996, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065696, 'Precision': [1.0, 0.5], 'Learning time': 1.034, 'F1': 1.0, 'Inference time': 1.222, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.222, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.11231637819360635;  // std dev = 1,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.10159632948783631;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.348279779853056;  // std dev = 0,188, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.2575925320806725;  // std dev = 0,404, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2744225105958224;  // std dev = 0,167, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.2234167783233243;  // std dev = 0,368, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2235830742196961;  // std dev = 0,147, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.19563116837870667;  // std dev = 0,334, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1873713986767886;  // std dev = 0,129, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.17285764086581842;  // std dev = 0,302, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.16062590235433732;  // std dev = 0,115, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.15404306015675734;  // std dev = 0,275, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.14022091959462843;  // std dev = 0,103, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.13837013563252845;  // std dev = 0,251, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079343
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.626 seconds
Total inference time: 1.104 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:25
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.079343, 'Precision': [1.0, 0.5], 'Learning time': 1.626, 'F1': 1.0, 'Inference time': 1.104, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.979012
   AUC PR    = 0.338166
   CLL	      = -0.166389
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.638 seconds
Total inference time: 0.8 seconds
AUC ROC: 0.979012


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:27
{'AUC ROC': 0.979012, 'Recall': 0.0, 'CLL': -0.166389, 'Precision': [nan, 0.5], 'Learning time': 0.638, 'F1': nan, 'Inference time': 0.8, 'AUC PR': 0.338166}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(G, A).;true;true
0;true,false,false;publication(K, B).;false;false
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true;publication(D, B), publication(D, A).;false;true
2;true,false;publication(E, A).;true;true
2;false;ta(I, A, J).;false;true
2;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
2;false,false;professor(B).;true;false
2;false,false,true;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(K, A).;false;false
3;true,true;publication(C, D), ta(E, D, F).;false;true
3;true,false;ta(H, A, I), publication(J, B).;true;true
3;true,false,false;publication(L, A).;false;false
3;true,true,false;tempadvisedby(G, B).;false;false
3;true;publication(C, B), publication(C, A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true,false,false;ta(M, A, N), tempadvisedby(P, B).;false;false
4;true,true,false;publication(C, H), ta(I, H, J).;false;false
4;true,true,true;publication(E, B), ta(F, D, G).;false;false
4;true;publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(D, A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;tempadvisedby(K, B).;false;false
5;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
5;true,true,true;publication(C, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false;publication(E, B), publication(E, A).;true;true
6;true,false,false;publication(H, A), publication(I, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(I, A, J), ta(G, K, J).;false;false
7;true;projectmember(C, B), ta(D, A, E).;false;true
7;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;ta(I, K, L), publication(H, K).;false;false
8;true,true;tempadvisedby(D, B).;false;true
8;true,false;publication(H, B), ta(I, A, J).;true;true
8;true,false,false;projectmember(M, B).;false;false
8;true,true,false;publication(C, E), ta(F, E, G).;false;false
8;true;publication(C, B), publication(C, A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true,false,true;publication(K, B), publication(L, A).;false;false
9;true,true;publication(D, B).;true;true
9;true,false;ta(I, A, J).;true;true
9;true,false,false;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,true,false;publication(H, B).;false;false
9;true,true,true;ta(E, C, F), publication(G, C).;false;false
9;true;tempadvisedby(C, B), publication(D, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A) )
%   | | then return 0.22152502927633907;  // std dev = 0,944, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.43074551562744207;  // std dev = 0,152, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.1189832814760971;  // std dev = 0,025, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1061320560934696;  // std dev = 0,056, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.2976656307830093;  // std dev = 0,612, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09648907164614705;  // std dev = 0,052, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.26803220973667374;  // std dev = 0,126, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.1389590537858845;  // std dev = 0,028, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08840854112917391;  // std dev = 0,048, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.1935985197854651;  // std dev = 0,479, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08154588930156444;  // std dev = 0,045, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16302732122655814;  // std dev = 0,090, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else return -0.07564948882061887;  // std dev = 0,042, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1641690805101462;  // std dev = 0,090, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.16699565090977747;  // std dev = 0,033, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07053168209269367;  // std dev = 0,039, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.14290993994452167;  // std dev = 0,081, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, B) )
%   | | | then return -0.14511237010854766;  // std dev = 0,029, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0660498885859613;  // std dev = 0,037, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065685
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.109 seconds
Total inference time: 1.34 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102583
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.656 seconds
Parameter learned model CLL: -0.102583


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [1.33e-07, 0, 25], 'false': [7.45e-09, 23, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'false': 'director(B)', 'false,true': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 21], 'false,false': [1.49e-08, 20, 0], 'true,false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.944, 4, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.025, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.152, 0, 25], 'false': [0.056, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.612, 2, 25], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.052, 23, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.126, 0, 25], 'true,true,true,false': [0.028, 2, 0], 'true,false': [0.0, 0, 0], 'false': [0.048, 23, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'true,true': [0.479, 2, 25], 'true,false': [0.0, 0, 0], 'false': [0.045, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)'}, {'true': [0.09, 2, 25], 'false': [0.042, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.033, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.09, 0, 25], 'false': [0.039, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true,true': [0.081, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.037, 23, 0], 'true,true,false,true': [0.029, 2, 0]}]]
[{'': [0.06858710562414343, 2.413528314402514e-18], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04896340963409988, 0.0], 'true,false,true': [0.0, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.019342576794807966, 0.05458779690196615], 'true,false,true': [0.0, nan], 'true': [-2.9605947323337506e-16, 0.0], 'true,false': [0.0, nan], 'false': [0.11145008534151415, 1.1102230246251566e-17], 'false,true': [0.11145008534151415, nan]}, {'': [0.02160063924483345, 0.00013715210560699445], 'true,false,true': [0.00030230609944208696, nan], 'true,true': [0.0009191910546199721, nan], 'true': [0.0009191910546199721, 0.00030230609944208696], 'true,false': [0.00030230609944208696, nan]}, {'': [0.013849989069331211, 0.00011640154434463366], 'true,true,true': [0.013849989069331211, nan], 'true,true': [0.013849989069331211, nan], 'true': [0.013849989069331211, nan]}, {'': [0.011977241552321029, 9.989585575818372e-05], 'true,true,true': [0.0006341177577586077, 0.0003941699253806434], 'true,true': [0.011977241552321029, nan], 'true': [0.011977241552321029, nan]}, {'': [0.008508935116412297, 8.658189238924566e-05], 'true': [0.008508935116412297, nan]}, {'': [0.008019936583490995, 7.570519202716548e-05]}, {'': [0.007862860414762005, 6.67167788317351e-05], 'true,false,true': [0.0005333770384746, nan], 'true,true': [0.00032550950438868574, nan], 'true': [0.00032550950438868574, 0.0005333770384746], 'true,false': [0.0005333770384746, nan]}, {'': [0.005963714684206803, 5.921105612184734e-05], 'true,true,true': [0.00026195328094085645, nan], 'true,true': [0.00026195328094085645, 0.00042383306919190414], 'true': [0.005963714684206803, nan], 'true,true,false': [0.00042383306919190414, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then if ( director(A) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4218298737583063;  // std dev = 0,597, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.42275966521283287;  // std dev = 0,060, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.13165951358065958;  // std dev = 0,043, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.27789193265728407;  // std dev = 0,150, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.2984558539514752;  // std dev = 0,095, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.22182692767349185;  // std dev = 0,143, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.23898084344243684;  // std dev = 0,087, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839685;  // std dev = 1,39e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1808604152867363;  // std dev = 0,141, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.19659399720175708;  // std dev = 0,083, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.07877675473109175;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1501414047711784;  // std dev = 0,142, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.16538572954033948;  // std dev = 0,082, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16655496099639827;  // std dev = 0,049, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.2377750299423726;  // std dev = 0,059, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420274;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11109511722435918;  // std dev = 0,122, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.12347211791613305;  // std dev = 0,069, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070931
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.213 seconds
Total inference time: 1.132 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108481
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.55 seconds
Refined model CLL: -0.108481


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065685
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.5280000000000005 seconds
Total inference time: 1.34 seconds
AUC ROC: 1.0
Total revision time: 3.5280000000000005
Best scored revision CLL: -0.102583


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:34
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065685, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065685, 'Precision': [1.0, 0.5], 'Learning time': 1.109, 'F1': 1.0, 'Inference time': 1.34, 'AUC PR': 1.0}, 'Learning time': 3.5280000000000005, 'F1': 1.0, 'Inference time': 1.34, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8025933795439567;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.6749928282743806;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5243568433454531;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.46016457171287145;  // std dev = 0,076, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.3177685308541498;  // std dev = 0,433, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3499121875364144;  // std dev = 0,070, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.2654013725035649;  // std dev = 0,379, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2750698578633325;  // std dev = 0,062, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.2247721359916671;  // std dev = 0,332, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.22375404221633174;  // std dev = 0,054, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.1931184970001133;  // std dev = 0,291, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.187317591913115;  // std dev = 0,047, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.1681957315240804;  // std dev = 0,257, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.16046825892213368;  // std dev = 0,042, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.14830386444269522;  // std dev = 0,229, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.14001844748888348;  // std dev = 0,038, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.13219618163091154;  // std dev = 0,206, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070819
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.079 seconds
Total inference time: 1.19 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:37
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070819, 'Precision': [1.0, 0.5], 'Learning time': 2.079, 'F1': 1.0, 'Inference time': 1.19, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8025933795439567;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.979012
   AUC PR    = 0.338166
   CLL	      = -0.166387
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.692 seconds
Total inference time: 0.754 seconds
AUC ROC: 0.979012


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:39
{'AUC ROC': 0.979012, 'Recall': 0.0, 'CLL': -0.166387, 'Precision': [nan, 0.5], 'Learning time': 0.692, 'F1': nan, 'Inference time': 0.754, 'AUC PR': 0.338166}


