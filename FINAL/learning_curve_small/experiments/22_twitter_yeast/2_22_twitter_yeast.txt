Starting experiment #2 for 22_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.852231775336196;  // std dev = 0,077, 169,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=168 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( follows(F, A), follows(A, F) )
%   | | | then return 0.7152917922423694;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), follows(I, A) )
%   | | | then return -0.12144290163518202;  // std dev = 2,424, 294,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=6 */
%   | | | else return 0.011015177137728527;  // std dev = 4,509, 157,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=24 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.13007875966091456;  // std dev = 4,751, 114,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | | | else return 0.21635789032339295;  // std dev = 3,925, 67,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.7031222689149704;  // std dev = 0,131, 171,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=168 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then if ( follows(A, E), tweets(A, F) )
%   | | | then return -0.09383333819247207;  // std dev = 2,556, 203,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=7 */
%   | | | else return -0.1277007504284474;  // std dev = 4,71e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( follows(D, G), recursion_accounttype(G, B) )
%   | | | then return 0.7599443336527698;  // std dev = 1,461, 43,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.14319723226511755;  // std dev = 1,60e-07, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.780628749134405;  // std dev = 1,501, 57,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | | else return -0.16071686137151234;  // std dev = 0,049, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.1374120189285518;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.1213863779029107;  // std dev = 2,227, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.5433143927757373;  // std dev = 0,131, 171,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=168 */
%   else if ( follows(D, A) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(A, D), tweets(A, F) )
%   | | | then return -0.08674601787266528;  // std dev = 2,562, 223,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=7 */
%   | | | else return -0.11413893907623587;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( follows(D, G), recursion_accounttype(G, B) )
%   | | | then return 0.5903412288398283;  // std dev = 1,950, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return -0.12650925627496443;  // std dev = 1,12e-07, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.6750935990135093;  // std dev = 0,450, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.14019352645349178;  // std dev = 0,046, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.17305392677083223;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.2785441073209646;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then return 0.3809392068213359;  // std dev = 0,207, 89,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=85 */
%   | | else return 0.4258830270460553;  // std dev = 4,21e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.4258830270460552;  // std dev = 1,12e-07, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( follows(F, A) )
%   | then if ( follows(G, F), follows(G, A) )
%   | | then return -0.08480044213221712;  // std dev = 0,147, 308,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=7 */
%   | | else if ( follows(H, F), recursion_accounttype(H, B) )
%   | | | then return 0.5411201225112726;  // std dev = 0,542, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.10573130780408443;  // std dev = 1,009, 141,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=3 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return 0.3965129528615465;  // std dev = 0,156, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.06239785047977715;  // std dev = 3,785, 158,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=44 */
%   | | | else return 0.116710505439416;  // std dev = 2,680, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D) )
%   | then return 0.3253504487606575;  // std dev = 0,085, 138,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=137 */
%   | else if ( follows(C, E), follows(E, A) )
%   | | then return 0.2708359524597064;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.3263915080152619;  // std dev = 1,49e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(A, G), follows(F, G) )
%   | | then return 0.32990534401638133;  // std dev = 0,101, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.042313519809353606;  // std dev = 1,131, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), follows(I, A) )
%   | | | then return -0.08030459086675051;  // std dev = 2,422, 316,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=6 */
%   | | | else return -0.018492378915706775;  // std dev = 2,614, 164,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=24 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.03271128388221429;  // std dev = 2,730, 87,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.08749234883700696;  // std dev = 3,741, 96,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.24683637799075653;  // std dev = 0,133, 167,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=164 */
%   | else return 0.05920396243486914;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), recursion_accounttype(G, B) )
%   | | | then return 0.1615337538299137;  // std dev = 1,257, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.5644476887833252;  // std dev = 0,936, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.09293097000976923;  // std dev = 0,995, 406,000 (wgt'ed) examples reached here.  /* #neg=403 #pos=3 */
%   | else if ( tweets(A, H), follows(A, I) )
%   | | then if ( follows(I, J), follows(A, J) )
%   | | | then return 0.009849837403658405;  // std dev = 1,170, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.047105043462076335;  // std dev = 2,506, 72,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.14440161869492804;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.07769093655393303;  // std dev = 3,342, 90,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( follows(C, D), follows(A, C) )
%   | | then return 0.1977642538485634;  // std dev = 0,152, 84,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=82 */
%   | | else if ( tweets(A, E), tweets(D, E) )
%   | | | then return 0.07458213207791752;  // std dev = 2,071, 34,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | | | else return 0.2192226740222659;  // std dev = 0,019, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.2169406550480098;  // std dev = 0,047, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( follows(F, A) )
%   | then return -0.045142175829429435;  // std dev = 0,159, 488,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=48 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.42813202188534694;  // std dev = 1,450, 56,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=55 */
%   | | | else return -0.14676054815144524;  // std dev = 0,082, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( tweets(A, I) )
%   | | | then return -0.01736063057468091;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.06992707530630327;  // std dev = 2,339, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.18518930985057408;  // std dev = 0,124, 153,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=151 */
%   | else if ( follows(C, E), follows(E, C) )
%   | | then return -0.27311289934112243;  // std dev = 0,945, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( follows(F, A), recursion_accounttype(F, B) )
%   | | | then return -0.09894360256741448;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3158968086312351;  // std dev = 0,182, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( follows(G, A), follows(A, G) )
%   | then return -0.0405931551388847;  // std dev = 0,155, 382,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=34 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.18330542449041198;  // std dev = 0,028, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1372658251005404;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.07136073559868907;  // std dev = 0,611, 72,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=2 */
%   | | | else return -0.007826427325373133;  // std dev = 4,194, 226,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=55 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( tweets(E, C), recursion_accounttype(E, B) )
%   | then if ( recursion_accounttype(D, B) )
%   | | then return 0.16434747720602272;  // std dev = 0,121, 131,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
%   | | else if ( follows(F, A), recursion_accounttype(F, B) )
%   | | | then return 0.09210936942611782;  // std dev = 0,944, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.4367430741025408;  // std dev = 1,230, 47,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | else return -0.08790727466611485;  // std dev = 0,285, 371,000 (wgt'ed) examples reached here.  /* #neg=371 */
%   else if ( follows(G, A), recursion_accounttype(G, B) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then return 0.163048824641769;  // std dev = 0,034, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return 0.03860891564757582;  // std dev = 0,322, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( follows(I, A) )
%   | | then return -0.051751008531749264;  // std dev = 0,102, 120,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=8 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.016362297415868577;  // std dev = 1,854, 56,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.011990513231780353;  // std dev = 3,101, 58,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.1356470380877829;  // std dev = 0,103, 170,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=168 */
%   else if ( follows(D, A) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(A, D), tweets(A, F) )
%   | | | then return -0.04601969023180759;  // std dev = 2,217, 207,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=7 */
%   | | | else return -0.07034173818225757;  // std dev = 0,013, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( follows(G, D), tweets(G, H) )
%   | | | then return -0.00824119014862388;  // std dev = 2,123, 183,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=41 */
%   | | | else return -0.07795504499046638;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then if ( follows(A, J), follows(J, I) )
%   | | | then return 0.11820162948873467;  // std dev = 0,011, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14607155587937606;  // std dev = 0,837, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.010129919263379061;  // std dev = 2,371, 89,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | | | else return 0.031208555386390703;  // std dev = 2,973, 92,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.21837106042470464;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6209436491414324;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1833886721496299;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4681959497689646;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15534770464315406;  // std dev = 0,442, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.07144030839421248;  // std dev = 0,424, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.20197040886326248;  // std dev = 0,470, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.1459717839680668;  // std dev = 0,360, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.10830510156190193;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.31054886740194654;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -2.7151581286632975E-5;  // std dev = 0,452, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12127112608544695;  // std dev = 0,346, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07844582758750426;  // std dev = 0,250, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.04962623747459392;  // std dev = 0,504, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.28933686784609086;  // std dev = 0,069, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12119822976499722;  // std dev = 0,022, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, E), interaction(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19170073073180915;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), interaction(A, G) )
%   | then return 0.0749748853684373;  // std dev = 0,232, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02037678348881446;  // std dev = 0,437, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.019627627314912244;  // std dev = 0,315, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.24923696276519058;  // std dev = 0,033, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.1253735208736632;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return -0.011047017292636359;  // std dev = 0,447, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.03374231333121882;  // std dev = 0,184, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09217456559492061;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.1851343459530328;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07324422789111557;  // std dev = 0,416, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15916688580905547;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.05697236937212254;  // std dev = 0,239, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.09922555137405502;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.723066
   AUC PR    = 0.099309
   CLL	      = -0.21069
   Precision = 0.173203 at threshold = 0.5
   Recall    = 0.609195
   F1        = 0.26972


Total learning time: 1.399 seconds
Total inference time: 6.41 seconds
AUC ROC: 0.723066


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.178895
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.74 seconds
Parameter learned model CLL: -0.178895


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false': 'interaction(G, A)', 'false,true,false': 'interaction(F, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 2, 0], 'false,false,false,true': [0.0, 2, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1], 'false,false,true,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'true': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'true': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.442, 1, 1], 'false,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.424, 2, 1], 'false,true,true': [0.0, 2, 0], 'false,true,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false': 'interaction(H, A)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true': 'enzyme(A, D)', 'false,true': 'interaction(A, G), interaction(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'enzyme(A, J), interaction(A, K)'}, {'false,false,true,true': [0.0, 2, 0], 'false,false,false,true': [0.36, 1, 1], 'false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,false,true,false': [0.47, 1, 2], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, J), interaction(A, J)', 'false,false': 'enzyme(A, H), interaction(A, I)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,true,false': [0.452, 3, 1], 'false,false,false,false': [0.25, 1, 1], 'false,false,true,false': [0.346, 1, 1], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(A, F)', 'false': 'interaction(E, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.069, 0, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.504, 3, 2], 'false,false,true,false': [0.022, 2, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, I)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true,false': 'interaction(C, E), interaction(E, C)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(G, A), interaction(A, G)', 'false,false,false': 'interaction(J, A)', 'true,false,false': 'interaction(F, A), recursion_proteinclass(F, B)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.437, 2, 1], 'false,false,false,false': [0.315, 2, 1], 'false,true': [0.232, 1, 1], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(A, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(I, A)', 'true': 'enzyme(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'false,false,true': [0.447, 3, 1], 'true,false': [0.0, 1, 0], 'false,false,false,true': [0.184, 1, 1], 'false,true,true': [0.0, 0, 0], 'true,true,false,false': [0.033, 0, 2], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, J), interaction(J, I)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'enzyme(A, K)', 'false,true,false': 'interaction(G, D), enzyme(G, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.416, 1, 1], 'false,false,false,true': [0.239, 1, 1], 'false,true,false,true': [0.0, 0, 1], 'true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,true,true,false': [0.003, 2, 0]}]]
[{'': [0.0, 0.24691358024691365], 'false,false,true': [0.0, 0.22222222222222224], 'false,false': [0.24000000000000005, 0.22222222222222224], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.23437500000000006], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.1987956905685443], 'false,false,true': [0.0, 0.0], 'false,false': [0.17847162811629394, nan], 'false,true,false': [0.0, 0.0], 'false,true': [0.0, 0.2222222222222222], 'false': [0.2123360217659281, 0.17847162811629394], 'false,true,true': [nan, 0.0]}, {'': [0.0, 0.1270443287336893], 'false,false,true': [0.0, 0.0], 'false,false': [0.11145008534151418, nan], 'false,true,false': [0.0, 0.0], 'false,true': [0.0, 0.14376677401632634], 'false': [0.1381873831533123, 0.11145008534151418], 'false,true,true': [nan, 0.0]}, {'': [0.0, 0.07679206625227118], 'false,false': [0.0, 0.05988335609904653], 'false,true,false': [0.0, 0.09787402447829927], 'true': [nan, 0.0], 'false,true': [0.0, 0.08699913286959933], 'false': [0.08351582893771767, 0.06736877561142736], 'false,false,false': [0.05988335609904653, nan]}, {'': [0.0, 0.06130738706712935], 'false,false,true': [0.0, 0.07357883166989489], 'false,false': [0.06498542107505513, 0.05747265290206294], 'true,false': [nan, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.06229096553815765], 'false,false,false': [0.0646567345148208, 0.0]}, {'': [0.0, 0.052049743598792254], 'false,false,true': [nan, 0.059780387659763234], 'false,false': [0.059780387659763234, 0.031232225752384837], 'false,true,true': [nan, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, 0.05106306380982136], 'false': [0.05628364521865287, 0.045964808253933516], 'false,false,false': [nan, 0.031232225752384837]}, {'': [0.0, 0.04777636662679177], 'false,false,true': [0.0023800430390571586, 0.00024784975784974614], 'false,false': [0.043448712991089856, nan], 'false': [0.050711233594127145, 0.043448712991089856], 'true': [nan, 0.0]}, {'': [0.0, 0.04083263944314829], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.04847224684228216], 'true,false': [nan, 0.0], 'true': [nan, 0.0], 'false': [0.026930509519395983, 0.04456951158157386], 'false,false,false': [0.06377011937803521, 0.03317409368904265], 'true,false,false': [nan, 0.0]}, {'': [0.03155417591441271, 0.0364299409354489], 'true,true,false': [nan, 0.0005535923875737425], 'false,false': [0.0498861854182874, 0.01689805016229528], 'true': [0.0005535923875737425, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.039335936808008475], 'true,true': [nan, 0.0005535923875737425], 'false,false,false': [0.01689805016229528, nan]}, {'': [0.0, 0.03583153629689642], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.024514531596697097], 'false,true,false': [0.0, 0.08649371027451118], 'false,true': [5.216274070542898e-06, 0.06044456207632074], 'false': [0.046131281453078474, 0.022847704718941486], 'false,false,false': [0.028639200579902588, 0.0], 'false,true,true': [nan, 5.216274070542898e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false,true;interaction(H, G), interaction(H, A).;true;true
0;false,false;interaction(G, A).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,false,false;interaction(A, I), interaction(I, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(D, E), interaction(E, A).;true;true
1;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, E), interaction(F, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false,false,true;interaction(I, H), interaction(I, A).;true;true
4;false,false;interaction(H, A).;true;true
4;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,false;enzyme(A, J), interaction(A, K).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false;interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false;interaction(G, A), interaction(A, G).;true;true
8;;proteinclass(A, B) :- enzyme(A, C), interaction(A, D).;true;true
8;true;enzyme(E, C), recursion_proteinclass(E, B).;true;true
8;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
9;false,true,false;interaction(G, D), enzyme(G, H).;true;true
9;false,true;interaction(E, D), interaction(E, A).;true;true
9;false;interaction(D, A).;true;true
9;false,false,false;enzyme(A, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.21837106042470464;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.43783406196450586;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6209436491414324;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1833886721496299;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.3549928621916349;  // std dev = 0,657, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.4681959497689646;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15534770464315406;  // std dev = 0,442, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.5371872388598822;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.0649745121685537;  // std dev = 0,587, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.40415957553310444;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.20197040886326248;  // std dev = 0,470, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.2066588998745403;  // std dev = 0,445, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.2527404273149083;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.31054886740194654;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -2.7151581286632975E-5;  // std dev = 0,452, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.11095241290142147;  // std dev = 0,573, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then return 0.04962623747459392;  // std dev = 0,504, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(E, F), recursion_proteinclass(E, B) )
%   | | then return 0.1677802475916482;  // std dev = 0,495, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.14221344239382921;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2552024406111012;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return 0.0749748853684373;  // std dev = 0,232, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.01311800805086906;  // std dev = 0,659, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.3117758067990857;  // std dev = 0,122, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.1271804720120708;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.015178626906596637;  // std dev = 0,558, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.0915344064052068;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(F, D), enzyme(F, G) )
%   | | | then return 0.17588490791892186;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07554668791740886;  // std dev = 0,416, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.2123063196673879;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.10615108437326784;  // std dev = 0,311, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.25728690266610826;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.741614
   AUC PR    = 0.173083
   CLL	      = -0.214836
   Precision = 0.137363 at threshold = 0.5
   Recall    = 0.574713
   F1        = 0.221729


Total learning time: 1.541 seconds
Total inference time: 5.642 seconds
AUC ROC: 0.741614


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.209538
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.843 seconds
Refined model CLL: -0.209538


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.723066
   AUC PR    = 0.099309
   CLL	      = -0.21069
   Precision = 0.173203 at threshold = 0.5
   Recall    = 0.609195
   F1        = 0.26972


Total learning time: 4.523 seconds
Total inference time: 6.41 seconds
AUC ROC: 0.723066
Total revision time: 4.523
Best scored revision CLL: -0.178895


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:37:19
{'CLL': -0.21069, 'AUC ROC': 0.723066, 'F1': 0.26972, 'Recall': 0.609195, 'Precision': [0.173203, 0.5], 'parameter_5': {'CLL': -0.21069, 'AUC ROC': 0.723066, 'F1': 0.26972, 'Recall': 0.609195, 'Precision': [0.173203, 0.5], 'Inference time': 6.41, 'Learning time': 1.399, 'AUC PR': 0.099309}, 'Inference time': 6.41, 'Learning time': 4.523, 'AUC PR': 0.099309}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.5248156017661788;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then return 0.5473385641404104;  // std dev = 0,886, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.14638152203885876;  // std dev = 1,102, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then return 0.057820616173567846;  // std dev = 0,809, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.3816418088125122;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then return 0.34726562309714704;  // std dev = 0,972, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0.05027504249649486;  // std dev = 0,991, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then return 0.3493028625460797;  // std dev = 0,900, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.03139495800600667;  // std dev = 0,988, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then return 0.25647730218681203;  // std dev = 0,921, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.01527943396881501;  // std dev = 0,943, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then return -0.06472881375041661;  // std dev = 0,696, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.19854939237186398;  // std dev = 1,084, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then return 0.26867350751978614;  // std dev = 0,560, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then return 0.22374774712750142;  // std dev = 0,624, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.19625530702515098;  // std dev = 0,762, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then return 0.20963323821825627;  // std dev = 0,836, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.0498986296375577;  // std dev = 0,825, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return -0.15113694239673528;  // std dev = 0,635, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then return -0.04328126743740108;  // std dev = 0,583, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.24570240530572116;  // std dev = 0,660, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.499985
   AUC PR    = 0.007466
   CLL	      = -0.645156
   Precision = 0.007466 at threshold = 0.5
   Recall    = 0.367816
   F1        = 0.014635


Total learning time: 1.729 seconds
Total inference time: 2.351 seconds
AUC ROC: 0.499985


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:37:23
{'CLL': -0.645156, 'AUC ROC': 0.499985, 'F1': 0.014635, 'Recall': 0.367816, 'Precision': [0.007466, 0.5], 'Inference time': 2.351, 'Learning time': 1.729, 'AUC PR': 0.007466}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.5248156017661788;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.500012
   AUC PR    = 0.007467
   CLL	      = -0.227744
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.854 seconds
Total inference time: 1.371 seconds
AUC ROC: 0.500012


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:37:25
{'CLL': -0.227744, 'AUC ROC': 0.500012, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.371, 'Learning time': 0.854, 'AUC PR': 0.007467}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.6081489350995123;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7670719622367218;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.23292803776327828;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7632896189784878;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1490779674864458;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6046262796882593;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19391346417998787;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6052889797077392;  // std dev = 0,149, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1311385780460788;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4551590058271042;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.24831091717271225;  // std dev = 0,717, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3949080364214518;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08658934363365361;  // std dev = 0,719, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return 0.3054165840724796;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2332376429447973;  // std dev = 0,714, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.12413541839135396;  // std dev = 0,354, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.04818688501624533;  // std dev = 0,604, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.29561985667198176;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.05352753663611622;  // std dev = 0,763, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10267338479091612;  // std dev = 0,344, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08187754484261948;  // std dev = 0,625, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.07721133227490747;  // std dev = 0,796, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.36398065896118553;  // std dev = 0,224, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14422908231184675;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, E), interaction(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1718018928904158;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), interaction(A, G) )
%   | then return 0.06415394289733514;  // std dev = 0,226, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06478999464365325;  // std dev = 0,754, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.03133431994838753;  // std dev = 0,567, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2282223759276456;  // std dev = 0,021, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.13924628409104134;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.03974360924561953;  // std dev = 0,763, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.04103442810326632;  // std dev = 0,507, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10538376963100718;  // std dev = 5,19e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.23361246887941706;  // std dev = 0,079, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.08307735431259027;  // std dev = 0,648, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1435949851135948;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.04013312472062281;  // std dev = 0,231, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.0081032377884485;  // std dev = 0,488, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.753324
   AUC PR    = 0.097102
   CLL	      = -0.265653
   Precision = 0.170418 at threshold = 0.5
   Recall    = 0.609195
   F1        = 0.266332


Total learning time: 1.428 seconds
Total inference time: 6.239 seconds
AUC ROC: 0.753324


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.217558
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.796 seconds
Parameter learned model CLL: -0.217558


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false': 'interaction(G, A)', 'false,true,false': 'interaction(F, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 4, 0], 'false,false,false,true': [0.894, 4, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1], 'false,false,true,false': [1.225, 2, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 6], 'true': [0.0, 0, 1], 'false,false,true,false': [0.0, 4, 0], 'false,false,true,true': [0.107, 0, 3], 'false,true,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 6], 'true': [0.0, 0, 1], 'false,false,true,false': [0.0, 4, 0], 'false,false,true,true': [0.149, 0, 3], 'false,true,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.717, 2, 4], 'false,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.719, 4, 2], 'false,true,true': [0.0, 4, 0], 'false,true,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false': 'interaction(H, A)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true': 'enzyme(A, D)', 'false,true': 'interaction(A, G), interaction(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'enzyme(A, J), interaction(A, K)'}, {'false,false,true,true': [0.0, 4, 0], 'false,false,false,true': [0.354, 1, 1], 'false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.604, 3, 1], 'false,false,true,false': [0.714, 2, 6], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, J), interaction(A, J)', 'false,false': 'enzyme(A, H), interaction(A, I)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,true,false': [0.763, 6, 4], 'false,false,false,false': [0.625, 3, 2], 'false,false,true,false': [0.344, 1, 1], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(A, F)', 'false': 'interaction(E, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.224, 0, 3], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.796, 6, 6], 'false,false,true,false': [0.011, 4, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, I)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true,false': 'interaction(C, E), interaction(E, C)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(G, A), interaction(A, G)', 'false,false,false': 'interaction(J, A)', 'true,false,false': 'interaction(F, A), recursion_proteinclass(F, B)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.754, 5, 5], 'false,false,false,false': [0.567, 4, 2], 'false,true': [0.226, 1, 1], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(A, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(I, A)', 'true': 'enzyme(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'false,false,true': [0.763, 6, 5], 'true,false': [0.0, 1, 0], 'false,false,false,true': [0.507, 3, 2], 'false,true,true': [0.0, 0, 0], 'true,true,false,false': [0.021, 0, 2], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, J), interaction(J, I)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'enzyme(A, K)', 'false,true,false': 'interaction(G, D), enzyme(G, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.648, 2, 4], 'false,false,false,true': [0.231, 1, 1], 'false,true,false,true': [0.079, 0, 2], 'true': [0.0, 0, 1], 'false,false,false,false': [0.488, 3, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,true,true,false': [5.19e-05, 4, 0]}]]
[{'': [0.0, 0.2493074792243767], 'false,false,true': [0.0, 0.1874999999999999], 'false,false': [0.25, 0.22222222222222224], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.2469135802469134], 'false,false,false': [0.16000000000000003, 0.0]}, {'': [0.0, 0.21346421077148542], 'false,false,true': [0.0038397199509904536, 0.0], 'false,false': [0.20550223414189744, nan], 'false,true,false': [-7.401486830834377e-17, 0.0], 'false,true': [0.0, 0.18749999999999994], 'false': [0.21673946272416797, 0.20550223414189744], 'false,true,true': [nan, 0.0]}, {'': [0.0, 0.13853661155928335], 'false,false,true': [0.007385220460997506, 0.0], 'false,false': [0.13597951435738734, nan], 'false,true,false': [0.0, 0.0], 'false,true': [0.0, 0.1195623229757187], 'false': [0.13917649957329783, 0.13597951435738734], 'false,true,true': [nan, 0.0]}, {'': [0.0, 0.08479950255857958], 'false,false': [0.0, 0.08606549659445578], 'false,true,false': [0.0, 0.0855722635599504], 'true': [nan, 0.0], 'false,true': [0.0, 0.07220159737870817], 'false': [0.08397840649488142, 0.08541047663064087], 'false,false,false': [0.08606549659445578, nan]}, {'': [0.0, 0.07042228008799495], 'false,false,true': [0.0, 0.06369304896870925], 'false,false': [0.06606862382978296, 0.08294552147425922], 'true,false': [nan, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.07227433467022168], 'false,false,false': [0.06264051694405062, 0.0911752971654202]}, {'': [0.0, 0.0626173834174989], 'false,false,true': [nan, 0.059121578908325485], 'false,false': [0.059121578908325485, 0.07822896505516534], 'false,true,true': [nan, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, 0.05818811409564192], 'false': [0.05663019111030549, 0.07285797043344687], 'false,false,false': [nan, 0.07822896505516534]}, {'': [0.0, 0.05928890968770334], 'false,false,true': [0.016773157526342508, 2.764757573368165e-05], 'false,false': [0.0704558394626809, nan], 'false': [0.052769995967549894, 0.0704558394626809], 'true': [nan, 0.0]}, {'': [0.0, 0.05053164594235555], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.05588325002702736], 'true,false': [nan, 0.0], 'true': [nan, 0.0], 'false': [0.025630401465772553, 0.05345900996699729], 'false,false,false': [0.05678873675975825, 0.053674554116653735], 'true,false,false': [nan, 0.0]}, {'': [0.03015610545226781, 0.050059794330946324], 'true,true,false': [nan, 0.00022308614642527202], 'false,false': [0.05291414580766643, 0.051404577076426414], 'true': [0.00022308614642527202, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.052442763554672596], 'true,true': [nan, 0.00022308614642527202], 'false,false,false': [0.051404577076426414, nan]}, {'': [0.0, 0.0475167331148752], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.04879248018227319], 'false,true,false': [0.003149812826578932, 0.06996074477412409], 'false,true': [6.740593777587733e-10, 0.05750691567179674], 'false': [0.049697700667008314, 0.04372973571968281], 'false,false,false': [0.026736332185946926, 0.059478582961473694], 'false,true,true': [nan, 6.740593760240499e-10]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false,true;interaction(H, G), interaction(H, A).;true;true
0;false,false;interaction(G, A).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,false,false;interaction(A, I), interaction(I, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(D, E), interaction(E, A).;true;true
1;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, E), interaction(F, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false,false,true;interaction(I, H), interaction(I, A).;true;true
4;false,false;interaction(H, A).;true;true
4;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false;interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false;interaction(G, A), interaction(A, G).;true;true
8;;proteinclass(A, B) :- enzyme(A, C), interaction(A, D).;true;true
8;true;enzyme(E, C), recursion_proteinclass(E, B).;true;true
8;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,true;interaction(E, D), interaction(E, A).;true;true
9;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
9;false;interaction(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.6081489350995123;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7670719622367218;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.23292803776327828;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.5351977223622544;  // std dev = 0,797, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1490779674864458;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6046262796882593;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19391346417998787;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.43499570166263024;  // std dev = 0,781, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1311385780460788;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.4551590058271042;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.24831091717271225;  // std dev = 0,717, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.4929148844956862;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.08499292025000921;  // std dev = 0,899, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.37255829510574145;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2332376429447973;  // std dev = 0,714, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.07070614173329674;  // std dev = 0,891, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.29561985667198176;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1129756600751932;  // std dev = 0,707, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.1881471450590516;  // std dev = 0,188, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.46458032362975726;  // std dev = 0,254, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.014364448340544034;  // std dev = 0,422, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.193053061234688;  // std dev = 0,508, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.19410646040725898;  // std dev = 0,627, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.11359689019135384;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1747251488103242;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return 0.06574782171852495;  // std dev = 0,197, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.16500291131290798;  // std dev = 0,216, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.11127699148086971;  // std dev = 0,856, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.23616213099267713;  // std dev = 0,059, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.08841723332011746;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, G) )
%   | | then return -0.05739940317394885;  // std dev = 0,537, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.08005737011118734;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14202880077830618;  // std dev = 0,644, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.08022819083591923;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.038586153773745246;  // std dev = 0,383, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11396004171730856;  // std dev = 0,539, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.1584471031366439;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.015103464961686219;  // std dev = 0,592, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.73924
   AUC PR    = 0.136511
   CLL	      = -0.293571
   Precision = 0.131313 at threshold = 0.5
   Recall    = 0.597701
   F1        = 0.215321


Total learning time: 2.333 seconds
Total inference time: 5.994 seconds
AUC ROC: 0.73924


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.212234
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.933 seconds
Refined model CLL: -0.212234


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.73924
   AUC PR    = 0.136511
   CLL	      = -0.293571
   Precision = 0.131313 at threshold = 0.5
   Recall    = 0.597701
   F1        = 0.215321


Total learning time: 5.49 seconds
Total inference time: 5.994 seconds
AUC ROC: 0.73924
Total revision time: 5.49
Best scored revision CLL: -0.212234


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:37:44
{'CLL': -0.293571, 'AUC ROC': 0.73924, 'F1': 0.215321, 'Recall': 0.597701, 'Precision': [0.131313, 0.5], 'Inference time': 5.994, 'Learning time': 5.49, 'AUC PR': 0.136511, 'parameter_10': {'CLL': -0.265653, 'AUC ROC': 0.753324, 'F1': 0.266332, 'Recall': 0.609195, 'Precision': [0.170418, 0.5], 'Inference time': 6.239, 'Learning time': 1.428, 'AUC PR': 0.097102}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.4813730497173963;  // std dev = 0,825, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7432726872238383;  // std dev = 0,058, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.375352576813281;  // std dev = 0,814, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5813048329279779;  // std dev = 0,078, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(E, E) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5621080773523045;  // std dev = 0,254, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2817876356698092;  // std dev = 0,166, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.4312136832343227;  // std dev = 0,071, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F) )
%   | | then return 0.3362936713598554;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.2904472729006631;  // std dev = 0,606, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11202239856364637;  // std dev = 0,693, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.06912089984953901;  // std dev = 0,663, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.14388795511175445;  // std dev = 0,601, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.28080133252374045;  // std dev = 0,107, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( complex(A, G), phenotype(E, H) )
%   | | then return 0.20483205153287934;  // std dev = 0,583, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2741932137344551;  // std dev = 0,032, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1689558603640967;  // std dev = 0,289, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.23175364119332187;  // std dev = 0,109, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.06735545211766128;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2850291987037836;  // std dev = 0,290, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.26945849908630565;  // std dev = 0,140, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.19352736060405945;  // std dev = 0,096, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then return 0.09661393117486276;  // std dev = 0,556, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then return -0.06324558954988184;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.013438875968596145;  // std dev = 0,397, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16274584367681433;  // std dev = 0,081, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( complex(A, G), phenotype(E, H) )
%   | | then return 0.12344540331228564;  // std dev = 0,483, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.16875299917750897;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12817031735062293;  // std dev = 0,221, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1462596884954752;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.58934
   AUC PR    = 0.016822
   CLL	      = -0.789404
   Precision = 0.010783 at threshold = 0.5
   Recall    = 0.574713
   F1        = 0.021169


Total learning time: 3.532 seconds
Total inference time: 3.218 seconds
AUC ROC: 0.58934


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:37:51
{'CLL': -0.789404, 'AUC ROC': 0.58934, 'F1': 0.021169, 'Recall': 0.574713, 'Precision': [0.010783, 0.5], 'Inference time': 3.218, 'Learning time': 3.532, 'AUC PR': 0.016822}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */


Results
   AUC ROC   = 0.500075
   AUC PR    = 0.007469
   CLL	      = -0.23286
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.153 seconds
Total inference time: 1.685 seconds
AUC ROC: 0.500075


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:37:54
{'CLL': -0.23286, 'AUC ROC': 0.500075, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.685, 'Learning time': 1.153, 'AUC PR': 0.007469}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.31968739663797385;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), enzyme(A, F) )
%   | | | then return 0.8509220325135542;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1490779674864458;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21837106042470472;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8010274528484983;  // std dev = 0,088, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17206119181927718;  // std dev = 0,075, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.709081855025065;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1311385780460788;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6209436491414324;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18338867214962992;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6452318038624851;  // std dev = 0,119, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14900251054849087;  // std dev = 0,066, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.01554309384501793;  // std dev = 0,592, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4681959497689646;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21791735366831616;  // std dev = 0,685, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3765052879588767;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.12472048458656339;  // std dev = 1,215, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.29298851922465763;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.0134804206854481;  // std dev = 0,590, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.20361433385898045;  // std dev = 0,681, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return -0.034357807954181085;  // std dev = 0,563, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.19517649416896493;  // std dev = 0,946, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4241643648024369;  // std dev = 0,161, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.019452793205683785;  // std dev = 0,745, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return -0.15303228963249393;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.032102253242384055;  // std dev = 0,526, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16404426746171322;  // std dev = 0,919, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, C), interaction(C, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, E), enzyme(D, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then return 0.07331505702395263;  // std dev = 0,856, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.376099511987215;  // std dev = 0,199, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16457105053962387;  // std dev = 0,133, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, C), interaction(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15263969575465375;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.08764716800130287;  // std dev = 0,534, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.058025237215332;  // std dev = 0,664, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.041158063910025;  // std dev = 0,887, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3233670483549508;  // std dev = 0,151, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1141882046639668;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.15672345917238953;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return -0.006486463420395781;  // std dev = 0,730, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08475125550192449;  // std dev = 0,728, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13711044141460826;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.31958709876108116;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13690090903744304;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), enzyme(G, H) )
%   | | | then return -0.0035277721958307737;  // std dev = 0,510, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.33331570657196596;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12439678192737935;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.03533322290361535;  // std dev = 0,373, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.06366844851648829;  // std dev = 0,721, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */


Results
   AUC ROC   = 0.878048
   AUC PR    = 0.193446
   CLL	      = -0.29958
   Precision = 0.057255 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.107195


Total learning time: 1.503 seconds
Total inference time: 6.192 seconds
AUC ROC: 0.878048


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.216555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.794 seconds
Parameter learned model CLL: -0.216555


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false': 'interaction(A, G)', 'false,true,false': 'interaction(A, F)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.894, 4, 1], 'false,false,false,true': [1.797, 7, 6], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [2.11e-08, 0, 3], 'false,false,false,false': [0.0, 2, 0], 'false,false,true,false': [1.155, 2, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(E, A), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 4], 'true': [0.0, 0, 3], 'false,false,true,false': [0.075, 9, 0], 'false,false,true,true': [0.088, 0, 7], 'false,true,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(D, A), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 4], 'true': [1.05e-08, 0, 3], 'false,false,true,false': [0.066, 9, 0], 'false,false,true,true': [0.119, 0, 7], 'false,true,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A)'}, {'false,true,false,false': [0.685, 2, 3], 'false,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 3], 'false,false,false,true': [1.215, 9, 6], 'false,true,true': [0.592, 4, 1], 'false,true,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'enzyme(A, D)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'enzyme(A, J), interaction(K, A)'}, {'false,false,true,true': [0.59, 4, 1], 'false,false,false,true': [0.563, 5, 1], 'false,true,false': [0.0, 0, 1], 'false,false,false,false': [0.946, 4, 5], 'false,false,true,false': [0.681, 2, 4], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), interaction(J, A)', 'false,false': 'enzyme(A, H), interaction(I, A)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.0, 0, 0], 'false,true,false': [0.745, 6, 3], 'false,false,false,false': [0.919, 4, 6], 'false,false,true,false': [0.526, 3, 1], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.161, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(A, E), enzyme(D, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false': 'interaction(A, F)', 'true,true': 'interaction(D, C), interaction(C, A)'}, {'false,false,true,true': [0.199, 0, 7], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'false,true': [0.856, 6, 5], 'true,true,false,true': [0.0, 0, 0], 'false,false,true,false': [0.133, 9, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true,false': 'interaction(E, C), interaction(C, E)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false,false': 'interaction(A, J)', 'true,false,false': 'interaction(A, F), recursion_proteinclass(F, B)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.664, 4, 3], 'false,false,false,false': [0.887, 9, 6], 'false,true': [0.534, 2, 3], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(D, A)', 'true,true,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, I)', 'true': 'enzyme(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'false,false,true': [0.73, 6, 3], 'true,false': [0.04, 5, 0], 'false,false,false,true': [0.728, 4, 6], 'false,true,true': [0.0, 0, 0], 'true,true,false,false': [0.151, 0, 3], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.01, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, A), interaction(I, J)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(D, A), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,false,false': 'enzyme(A, K)', 'false,true,false': 'interaction(D, G), enzyme(G, H)'}, {'false,true,true,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,false,true': [0.373, 5, 1], 'false,true,false,true': [0.51, 2, 2], 'true': [0.009, 0, 3], 'false,false,false,false': [0.721, 4, 5], 'false,false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,true,true,false': [0.003, 4, 0]}]]
[{'': [1.4802973661668753e-16, 0.24691358024691348], 'false,false,true': [0.16000000000000003, 0.22222222222222213], 'false,false': [0.24793388429752045, 0.24000000000000007], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.24408284023668642], 'false,false,false': [0.24852071005917165, 0.0]}, {'': [0.0, 0.2335939407889549], 'false,false,true': [0.0011085102573848665, 0.0006208865830634304], 'false,false': [0.23386076551099386, nan], 'false,true,false': [0.0, 0.0], 'false,true': [0.16, 0.2222222222222222], 'false': [0.23308958164956414, 0.23386076551099386], 'false,true,true': [0.0, 0.0]}, {'': [3.700743415417188e-17, 0.1556541151020833], 'false,false,true': [0.002019746640461038, 0.00048617371451931433], 'false,false': [0.15639505409554078, nan], 'false,true,false': [0.0, 0.0], 'false,true': [0.1129552601840417, 0.14376677401632632], 'false': [0.15450784651386093, 0.15639505409554078], 'false,true,true': [0.0, 0.0]}, {'': [-3.700743415417188e-17, 0.09524713360405927], 'false,false': [0.0, 0.09843096169829672], 'false,true,false': [0.0, 0.0939590634991673], 'true': [nan, -3.700743415417188e-17], 'false,true': [0.07017037672626499, 0.08699913286959936], 'false': [0.09412126162467403, 0.09599361178019425], 'false,false,false': [0.09843096169829672, nan]}, {'': [0.0, 0.08695728224469805], 'false,false,true': [0.06969601108002953, 0.07735999118775823], 'false,false': [0.0828393981483808, 0.09352514999449199], 'true,false': [nan, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.08905092055545409], 'false,false,false': [0.05291158192192311, 0.09952646370240743]}, {'': [0.0, 0.07983147204588566], 'false,false,true': [0.0, 0.06908204756080023], 'false,false': [0.053671320366197935, 0.08441621729202622], 'false,true,true': [nan, 0.012988560437376867], 'true': [nan, 0.0], 'false,true': [0.012988560437376867, 0.061623540294199995], 'false': [0.07714648785178296, 0.08167633932876485], 'false,false,false': [nan, 0.08441621729202622]}, {'': [0.0, 0.07189403541108226], 'false,false,true': [0.005651013370032455, 0.001961336874471275], 'false,false': [0.07551484144492995, nan], 'true,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false': [0.06662634004316081, 0.07551484144492995], 'true,true': [nan, 0.0]}, {'': [0.0001495337909021427, 0.05480546336919404], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.05583698518110305], 'true,false': [nan, 0.0001495337909021427], 'true': [nan, 0.0001495337909021427], 'false': [0.0569343081892487, 0.05411831999223909], 'false,false,false': [0.06296009953537277, 0.05242234193332966], 'true,false,false': [0.0, 0.0]}, {'': [0.04793412849138399, 0.05167064765634739], 'true,true,false': [nan, 0.007621139705733748], 'false,false': [0.05917248570821638, 0.05302977267448165], 'true': [0.007621139705733748, 0.0003264469711057566], 'false,true': [nan, 3.16744494914765e-05], 'false': [3.16744494914765e-05, 0.05801479442141237], 'true,true': [nan, 0.007621139705733748], 'false,false,false': [0.05302977267448165, nan]}, {'': [2.5412296131198386e-05, 0.04988367313004201], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.04626252898002272], 'false,true,false': [0.0650153666851659, 0.0], 'false,true': [0.033342865531585844, 0.06855769538753086], 'false': [0.05845822460628785, 0.04396092025303431], 'false,false,false': [0.023236560151689036, 0.05769264248798884], 'false,true,true': [0.0, 2.3216617092043645e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,false;interaction(A, G).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,false,false;interaction(I, A), interaction(J, I).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;false,true,true;interaction(E, A), enzyme(A, F).;true;true
1;false,true;interaction(E, D), interaction(A, E).;true;true
1;false;interaction(A, D).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;false,true,true;interaction(D, A), enzyme(A, F).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false;interaction(A, D).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), interaction(A, F).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,false,true;interaction(J, I), interaction(J, A).;true;true
5;false,false;enzyme(A, H), interaction(I, A).;true;true
5;false;interaction(A, E).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
6;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;false;interaction(A, G), interaction(G, A).;true;true
8;;proteinclass(A, B) :- enzyme(A, C), interaction(D, A).;true;true
8;true;enzyme(E, C), recursion_proteinclass(E, B).;true;true
8;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;false,true,true;interaction(D, A), enzyme(A, F).;true;true
9;false,true;interaction(D, E), interaction(A, E).;true;true
9;false;interaction(A, D).;true;true
9;false,true,false;interaction(D, G), enzyme(G, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.31968739663797385;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), enzyme(A, F) )
%   | | | then return 0.7733921696315487;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15073543648840637;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7733921696315487;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17602623444842136;  // std dev = 0,072, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.8146197929547555;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.38101824835090586;  // std dev = 1,256, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.17539094562576898;  // std dev = 0,055, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.6116309857707802;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13268510852551196;  // std dev = 0,079, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6116309857707802;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1523090730357797;  // std dev = 0,064, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.6605380375252866;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.31625105263790665;  // std dev = 1,244, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.15152169808593055;  // std dev = 0,048, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return -0.0025175704873068973;  // std dev = 0,523, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.46071667777258973;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22285839485055653;  // std dev = 0,654, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.5608424421528435;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.008994742989814467;  // std dev = 0,767, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.21858455777906727;  // std dev = 1,226, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.42158731854530596;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( enzyme(A, G), enzyme(F, H) )
%   | | | then return 0.49993592278070736;  // std dev = 0,244, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07657507373336014;  // std dev = 1,394, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.10154262785779232;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.12425945120410649;  // std dev = 0,571, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.21507066785101325;  // std dev = 0,381, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return -0.11454736809267087;  // std dev = 0,089, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.18086896380973735;  // std dev = 0,493, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return -0.14935804237161662;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.018715195473064355;  // std dev = 0,647, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.18454845825094462;  // std dev = 0,667, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16038118351675462;  // std dev = 1,016, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return -0.09149812540470688;  // std dev = 0,040, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.01867147306224691;  // std dev = 0,474, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.33609036442512497;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.38353910233681193;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13345518813393528;  // std dev = 1,170, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.1565617074791352;  // std dev = 0,097, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.262757684548087;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return 0.047715652152411935;  // std dev = 0,495, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.2268808191021051;  // std dev = 0,275, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.08767202164599523;  // std dev = 1,274, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.33086268650103146;  // std dev = 0,231, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.14411919039290289;  // std dev = 0,170, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.1585790823885919;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(H, G), phenotype(H, I) )
%   | | | then return -0.14738324819241433;  // std dev = 0,159, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.141810275002937;  // std dev = 0,271, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.004330723039745261;  // std dev = 0,969, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3493337544409354;  // std dev = 0,219, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.138555339087341;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.21973751933219998;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09825957547196064;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), enzyme(G, H) )
%   | | | then return 0.007891564067797868;  // std dev = 0,381, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20301727463517638;  // std dev = 0,028, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2143716291930582;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.01580453983262348;  // std dev = 0,887, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.10815970177561968;  // std dev = 0,767, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.809695
   AUC PR    = 0.106352
   CLL	      = -0.405256
   Precision = 0.02938 at threshold = 0.5
   Recall    = 0.632184
   F1        = 0.056151


Total learning time: 7.874 seconds
Total inference time: 36.689 seconds
AUC ROC: 0.809695


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.24687
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.231 seconds
Refined model CLL: -0.24687


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.878048
   AUC PR    = 0.193446
   CLL	      = -0.29958
   Precision = 0.057255 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.107195


Total learning time: 11.402 seconds
Total inference time: 6.192 seconds
AUC ROC: 0.878048
Total revision time: 11.402
Best scored revision CLL: -0.216555


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:38:49
{'CLL': -0.29958, 'AUC ROC': 0.878048, 'F1': 0.107195, 'Recall': 0.83908, 'Precision': [0.057255, 0.5], 'parameter_15': {'CLL': -0.29958, 'AUC ROC': 0.878048, 'F1': 0.107195, 'Recall': 0.83908, 'Precision': [0.057255, 0.5], 'Inference time': 6.192, 'Learning time': 1.503, 'AUC PR': 0.193446}, 'Inference time': 6.192, 'Learning time': 11.402, 'AUC PR': 0.193446}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7632896189784878;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return -0.1490779674864458;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.7609104304538484;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35206912321986783;  // std dev = 1,922, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), complex(D, G) )
%   | | then if ( interaction(A, H), complex(E, G) )
%   | | | then return 0.6307401310102175;  // std dev = 0,129, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10027364406375874;  // std dev = 1,350, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.7165597015909932;  // std dev = 0,105, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.1311385780460788;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2635715090765127;  // std dev = 0,864, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return -0.04646842014709616;  // std dev = 0,634, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, E), complex(D, G) )
%   | | | then return 0.29950253516019276;  // std dev = 1,263, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.5547334416901666;  // std dev = 0,129, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.11690536474007185;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.20610073592738115;  // std dev = 0,845, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.42008812462253403;  // std dev = 0,136, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( interaction(G, F), complex(E, H) )
%   | | | then return 0.11479356937308882;  // std dev = 1,404, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.41890253401479605;  // std dev = 0,129, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.10536616189800675;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09196071040992321;  // std dev = 0,778, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3246609488550281;  // std dev = 0,121, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.28359833891378877;  // std dev = 0,442, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, F) )
%   | | then return -0.1151972838759943;  // std dev = 0,630, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.009165684949364856;  // std dev = 0,675, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.15500056658681474;  // std dev = 1,254, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2591707708941617;  // std dev = 0,106, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then return 0.2270872634417861;  // std dev = 0,408, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return -0.09395248563812011;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.09557396167921402;  // std dev = 0,632, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.12670658877584143;  // std dev = 1,386, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then return 0.17094886344654533;  // std dev = 0,543, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return -0.19683248156443534;  // std dev = 0,313, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(G, F), phenotype(A, H) )
%   | | | then return 0.031667149124441143;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2385063732977503;  // std dev = 0,631, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then return 0.08208736413789028;  // std dev = 0,346, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.21033004275126865;  // std dev = 0,149, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.07521086531835024;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.19957934688671763;  // std dev = 0,451, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.1751595778928444;  // std dev = 0,362, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.142993857835329;  // std dev = 1,210, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.07111303993596024;  // std dev = 0,337, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.17878509133262033;  // std dev = 0,129, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.07016336833871815;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then return -0.05851402167069453;  // std dev = 0,536, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then return 0.28287632792136147;  // std dev = 0,127, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.0826437771749702;  // std dev = 1,250, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return -0.055364582641459936;  // std dev = 0,293, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.534809
   AUC PR    = 0.008388
   CLL	      = -0.731692
   Precision = 0.007427 at threshold = 0.5
   Recall    = 0.413793
   F1        = 0.014593


Total learning time: 4.515 seconds
Total inference time: 5.098 seconds
AUC ROC: 0.534809


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:38:59
{'CLL': -0.731692, 'AUC ROC': 0.534809, 'F1': 0.014593, 'Recall': 0.413793, 'Precision': [0.007427, 0.5], 'Inference time': 5.098, 'Learning time': 4.515, 'AUC PR': 0.008388}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */


Results
   AUC ROC   = 0.500044
   AUC PR    = 0.007468
   CLL	      = -0.218353
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.269 seconds
Total inference time: 1.742 seconds
AUC ROC: 0.500044


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:39:02
{'CLL': -0.218353, 'AUC ROC': 0.500044, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.742, 'Learning time': 1.269, 'AUC PR': 0.007468}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5581489350995124;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.27920156667845974;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), enzyme(A, F) )
%   | | | then return 0.8509220325135542;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1490779674864458;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7758860545469174;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.22411394545308258;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7105377627026053;  // std dev = 0,943, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.17036075319777852;  // std dev = 0,070, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.709081855025065;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1311385780460788;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.614428284911411;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18755668736823483;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.578705729127352;  // std dev = 0,943, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.14767213899749174;  // std dev = 0,062, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.01554309384501793;  // std dev = 0,592, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4629522049748257;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25509028667017203;  // std dev = 0,882, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.41401489325245133;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.11703746943036084;  // std dev = 1,613, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.31834079978011864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.0134804206854481;  // std dev = 0,590, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.21602941060823527;  // std dev = 0,858, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return -0.10122312998287744;  // std dev = 0,739, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.24516546743174902;  // std dev = 1,162, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4211586680438873;  // std dev = 0,165, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.0704350255668995;  // std dev = 0,945, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return -0.2005124171486016;  // std dev = 0,275, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05573254947629604;  // std dev = 0,576, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19965832638270076;  // std dev = 1,117, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, C), interaction(C, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, E), enzyme(D, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then return 0.09384237099938154;  // std dev = 1,012, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.32873170904337407;  // std dev = 0,800, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.1587363408377895;  // std dev = 0,178, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, C), interaction(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1668472666985722;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.07817181459959045;  // std dev = 0,549, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08499903636008513;  // std dev = 0,842, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.03324825226628493;  // std dev = 1,219, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.34530016568360206;  // std dev = 0,189, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.151878107645701;  // std dev = 0,359, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.15715932451137174;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 0.025613923745167022;  // std dev = 0,918, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11480496065406716;  // std dev = 0,907, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13744994942180322;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.3131035994802308;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15188951901956674;  // std dev = 0,000761, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), enzyme(G, H) )
%   | | | then return -0.03434595739285644;  // std dev = 0,515, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19390474372758107;  // std dev = 0,527, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13126837171148986;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.07972569060320527;  // std dev = 0,580, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.08986027275184581;  // std dev = 0,896, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */


Results
   AUC ROC   = 0.884518
   AUC PR    = 0.186413
   CLL	      = -0.303954
   Precision = 0.0637 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.11841


Total learning time: 1.578 seconds
Total inference time: 6.168 seconds
AUC ROC: 0.884518


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.244372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.84 seconds
Parameter learned model CLL: -0.244372


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false': 'interaction(A, G)', 'false,true,false': 'interaction(A, F)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.894, 4, 1], 'false,false,false,true': [2.152, 11, 8], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [2.11e-08, 0, 3], 'false,false,false,false': [0.0, 2, 0], 'false,false,true,false': [1.449, 3, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(E, A), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 3, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [2.98e-08, 0, 7], 'true': [0.0, 0, 3], 'false,false,true,false': [0.07, 12, 0], 'false,false,true,true': [0.943, 1, 9], 'false,true,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(D, A), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 3, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 7], 'true': [1.05e-08, 0, 3], 'false,false,true,false': [0.062, 12, 0], 'false,false,true,true': [0.943, 1, 9], 'false,true,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A)'}, {'false,true,false,false': [0.882, 3, 6], 'false,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 3], 'false,false,false,true': [1.613, 13, 8], 'false,true,true': [0.592, 4, 1], 'false,true,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'enzyme(A, D)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'enzyme(A, J), interaction(K, A)'}, {'false,false,true,true': [0.59, 4, 1], 'false,false,false,true': [0.739, 8, 1], 'false,true,false': [0.0, 0, 1], 'false,false,false,false': [1.162, 5, 7], 'false,false,true,false': [0.858, 3, 7], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), interaction(J, A)', 'false,false': 'enzyme(A, H), interaction(I, A)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.275, 5, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.0, 0, 0], 'false,true,false': [0.945, 7, 6], 'false,false,false,false': [1.117, 5, 8], 'false,false,true,false': [0.576, 3, 1], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.165, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(A, E), enzyme(D, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false': 'interaction(A, F)', 'true,true': 'interaction(D, C), interaction(C, A)'}, {'false,false,true,true': [0.8, 1, 9], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'false,true': [1.012, 7, 8], 'true,true,false,true': [0.0, 0, 0], 'false,false,true,false': [0.178, 12, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true,false': 'interaction(E, C), interaction(C, E)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false,false': 'interaction(A, J)', 'true,false,false': 'interaction(A, F), recursion_proteinclass(F, B)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.842, 5, 6], 'false,false,false,false': [1.219, 13, 8], 'false,true': [0.549, 2, 3], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(D, A)', 'true,true,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, I)', 'true': 'enzyme(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'false,false,true': [0.918, 7, 6], 'true,false': [0.359, 8, 0], 'false,false,false,true': [0.907, 5, 8], 'false,true,true': [0.0, 0, 0], 'true,true,false,false': [0.189, 0, 3], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.011, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, A), interaction(I, J)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(D, A), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,false,false': 'enzyme(A, K)', 'false,true,false': 'interaction(D, G), enzyme(G, H)'}, {'false,true,true,true': [0.0, 0, 1], 'false,true,false,false': [0.527, 1, 5], 'false,false,false,true': [0.58, 8, 1], 'false,true,false,true': [0.515, 2, 2], 'true': [0.01, 0, 3], 'false,false,false,false': [0.896, 5, 7], 'false,false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,true,true,false': [0.000761, 4, 0]}]]
[{'': [1.4802973661668753e-16, 0.2483564645726808], 'false,false,true': [0.16000000000000003, 0.20999999999999988], 'false,false': [0.24888888888888885, 0.23582766439909303], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.2469135802469132], 'false,false,false': [0.24376731301939059, 0.0]}, {'': [0.0, 0.23581727592352097], 'false,false,true': [0.08889776064801502, 0.00040349147139871755], 'false,false': [0.23302043910924047, nan], 'false,true,false': [1.2688263138573217e-16, -9.25185853854297e-18], 'false,true': [0.16, 0.2100000000000001], 'false': [0.23346542667172723, 0.23302043910924047], 'false,true,true': [0.0, 0.0]}, {'': [3.700743415417188e-17, 0.16542386578183196], 'false,false,true': [0.08893851564198588, 0.0003161172613631256], 'false,false': [0.1714150935422065, nan], 'false,true,false': [-1.2688263138573217e-16, -4.625929269271485e-18], 'false,true': [0.1129552601840417, 0.1350677781101007], 'false': [0.1529236043898442, 0.1714150935422065], 'false,true,true': [0.0, 0.0]}, {'': [-3.700743415417188e-17, 0.11107762523123468], 'false,false': [0.0, 0.12389190091651582], 'false,true,false': [0.0, 0.08641315416258098], 'true': [nan, -3.700743415417188e-17], 'false,true': [0.07017037672626499, 0.08166043068363907], 'false': [0.09289118406812567, 0.12208711904729426], 'false,false,false': [0.12389190091651582, nan]}, {'': [0.0, 0.10264043739078367], 'false,false,true': [0.06969601108002953, 0.07369246010880451], 'false,false': [0.08147722005893315, 0.11967254692811816], 'true,false': [nan, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.10441000049550074], 'false,false,false': [0.060716121881002366, 0.11246769696250987]}, {'': [0.0, 0.09138409413468249], 'false,false,true': [0.015099575466985971, 0.08297731630575869], 'false,false': [0.06148017211646395, 0.09600500180867295], 'false,true,true': [nan, 0.01368269733352065], 'true': [nan, 0.0], 'false,true': [0.01368269733352065, 0.06866650859305737], 'false': [0.07554948446156577, 0.1016935094875726], 'false,false,false': [nan, 0.09600500180867295]}, {'': [0.0, 0.08108505782092], 'false,false,true': [0.06402147822620545, 0.0026273389756056678], 'false,false': [0.08944907987173233, nan], 'true,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false': [0.06824633434084865, 0.08944907987173233], 'true,true': [nan, 0.0]}, {'': [2.6261684262188223e-05, 0.06666889671326305], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.06918459545466901], 'true,false': [nan, 2.6261684262188223e-05], 'true': [nan, 2.6261684262188223e-05], 'false': [0.06034830786658942, 0.06755504131242468], 'false,false,false': [0.06440865194501916, 0.07076566826902632], 'true,false,false': [0.0, 0.0]}, {'': [0.06401065042257136, 0.05990957732858183], 'true,true,false': [nan, 0.01192163873125777], 'false,false': [0.06476932667388932, 0.06332439993128587], 'true': [0.01192163873125777, 0.016129601951166552], 'false,true': [nan, 3.89926873716843e-05], 'false': [3.89926873716843e-05, 0.0660356235688088], 'true,true': [nan, 0.01192163873125777], 'false,false,false': [0.06332439993128587, nan]}, {'': [3.1276187242863795e-05, 0.06040740359225032], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0613346896392159], 'false,true,false': [0.06633579387292035, 0.04635189661969278], 'false,true': [0.0345950917862997, 0.06684906733585691], 'false': [0.061893464563565384, 0.05911149411119351], 'false,false,false': [0.03743873233300768, 0.06693120091870321], 'false,true,true': [0.0, 1.446824412741632e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,false;interaction(A, G).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,false,false;interaction(I, A), interaction(J, I).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;false,true,true;interaction(E, A), enzyme(A, F).;true;true
1;false,true;interaction(E, D), interaction(A, E).;true;true
1;false;interaction(A, D).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;false,true,true;interaction(D, A), enzyme(A, F).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false;interaction(A, D).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), interaction(A, F).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;false;interaction(A, G), interaction(G, A).;true;true
8;;proteinclass(A, B) :- enzyme(A, C), interaction(D, A).;true;true
8;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,true;interaction(D, E), interaction(A, E).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true,true;interaction(D, A), enzyme(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.27920156667845974;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), enzyme(A, F) )
%   | | | then return 0.7620720642963899;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.16815607078159828;  // std dev = 0,081, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7753619433291542;  // std dev = 0,086, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17590850021737736;  // std dev = 0,076, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.08413085826916017;  // std dev = 0,852, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6105377627026052;  // std dev = 1,252, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.17260655893124788;  // std dev = 0,050, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.5991683803003494;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14615870786659424;  // std dev = 0,072, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6152654754713048;  // std dev = 0,125, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.15212717629891884;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.286295011020808;  // std dev = 1,543, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.7130535010618333;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14937494551498878;  // std dev = 0,045, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return -0.013033733567052558;  // std dev = 0,523, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4436024861837671;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.26797891934390655;  // std dev = 0,865, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.511252672425987;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.059370085679729935;  // std dev = 0,880, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.26199824819328893;  // std dev = 1,441, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.3855079014294631;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, E), complex(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.19322432215211469;  // std dev = 0,406, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1696444943084587;  // std dev = 0,124, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.00416166433631784;  // std dev = 0,876, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.19489543524971722;  // std dev = 1,669, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, E), complex(E, F) )
%   | | then if ( complex(D, F), phenotype(D, G) )
%   | | | then return 0.08913396518872148;  // std dev = 0,538, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.23193464814175738;  // std dev = 0,218, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(H, E), phenotype(A, I) )
%   | | | then return 0.114459185992776;  // std dev = 1,176, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.37814417548313817;  // std dev = 0,654, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return -0.13748258130745772;  // std dev = 0,029, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.10003753361457352;  // std dev = 0,476, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, F), complex(F, G) )
%   | | then if ( enzyme(E, H) )
%   | | | then return 0.0825410446326318;  // std dev = 0,519, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1986384566428864;  // std dev = 0,185, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, F), phenotype(A, J) )
%   | | | then return 0.09052318876769536;  // std dev = 1,166, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.29897656491475527;  // std dev = 0,618, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return -0.12200104072055043;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.08325292751334296;  // std dev = 0,467, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1781600999870232;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return 0.07203026935622703;  // std dev = 0,476, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.035904568238845365;  // std dev = 0,780, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.10384777154293372;  // std dev = 1,407, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( complex(A, E) )
%   | then return -0.07738334206157715;  // std dev = 0,282, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.06294776993515015;  // std dev = 0,727, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.1574433128807348;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3487768044558142;  // std dev = 0,301, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2675809829919792;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.2078302771378393;  // std dev = 0,494, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.008898867257501351;  // std dev = 0,360, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1376711167094099;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.3276155906793802;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1183672951718571;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.1452518015411879;  // std dev = 0,468, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.061739710853188905;  // std dev = 0,400, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.11346764143780652;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.03278435321004987;  // std dev = 1,037, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.14986965582285766;  // std dev = 0,628, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.788676
   AUC PR    = 0.085061
   CLL	      = -0.419326
   Precision = 0.03224 at threshold = 0.5
   Recall    = 0.655172
   F1        = 0.061456


Total learning time: 8.974 seconds
Total inference time: 25.66 seconds
AUC ROC: 0.788676


Results scoring model
   AUC ROC   = 0.9975
   AUC PR    = 0.99756
   CLL	      = -0.243051
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 1.185 seconds
Refined model CLL: -0.243051


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.788676
   AUC PR    = 0.085061
   CLL	      = -0.419326
   Precision = 0.03224 at threshold = 0.5
   Recall    = 0.655172
   F1        = 0.061456


Total learning time: 12.577 seconds
Total inference time: 25.66 seconds
AUC ROC: 0.788676
Total revision time: 12.577
Best scored revision CLL: -0.243051


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:39:47
{'CLL': -0.419326, 'AUC ROC': 0.788676, 'F1': 0.061456, 'Recall': 0.655172, 'Precision': [0.03224, 0.5], 'Inference time': 25.66, 'Learning time': 12.577, 'AUC PR': 0.085061, 'parameter_20': {'CLL': -0.303954, 'AUC ROC': 0.884518, 'F1': 0.11841, 'Recall': 0.83908, 'Precision': [0.0637, 0.5], 'Inference time': 6.168, 'Learning time': 1.578, 'AUC PR': 0.186413}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( complex(A, E) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, D) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), enzyme(A, G) )
%   | then if ( complex(F, H) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( phenotype(A, E), phenotype(C, E) )
%   | then return 0.25980606947254475;  // std dev = 0,921, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, D) )
%   | | then return 0.46196146489135037;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.75517232473028;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( complex(G, H) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.1490779674864458;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.29981436342816703;  // std dev = 1,555, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.7562594695238346;  // std dev = 0,131, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(A, D) )
%   | then return -0.18678135790737493;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.23227494457784112;  // std dev = 0,691, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then return -0.023811559905678976;  // std dev = 0,766, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.7170975367585396;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.46151469152606833;  // std dev = 0,763, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return -0.1320470562746469;  // std dev = 0,068, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.34987794756982843;  // std dev = 1,674, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5108862644321367;  // std dev = 0,194, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return -0.04009693478258864;  // std dev = 0,661, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return -0.04474932046815827;  // std dev = 0,590, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.1832181090569611;  // std dev = 1,813, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.48643132540892525;  // std dev = 0,687, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( complex(A, E) )
%   | then return 0.4415517252423665;  // std dev = 0,168, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, D) )
%   | | then return 0.0044591891928162375;  // std dev = 0,697, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2968578315832574;  // std dev = 0,661, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( phenotype(A, H), interaction(I, G) )
%   | | then return 0.08017288467124842;  // std dev = 0,655, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.1808248708581966;  // std dev = 0,131, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then return -0.010075402781463466;  // std dev = 0,510, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.13700834622923966;  // std dev = 1,467, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.4143403899330834;  // std dev = 0,199, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( complex(C, E) )
%   | then return 0.3136293874129652;  // std dev = 0,592, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.07909661415189931;  // std dev = 0,794, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( phenotype(A, H), interaction(I, G) )
%   | | then return 0.06953944629260267;  // std dev = 0,646, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.15608970085238782;  // std dev = 0,117, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return -0.12293633868829619;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.10521695215815034;  // std dev = 1,464, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.3432256161348309;  // std dev = 0,214, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.2236511865215637;  // std dev = 0,547, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(C, G) )
%   | | | then return -0.22518636769884992;  // std dev = 0,333, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.016946679245705476;  // std dev = 0,370, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, D) )
%   | | then if ( interaction(C, H), complex(D, I) )
%   | | | then return 0.3004637004107945;  // std dev = 0,840, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.023642294920336884;  // std dev = 1,039, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.49173989548721186;  // std dev = 0,190, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, J), enzyme(J, K) )
%   | then return -0.11028342945719213;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.06933557863626764;  // std dev = 0,495, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then return 0.19198503850921547;  // std dev = 0,384, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( enzyme(A, E), complex(A, F) )
%   | then return -0.13708276374127426;  // std dev = 0,031, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.09342430824074613;  // std dev = 0,940, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.27074131945662905;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -0.06386112263478223;  // std dev = 1,152, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.114419883368773;  // std dev = 0,856, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, D), phenotype(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.17650056888894528;  // std dev = 0,501, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(C, E) )
%   | | | then return -0.09986065794981162;  // std dev = 0,039, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.32166339344546396;  // std dev = 0,157, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, D), phenotype(A, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.0918233624274515;  // std dev = 0,949, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.09190863731572302;  // std dev = 0,770, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.11435155374963898;  // std dev = 0,263, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3332051018793035;  // std dev = 0,234, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, L), enzyme(L, M) )
%   | then return -0.11265720957899275;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.05046528881809559;  // std dev = 0,454, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( phenotype(A, E), enzyme(C, F) )
%   | | then return -0.2522382451337984;  // std dev = 0,234, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(C, G), phenotype(D, H) )
%   | | | then return 0.11766999654267837;  // std dev = 0,399, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.08839357120176838;  // std dev = 0,386, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(I, D) )
%   | | then if ( interaction(C, I), complex(D, J) )
%   | | | then return 0.19637476687494637;  // std dev = 0,790, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.005931201958411694;  // std dev = 0,929, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.3126402369523722;  // std dev = 0,174, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return -0.10187832155313556;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.0427451737683052;  // std dev = 0,453, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.511306
   AUC PR    = 0.007683
   CLL	      = -0.992319
   Precision = 0.007588 at threshold = 0.5
   Recall    = 0.632184
   F1        = 0.014997


Total learning time: 6.48 seconds
Total inference time: 5.077 seconds
AUC ROC: 0.511306


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:39:59
{'CLL': -0.992319, 'AUC ROC': 0.511306, 'F1': 0.014997, 'Recall': 0.632184, 'Precision': [0.007588, 0.5], 'Inference time': 5.077, 'Learning time': 6.48, 'AUC PR': 0.007683}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( interaction(G, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.39148226843284567;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.8581489350995121;  // std dev = 4,21e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.561793
   AUC PR    = 0.009473
   CLL	      = -0.23221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.354 seconds
Total inference time: 1.765 seconds
AUC ROC: 0.561793


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:40:03
{'CLL': -0.23221, 'AUC ROC': 0.561793, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.765, 'Learning time': 1.354, 'AUC PR': 0.009473}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.47353355048412765;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.29814893509951235;  // std dev = 2,482, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), enzyme(A, F) )
%   | | | then return 0.8509220325135542;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1490779674864458;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7902555434157746;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.20974445658422552;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.733359856642958;  // std dev = 0,958, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.1745889439486882;  // std dev = 0,075, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.709081855025065;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1311385780460788;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6309305385249947;  // std dev = 3,65e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.17708677280217758;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5961744513737618;  // std dev = 0,959, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.15089301032049376;  // std dev = 0,066, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.01554309384501793;  // std dev = 0,592, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4763377803248183;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21422350489447842;  // std dev = 1,074, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.40427513694147077;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.13061901794972408;  // std dev = 1,805, 27,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.31174832200042657;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.0134804206854481;  // std dev = 0,590, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.18552182491104668;  // std dev = 1,051, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return -0.10719859435900066;  // std dev = 0,734, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.21472610349304197;  // std dev = 1,403, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.42876057075396795;  // std dev = 0,155, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.06954314410557264;  // std dev = 1,100, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return -0.20566927072035074;  // std dev = 0,288, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.051007078879131494;  // std dev = 0,563, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17560696467879286;  // std dev = 1,356, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, C), interaction(C, A) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, E), enzyme(D, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then return 0.08751702394017442;  // std dev = 1,157, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.34361369575924644;  // std dev = 0,818, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.1684004459017437;  // std dev = 0,189, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, C), interaction(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16480154669888025;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.08583132128779938;  // std dev = 0,536, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07347997392223073;  // std dev = 1,016, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.040006245997844976;  // std dev = 1,363, 27,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3410112322116334;  // std dev = 0,170, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.15501148297724893;  // std dev = 0,378, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.15680677388469086;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 0.026847524792155474;  // std dev = 1,068, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.09744766074504864;  // std dev = 1,091, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13638326500532783;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.3121050118061892;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15026060163509483;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), enzyme(G, H) )
%   | | | then return -0.010883915556597082;  // std dev = 0,510, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1275974805989979;  // std dev = 0,818, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1317954127167884;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.08418203805707916;  // std dev = 0,580, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.07630442705277998;  // std dev = 1,079, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */


Results
   AUC ROC   = 0.881941
   AUC PR    = 0.216814
   CLL	      = -0.287651
   Precision = 0.060631 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.113091


Total learning time: 1.665 seconds
Total inference time: 6.032 seconds
AUC ROC: 0.881941


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.255785
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.834 seconds
Parameter learned model CLL: -0.255785


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false': 'interaction(A, G)', 'false,true,false': 'interaction(A, F)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.894, 4, 1], 'false,false,false,true': [2.482, 14, 11], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [0.0, 0, 4], 'false,false,false,false': [0.0, 2, 0], 'false,false,true,false': [1.754, 5, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(E, A), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 1], 'false,true,false,false': [5.27e-09, 5, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 8], 'true': [0.0, 0, 4], 'false,false,true,false': [0.075, 15, 0], 'false,false,true,true': [0.958, 1, 12], 'false,true,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(D, A), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 5, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [3.65e-08, 0, 8], 'true': [0.0, 0, 4], 'false,false,true,false': [0.066, 15, 0], 'false,false,true,true': [0.959, 1, 12], 'false,true,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A)'}, {'false,true,false,false': [1.074, 5, 7], 'false,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 4], 'false,false,false,true': [1.805, 16, 11], 'false,true,true': [0.592, 4, 1], 'false,true,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'enzyme(A, D)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'enzyme(A, J), interaction(K, A)'}, {'false,false,true,true': [0.59, 4, 1], 'false,false,false,true': [0.734, 8, 1], 'false,true,false': [0.0, 0, 1], 'false,false,false,false': [1.403, 8, 10], 'false,false,true,false': [1.051, 5, 8], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), interaction(J, A)', 'false,false': 'enzyme(A, H), interaction(I, A)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.288, 5, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.0, 0, 0], 'false,true,false': [1.1, 9, 7], 'false,false,false,false': [1.356, 8, 11], 'false,false,true,false': [0.563, 3, 1], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.155, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(A, E), enzyme(D, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false': 'interaction(A, F)', 'true,true': 'interaction(D, C), interaction(C, A)'}, {'false,false,true,true': [0.818, 1, 12], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 1], 'false,true': [1.157, 9, 9], 'true,true,false,true': [0.0, 0, 0], 'false,false,true,false': [0.189, 15, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true,false': 'interaction(E, C), interaction(C, E)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false,false': 'interaction(A, J)', 'true,false,false': 'interaction(A, F), recursion_proteinclass(F, B)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [1.016, 7, 7], 'false,false,false,false': [1.363, 16, 11], 'false,true': [0.536, 2, 3], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(D, A)', 'true,true,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, I)', 'true': 'enzyme(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'false,false,true': [1.068, 9, 7], 'true,false': [0.378, 8, 0], 'false,false,false,true': [1.091, 8, 11], 'false,true,true': [0.0, 0, 1], 'true,true,false,false': [0.17, 0, 3], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.01, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, A), interaction(I, J)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(D, A), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,false,false': 'enzyme(A, K)', 'false,true,false': 'interaction(D, G), enzyme(G, H)'}, {'false,true,true,true': [0.0, 0, 1], 'false,true,false,false': [0.818, 3, 6], 'false,false,false,true': [0.58, 8, 1], 'false,true,false,true': [0.51, 2, 2], 'true': [0.009, 0, 4], 'false,false,false,false': [1.079, 8, 10], 'false,false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,true,true,false': [0.001, 4, 0]}]]
[{'': [0.0, 0.24810964083175777], 'false,false,true': [0.16000000000000003, 0.23668639053254437], 'false,false': [0.25, 0.2414266117969817], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.24691358024691318], 'false,false,false': [0.24639999999999954, 0.0]}, {'': [0.0, 0.2398811839035312], 'false,false,true': [0.07052888995773426, 0.00037156350080668567], 'false,false': [0.23798587039749566, nan], 'false,true,false': [-2.220446049250313e-16, 5.551115123125783e-18], 'false,true': [0.16, 0.23668639053254437], 'false': [0.24062727492958094, 0.23798587039749566], 'false,true,true': [0.0, 0.0]}, {'': [0.0, 0.16730561080498318], 'false,false,true': [0.07067591599824219, 0.00028956260026573956], 'false,false': [0.17178451430908157, nan], 'false,true,false': [1.6653345369377348e-16, -5.551115123125783e-18], 'false,true': [0.1129552601840417, 0.1545306450661285], 'false': [0.1590774669552489, 0.17178451430908157], 'false,true,true': [0.0, 0.0]}, {'': [0.0, 0.11052521328041523], 'false,false': [0.0, 0.12068246264220367], 'false,true,false': [0.0, 0.09618545073812086], 'true': [nan, 0.0], 'false,true': [0.07017037672626499, 0.09366495287431552], 'false': [0.09674670075597984, 0.11895141439664522], 'false,false,false': [0.12068246264220367, nan]}, {'': [0.0, 0.10290977157965918], 'false,false,true': [0.06969601108002953, 0.08494123298675633], 'false,false': [0.08664436859882149, 0.11585875474222036], 'true,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.10439355537096554], 'false,false,false': [0.05989439849792991, 0.10929576250198919]}, {'': [0.0, 0.09317166392157396], 'false,false,true': [0.016534779320658805, 0.07912511969801689], 'false,false': [0.060620053672007006, 0.09670560809063682], 'false,true,true': [nan, 0.011962050577795647], 'true': [0.0, 0.0], 'false,true': [0.011962050577795647, 0.07558134305912115], 'false': [0.0812569436088895, 0.10067873713126883], 'false,false,false': [nan, 0.09670560809063682]}, {'': [0.0, 0.08419605012220664], 'false,false,true': [0.05146721529583835, 0.0023826576884359444], 'false,false': [0.09037715107486252, nan], 'true,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false': [0.07437945476652486, 0.09037715107486252], 'true,true': [0.0, 0.0]}, {'': [3.359240471851229e-05, 0.0682569957170252], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0707680028833542], 'true,false': [nan, 3.779145530832459e-05], 'true': [0.0, 3.779145530832459e-05], 'false': [0.057353986486042674, 0.06945006285042285], 'false,false,false': [0.07371874183863161, 0.06885538359279764], 'true,false,false': [0.0, 0.0]}, {'': [0.06441834188134375, 0.06165122406857991], 'true,true,false': [nan, 0.009584281744726586], 'false,false': [0.07131777072996295, 0.06265429717835744], 'true': [0.009584281744726586, 0.017879696073479452], 'false,true': [0.0, 3.3014569449837015e-05], 'false': [2.7856042973301715e-05, 0.06785168204746393], 'true,true': [nan, 0.009584281744726586], 'false,false,false': [0.06265429717835744, nan]}, {'': [2.174685226297504e-05, 0.06297378608892465], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.061262688739817016], 'false,true,false': [0.0651168714320309, 0.07435931745435582], 'false,true': [0.03420548835142371, 0.07560055000916294], 'false': [0.06819146218394709, 0.05948380112041488], 'false,false,false': [0.03733662816303436, 0.064640417200389], 'false,true,true': [0.0, 4.683406926546396e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,false;interaction(A, G).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,false,false;interaction(I, A), interaction(J, I).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;false,true,true;interaction(E, A), enzyme(A, F).;true;true
1;false,true;interaction(E, D), interaction(A, E).;true;true
1;false;interaction(A, D).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;false,true,true;interaction(D, A), enzyme(A, F).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false;interaction(A, D).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), interaction(A, F).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(E, C), interaction(A, E).;true;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
6;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
6;false;interaction(A, F).;true;true
6;true,true;interaction(D, C), interaction(C, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(A, G), interaction(G, A).;true;true
7;true,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- enzyme(A, C), interaction(D, A).;true;true
8;false,true;interaction(H, G), interaction(A, H).;true;true
8;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,true;interaction(D, E), interaction(A, E).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true,true;interaction(D, A), enzyme(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.08037115732173443;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.29814893509951235;  // std dev = 2,482, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), enzyme(A, F) )
%   | | | then return 0.7620720642963899;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.17342121685620243;  // std dev = 0,074, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7835743039121925;  // std dev = 0,105, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1691207689330419;  // std dev = 0,077, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.08202663562712095;  // std dev = 0,851, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5965377521455294;  // std dev = 1,524, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return -0.17647910954177654;  // std dev = 0,054, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.5991683803003494;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15015341803722482;  // std dev = 0,067, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6250705855173675;  // std dev = 0,152, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.14683598727231825;  // std dev = 0,069, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.07030228887101192;  // std dev = 0,850, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4887144825040445;  // std dev = 1,522, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return -0.15231783208306446;  // std dev = 0,047, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return -0.015526110779785362;  // std dev = 0,525, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4391600606336532;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22521335463273107;  // std dev = 1,053, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.46421101662939035;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.03843374875990724;  // std dev = 1,697, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.4240019026309186;  // std dev = 0,924, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.35260408271187804;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then return -0.03933982664086153;  // std dev = 0,465, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.09128725398384271;  // std dev = 1,909, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.28462031927139253;  // std dev = 1,121, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(F, G), interaction(F, A) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.21009058480557496;  // std dev = 0,498, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11805043169438978;  // std dev = 0,587, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( phenotype(A, J), interaction(K, F) )
%   | | | then return 0.06769032478106307;  // std dev = 1,476, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.3408404554343834;  // std dev = 0,851, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(A, L), enzyme(L, M) )
%   | | then return -0.11594013080165928;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.118552389717314;  // std dev = 0,666, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.04497059877718707;  // std dev = 0,547, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.32360460385883727;  // std dev = 0,064, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.11248174145241845;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.12297642266826372;  // std dev = 0,597, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.13724908552971332;  // std dev = 1,595, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.38177424374863994;  // std dev = 0,121, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return -0.1395566178391876;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.17559707041549968;  // std dev = 0,060, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19180784068941836;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return 0.06446552474586968;  // std dev = 0,559, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.06934603767421904;  // std dev = 1,837, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return -0.008101518540980387;  // std dev = 0,680, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( complex(A, E) )
%   | then return -0.12251415648863588;  // std dev = 0,397, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.03040678866694069;  // std dev = 0,734, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.15779471151763383;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.0419573321054408;  // std dev = 0,336, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 4.2863954216234483E-4;  // std dev = 1,079, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.17139990332837407;  // std dev = 1,303, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13696031249368382;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.3491308603545763;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12654751287356464;  // std dev = 0,144, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.06070399986675368;  // std dev = 0,692, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.20020639011124355;  // std dev = 0,375, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1416669208173541;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.0363733215335599;  // std dev = 1,521, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.15998041099026317;  // std dev = 0,707, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */


Results
   AUC ROC   = 0.770499
   AUC PR    = 0.07712
   CLL	      = -0.460979
   Precision = 0.026852 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.051624


Total learning time: 11.995 seconds
Total inference time: 38.402 seconds
AUC ROC: 0.770499


Results scoring model
   AUC ROC   = 0.9856
   AUC PR    = 0.985732
   CLL	      = -0.298716
   Precision = 0.92 at threshold = 0.5
   Recall    = 0.92
   F1        = 0.92


Total scoring time: 1.491 seconds
Refined model CLL: -0.298716


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.881941
   AUC PR    = 0.216814
   CLL	      = -0.287651
   Precision = 0.060631 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.113091


Total learning time: 15.985 seconds
Total inference time: 6.032 seconds
AUC ROC: 0.881941
Total revision time: 15.985
Best scored revision CLL: -0.255785


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:41:04
{'CLL': -0.287651, 'AUC ROC': 0.881941, 'F1': 0.113091, 'Recall': 0.83908, 'parameter_25': {'CLL': -0.287651, 'AUC ROC': 0.881941, 'F1': 0.113091, 'Recall': 0.83908, 'Precision': [0.060631, 0.5], 'Inference time': 6.032, 'Learning time': 1.665, 'AUC PR': 0.216814}, 'Precision': [0.060631, 0.5], 'Inference time': 6.032, 'Learning time': 15.985, 'AUC PR': 0.216814}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, F), complex(A, G) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3581489350995123;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(E, E) )
%   | | then return -0.191258864214365;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5528777613134583;  // std dev = 0,787, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1418981949498848;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.02176788419240575;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.18648977243373657;  // std dev = 1,725, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.5475826703387998;  // std dev = 1,710, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(E, E) )
%   | | then return -0.1634047773903601;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.45345507775748484;  // std dev = 0,760, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1255810648927358;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then return 0.4116151143850317;  // std dev = 1,164, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.2642809955802962;  // std dev = 2,297, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.11943547719598675;  // std dev = 0,929, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( phenotype(A, E), phenotype(C, E) )
%   | then return -0.17433271061703656;  // std dev = 0,135, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.35371019941362675;  // std dev = 0,621, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 3.0038656581764245E-4;  // std dev = 0,542, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then if ( interaction(I, A), complex(I, J) )
%   | | then return 0.5426043977292004;  // std dev = 0,306, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.16743888631848858;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.6591799112309183;  // std dev = 0,282, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.27445470548847406;  // std dev = 0,028, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.2336605828414148;  // std dev = 1,527, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.601725661860347;  // std dev = 0,218, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(C, C) )
%   | then return -0.13564097722822577;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.31919816439483173;  // std dev = 0,656, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.12181627517854088;  // std dev = 0,097, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return -0.015089177863070846;  // std dev = 0,628, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.006188819752985672;  // std dev = 0,763, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.11671436102329037;  // std dev = 1,342, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.3364743785680839;  // std dev = 1,477, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( complex(D, E) )
%   | then if ( interaction(C, A), phenotype(C, F) )
%   | | then return 0.10024076651966654;  // std dev = 0,784, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.44656670103666624;  // std dev = 0,142, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.21360018095528602;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( location(A, I), location(G, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.08340617080504573;  // std dev = 1,273, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.20716423419057292;  // std dev = 0,343, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.1467848480857355;  // std dev = 0,775, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then return 0.43628453392643785;  // std dev = 0,137, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.14092737920291512;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.14877420194904376;  // std dev = 0,553, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(C, A) )
%   | | then return 0.10033770281577359;  // std dev = 0,792, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.3711092200136283;  // std dev = 0,317, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(G, D), recursion_proteinclass(G, B) )
%   | | then return 0.19999521127834102;  // std dev = 0,408, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.14215869532890024;  // std dev = 0,069, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(H, A), complex(H, I) )
%   | then if ( phenotype(H, J), phenotype(A, J) )
%   | | then return -0.1766511595274025;  // std dev = 0,202, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( location(A, K), location(H, K) )
%   | | | then return -0.01644918988872938;  // std dev = 1,352, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.1145728767415549;  // std dev = 0,767, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, L) )
%   | | then return 0.008973916447991578;  // std dev = 0,410, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.24443491101306872;  // std dev = 0,507, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A) )
%   | then if ( complex(E, D), phenotype(C, F) )
%   | | then return 0.03395322349260891;  // std dev = 0,398, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.31128364368860195;  // std dev = 0,257, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.012706435432910935;  // std dev = 0,379, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( enzyme(A, G) )
%   | then if ( phenotype(A, H), complex(A, I) )
%   | | then return -0.15719860566538854;  // std dev = 0,168, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(J, G), complex(J, K) )
%   | | | then return 0.08853882032503828;  // std dev = 0,472, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.13950425092678845;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, L), interaction(M, A) )
%   | | then return -0.053332036877051625;  // std dev = 0,719, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.02127955999539554;  // std dev = 1,563, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.29810433255639895;  // std dev = 0,145, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( enzyme(C, E) )
%   | then return 0.009216414596127865;  // std dev = 0,360, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.20945820852463107;  // std dev = 0,175, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return -0.13422016055665298;  // std dev = 0,567, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, G) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.11084868265517785;  // std dev = 0,166, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.0056749281960289015;  // std dev = 0,384, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.023038692257900936;  // std dev = 1,478, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.16264095854523564;  // std dev = 0,924, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15526977869327693;  // std dev = 0,078, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then return 0.1931648633266764;  // std dev = 0,346, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, F), enzyme(A, G) )
%   | | then return -0.11894237708639199;  // std dev = 0,146, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.040581632844886376;  // std dev = 1,866, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return -0.028320859037186463;  // std dev = 0,421, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.647328
   AUC PR    = 0.024113
   CLL	      = -0.729993
   Precision = 0.011846 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.023292


Total learning time: 6.371 seconds
Total inference time: 5.196 seconds
AUC ROC: 0.647328


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:41:16
{'CLL': -0.729993, 'AUC ROC': 0.647328, 'F1': 0.023292, 'Recall': 0.689655, 'Precision': [0.011846, 0.5], 'Inference time': 5.196, 'Learning time': 6.371, 'AUC PR': 0.024113}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, F), complex(A, G) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.21814893509951236;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.4945125714631487;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */


Results
   AUC ROC   = 0.567377
   AUC PR    = 0.009719
   CLL	      = -0.226701
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.296 seconds
Total inference time: 1.584 seconds
AUC ROC: 0.567377


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:41:19
{'CLL': -0.226701, 'AUC ROC': 0.567377, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.584, 'Learning time': 1.296, 'AUC PR': 0.009719}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.808741135785635;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.191258864214365;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6531942943559135;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1634047773903601;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17635161013528777;  // std dev = 0,901, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.14293296759209528;  // std dev = 0,871, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09280908092927403;  // std dev = 0,872, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D), interaction(A, C) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then return 0.07561385115787954;  // std dev = 0,859, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.061426601957513566;  // std dev = 0,849, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.0497960648738065;  // std dev = 0,843, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10965654904122862;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return -0.23190519389067396;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.23362345054498918;  // std dev = 0,520, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.705464
   AUC PR    = 0.090441
   CLL	      = -0.230256
   Precision = 0.09488 at threshold = 0.5
   Recall    = 0.605769
   F1        = 0.164063


Total learning time: 1.253 seconds
Total inference time: 5.991 seconds
AUC ROC: 0.705464


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.261897
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.722 seconds
Parameter learned model CLL: -0.261897


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, E), interaction(F, A)', 'false,false': 'interaction(E, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.414, 4, 4], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 4], 'true': [0.0, 0, 1], 'false,true,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 4], 'true': [0.0, 0, 1], 'false,true,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(G, F), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true': 'interaction(A, E), interaction(E, C)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.901, 4, 4], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false,false': 'interaction(F, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,true': 'interaction(G, F), interaction(G, A)'}, {'false,false,true,true': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.871, 4, 4], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.872, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'true,true': 'interaction(C, D), interaction(A, C)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.859, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(E, A), interaction(A, E)', 'false,false,false': 'interaction(G, A)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.849, 5, 4], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(A, D)', 'true': 'enzyme(E, C), recursion_proteinclass(E, B)', 'false,false': 'interaction(G, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'true,true': 'recursion_proteinclass(D, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.843, 5, 4], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true,false': 'interaction(G, D), enzyme(G, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.52, 1, 4], 'false,false': [0.0, 0, 0], 'false,true,false,true': [5.27e-09, 3, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.0, 1, 0]}]]
[{'': [0.0, 0.2469135802469134], 'false,false,true': [0.0, 0.25], 'false,false': [0.2469135802469134, nan], 'false': [nan, 0.2469135802469134]}, {'': [0.0, 0.2408412134930045], 'false,true': [0.0, 0.24999999999999994], 'false': [0.2408412134930045, nan], 'false,true,false': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.0, 0.16078779210998556], 'false,true': [0.0, 0.1667085109942189], 'false': [0.16078779210998556, nan], 'false,true,false': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.0, 0.09787320726798684], 'false,true,false': [nan, 0.10152346293862521], 'true': [0.0, nan], 'false,true': [0.0, 0.10152346293862521], 'false': [0.09787320726798684, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.08987006245734751], 'false,false,true': [0.0, 0.09493506645812307], 'false,false': [0.08987006245734751, nan], 'false': [nan, 0.08987006245734751], 'true': [0.0, nan]}, {'': [0.0, 0.08444333485798852], 'false,true': [nan, 0.0844433348579885], 'false': [0.08444333485798852, nan], 'true': [0.0, nan]}, {'': [0.0, 0.08192449801532296], 'true': [0.0, nan], 'false': [0.08192449801532296, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.08016351072130062], 'true': [0.0, nan], 'false,false': [nan, 0.08016351072130062], 'false': [nan, 0.08016351072130062], 'false,false,false': [0.08016351072130062, nan]}, {'': [0.0, 0.07892943603360537], 'true': [0.0, nan], 'false,false': [0.07892943603360535, nan], 'false': [nan, 0.07892943603360535], 'true,true': [0.0, nan]}, {'': [0.0, 0.07805998891756089], 'false,true': [0.0, 0.08465504640238519], 'false': [0.07805998891756089, nan], 'false,true,false': [9.25185853854297e-18, 0.05417922969752652], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(F, E), interaction(F, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false;interaction(D, E), interaction(E, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false;interaction(E, D), interaction(E, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(G, F), interaction(G, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(G, F), interaction(G, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- enzyme(A, C), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(G, D), enzyme(G, H).;true;true
9;false;interaction(E, D), interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(E, A) )
%   | then return 0.02176788419240575;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.4538748215122141;  // std dev = 0,736, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.007020147628228146;  // std dev = 0,629, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then return -0.002571159450377299;  // std dev = 0,866, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.4806216187988473;  // std dev = 0,094, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.3076605962717169;  // std dev = 0,708, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.029626765492808092;  // std dev = 0,522, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then return -0.01851120316786674;  // std dev = 0,828, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.32498902694186055;  // std dev = 0,147, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then return -0.015799901698768302;  // std dev = 0,829, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.260036934735199;  // std dev = 0,131, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, D) )
%   | then return 0.20199357495923553;  // std dev = 0,711, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.04915990887980839;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then return -0.023334060338232696;  // std dev = 0,802, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.20041606911769283;  // std dev = 0,145, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.15951819965097797;  // std dev = 0,712, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.048676921432507306;  // std dev = 0,364, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.603348
   AUC PR    = 0.020731
   CLL	      = -0.297033
   Precision = 0.023965 at threshold = 0.5
   Recall    = 0.211538
   F1        = 0.043053


Total learning time: 9.305 seconds
Total inference time: 73.494 seconds
AUC ROC: 0.603348


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.983333
   CLL	      = -0.271858
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 1.289 seconds
Refined model CLL: -0.271858


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.705464
   AUC PR    = 0.090441
   CLL	      = -0.230256
   Precision = 0.09488 at threshold = 0.5
   Recall    = 0.605769
   F1        = 0.164063


Total learning time: 12.568999999999999 seconds
Total inference time: 5.991 seconds
AUC ROC: 0.705464
Total revision time: 12.568999999999999
Best scored revision CLL: -0.261897


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:42:51
{'CLL': -0.230256, 'AUC ROC': 0.705464, 'F1': 0.164063, 'Recall': 0.605769, 'Precision': [0.09488, 0.5], 'parameter_5': {'CLL': -0.230256, 'AUC ROC': 0.705464, 'F1': 0.164063, 'Recall': 0.605769, 'Precision': [0.09488, 0.5], 'Inference time': 5.991, 'Learning time': 1.253, 'AUC PR': 0.090441}, 'Inference time': 5.991, 'Learning time': 12.568999999999999, 'AUC PR': 0.090441}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.5753520130088217;  // std dev = 0,786, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.024953687240215138;  // std dev = 0,781, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E) )
%   | then return 0.3777050504490293;  // std dev = 0,711, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.15182101254430194;  // std dev = 0,082, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6318783383858603;  // std dev = 0,101, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(D, E) )
%   | then return -0.15191854708599958;  // std dev = 0,138, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.32073149626190983;  // std dev = 0,635, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.4796199742686795;  // std dev = 0,112, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E) )
%   | then return 0.25283611963105634;  // std dev = 0,606, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.1367484632876509;  // std dev = 0,135, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.36510884692792844;  // std dev = 0,106, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(D, E) )
%   | then return -0.13774745978477715;  // std dev = 0,178, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.21555385118766868;  // std dev = 0,544, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.2864386940765062;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.18069036012001605;  // std dev = 0,531, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.03936122087855989;  // std dev = 0,415, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(D, E) )
%   | then return -0.1302305246752408;  // std dev = 0,197, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.14207829111601886;  // std dev = 0,493, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.21698326028156667;  // std dev = 0,112, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E) )
%   | then return 0.11686227298965866;  // std dev = 0,479, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.12108844853629933;  // std dev = 0,194, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.1831352445793616;  // std dev = 0,099, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(D, E) )
%   | then return -0.117995301427527;  // std dev = 0,207, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.10350903014626305;  // std dev = 0,451, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.15781700479598848;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.500039
   AUC PR    = 0.006333
   CLL	      = -0.312874
   Precision = 0.006337 at threshold = 0.5
   Recall    = 0.096154
   F1        = 0.011891


Total learning time: 2.478 seconds
Total inference time: 3.175 seconds
AUC ROC: 0.500039


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:42:57
{'CLL': -0.312874, 'AUC ROC': 0.500039, 'F1': 0.011891, 'Recall': 0.096154, 'Precision': [0.006337, 0.5], 'Inference time': 3.175, 'Learning time': 2.478, 'AUC PR': 0.006333}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.500038
   AUC PR    = 0.006333
   CLL	      = -0.164481
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.099 seconds
Total inference time: 1.887 seconds
AUC ROC: 0.500038


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:43:01
{'CLL': -0.164481, 'AUC ROC': 0.500038, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.887, 'Learning time': 1.099, 'AUC PR': 0.006333}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.24276431971489684;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return -0.191258864214365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.536424204891965;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.825956333183788;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.174043666816212;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return -0.1634047773903601;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.43404528964699896;  // std dev = 0,839, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6750859536886815;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15042401037026362;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.2395404267705707;  // std dev = 0,939, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11635973115953473;  // std dev = 1,134, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.4333591488153806;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.12475623211433429;  // std dev = 0,886, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09660276550014658;  // std dev = 1,107, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09748118963538786;  // std dev = 1,421, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D), interaction(A, C) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then return 0.07870325122789047;  // std dev = 1,404, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.23537530620439362;  // std dev = 0,082, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.2216574403340141;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.06671875460191012;  // std dev = 1,343, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14535346855176212;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.40139107618895975;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.185776426327725;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.04382312585902255;  // std dev = 1,302, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.12821067916513496;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return -0.1592970788561913;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.15121524270107822;  // std dev = 0,823, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return -0.20068565075344946;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.11896545304737306;  // std dev = 0,861, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.846251
   AUC PR    = 0.137661
   CLL	      = -0.493324
   Precision = 0.011686 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.023047


Total learning time: 1.392 seconds
Total inference time: 6.704 seconds
AUC ROC: 0.846251


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.990191
   CLL	      = -0.32376
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.766 seconds
Parameter learned model CLL: -0.32376


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false': 'interaction(G, A)', 'false,true,true': 'interaction(F, A), interaction(A, F)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [1.0, 2, 2], 'false,false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1], 'false,false,true,false': [1.754, 8, 5], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 1, 0], 'false,true,false,false': [7.45e-09, 8, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 5], 'true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,true,true,false': [0.843, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 8, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 5], 'true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,true,true,false': [0.839, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(G, F), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true': 'interaction(A, E), interaction(E, C)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false,false': [1.134, 8, 5], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,true,true': [0.939, 2, 3], 'false,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false': 'interaction(G, A)', 'true': 'enzyme(A, D)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, I), interaction(A, J)'}, {'false,false,true,true': [0.886, 2, 2], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1], 'false,false,true,false': [1.107, 8, 5], 'true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'enzyme(A, G), interaction(A, H)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'enzyme(A, I)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'false,true,false': [1.421, 10, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'true,true': 'interaction(C, D), interaction(A, C)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,true': [1.404, 10, 8], 'false,false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(E, A), interaction(A, E)', 'false,false,false': 'interaction(G, A)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.343, 9, 7], 'false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 1], 'true,true': [0.082, 0, 2]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(A, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'true': 'enzyme(E, C), recursion_proteinclass(E, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,false,true': [1.302, 9, 7], 'true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'enzyme(A, J)', 'false,true,false': 'interaction(G, D), enzyme(G, H)'}, {'false,true,true,true': [0.0, 1, 0], 'false,true,false,false': [0.861, 4, 5], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 4, 0], 'true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1], 'false,true,true,false': [0.823, 1, 3]}]]
[{'': [0.0, 0.2493074792243767], 'false,false,true': [0.25, 0.23668639053254437], 'false,false': [0.24221453287197234, 0.0], 'false,true,true': [nan, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.2469135802469136], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.2383539805659808], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,false': [0.0, 6.938893903907228e-18], 'false,true': [0.2269921604636039, 0.23668639053254437], 'false': [0.2405163819331127, 0.0], 'false,true,true': [0.0, 0.17783567076670337]}, {'': [0.0, 0.17255699136558633], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.0, 0.17584597306128572], 'false,true': [0.19778823166549978, 0.16129389367114813], 'false': [0.17579443701825212, 0.0], 'false,true,false': [-8.881784197001253e-17, -1.0408340855860843e-17]}, {'': [0.0, 0.12049540816384978], 'false,false': [nan, 0.0], 'false,true,false': [nan, 0.09884581057119576], 'true': [0.0, nan], 'false,true': [0.17642380111467673, 0.09884581057119576], 'false': [0.12343931549108006, 0.0], 'true,true': [0.0, nan], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.11337412389238329], 'false,false,true': [0.1964346129729784, 0.09426477126993162], 'false,false': [0.11844735035398617, 0.0], 'true': [0.0, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.1143487116952079], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.10745960053209858], 'false,false': [nan, 0.0], 'true': [0.0, nan], 'false,true': [nan, 0.11212081685651815], 'false': [0.11212081685651813, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.10460581588397626], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'true': [0.0, nan], 'false': [0.10951328838183755, 0.0], 'true,true': [0.0, nan]}, {'': [0.0033964195154143617, 0.10539458074941072], 'true': [0.0033964195154143617, nan], 'false,false': [nan, 0.10676383257328469], 'false': [0.0, 0.10676383257328469], 'false,false,false': [0.11271991056903127, 0.0]}, {'': [0.05777421553546231, 0.1003473990009254], 'true,true,false': [nan, 0.0], 'false,false': [0.1059212452084519, 0.0], 'true': [0.016388814131144888, 0.0], 'false': [nan, 0.10034739900092536], 'true,true': [0.0, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.09491573664460329], 'false,false': [nan, 0.0], 'false,true,true': [0.0, 0.1692489167506635], 'false,true': [0.1508259976947524, 0.07876057564660223], 'false': [0.09972013642150639, 0.0], 'false,false,false': [nan, 0.0], 'false,true,false': [0.0, 0.08232625188441661]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false;interaction(G, A).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(D, E), interaction(E, A).;true;true
1;false;interaction(D, A).;true;true
1;false,true,true;interaction(A, E), enzyme(A, F).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false;interaction(D, A).;true;true
2;false,true,true;interaction(A, D), enzyme(A, F).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(F, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false,false;interaction(G, A).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(G, A).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
8;;proteinclass(A, B) :- enzyme(A, C), interaction(A, D).;true;true
8;true;enzyme(E, C), recursion_proteinclass(E, B).;true;true
8;false;interaction(H, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,true;interaction(E, D), interaction(E, A).;true;true
9;false;interaction(D, A).;true;true
9;false,true,true;interaction(A, D), enzyme(A, F).;true;true
9;false,true,false;interaction(G, D), enzyme(G, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.10814893509951223;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return -0.1555325621642444;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5632189314295553;  // std dev = 0,836, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7753089552646347;  // std dev = 0,077, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16633857506598204;  // std dev = 0,081, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return -0.13618038191976814;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4650755688409466;  // std dev = 0,830, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6153659359932705;  // std dev = 0,111, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14464867083246824;  // std dev = 0,073, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2675279536209756;  // std dev = 0,934, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.032200832465425676;  // std dev = 0,649, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.3125773870338052;  // std dev = 0,561, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.41241970203080935;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.03453231895462733;  // std dev = 1,148, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.24212415474619112;  // std dev = 0,542, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( enzyme(A, G), complex(F, H) )
%   | | | then return -0.22888119173160945;  // std dev = 0,224, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13553272467838867;  // std dev = 1,013, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.18953082267737376;  // std dev = 0,535, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.3311667192216431;  // std dev = 0,252, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12487882522388993;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.23081208631664152;  // std dev = 0,491, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09048399754716019;  // std dev = 0,729, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20136873268624794;  // std dev = 0,034, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return -0.11911172058158905;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.13130064682330253;  // std dev = 0,689, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.01004105344862249;  // std dev = 0,845, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14962911725977623;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18915294050558462;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10716992232508048;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.26530837345040004;  // std dev = 0,238, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1154309182972009;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.17888898435323464;  // std dev = 0,468, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0795723052338787;  // std dev = 0,716, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1315706776505685;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return -0.09733871602096358;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1661221268849993;  // std dev = 0,635, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return -0.10769016281766629;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.055998196584830975;  // std dev = 0,729, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.88016
   AUC PR    = 0.053169
   CLL	      = -0.482327
   Precision = 0.026685 at threshold = 0.5
   Recall    = 0.913462
   F1        = 0.051856


Total learning time: 2.498 seconds
Total inference time: 9.284 seconds
AUC ROC: 0.88016


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.233129
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.799 seconds
Refined model CLL: -0.233129


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.88016
   AUC PR    = 0.053169
   CLL	      = -0.482327
   Precision = 0.026685 at threshold = 0.5
   Recall    = 0.913462
   F1        = 0.051856


Total learning time: 5.455000000000001 seconds
Total inference time: 9.284 seconds
AUC ROC: 0.88016
Total revision time: 5.455000000000001
Best scored revision CLL: -0.233129


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:43:23
{'CLL': -0.482327, 'AUC ROC': 0.88016, 'F1': 0.051856, 'Recall': 0.913462, 'Precision': [0.026685, 0.5], 'Inference time': 9.284, 'Learning time': 5.455000000000001, 'AUC PR': 0.053169, 'parameter_10': {'CLL': -0.493324, 'AUC ROC': 0.846251, 'F1': 0.023047, 'Recall': 0.826923, 'Precision': [0.011686, 0.5], 'Inference time': 6.704, 'Learning time': 1.392, 'AUC PR': 0.137661}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), interaction(D, A) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), interaction(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(D, G) )
%   | | | then return 0.08883646453365202;  // std dev = 0,860, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.17404678896768655;  // std dev = 0,821, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(C, F), complex(D, F) )
%   | | then return -0.16150149067658273;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.22521531879428344;  // std dev = 1,087, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.46125983910675544;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return 0.45018005355937624;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( enzyme(A, G), complex(F, H) )
%   | | then return -0.16174648911861483;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.02928169804729895;  // std dev = 0,448, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20191488784502484;  // std dev = 1,065, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.3155129923615088;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), phenotype(A, F) )
%   | then return 0.03651432365130868;  // std dev = 0,339, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3682332372499375;  // std dev = 0,680, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( phenotype(A, G) )
%   | then return 0.19379372979163523;  // std dev = 0,537, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.1374616887997521;  // std dev = 0,749, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14940814549600445;  // std dev = 0,728, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return 0.2995889756303077;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( complex(E, G), complex(F, G) )
%   | | then return -0.17210663617326613;  // std dev = 0,103, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.27566317447863287;  // std dev = 0,635, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0057133338913545745;  // std dev = 0,804, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.20737005733107497;  // std dev = 0,826, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.36696704956302534;  // std dev = 0,401, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1691210405600502;  // std dev = 0,115, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.13071630960190436;  // std dev = 0,638, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.1036989184753978;  // std dev = 0,439, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.14311035713899478;  // std dev = 0,719, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(D, E) )
%   | then if ( interaction(D, A) )
%   | | then return 0.21739354564502822;  // std dev = 0,497, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.006091821947564968;  // std dev = 0,333, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.2105837626637305;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.23114309269659503;  // std dev = 0,554, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.14894085866052767;  // std dev = 0,786, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then return 0.1412039656703929;  // std dev = 0,446, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then return 0.14455506366419352;  // std dev = 0,529, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.07941183070588317;  // std dev = 0,415, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.10756307907813444;  // std dev = 0,849, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2541257508179576;  // std dev = 0,406, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.13634978927611627;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, E) )
%   | then return 0.10182155495548066;  // std dev = 0,438, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.08128494996982864;  // std dev = 0,500, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07906583530926324;  // std dev = 0,696, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.562053
   AUC PR    = 0.021929
   CLL	      = -0.738799
   Precision = 0.007024 at threshold = 0.5
   Recall    = 0.480769
   F1        = 0.013847


Total learning time: 4.204 seconds
Total inference time: 4.157 seconds
AUC ROC: 0.562053


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:43:32
{'CLL': -0.738799, 'AUC ROC': 0.562053, 'F1': 0.013847, 'Recall': 0.480769, 'Precision': [0.007024, 0.5], 'Inference time': 4.157, 'Learning time': 4.204, 'AUC PR': 0.021929}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), interaction(D, A) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.500051
   AUC PR    = 0.006333
   CLL	      = -0.235197
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.632 seconds
Total inference time: 2.423 seconds
AUC ROC: 0.500051


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:43:36
{'CLL': -0.235197, 'AUC ROC': 0.500051, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.423, 'Learning time': 1.632, 'AUC PR': 0.006333}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.19148226843284555;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.24276431971489695;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), enzyme(A, F) )
%   | | | then return -0.18045325972401552;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.31954674027598445;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.16679450876845162;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.803874694078638;  // std dev = 0,081, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1805863746992194;  // std dev = 0,056, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return -0.15528555853817805;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2674080248404147;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6846689160841062;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1448829431573806;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6483674212453774;  // std dev = 0,115, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1554382899691962;  // std dev = 0,050, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then return 0.1659980485107139;  // std dev = 1,267, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08898857449069038;  // std dev = 0,531, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1595078927165417;  // std dev = 1,300, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.13312174093254028;  // std dev = 1,264, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07474149948688141;  // std dev = 0,521, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.22523519428295263;  // std dev = 0,828, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.04620729962735859;  // std dev = 0,875, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09233010304418943;  // std dev = 1,364, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.022732635440172677;  // std dev = 0,499, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2736090999884967;  // std dev = 0,516, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.038251796409362;  // std dev = 0,867, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, C), interaction(C, A) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then return 0.07352013563145143;  // std dev = 1,358, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3790864907947928;  // std dev = 0,187, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.17970467558496833;  // std dev = 0,072, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.29351202917606306;  // std dev = 0,132, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.146078897933118;  // std dev = 1,228, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05739073088189848;  // std dev = 0,945, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.30888828048058553;  // std dev = 0,312, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.22352878696814193;  // std dev = 0,225, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.06256938883320885;  // std dev = 1,076, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -9.646650247754589E-4;  // std dev = 0,604, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.04195056647883329;  // std dev = 0,338, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return -0.1299852432634489;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.08135612428790001;  // std dev = 1,133, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, G), enzyme(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.003817215070126112;  // std dev = 0,482, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.07000531198621224;  // std dev = 0,488, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.00700926303038273;  // std dev = 0,693, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */


Results
   AUC ROC   = 0.918366
   AUC PR    = 0.168975
   CLL	      = -0.308054
   Precision = 0.102144 at threshold = 0.5
   Recall    = 0.778846
   F1        = 0.180602


Total learning time: 1.466 seconds
Total inference time: 6.362 seconds
AUC ROC: 0.918366


Results scoring model
   AUC ROC   = 0.995556
   AUC PR    = 0.995618
   CLL	      = -0.300117
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.928571


Total scoring time: 0.836 seconds
Parameter learned model CLL: -0.300117


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(E, F), interaction(A, F)', 'false,false': 'interaction(A, E)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(G, A), interaction(H, G)'}, {'false,false,true,true': [1.309, 4, 3], 'false,false,false,true': [1.754, 8, 5], 'false,false,false,false': [0.866, 1, 3], 'true': [2.11e-08, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(E, A), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'true': [0.0, 0, 3], 'false,false,true,false': [0.056, 9, 0], 'false,false,true,true': [0.081, 0, 8], 'false,true,true,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(D, A), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'true': [1.05e-08, 0, 3], 'false,false,true,false': [0.05, 9, 0], 'false,false,true,true': [0.115, 0, 8], 'false,true,true,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(F, H), recursion_proteinclass(H, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'false,true': 'interaction(F, G), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false,false,false': 'interaction(J, A)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.531, 2, 1], 'true,false': [0.0, 0, 2], 'false,false,false,true': [1.3, 9, 8], 'false,true,true': [1.267, 4, 3], 'false,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false': 'interaction(A, G)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'enzyme(A, D)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'enzyme(A, I), interaction(J, A)'}, {'false,false,true,true': [1.264, 4, 3], 'false,false,false,true': [0.828, 3, 5], 'false,false,false,false': [0.875, 6, 3], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.521, 2, 1], 'true,false,true': [0.0, 0, 2], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false': 'enzyme(A, G), interaction(H, A)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'enzyme(A, J)'}, {'false,false,true,true': [0.499, 2, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,false,false': [0.867, 6, 3], 'false,false,true,false': [0.516, 1, 4], 'true,true': [0.0, 0, 3], 'false,true,false': [1.364, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(F, A)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'true,true': 'interaction(D, C), interaction(C, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.187, 0, 8], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'true,true,true': [0.0, 0, 1], 'false,true': [1.358, 6, 4], 'false,false,true,false': [0.072, 9, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(A, H)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.228, 4, 4], 'false,false,false,false': [0.945, 9, 8], 'false,true': [0.132, 2, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(D, A)', 'true,true,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, I)', 'true': 'enzyme(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'false,false,true': [1.076, 4, 3], 'true,false': [0.225, 5, 0], 'false,false,false,true': [0.604, 5, 2], 'false,true,true': [0.0, 0, 2], 'true,true,false,false': [0.312, 0, 6], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.338, 1, 1], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(D, A), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,false,false': 'enzyme(A, J)', 'false,true,false': 'interaction(D, G), enzyme(G, H)'}, {'false,true,true,true': [0.0, 1, 0], 'false,true,false,false': [0.482, 2, 1], 'false,false,false,true': [0.488, 3, 5], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [0.0, 0, 3], 'false,false,false,false': [0.693, 6, 3], 'false,true,true,false': [1.133, 3, 3]}]]
[{'': [1.4802973661668753e-16, 0.24691358024691348], 'false,false,true': [0.24489795918367335, 0.2222222222222222], 'false,false': [0.23999999999999985, 0.24913494809688583], 'false': [nan, 0.24691358024691357], 'false,false,false': [0.2366863905325442, 0.18750000000000006]}, {'': [0.0, 0.24189464720057496], 'false,false,true': [0.0008126646426168671, 0.00034245621153893783], 'false,false': [0.2420162529390544, nan], 'false,true,true': [0.0, 0.25000000000000006], 'false,true': [0.2448979591836735, 0.2222222222222222], 'false': [0.23949282787208745, 0.2420162529390544], 'false,true,false': [0.0, 0.0]}, {'': [3.700743415417188e-17, 0.1809374822013359], 'false,false,true': [0.0016582868546873852, 0.0002736400491646856], 'false,false': [0.16189223072388814, nan], 'false,true,true': [0.0, 0.25000000000000006], 'false,true': [0.23616365699135947, 0.15292361937133503], 'false': [0.21238517730849732, 0.16189223072388814], 'false,true,false': [0.0, 0.0]}, {'': [-3.700743415417188e-17, 0.1330331619888717], 'false,false': [nan, 0.09936597144067975], 'false,true,false': [nan, 0.09402909005515277], 'true': [0.0, 0.0], 'false,true': [0.22948499494360722, 0.09402909005515277], 'false': [0.19009361988572743, 0.09936597144067975], 'true,true': [0.0, nan], 'false,false,false': [0.09936597144067975, nan]}, {'': [0.0, 0.12833237509905976], 'false,false,true': [0.22828476148948124, 0.09059840575830175], 'false,false': [0.18769458781429063, 0.0933317728680643], 'true,false': [0.0, nan], 'true': [0.0, 0.0], 'false': [nan, 0.12833237509905965], 'false,false,false': [0.0857401296138319, 0.08499708276289414]}, {'': [0.0, 0.12335834702221475], 'false,false,true': [0.0831433039196503, 0.05319739442831743], 'false,false': [0.0791784387213797, 0.0836162286039262], 'true': [0.0, nan], 'false,true': [nan, 0.18591977921825348], 'false': [0.18591977921825348, 0.08650050353972236], 'false,false,false': [nan, 0.0836162286039262]}, {'': [0.0, 0.1188291947449721], 'false,false,true': [0.004374512507305139, 0.0005802050395279121], 'false,false': [0.08015754304834997, nan], 'true': [0.0, 0.0], 'false': [0.18451132344422821, 0.08015754304834997], 'true,true': [0.0, nan]}, {'': [0.0, 0.09496045799521122], 'false,false,true': [0.0, 0.0], 'false,false': [0.0, 0.09774175345227039], 'true': [0.0, nan], 'false': [0.008677376611779697, 0.09107366449319224], 'false,false,false': [0.18853174351794083, 0.052500063132926475]}, {'': [0.07729181273116865, 0.0931749632711711], 'true,true,false': [nan, 0.016196198592199024], 'false,false': [0.16544994169914423, 0.053520532813302255], 'true': [0.016867894382196318, 0.01009441203940909], 'false,true': [0.0, nan], 'false': [0.0, 0.103207187766731], 'true,true': [0.0, 0.016196198592199024], 'false,false,false': [0.052112440844429286, 0.05701640807490671]}, {'': [-2.3129646346357427e-18, 0.08502860416175123], 'false,false': [nan, 0.04323369828313562], 'false,true,true': [0.0, 0.21393011246200455], 'false,true': [0.18883787275989872, 0.07752041984067214], 'false': [0.1560774645805901, 0.04323369828313562], 'false,false,false': [0.029758434708462046, 0.05334417990996146], 'false,true,false': [nan, 0.07752041984067214]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;false,true,true;interaction(E, A), enzyme(A, F).;true;true
1;false,true;interaction(E, D), interaction(A, E).;true;true
1;false;interaction(A, D).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;false,true,true;interaction(D, A), enzyme(A, F).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false;interaction(A, D).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, A), enzyme(A, D).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
6;false,false;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false;interaction(A, E).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false,true;interaction(G, A).;true;true
7;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;false;interaction(A, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- enzyme(A, C), interaction(D, A).;true;true
8;true;enzyme(E, C), recursion_proteinclass(E, B).;true;true
8;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,true;interaction(D, E), interaction(A, E).;true;true
9;false;interaction(A, D).;true;true
9;false,true,true;interaction(D, A), enzyme(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), interaction(E, F) )
%   | | then if ( enzyme(E, G), interaction(D, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), enzyme(A, F) )
%   | | | then return -0.21837106042470464;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.30218644326469374;  // std dev = 1,119, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.782505295040918;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2341866728777572;  // std dev = 1,247, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.14179687410730335;  // std dev = 0,073, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return -0.1833886721496299;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.25125673091119394;  // std dev = 1,102, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.6427013531587111;  // std dev = 0,113, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.18077301646219301;  // std dev = 1,196, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.1255324852147808;  // std dev = 0,066, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( complex(A, G) )
%   | | then return -0.19404898998233197;  // std dev = 0,131, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return 0.2217456966948423;  // std dev = 1,122, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.13641920984777672;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.574277842396446;  // std dev = 0,174, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.07508149557397119;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.285086777836912;  // std dev = 0,706, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then return -0.0653966700576788;  // std dev = 0,586, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(H, I), interaction(G, H) )
%   | | | then return -0.0199110762107682;  // std dev = 0,627, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.21816992726254666;  // std dev = 0,918, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3325600661398748;  // std dev = 0,748, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21315595599874285;  // std dev = 0,707, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(E, F), interaction(D, E) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.11636640021227962;  // std dev = 0,530, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.15865229659422997;  // std dev = 0,092, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.2626185743250055;  // std dev = 0,517, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.006387999547414688;  // std dev = 0,700, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then return 0.017584047102078598;  // std dev = 0,785, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.41071871340421157;  // std dev = 0,180, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.153938976553323;  // std dev = 0,686, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( complex(A, F) )
%   | | then return -0.024915068331318194;  // std dev = 0,796, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.1111761487997013;  // std dev = 0,578, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.32620247452417744;  // std dev = 0,238, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.049039664882167586;  // std dev = 1,019, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.1321730805570556;  // std dev = 0,114, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.15528030627552658;  // std dev = 0,024, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.04081506750465375;  // std dev = 1,300, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.2309299840612794;  // std dev = 0,730, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.262959061698412;  // std dev = 0,202, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.16242534315348633;  // std dev = 0,153, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then return -0.16994434079530643;  // std dev = 0,169, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.03401529453954538;  // std dev = 0,761, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09269778594662886;  // std dev = 1,011, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return -0.1317267347438169;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07309113024266724;  // std dev = 0,851, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.016962211816762496;  // std dev = 0,249, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.30560347636644514;  // std dev = 0,342, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16673935785610167;  // std dev = 0,144, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.16920760295308682;  // std dev = 0,363, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1219652850616113;  // std dev = 0,615, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.84767
   AUC PR    = 0.088118
   CLL	      = -0.331234
   Precision = 0.031267 at threshold = 0.5
   Recall    = 0.548077
   F1        = 0.059159


Total learning time: 11.361 seconds
Total inference time: 33.542 seconds
AUC ROC: 0.84767


Results scoring model
   AUC ROC   = 0.993333
   AUC PR    = 0.993856
   CLL	      = -0.26027
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 1.297 seconds
Refined model CLL: -0.26027


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.84767
   AUC PR    = 0.088118
   CLL	      = -0.331234
   Precision = 0.031267 at threshold = 0.5
   Recall    = 0.548077
   F1        = 0.059159


Total learning time: 14.96 seconds
Total inference time: 33.542 seconds
AUC ROC: 0.84767
Total revision time: 14.96
Best scored revision CLL: -0.26027


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:44:32
{'CLL': -0.331234, 'AUC ROC': 0.84767, 'F1': 0.059159, 'Recall': 0.548077, 'Precision': [0.031267, 0.5], 'parameter_15': {'CLL': -0.308054, 'AUC ROC': 0.918366, 'F1': 0.180602, 'Recall': 0.778846, 'Precision': [0.102144, 0.5], 'Inference time': 6.362, 'Learning time': 1.466, 'AUC PR': 0.168975}, 'Inference time': 33.542, 'Learning time': 14.96, 'AUC PR': 0.088118}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), interaction(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, D) )
%   | | then if ( interaction(C, F), enzyme(C, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( complex(A, H), interaction(A, I) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, J) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, A), phenotype(C, E) )
%   | then return 0.5366769192812665;  // std dev = 0,770, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, D), interaction(F, C) )
%   | | then if ( interaction(C, C), complex(D, G) )
%   | | | then return 0.15619471171805724;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14198458662441546;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.05287776131345828;  // std dev = 0,772, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.49734587768095956;  // std dev = 0,763, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(A, I) )
%   | then return 0.7512057788947993;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, A) )
%   | | then return 0.11429502008635946;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5730340463557628;  // std dev = 0,859, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.671035968188516;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(E, F), complex(D, F) )
%   | | then return -0.16460820780070162;  // std dev = 0,054, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.48338105125748815;  // std dev = 0,718, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06596822663509136;  // std dev = 1,046, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then return 0.06647835256927657;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.6339871584114886;  // std dev = 0,144, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3841975456778358;  // std dev = 0,737, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5124925677909417;  // std dev = 0,096, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then return -0.06581923777590189;  // std dev = 0,507, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(G, H), complex(F, H) )
%   | | | then return -0.14172657784705214;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2263560909785663;  // std dev = 1,271, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.36046817005990106;  // std dev = 0,792, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.293282925468877;  // std dev = 0,724, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then return 0.44672429018242565;  // std dev = 0,221, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, F) )
%   | | then return -0.1919964092955178;  // std dev = 0,147, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(C, D) )
%   | | | then return -0.03208549215395124;  // std dev = 0,673, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.35271934202445393;  // std dev = 0,629, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then return 0.43082289348450437;  // std dev = 0,114, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then return -0.056633626293707606;  // std dev = 0,624, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.29725128610328194;  // std dev = 0,786, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3004599763589078;  // std dev = 0,092, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(G, F) )
%   | | then return 0.04344224370085136;  // std dev = 0,751, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.3661744632679933;  // std dev = 0,159, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then return -0.17692075013691266;  // std dev = 0,078, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03152393005933234;  // std dev = 1,032, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.194541791764187;  // std dev = 0,775, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( phenotype(A, E), interaction(C, D) )
%   | then return 0.22516693799620202;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.14652952371276742;  // std dev = 0,104, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, F), phenotype(A, G) )
%   | then return -0.027048821788305092;  // std dev = 0,292, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then return 0.20733316769377427;  // std dev = 0,710, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2431888487853087;  // std dev = 0,570, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06572535350129896;  // std dev = 1,123, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21366829731282236;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(G, F) )
%   | | then return 0.014032630364339854;  // std dev = 0,706, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.25661885607770263;  // std dev = 0,111, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( location(A, I), location(H, I) )
%   | | | then return 0.015038777685440449;  // std dev = 0,967, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.16705059874331096;  // std dev = 0,130, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.13358479484717675;  // std dev = 0,778, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( phenotype(A, E), interaction(C, D) )
%   | then return 0.1561978735829539;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1284239894558084;  // std dev = 0,101, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.29957974763732065;  // std dev = 0,289, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1794856667164488;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( complex(A, H) )
%   | | then return -0.03498889692379851;  // std dev = 0,775, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.1918670089810283;  // std dev = 0,541, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.061947893103482456;  // std dev = 0,786, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(C, C), enzyme(A, E) )
%   | | then return -0.06787202101219006;  // std dev = 0,207, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.24146193674965089;  // std dev = 0,455, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.022855164225919117;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1853650190370105;  // std dev = 0,435, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.05702958343613458;  // std dev = 0,477, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.2264221353462131;  // std dev = 0,236, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.1292988082515925;  // std dev = 0,782, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.564661
   AUC PR    = 0.014501
   CLL	      = -0.490792
   Precision = 0.008298 at threshold = 0.5
   Recall    = 0.432692
   F1        = 0.016284


Total learning time: 6.655 seconds
Total inference time: 5.593 seconds
AUC ROC: 0.564661


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:44:44
{'CLL': -0.490792, 'AUC ROC': 0.564661, 'F1': 0.016284, 'Recall': 0.432692, 'Precision': [0.008298, 0.5], 'Inference time': 5.593, 'Learning time': 6.655, 'AUC PR': 0.014501}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), interaction(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, D) )
%   | | then if ( enzyme(C, G), enzyme(F, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( complex(A, H), interaction(A, I) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, J) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.500065
   AUC PR    = 0.006333
   CLL	      = -0.223492
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.99 seconds
Total inference time: 3.181 seconds
AUC ROC: 0.500065


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:44:50
{'CLL': -0.223492, 'AUC ROC': 0.500065, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 3.181, 'Learning time': 1.99, 'AUC PR': 0.006333}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2581489350995123;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), function(A, F) )
%   | | | then return -0.16221334521702105;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.39231333441554683;  // std dev = 1,275, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8237336544841058;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.17626634551589418;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7505511758931249;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21837106042470464;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return -0.14135702677192458;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3281924733440621;  // std dev = 1,269, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6721923233751143;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15211381203652688;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5879550920336302;  // std dev = 0,081, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1833886721496299;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.12243585710116327;  // std dev = 1,409, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12448271943582108;  // std dev = 1,413, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4021162279088891;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.30324133186736435;  // std dev = 0,536, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.41749779681193755;  // std dev = 0,152, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.05821428071156245;  // std dev = 1,326, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.10299773099375668;  // std dev = 1,378, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.23713909314480025;  // std dev = 0,511, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1461937748009614;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.09127051979544624;  // std dev = 1,910, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else if ( function(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), interaction(A, J) )
%   | | | then return 0.17315902135049382;  // std dev = 0,491, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2814995206293376;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D), interaction(A, C) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( function(A, E), function(D, E) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then return 0.06763616500122481;  // std dev = 1,902, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.26442171642032;  // std dev = 0,103, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.27619703843215687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2244065223309368;  // std dev = 0,183, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.15953717800540018;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.07524157488465663;  // std dev = 1,807, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.12057022850878979;  // std dev = 0,403, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(A, C), interaction(A, D) )
%   then if ( function(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18935569572671776;  // std dev = 0,164, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12491095639411126;  // std dev = 0,499, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.20912875634842354;  // std dev = 0,205, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.11655818110204894;  // std dev = 1,611, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.12928529779668063;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return -0.13634454296652707;  // std dev = 0,055, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1348434787009938;  // std dev = 1,207, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(G, D), function(G, H) )
%   | | | then return -0.02381829655110421;  // std dev = 0,949, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.12592588522903322;  // std dev = 0,745, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.11228482854816124;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.09353141087207753;  // std dev = 0,354, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.851826
   AUC PR    = 0.120928
   CLL	      = -0.329773
   Precision = 0.097101 at threshold = 0.5
   Recall    = 0.644231
   F1        = 0.168766


Total learning time: 1.91 seconds
Total inference time: 32.895 seconds
AUC ROC: 0.851826


Results scoring model
   AUC ROC   = 0.9925
   AUC PR    = 0.992663
   CLL	      = -0.31516
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.918919


Total scoring time: 1.193 seconds
Parameter learned model CLL: -0.31516


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false': 'interaction(G, A)', 'false,true,true': 'interaction(F, A), interaction(A, F)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [1.449, 7, 3], 'false,false,false,true': [0.816, 1, 2], 'false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 4], 'false,false,false,false': [0.0, 0, 1], 'false,false,true,false': [2.191, 12, 8], 'false,true,true,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, E), function(A, F)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 4, 0], 'false,true,false,false': [0.0, 12, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [2.98e-08, 0, 8], 'true': [0.0, 0, 4], 'false,false,true,false': [0.0, 1, 0], 'false,false,true,true': [0.062, 0, 4], 'false,true,true,false': [1.275, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, D), function(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 4, 0], 'false,true,false,false': [7.45e-09, 12, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 8], 'true': [0.0, 0, 4], 'false,false,true,false': [0.0, 1, 0], 'false,false,true,true': [0.081, 0, 4], 'false,true,true,false': [1.269, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'true': 'interaction(A, C), function(A, D)', 'false,true': 'interaction(G, F), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true': 'interaction(A, E), interaction(E, C)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.0, 0, 1], 'false,true,false,false': [1.413, 12, 8], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.536, 1, 3], 'false,true,true': [1.409, 7, 4], 'false,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false': 'interaction(G, A)', 'true': 'function(A, D)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'false,false,true,true': [1.326, 7, 3], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.511, 1, 3], 'false,true,true': [0.152, 0, 2], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [1.378, 12, 8], 'true,true': [0.0, 0, 4], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, J), interaction(A, J)', 'false,false': 'function(A, H), interaction(A, I)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.491, 1, 3], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,false': [1.91, 18, 12], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true,false': 'function(A, E), function(D, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false': 'interaction(F, A)', 'true,true': 'interaction(C, D), interaction(A, C)'}, {'false,false,true,true': [0.103, 0, 4], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,true': [1.902, 19, 12], 'true,true,false,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, G)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, E)', 'false,false,false': 'interaction(H, A)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.807, 15, 11], 'false,false,false,false': [0.403, 1, 3], 'false,true': [0.026, 4, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.183, 0, 4]}], ['proteinclass(A, B)', {'': 'function(A, C), interaction(A, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(I, A)', 'true': 'function(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)'}, {'false,false,true': [1.611, 10, 10], 'false,false,false': [0.0, 0, 0], 'true,false': [0.205, 8, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.164, 0, 4], 'true,true,false,false': [0.499, 2, 4], 'true,true,false,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, J), interaction(J, I)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(A, D), function(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'function(A, K)', 'false,true,false': 'interaction(G, D), function(G, H)'}, {'false,true,true,true': [0.055, 4, 0], 'false,true,false,false': [0.745, 3, 4], 'false,false,false,true': [0.354, 1, 3], 'false,true,false,true': [0.949, 9, 4], 'true': [0.009, 0, 4], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,true,true,false': [1.207, 3, 4]}]]
[{'': [0.0, 0.2469135802469132], 'false,false,true': [0.20999999999999988, 0.23999999999999985], 'false,false': [0.23222222222222175, 0.18750000000000006], 'false,true,true': [nan, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.24221453287197225], 'false,false,false': [0.22222222222222224, 0.0]}, {'': [0.0, 0.2356123699141789], 'false,false,true': [0.0009658273954848973, 0.0], 'false,false': [0.15098230992137096, nan], 'false,true,false': [1.1102230246251565e-16, -9.25185853854297e-18], 'false,true': [0.21887268460884898, 0.2400000000000002], 'false': [0.23275351752030946, 0.15098230992137096], 'false,true,true': [0.0, 0.23212466703623053]}, {'': [0.0, 0.17265365108456812], 'false,false,true': [0.0016221108115896388, 0.0], 'false,false': [0.09649308105637584, nan], 'false,true,true': [0.0, 0.22987497659362768], 'false,true': [0.1973034853170758, 0.16307534517054598], 'false': [0.1753138698423256, 0.09649308105637584], 'false,true,false': [0.0, 4.625929269271485e-18]}, {'': [0.0, 0.12353307300996835], 'false,false': [0.0, 0.07188329306878802], 'false,true,false': [nan, 0.09984421196882556], 'true': [0.0, 0.0], 'false,true': [0.18036113889438235, 0.09984421196882556], 'false': [0.12841569355426438, 0.059070833665786006], 'true,true': [0.0, 0.0], 'false,false,false': [0.07188329306878802, nan]}, {'': [0.0, 0.1171661853809281], 'false,false,true': [0.17594897321560934, 0.09494023131162863], 'false,false': [0.12238882470610615, 0.06528955186585983], 'true': [0.0, nan], 'false,true': [0.011493858404156315, nan], 'false': [0.011493858404156315, 0.11797800576657166], 'false,false,false': [0.06528955186585983, nan]}, {'': [0.0, 0.11132757467505915], 'false,false,true': [0.06031622521056543, 0.0], 'false,false': [0.050131006373890605, nan], 'false,true,true': [nan, 0.0], 'true': [0.0, 0.0], 'false,true': [0.0, 0.12164370850314773], 'false': [0.11948004957770293, 0.050131006373890605]}, {'': [0.0, 0.10822805464577627], 'false,false,true': [0.0026607602930669577, 0.0], 'false,false': [0.04889159033017236, nan], 'true,true,false': [0.0, nan], 'true': [0.0, 0.0], 'false': [0.11670665838564784, 0.04889159033017236], 'true,true': [0.0, 0.0]}, {'': [0.00841287155364466, 0.10193317753869409], 'false,false,true': [0.0, 0.0], 'false,false': [0.0, 0.11450319165706462], 'true': [0.00841287155364466, nan], 'false': [0.00017448462125650016, 0.10788461917100431], 'false,false,false': [0.12559079342049265, 0.0406530516006559]}, {'': [0.04884347412773645, 0.12359306212420072], 'true,true,false': [0.0, 0.041463451066128594], 'false,false': [0.12971036269615635, nan], 'true': [0.02598034532047242, 0.005246851835720989], 'false,true': [nan, 0.0], 'false': [0.0, 0.12971036269615635], 'true,true': [0.0067579385915353535, 0.03563495851590829]}, {'': [2.2294755075515094e-05, 0.093087229371907], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.03131956396166416], 'false,true,true': [0.0007462201732573656, 0.2082506904089503], 'false,true': [0.14981272112230515, 0.07792416012711995], 'false': [0.10344635800457569, 0.02511192167725671], 'false,false,false': [0.03131956396166416, nan], 'false,true,false': [0.06931093083436532, 0.07934499940004096]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false;interaction(G, A).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,false,false;interaction(A, I), interaction(I, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;false,true,true;interaction(A, E), function(A, F).;true;true
1;false,true;interaction(D, E), interaction(E, A).;true;true
1;false;interaction(D, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false,true,true;interaction(A, D), function(A, F).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false;interaction(D, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, C), function(A, D).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
3;false;interaction(F, A).;true;true
3;true,true;interaction(A, E), interaction(E, C).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false,false;interaction(I, J), interaction(A, J).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
6;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
6;false;interaction(F, A).;true;true
6;true,true;interaction(C, D), interaction(A, C).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;interaction(A, G).;true;true
7;false,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
8;;proteinclass(A, B) :- function(A, C), interaction(A, D).;true;true
8;true;function(E, C), recursion_proteinclass(E, B).;true;true
8;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
8;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,true;interaction(E, D), interaction(E, A).;true;true
9;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true,true;interaction(A, D), function(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.04185106490048778;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), function(A, F) )
%   | | | then return -0.136832517440075;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3751923676712936;  // std dev = 1,259, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8155444291324211;  // std dev = 0,051, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.173116748622935;  // std dev = 0,089, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.7505511758931249;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.21837106042470464;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return -0.12145923874432712;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.31004938423400014;  // std dev = 1,249, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6622199948182318;  // std dev = 0,079, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.14981347097549327;  // std dev = 0,079, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.5879550920336302;  // std dev = 0,081, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1833886721496299;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G) )
%   | | then if ( phenotype(A, H), complex(G, I) )
%   | | | then return 0.16654160642990218;  // std dev = 0,749, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12772064831114752;  // std dev = 0,122, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.26119688636003047;  // std dev = 1,131, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.11999380042962007;  // std dev = 1,183, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4021162279088891;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30324133186736435;  // std dev = 0,536, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(E, F), interaction(D, E) )
%   | | then if ( complex(D, F) )
%   | | | then return -0.21226408818180387;  // std dev = 0,293, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.13883690082230227;  // std dev = 0,778, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.5992901133002664;  // std dev = 0,097, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0522657451424218;  // std dev = 0,798, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.3275021356604244;  // std dev = 0,494, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.2517689511211969;  // std dev = 0,515, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04582420248918718;  // std dev = 0,509, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return -0.10471822751207349;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.007536156142284879;  // std dev = 0,686, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.11987536249184794;  // std dev = 1,475, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(H, I), interaction(A, I) )
%   | | then return 0.19846806848223825;  // std dev = 0,503, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D), interaction(A, C) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then return 0.18053172262935382;  // std dev = 0,646, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.02443269034399923;  // std dev = 0,610, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.0630985766795155;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.2690557823774797;  // std dev = 0,076, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.2842522444891965;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22921015242561057;  // std dev = 0,177, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return -0.09713590776375208;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.015415222882402931;  // std dev = 0,651, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.09609872921207956;  // std dev = 1,441, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(A, C), interaction(A, D) )
%   then if ( function(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19275350994079657;  // std dev = 0,159, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14539026406198283;  // std dev = 0,455, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.13017654657030403;  // std dev = 0,048, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3398171412078022;  // std dev = 0,067, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.34907383798831687;  // std dev = 0,111, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.003239539385461232;  // std dev = 0,646, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.04820172934742746;  // std dev = 0,796, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.12883949952997764;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return -0.09143069878929362;  // std dev = 0,046, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.11235253070602345;  // std dev = 0,895, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.1384083825508252;  // std dev = 0,611, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.08358053733527272;  // std dev = 0,711, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.1256447919584297;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.09815274665301255;  // std dev = 0,354, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.852207
   AUC PR    = 0.085712
   CLL	      = -0.288275
   Precision = 0.0666 at threshold = 0.5
   Recall    = 0.644231
   F1        = 0.120721


Total learning time: 3.634 seconds
Total inference time: 35.123 seconds
AUC ROC: 0.852207


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.24197
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 1.165 seconds
Refined model CLL: -0.24197


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.852207
   AUC PR    = 0.085712
   CLL	      = -0.288275
   Precision = 0.0666 at threshold = 0.5
   Recall    = 0.644231
   F1        = 0.120721


Total learning time: 7.902 seconds
Total inference time: 35.123 seconds
AUC ROC: 0.852207
Total revision time: 7.902
Best scored revision CLL: -0.24197


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:46:06
{'CLL': -0.288275, 'AUC ROC': 0.852207, 'F1': 0.120721, 'Recall': 0.644231, 'Precision': [0.0666, 0.5], 'Inference time': 35.123, 'Learning time': 7.902, 'AUC PR': 0.085712, 'parameter_20': {'CLL': -0.329773, 'AUC ROC': 0.851826, 'F1': 0.168766, 'Recall': 0.644231, 'Precision': [0.097101, 0.5], 'Inference time': 32.895, 'Learning time': 1.91, 'AUC PR': 0.120928}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7551749533819674;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(F, D) )
%   | | then return -0.1457345492273458;  // std dev = 0,062, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.4623305112115655;  // std dev = 0,782, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then return 0.5266162364614128;  // std dev = 0,863, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return -0.14238520752422565;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.37475048401294875;  // std dev = 2,111, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5939168527442291;  // std dev = 0,115, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F) )
%   | | then return -0.14812365677926959;  // std dev = 0,124, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.08515913773869888;  // std dev = 0,747, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(A, I), interaction(G, G) )
%   | | | then return -0.22952037059269179;  // std dev = 0,146, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2809546051238404;  // std dev = 1,878, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.7064926654902406;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.33464162815689014;  // std dev = 1,035, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4488908639819767;  // std dev = 0,121, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then return -0.1307842914727776;  // std dev = 0,113, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.0697984487503952;  // std dev = 0,744, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(G, G), enzyme(A, I) )
%   | | | then return -0.19277636909779772;  // std dev = 0,126, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.22687746994986396;  // std dev = 1,855, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.5964998629195624;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2333264930765965;  // std dev = 0,976, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( enzyme(A, E) )
%   | then return 0.18889823977571502;  // std dev = 0,631, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, F), phenotype(A, G) )
%   | | then return 0.08826251126284357;  // std dev = 0,426, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1766167371893979;  // std dev = 0,104, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.429942734233838;  // std dev = 0,164, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, I), enzyme(A, J) )
%   | | | then return -0.1653767146338407;  // std dev = 0,110, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.17038710406027557;  // std dev = 1,920, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else return 0.3113262183034596;  // std dev = 0,773, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.3090957931593752;  // std dev = 0,145, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5044878262962148;  // std dev = 0,147, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.20903396542818206;  // std dev = 0,330, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(F, A) )
%   | then if ( location(A, G), location(F, G) )
%   | | then if ( phenotype(F, H), interaction(I, F) )
%   | | | then return -0.07201004922108255;  // std dev = 0,798, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.18141592421782818;  // std dev = 1,244, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return -0.31808804832326376;  // std dev = 0,149, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.23827305151238048;  // std dev = 0,773, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.26063333911344005;  // std dev = 0,156, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( phenotype(A, F), interaction(D, E) )
%   | | then return 0.0860559562537276;  // std dev = 0,473, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.14738272172933808;  // std dev = 0,161, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), complex(I, H) )
%   | | | then return -0.165806935039457;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4526275800048758;  // std dev = 0,244, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.18386179065938033;  // std dev = 0,775, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.030421425932501075;  // std dev = 1,530, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.21490588807606367;  // std dev = 0,136, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( phenotype(A, F), interaction(D, E) )
%   | | then return 0.07420683617116278;  // std dev = 0,460, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.13035032126993398;  // std dev = 0,145, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3291034520912423;  // std dev = 0,158, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2355995582336993;  // std dev = 0,248, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.07746137378458155;  // std dev = 0,724, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0862473766689949;  // std dev = 1,457, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1928046306371051;  // std dev = 0,172, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( complex(F, D) )
%   | | | then return -0.0940893055585992;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1671910528069901;  // std dev = 0,110, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.02781876978572372;  // std dev = 0,781, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3129553176747558;  // std dev = 0,276, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1411354456802014;  // std dev = 0,078, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.01823618856076757;  // std dev = 0,613, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06460278486577044;  // std dev = 1,343, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.165767356772062;  // std dev = 0,154, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, E), complex(E, D) )
%   | | then return -0.11495829867187445;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07309762289524202;  // std dev = 0,708, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.22902405860114589;  // std dev = 0,166, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15809131643683022;  // std dev = 0,279, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.0728021050716996;  // std dev = 0,495, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.00578853347444124;  // std dev = 1,381, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */


Results
   AUC ROC   = 0.803907
   AUC PR    = 0.098147
   CLL	      = -0.283538
   Precision = 0.046819 at threshold = 0.5
   Recall    = 0.375
   F1        = 0.083244


Total learning time: 5.514 seconds
Total inference time: 4.92 seconds
AUC ROC: 0.803907


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:46:17
{'CLL': -0.283538, 'AUC ROC': 0.803907, 'F1': 0.083244, 'Recall': 0.375, 'Precision': [0.046819, 0.5], 'Inference time': 4.92, 'Learning time': 5.514, 'AUC PR': 0.098147}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */


Results
   AUC ROC   = 0.588415
   AUC PR    = 0.030203
   CLL	      = -0.203283
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.403 seconds
Total inference time: 2.586 seconds
AUC ROC: 0.588415


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:46:21
{'CLL': -0.203283, 'AUC ROC': 0.588415, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.586, 'Learning time': 1.403, 'AUC PR': 0.030203}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.14386322081379793;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), function(A, F) )
%   | | | then return -0.16679450876845162;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.33320549123154836;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7996369572269167;  // std dev = 0,098, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1602812702651022;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7389386970290338;  // std dev = 0,958, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.18866002469278567;  // std dev = 0,014, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return -0.1448829431573806;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.28165075953675034;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6464504742520123;  // std dev = 0,136, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13986423397961892;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5983438861201963;  // std dev = 0,957, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.16146296097740837;  // std dev = 0,012, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then return 0.1105937501551865;  // std dev = 1,325, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10772951012335845;  // std dev = 0,858, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.40241045990055924;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.17054306446226525;  // std dev = 1,828, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3310491076079967;  // std dev = 0,029, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.09140958344015072;  // std dev = 1,320, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.05298582763158794;  // std dev = 0,791, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.13790885787881532;  // std dev = 1,782, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07445922721244091;  // std dev = 1,547, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( function(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.2680332637069345;  // std dev = 0,758, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.064531684815335;  // std dev = 1,513, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, C), interaction(C, A) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( function(A, E), function(D, E) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then return 0.06119888541403934;  // std dev = 1,538, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3414380859139013;  // std dev = 0,948, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.1974009542549885;  // std dev = 0,050, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, C), interaction(C, E) )
%   | | then return 0.25375720286794334;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17728359732214527;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.0987977129082018;  // std dev = 0,309, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10566128925209804;  // std dev = 1,441, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.058683413881289545;  // std dev = 1,476, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(A, C), interaction(D, A) )
%   then if ( function(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16678278563720023;  // std dev = 0,048, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17235022939358352;  // std dev = 0,028, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.18727757247396112;  // std dev = 1,286, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else return -0.19355947281937297;  // std dev = 0,264, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.3613887205694276;  // std dev = 0,833, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1394316253861296;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return -0.16653496657464636;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09779484245048191;  // std dev = 1,141, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, G), function(G, H) )
%   | | | then return -0.03210906947262871;  // std dev = 0,531, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3650819439781666;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.132512141628904;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( function(A, K) )
%   | | | then return 0.03796768093500063;  // std dev = 1,350, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.881596
   AUC PR    = 0.103491
   CLL	      = -0.273182
   Precision = 0.100376 at threshold = 0.5
   Recall    = 0.769231
   F1        = 0.17758


Total learning time: 2.066 seconds
Total inference time: 32.84 seconds
AUC ROC: 0.881596


Results scoring model
   AUC ROC   = 0.9872
   AUC PR    = 0.986416
   CLL	      = -0.291844
   Precision = 0.956522 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.916667


Total scoring time: 1.156 seconds
Parameter learned model CLL: -0.291844


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false': 'interaction(A, G)', 'false,true,false': 'interaction(A, F)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [1.414, 6, 3], 'false,false,false,true': [2.121, 9, 9], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'true': [0.0, 0, 5], 'false,false,false,false': [1.491, 5, 4], 'false,false,true,false': [1.195, 5, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(E, A), function(A, F)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 3, 0], 'false,true,false,false': [0.0, 5, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.098, 0, 3], 'true': [0.0, 0, 5], 'false,false,true,false': [0.014, 13, 0], 'false,false,true,true': [0.958, 1, 14], 'false,true,true,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(D, A), function(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 3, 0], 'false,true,false,false': [0.0, 5, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.136, 0, 3], 'true': [0.0, 0, 5], 'false,false,true,false': [0.012, 13, 0], 'false,false,true,true': [0.957, 1, 14], 'false,true,true,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(F, H), recursion_proteinclass(H, B)', 'true': 'interaction(C, A), function(A, D)', 'false,true': 'interaction(F, G), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false,false,false': 'interaction(J, A)'}, {'true,true,false': [0.0, 0, 1], 'false,true,false,false': [0.858, 5, 3], 'true,false': [0.0, 0, 3], 'false,false,false,true': [1.828, 14, 13], 'false,true,true': [1.325, 6, 3], 'false,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false': 'interaction(A, G)', 'true': 'function(A, D)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'false,false,true,true': [1.32, 6, 3], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.782, 14, 13], 'false,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.791, 5, 2], 'true,true': [0.0, 0, 5], 'false,true,false': [0.029, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false': 'function(A, G), interaction(H, A)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)'}, {'false,false,true,true': [0.758, 2, 5], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.513, 12, 9], 'true,true': [0.0, 0, 4], 'false,true,false': [1.547, 11, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'function(A, E), function(D, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false': 'interaction(A, F)', 'true,true': 'interaction(D, C), interaction(C, A)'}, {'false,false,true,true': [0.948, 1, 14], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,true': [1.538, 11, 6], 'true,true,false,true': [0.0, 0, 1], 'false,false,true,false': [0.05, 13, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true,false': 'interaction(E, C), interaction(C, E)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false,false': 'interaction(A, J)', 'true,false,false': 'interaction(A, F), recursion_proteinclass(F, B)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 1], 'false,false,false,true': [1.441, 7, 5], 'false,false,false,false': [1.476, 14, 13], 'false,true': [0.309, 4, 1], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'function(A, C), interaction(D, A)', 'true,true,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, I)', 'true': 'function(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)'}, {'false,false,true': [0.833, 1, 4], 'false,false,false': [0.0, 0, 0], 'true,false': [0.264, 19, 0], 'false,true,true': [0.0, 0, 1], 'true,true,true': [0.048, 0, 4], 'true,true,false,false': [1.286, 5, 14], 'true,true,false,true': [0.028, 0, 2], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, A), interaction(I, J)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(D, A), function(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,false,false': 'function(A, K)', 'false,true,false': 'interaction(D, G), function(G, H)'}, {'false,true,true,true': [0.041, 3, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,false,true': [1.35, 14, 13], 'false,true,false,true': [0.531, 5, 2], 'true': [0.03, 0, 5], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,true,true,false': [1.141, 3, 3]}]]
[{'': [0.0, 0.24691358024691334], 'false,false,true': [0.2222222222222221, 0.20408163265306126], 'false,false': [0.2148437499999998, 0.24965706447187883], 'false,true,false': [0.0, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.24337479718766852], 'false,false,false': [0.25, 0.2469135802469134]}, {'': [0.0, 0.240470386951233], 'false,false,true': [0.06122315044074291, 1.5196425432585968e-05], 'false,false': [0.24681751970568935, nan], 'false,true,true': [-4.625929269271485e-18, 0.25000000000000017], 'false,true': [0.22222222222222238, 0.21716811530414998], 'false': [0.2201175864213113, 0.24681751970568935], 'false,true,false': [0.003213096974763093, 0.0]}, {'': [-4.4408920985006264e-17, 0.1796088176002388], 'false,false,true': [0.0610550488326627, 1.1875585822171621e-05], 'false,false': [0.1763038265022399, nan], 'false,true,true': [0.0, 0.25], 'false,true': [0.2070957776742145, 0.14722029853225996], 'false': [0.17897917534068, 0.1763038265022399], 'false,true,false': [0.00615570001432116, 0.0]}, {'': [4.4408920985006264e-17, 0.13191516336525683], 'false,false': [0.0, 0.123759041229576], 'false,true,false': [nan, 0.09197190828700975], 'true': [0.0, -3.700743415417188e-17], 'false,true': [0.1950919461600985, 0.09197190828700975], 'false': [0.14656691338490482, 0.12119058976323673], 'true,true': [0.0, 0.0], 'false,false,false': [0.123759041229576, nan]}, {'': [-2.2204460492503132e-17, 0.1262537376702291], 'false,false,true': [0.19360091692239056, 0.08932965681959766], 'false,false': [0.1483455697510807, 0.11766794415956419], 'true': [-2.2204460492503132e-17, nan], 'false,true': [nan, 0.00042278670578067834], 'false': [0.00042278670578067834, 0.1300193295896631], 'false,false,false': [0.11766794415956419, nan]}, {'': [0.0, 0.122032765577493], 'false,false,true': [0.0820579715041266, 0.10901742142963396], 'false,false': [0.1100424763128898, nan], 'true': [0.0, 0.0], 'false,true': [nan, 0.14073818075003516], 'false': [0.1407381807500352, 0.1100424763128898]}, {'': [-5.551115123125783e-18, 0.11775735216112217], 'false,false,true': [0.05995472389486672, 0.0001928426843237608], 'false,false': [0.1044246727792262, nan], 'true,true,false': [0.0, nan], 'true': [0.0, 0.0], 'false': [0.13915467004609786, 0.1044246727792262], 'true,true': [0.0, 0.0]}, {'': [0.001100125611092892, 0.09847120037017805], 'false,false,true': [0.0, 0.0], 'false,false': [0.0, 0.10959623630458876], 'true,false': [0.0, 0.0], 'true': [0.0, 0.0014620530862935743], 'false': [0.01904645786577038, 0.1047515492594198], 'false,false,false': [0.17303369636673996, 0.08072275706434391], 'true,false,false': [nan, 0.0]}, {'': [0.07403720721259893, 0.12173382014251427], 'true,true,false': [0.0003844097955500343, 0.08706371245676292], 'false,false': [0.1388251377314292, nan], 'true': [0.06635816317226606, 0.00365846899444606], 'false,true': [0.0, nan], 'false': [0.0, 0.1388251377314292], 'true,true': [0.0005872997492307429, 0.07882774116411835]}, {'': [0.00018550640188174373, 0.08227734243866479], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.06748102351314934], 'false,true,true': [0.0005630747478746617, 0.2169625217024993], 'false,true': [0.16035609448190458, 0.052517019119435016], 'false': [0.10962366580590813, 0.06537882329366611], 'false,false,false': [0.06748102351314934, nan], 'false,true,false': [0.04029936277645272, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(A, F).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;false,true,true;interaction(E, A), function(A, F).;true;true
1;false,true;interaction(E, D), interaction(A, E).;true;true
1;false;interaction(A, D).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;false,true,true;interaction(D, A), function(A, F).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false;interaction(A, D).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, A), function(A, D).;true;true
3;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
3;false;interaction(A, F).;true;true
3;true,true;interaction(E, A), interaction(C, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
6;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
6;false;interaction(A, F).;true;true
6;true,true;interaction(D, C), interaction(C, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false,true;interaction(I, A).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;true,false;interaction(E, C), interaction(C, E).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(A, G), interaction(G, A).;true;true
8;;proteinclass(A, B) :- function(A, C), interaction(D, A).;true;true
8;true;function(E, C), recursion_proteinclass(E, B).;true;true
8;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;true,true,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;false,true,true;interaction(D, A), function(A, F).;true;true
9;false,true;interaction(D, E), interaction(A, E).;true;true
9;false;interaction(A, D).;true;true
9;false,true,false;interaction(D, G), function(G, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), interaction(A, G) )
%   | | then if ( enzyme(A, H), interaction(F, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3396304165809938;  // std dev = 2,596, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), function(A, F) )
%   | | | then return -0.13922792860841146;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.30250405796671154;  // std dev = 1,182, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7451706938182213;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.8115891950982038;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.37643806774911465;  // std dev = 1,832, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else return -0.18841080490179632;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return -0.1234102475603011;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2510199575423872;  // std dev = 1,174, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5815972816142496;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.5858474362736703;  // std dev = 0,898, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.2745068212249736;  // std dev = 1,601, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.16127385171433647;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.16127385171433647;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(G, H) )
%   | | | then return -0.1326354034782827;  // std dev = 0,141, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.025600202757842645;  // std dev = 0,438, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.028762478031363614;  // std dev = 0,760, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5731294966608704;  // std dev = 0,248, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5722179653139313;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.269549989529534;  // std dev = 1,330, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.08984621469136059;  // std dev = 1,645, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.4144601681842494;  // std dev = 0,022, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A), interaction(A, F) )
%   | | then if ( interaction(F, F), complex(E, G) )
%   | | | then return 0.1428103374145463;  // std dev = 0,582, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1293818352084766;  // std dev = 0,150, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.14000821513603268;  // std dev = 2,119, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.2829288018332122;  // std dev = 0,771, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(A, G), location(E, H) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.24569261892619892;  // std dev = 0,677, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.16170606799383766;  // std dev = 0,610, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(E, F), complex(F, I) )
%   | | | then return 0.01762403270700194;  // std dev = 1,111, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3341604593504431;  // std dev = 0,486, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4071973816061613;  // std dev = 0,861, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.2164766364291768;  // std dev = 0,161, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.21856607744020198;  // std dev = 0,771, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( phenotype(E, G), phenotype(A, G) )
%   | | | then return 0.03839515556481844;  // std dev = 0,370, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10931627612237886;  // std dev = 0,097, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.04157720705804383;  // std dev = 0,720, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.32646066471404744;  // std dev = 0,223, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.3783057544201435;  // std dev = 0,182, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11677085970699894;  // std dev = 1,631, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.18501249119620167;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1456635674917004;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, C), interaction(C, E) )
%   | | then return 0.33144287596398014;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2410917581025107;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return -0.05189079514161286;  // std dev = 0,257, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04112266870605909;  // std dev = 1,901, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.13939592719511948;  // std dev = 0,746, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(A, C), interaction(D, A) )
%   then if ( function(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19193236821582974;  // std dev = 0,090, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.1687648445575634;  // std dev = 0,023, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.22840485204587035;  // std dev = 1,318, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(A, H), interaction(G, H) )
%   | | | then return -0.14360796381731625;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09190758914517415;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.2066310184472709;  // std dev = 0,303, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.2542758823541638;  // std dev = 0,299, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.11218686750614651;  // std dev = 0,749, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1371830753280539;  // std dev = 0,027, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return -0.11784880932684354;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03813829818897036;  // std dev = 0,847, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, G), function(G, H) )
%   | | | then return -0.007676126547922356;  // std dev = 0,326, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.13733719090231455;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1708340918769884;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.09053828809590926;  // std dev = 0,868, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.005798719754736186;  // std dev = 1,383, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */


Results
   AUC ROC   = 0.832242
   AUC PR    = 0.061102
   CLL	      = -0.342685
   Precision = 0.024708 at threshold = 0.5
   Recall    = 0.711538
   F1        = 0.047757


Total learning time: 12.192 seconds
Total inference time: 55.865 seconds
AUC ROC: 0.832242


Results scoring model
   AUC ROC   = 0.9896
   AUC PR    = 0.989572
   CLL	      = -0.283307
   Precision = 0.923077 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.941176


Total scoring time: 1.508 seconds
Refined model CLL: -0.283307


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.832242
   AUC PR    = 0.061102
   CLL	      = -0.342685
   Precision = 0.024708 at threshold = 0.5
   Recall    = 0.711538
   F1        = 0.047757


Total learning time: 16.922 seconds
Total inference time: 55.865 seconds
AUC ROC: 0.832242
Total revision time: 16.922
Best scored revision CLL: -0.283307


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:48:08
{'CLL': -0.342685, 'AUC ROC': 0.832242, 'F1': 0.047757, 'Recall': 0.711538, 'parameter_25': {'CLL': -0.273182, 'AUC ROC': 0.881596, 'F1': 0.17758, 'Recall': 0.769231, 'Precision': [0.100376, 0.5], 'Inference time': 32.84, 'Learning time': 2.066, 'AUC PR': 0.103491}, 'Precision': [0.024708, 0.5], 'Inference time': 55.865, 'Learning time': 16.922, 'AUC PR': 0.061102}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), enzyme(A, E) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, I), interaction(C, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(C, J), enzyme(A, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24703782398840118;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7633791738710325;  // std dev = 0,104, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(A, F), complex(D, G) )
%   | | then return 0.4278047540858882;  // std dev = 0,714, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1375990894559462;  // std dev = 0,054, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then return 0.5518526675222027;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.3964959028939835;  // std dev = 1,575, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.22534115039532102;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6032865519576529;  // std dev = 0,143, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F) )
%   | | then return -0.1438212453433619;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.05341694641680044;  // std dev = 0,735, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( phenotype(G, H), enzyme(A, I) )
%   | | | then return 0.4111434879958026;  // std dev = 1,192, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.1435717718924999;  // std dev = 2,225, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.6356805498648179;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5409722356669597;  // std dev = 0,276, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( phenotype(A, F), interaction(D, E) )
%   | | then return 0.1768348647836974;  // std dev = 0,807, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.12366890555505719;  // std dev = 0,064, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, G) )
%   | | then return 0.3538388199212821;  // std dev = 0,813, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.2530683415816475;  // std dev = 1,491, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.12281794624717114;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175813114738379;  // std dev = 0,287, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then return -0.14772637253930343;  // std dev = 0,097, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, G), interaction(D, E) )
%   | | | then return 0.45750385084174444;  // std dev = 0,133, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10020025529779977;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4853907744696773;  // std dev = 0,866, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.2733203001082089;  // std dev = 0,059, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.27340939999831587;  // std dev = 1,468, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.12697383835526702;  // std dev = 1,170, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3285180230410647;  // std dev = 0,272, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then return -0.1302756668635236;  // std dev = 0,088, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, G), interaction(D, E) )
%   | | | then return 0.3503249111364248;  // std dev = 0,120, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09153588242098562;  // std dev = 0,024, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( location(A, I), location(H, I) )
%   | | | then return 0.1630837525723937;  // std dev = 1,791, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.013299072003569038;  // std dev = 1,146, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.23753506596118723;  // std dev = 0,814, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.22283347701802175;  // std dev = 0,141, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E), complex(C, F) )
%   | | then return 0.11534487078394129;  // std dev = 0,365, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09487957919402905;  // std dev = 0,051, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(A, G) )
%   | then return 0.18303668884715715;  // std dev = 0,818, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.25977657907341084;  // std dev = 0,641, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.12175038668126116;  // std dev = 1,348, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.032721980195608576;  // std dev = 1,547, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.31185839600588455;  // std dev = 0,127, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.27296217454673294;  // std dev = 0,136, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.3110704701158537;  // std dev = 0,117, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), complex(G, E) )
%   | | | then return -0.08659484455045247;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.38139101192050545;  // std dev = 0,266, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), phenotype(J, I) )
%   | | | then return 0.35554602979173855;  // std dev = 0,685, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.22105355253682638;  // std dev = 0,261, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.35458399069134944;  // std dev = 0,533, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.032185296762496714;  // std dev = 0,943, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(A, D), enzyme(C, E) )
%   | then return -0.0839695294007304;  // std dev = 0,262, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( phenotype(C, F), complex(A, G) )
%   | | then return 0.23646380786810953;  // std dev = 0,142, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, C), interaction(C, H) )
%   | | | then return 0.10117020171771808;  // std dev = 1,318, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return -0.0034175397464435236;  // std dev = 1,318, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   else return 0.12680969784963675;  // std dev = 0,700, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15581363619460722;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.07302126847879711;  // std dev = 0,354, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F), complex(F, C) )
%   | | | then return -0.07676308635761572;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.15683254475608926;  // std dev = 0,598, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.19990837508639844;  // std dev = 0,201, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, H), location(G, H) )
%   | | | then return 0.08553840231037013;  // std dev = 1,489, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.08674894744043662;  // std dev = 0,945, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return 0.22655689589938846;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.775056
   AUC PR    = 0.121581
   CLL	      = -0.433158
   Precision = 0.033926 at threshold = 0.5
   Recall    = 0.605769
   F1        = 0.064253


Total learning time: 5.281 seconds
Total inference time: 6.455 seconds
AUC ROC: 0.775056


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:48:20
{'CLL': -0.433158, 'AUC ROC': 0.775056, 'F1': 0.064253, 'Recall': 0.605769, 'Precision': [0.033926, 0.5], 'Inference time': 6.455, 'Learning time': 5.281, 'AUC PR': 0.121581}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), enzyme(A, E) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, I), interaction(C, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(C, J), enzyme(A, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24703782398840118;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.615556
   AUC PR    = 0.010132
   CLL	      = -0.202866
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.976 seconds
Total inference time: 2.941 seconds
AUC ROC: 0.615556


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:48:25
{'CLL': -0.202866, 'AUC ROC': 0.615556, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.941, 'Learning time': 1.976, 'AUC PR': 0.010132}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.808741135785635;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.191258864214365;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6531942943559134;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1634047773903601;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1763516101352878;  // std dev = 0,780, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.14293296759209528;  // std dev = 0,755, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10346105646016274;  // std dev = 1,101, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.08309027124101148;  // std dev = 1,094, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.06638132975470151;  // std dev = 1,089, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.35610693472373656;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.014918537293237687;  // std dev = 1,037, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.026394795827697843;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.13402920457261128;  // std dev = 0,449, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03564277905478672;  // std dev = 0,476, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.791902
   AUC PR    = 0.322457
   CLL	      = -0.259229
   Precision = 0.521368 at threshold = 0.5
   Recall    = 0.663043
   F1        = 0.583732


Total learning time: 1.254 seconds
Total inference time: 3.148 seconds
AUC ROC: 0.791902


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.971429
   CLL	      = -0.396816
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.761 seconds
Parameter learned model CLL: -0.396816


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, E), interaction(F, A)', 'false,false': 'interaction(E, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 3, 3], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [1.49e-08, 0, 3], 'true': [0.0, 0, 1], 'false,true,true,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [1.49e-08, 0, 3], 'true': [0.0, 0, 1], 'false,true,true,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true': 'interaction(F, E), interaction(F, A)'}, {'false,true,false,false': [0.78, 3, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.816, 2, 1], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false,false': 'interaction(F, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,true': 'interaction(G, F), interaction(G, A)'}, {'false,false,true,true': [0.816, 2, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.755, 3, 3], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.101, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)'}, {'false,true': [1.094, 5, 4], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, F)', 'false,false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(G, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false,true': [1.089, 5, 4], 'false,false,false,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(A, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'true': 'enzyme(E, C), recursion_proteinclass(E, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)'}, {'false,false,true': [1.037, 5, 3], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true,false': 'interaction(G, D), enzyme(G, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.476, 2, 1], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.449, 1, 2], 'true': [0.0, 0, 1], 'false,true,true,false': [0.816, 2, 1]}]]
[{'': [0.0, 0.2469135802469134], 'false,false,true': [0.22222222222222224, 0.24999999999999992], 'false,false': [0.2469135802469134, nan], 'false': [nan, 0.24691358024691365]}, {'': [0.0, 0.24523440681107944], 'false,true': [0.2222222222222222, 0.24999999999999992], 'false': [0.24523440681107944, nan], 'false,true,false': [7.401486830834377e-17, 0.0], 'false,true,true': [nan, 0.2222222222222222]}, {'': [0.0, 0.18756151385276318], 'false,true': [0.22222222222222218, 0.1667085109942189], 'false': [0.18756151385276318, nan], 'false,true,true': [nan, 0.22222222222222218], 'false,true,false': [7.401486830834377e-17, 0.0]}, {'': [0.0, 0.14248352702990894], 'false,true': [0.22222222222222224, 0.1015234629386252], 'false': [0.14248352702990894, nan], 'true': [nan, 0.0], 'false,true,false': [nan, 0.1015234629386252]}, {'': [0.0, 0.13780456096853397], 'false,false,true': [0.2222222222222222, 0.09493506645812305], 'false,false': [0.13780456096853397, nan], 'false': [nan, 0.137804560968534], 'true': [0.0, nan]}, {'': [0.0, 0.13470539863829256], 'false,true': [nan, 0.13470539863829256], 'false': [0.13470539863829256, nan], 'true': [nan, 0.0]}, {'': [0.0, 0.1329593697775484], 'true': [nan, 0.0], 'false': [0.1329593697775484, nan]}, {'': [nan, 0.11972905233726197], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.13180649553241736], 'false': [nan, 0.11972905233726197], 'false,false,false': [0.13180649553241736, nan]}, {'': [0.01033913523411148, 0.1344956754679782], 'true,true,false': [0.0, 0.0], 'false,false': [0.1344956754679782, nan], 'true': [0.01033913523411148, nan], 'false': [nan, 0.1344956754679782], 'true,true': [nan, 0.01033913523411148]}, {'': [0.0, 0.1264851727129095], 'false,true': [0.2222222222222222, 0.07844339202006331], 'false': [0.1264851727129095, nan], 'false,true,true': [nan, 0.2222222222222222], 'false,true,false': [0.06708992814512893, 0.07540256488096968]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false;interaction(D, E), interaction(E, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false;interaction(E, D), interaction(E, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(E, A), recursion_proteinclass(E, B).;true;true
8;;proteinclass(A, B) :- enzyme(A, C), interaction(A, D).;true;true
8;true;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, D) )
%   | then return 0.4140119940307719;  // std dev = 0,731, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.035136993261038876;  // std dev = 0,948, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, D) )
%   | then return 0.3368859242933108;  // std dev = 0,724, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.02840171507485863;  // std dev = 0,946, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then return 0.25717868162094687;  // std dev = 0,829, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.01819411353532831;  // std dev = 0,821, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, D) )
%   | then return 0.24976946475737213;  // std dev = 0,713, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.007882742748948826;  // std dev = 0,906, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then return 0.1829591845492496;  // std dev = 0,823, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.03595325483700523;  // std dev = 0,793, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2353042653324472;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, F) )
%   | then return 0.15412370970793599;  // std dev = 0,826, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.10995425845323153;  // std dev = 0,715, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then return 0.13453745933173436;  // std dev = 0,794, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.04244430083090643;  // std dev = 0,777, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.549443
   AUC PR    = 0.079988
   CLL	      = -0.655934
   Precision = 0.008194 at threshold = 0.5
   Recall    = 0.467391
   F1        = 0.016105


Total learning time: 7.375 seconds
Total inference time: 14.944 seconds
AUC ROC: 0.549443


Results scoring model
   AUC ROC   = 0.92
   AUC PR    = 0.931429
   CLL	      = -0.416202
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.8


Total scoring time: 1.026 seconds
Refined model CLL: -0.416202


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.791902
   AUC PR    = 0.322457
   CLL	      = -0.259229
   Precision = 0.521368 at threshold = 0.5
   Recall    = 0.663043
   F1        = 0.583732


Total learning time: 10.416 seconds
Total inference time: 3.148 seconds
AUC ROC: 0.791902
Total revision time: 10.416
Best scored revision CLL: -0.396816


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:48:55
{'CLL': -0.259229, 'AUC ROC': 0.791902, 'F1': 0.583732, 'Recall': 0.663043, 'Precision': [0.521368, 0.5], 'parameter_5': {'CLL': -0.259229, 'AUC ROC': 0.791902, 'F1': 0.583732, 'Recall': 0.663043, 'Precision': [0.521368, 0.5], 'Inference time': 3.148, 'Learning time': 1.254, 'AUC PR': 0.322457}, 'Inference time': 3.148, 'Learning time': 10.416, 'AUC PR': 0.322457}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.4620390601607666;  // std dev = 0,665, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.008920869977709295;  // std dev = 0,846, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.3631208149381844;  // std dev = 0,623, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.0075753972329116685;  // std dev = 0,846, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.2826885302653262;  // std dev = 0,598, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.006427376186288303;  // std dev = 0,846, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.2721046139300586;  // std dev = 0,708, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.007381804157932039;  // std dev = 0,711, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.2562459254690674;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then return 0.16284427580188618;  // std dev = 0,888, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.1697389138367936;  // std dev = 0,133, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.17001266391784595;  // std dev = 0,515, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.030770846951319486;  // std dev = 0,804, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.16988585685611585;  // std dev = 0,707, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.018876535995271688;  // std dev = 0,626, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.1322092927829015;  // std dev = 0,509, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.03975428993426601;  // std dev = 0,786, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.499928
   AUC PR    = 0.00725
   CLL	      = -0.835565
   Precision = 0.007252 at threshold = 0.5
   Recall    = 0.423913
   F1        = 0.01426


Total learning time: 1.62 seconds
Total inference time: 1.844 seconds
AUC ROC: 0.499928


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:48:58
{'CLL': -0.835565, 'AUC ROC': 0.499928, 'F1': 0.01426, 'Recall': 0.423913, 'Precision': [0.007252, 0.5], 'Inference time': 1.844, 'Learning time': 1.62, 'AUC PR': 0.00725}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.499935
   AUC PR    = 0.007251
   CLL	      = -0.264495
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.943 seconds
Total inference time: 1.469 seconds
AUC ROC: 0.499935


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:49:01
{'CLL': -0.264495, 'AUC ROC': 0.499935, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.469, 'Learning time': 0.943, 'AUC PR': 0.007251}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.22373365448410584;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.808741135785635;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.191258864214365;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.18886832215749735;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6531942943559134;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1634047773903601;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1557002943717436;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17635161013528783;  // std dev = 0,901, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.12582628229372092;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.14293296759209528;  // std dev = 0,871, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.2999108308211944;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1306628824918301;  // std dev = 1,718, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then return 0.08441207779191778;  // std dev = 1,742, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return -0.3469104562036391;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.09087915078330769;  // std dev = 1,685, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3440442489942521;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.03506066178445594;  // std dev = 1,688, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04308324011241835;  // std dev = 1,504, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.12139894271936584;  // std dev = 0,449, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.011339275577965236;  // std dev = 0,634, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.789657
   AUC PR    = 0.324273
   CLL	      = -0.274317
   Precision = 0.517241 at threshold = 0.5
   Recall    = 0.652174
   F1        = 0.576923


Total learning time: 1.44 seconds
Total inference time: 2.946 seconds
AUC ROC: 0.789657


Results scoring model
   AUC ROC   = 0.92
   AUC PR    = 0.928214
   CLL	      = -0.465715
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 0.84 seconds
Parameter learned model CLL: -0.465715


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, E), interaction(F, A)', 'false,false': 'interaction(E, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'true': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.414, 4, 4], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [1.549, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 4], 'true': [0.0, 0, 2], 'false,true,true,false': [1.549, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 4], 'true': [0.0, 0, 2], 'false,true,true,false': [1.549, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true': 'interaction(F, E), interaction(F, A)'}, {'false,true,false,false': [0.901, 4, 4], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [1.549, 6, 4], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false,false': 'interaction(F, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,true': 'interaction(G, F), interaction(G, A)'}, {'false,false,true,true': [1.549, 6, 4], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.871, 4, 4], 'true,true': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,false': [1.718, 9, 8], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)'}, {'false,true': [1.742, 10, 8], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, F)', 'false,false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(G, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false,true': [1.685, 9, 8], 'false,false,false,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(A, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(I, A)', 'true': 'enzyme(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)'}, {'false,false,true': [1.688, 10, 7], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true,false': 'interaction(G, D), enzyme(G, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.634, 3, 2], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.449, 1, 2], 'true': [0.0, 0, 2], 'false,true,true,false': [1.504, 6, 4]}]]
[{'': [0.0, 0.2469135802469136], 'false,false,true': [0.23999999999999985, 0.24999999999999986], 'false,false': [0.2469135802469136, nan], 'false': [nan, 0.2469135802469134]}, {'': [0.0, 0.246228709105489], 'false,true': [0.2399999999999999, 0.24999999999999994], 'false': [0.246228709105489, nan], 'false,true,false': [0.0, 0.0], 'false,true,true': [nan, 0.2399999999999999]}, {'': [0.0, 0.20820105712516146], 'false,true': [0.23999999999999985, 0.16670851099421885], 'false': [0.20820105712516146, nan], 'false,true,true': [nan, 0.23999999999999985], 'false,true,false': [0.0, 0.0]}, {'': [0.0, 0.17856017534130642], 'false,true': [0.24, 0.1015234629386252], 'false': [0.17856017534130642, nan], 'true': [nan, 0.0], 'false,true,false': [nan, 0.1015234629386252]}, {'': [0.0, 0.1755989526682763], 'false,false,true': [0.2399999999999999, 0.09493506645812305], 'false,false': [0.1755989526682763, nan], 'false': [nan, 0.1755989526682763], 'true': [0.0, nan]}, {'': [0.0, 0.17363021519483157], 'false,true': [0.0, 0.17354410600977319], 'false': [0.17363021519483157, nan], 'true': [nan, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.0, 0.16867271791784105], 'true': [nan, 0.0], 'false': [0.16867271791784105, nan]}, {'': [nan, 0.15215320993681453], 'false,false,true': [0.0, 0.0], 'false,false': [0.0, 0.16706225049473628], 'false': [0.0, 0.15017685196948277], 'false,false,false': [0.16706225049473628, nan]}, {'': [0.009148959889678794, 0.15894067321131589], 'true,true,false': [0.0, 0.0], 'false,false': [0.16752071709371227, nan], 'true': [0.009148959889678794, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.16752071709371227], 'true,true': [nan, 0.009148959889678794]}, {'': [0.0, 0.16106283954962286], 'false,true': [0.22621245111518662, 0.079613834882536], 'false': [0.16106283954962286, nan], 'false,true,true': [nan, 0.22621245111518662], 'false,true,false': [0.06710626303678037, 0.08051109001620814]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false;interaction(D, E), interaction(E, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false;interaction(E, D), interaction(E, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(F, E), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(D, A), interaction(A, D).;true;true
7;false,true;interaction(A, F).;true;true
7;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;;proteinclass(A, B) :- enzyme(A, C), interaction(A, D).;true;true
8;true;interaction(F, A), recursion_proteinclass(F, B).;true;true
8;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(D, D) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.5604034447785035;  // std dev = 0,832, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.16116353546634798;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3051781118907472;  // std dev = 1,507, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6927955569703873;  // std dev = 0,152, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1942568526862833;  // std dev = 0,097, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.0441882844171905;  // std dev = 0,826, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0661655916743232;  // std dev = 0,849, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, D) )
%   | then return 0.3766057719600927;  // std dev = 0,762, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.1325806208310496;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.38761956822101107;  // std dev = 0,734, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06375303944692573;  // std dev = 0,945, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.46644539348613795;  // std dev = 0,249, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.16458828405330683;  // std dev = 0,110, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then return -5.421155084066875E-4;  // std dev = 0,788, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.02146581755136953;  // std dev = 0,811, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, F), location(F, G) )
%   | | then return 0.27120313356315684;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4378091374775596;  // std dev = 0,648, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then return -0.1167228951532134;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.24077038361977884;  // std dev = 0,124, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, D) )
%   | then return 0.1917623607013285;  // std dev = 0,609, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.11369154249103541;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.21143852895644258;  // std dev = 0,607, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.010353768808270505;  // std dev = 0,627, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.07645469859698023;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then return 0.16958083982709504;  // std dev = 0,601, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.06827174638622789;  // std dev = 0,866, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.14977516624730927;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.14344763034960983;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2576160625760959;  // std dev = 0,182, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12853863554727873;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.022856872252469334;  // std dev = 0,320, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return 0.0322569927892647;  // std dev = 0,251, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */


Results
   AUC ROC   = 0.813544
   AUC PR    = 0.156771
   CLL	      = -0.338976
   Precision = 0.092233 at threshold = 0.5
   Recall    = 0.413043
   F1        = 0.150794


Total learning time: 25.881 seconds
Total inference time: 37.107 seconds
AUC ROC: 0.813544


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.245536
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 1.615 seconds
Refined model CLL: -0.245536


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.813544
   AUC PR    = 0.156771
   CLL	      = -0.338976
   Precision = 0.092233 at threshold = 0.5
   Recall    = 0.413043
   F1        = 0.150794


Total learning time: 29.776 seconds
Total inference time: 37.107 seconds
AUC ROC: 0.813544
Total revision time: 29.776
Best scored revision CLL: -0.245536


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:50:11
{'CLL': -0.338976, 'AUC ROC': 0.813544, 'F1': 0.150794, 'Recall': 0.413043, 'Precision': [0.092233, 0.5], 'Inference time': 37.107, 'Learning time': 29.776, 'AUC PR': 0.156771, 'parameter_10': {'CLL': -0.274317, 'AUC ROC': 0.789657, 'F1': 0.576923, 'Recall': 0.652174, 'Precision': [0.517241, 0.5], 'Inference time': 2.946, 'Learning time': 1.44, 'AUC PR': 0.324273}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, E) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E) )
%   | then return 0.7518526675222027;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, F) )
%   | | then return 0.49161093831329294;  // std dev = 0,757, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2282487594805951;  // std dev = 1,046, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then return 0.05286654693689061;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.06047619429415011;  // std dev = 0,820, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.588232901061704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.736133044602798;  // std dev = 0,095, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1861483217659927;  // std dev = 0,040, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then return 0.044521337890063746;  // std dev = 0,810, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.0511461826903714;  // std dev = 0,818, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.3726573074418203;  // std dev = 0,747, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return -0.1419572785514486;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, E) )
%   | | then return 0.38518140583654625;  // std dev = 0,761, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.09010526572502643;  // std dev = 0,927, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, C) )
%   | then return 0.031325727753590916;  // std dev = 0,395, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, E), interaction(E, E) )
%   | | then return 0.24556513938473698;  // std dev = 0,778, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.4263050224267713;  // std dev = 0,179, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then return -0.0015802246476873463;  // std dev = 0,775, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.003820607931182926;  // std dev = 0,781, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, C) )
%   | then return 0.02657078075699;  // std dev = 0,392, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then return 0.3255582766969105;  // std dev = 0,102, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1707066597240691;  // std dev = 0,758, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then return -0.0012978305935795534;  // std dev = 0,775, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.003142401902966871;  // std dev = 0,781, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.22040036248206726;  // std dev = 0,724, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return -0.12899011199797533;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, E) )
%   | | then return 0.23175244133130812;  // std dev = 0,720, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.008649222881206287;  // std dev = 0,821, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, C) )
%   | then return 0.016285964711321224;  // std dev = 0,339, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, E), location(C, E) )
%   | | then return 0.2229383410918492;  // std dev = 0,611, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.05559184004108344;  // std dev = 0,386, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then return -0.023829372010559385;  // std dev = 0,754, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.021148272557970707;  // std dev = 0,758, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.16694161938781982;  // std dev = 0,723, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return -0.11499544680703959;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.42000248573699983;  // std dev = 0,293, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2814343065893978;  // std dev = 0,136, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08847367554731574;  // std dev = 0,403, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.13715343857447523;  // std dev = 0,724, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, D) )
%   | then return 0.09518417585033681;  // std dev = 0,651, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.08371123846038482;  // std dev = 0,496, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.16229808609038007;  // std dev = 0,157, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.625581
   AUC PR    = 0.180523
   CLL	      = -0.619253
   Precision = 0.01239 at threshold = 0.5
   Recall    = 0.413043
   F1        = 0.024058


Total learning time: 3.713 seconds
Total inference time: 2.734 seconds
AUC ROC: 0.625581


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:50:18
{'CLL': -0.619253, 'AUC ROC': 0.625581, 'F1': 0.024058, 'Recall': 0.413043, 'Precision': [0.01239, 0.5], 'Inference time': 2.734, 'Learning time': 3.713, 'AUC PR': 0.180523}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, E) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.499932
   AUC PR    = 0.007251
   CLL	      = -0.250517
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.062 seconds
Total inference time: 1.599 seconds
AUC ROC: 0.499932


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:50:21
{'CLL': -0.250517, 'AUC ROC': 0.499932, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.599, 'Learning time': 1.062, 'AUC PR': 0.007251}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.2867203636709409;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.3581489350995123;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), function(A, F) )
%   | | | then return 0.15288007360931774;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.27409219482143893;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8087411357856349;  // std dev = 4,21e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19125886421436503;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return 0.12915796278608246;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22996799957906647;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6531942943559136;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1634047773903601;  // std dev = 9,13e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.17026060307790808;  // std dev = 1,846, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17635161013528775;  // std dev = 1,192, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.13638133591080162;  // std dev = 1,846, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.1429329675920952;  // std dev = 1,153, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19236869019131567;  // std dev = 0,740, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.10501396226172677;  // std dev = 2,028, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then return 0.08780283094207388;  // std dev = 2,153, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return 0.002048845943348976;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.07696055730451884;  // std dev = 1,988, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(A, C), interaction(A, D) )
%   then if ( function(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.44514151390179246;  // std dev = 0,324, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.30085363992204445;  // std dev = 0,141, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.020226542049770178;  // std dev = 1,701, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return 0.007736609763566123;  // std dev = 0,663, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.05152322134759815;  // std dev = 1,607, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(G, D), function(G, H) )
%   | | | then return 0.03157907980629034;  // std dev = 0,896, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.08323142076125717;  // std dev = 0,374, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.843956
   AUC PR    = 0.296109
   CLL	      = -0.272794
   Precision = 0.348066 at threshold = 0.5
   Recall    = 0.684783
   F1        = 0.461538


Total learning time: 1.867 seconds
Total inference time: 9.23 seconds
AUC ROC: 0.843956


Results scoring model
   AUC ROC   = 0.946667
   AUC PR    = 0.95205
   CLL	      = -0.438564
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.8


Total scoring time: 1.125 seconds
Parameter learned model CLL: -0.438564


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, E), interaction(F, A)', 'false,false': 'interaction(E, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'true': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.871, 7, 7], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [1.852, 8, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,true': 'interaction(A, E), function(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.816, 2, 1], 'false,true,false,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [4.21e-08, 0, 7], 'true': [0.0, 0, 2], 'false,true,true,false': [1.651, 6, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,true': 'interaction(A, D), function(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.816, 2, 1], 'false,true,false,false': [9.13e-09, 7, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 7], 'true': [0.0, 0, 2], 'false,true,true,false': [1.651, 6, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'false': 'interaction(E, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true': 'interaction(F, E), interaction(F, A)'}, {'false,true,false,false': [1.192, 7, 7], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [1.846, 8, 6], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false,false': 'interaction(F, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,true': 'interaction(G, F), interaction(G, A)'}, {'false,false,true,true': [1.846, 8, 6], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.153, 7, 7], 'true,true': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,false': [2.028, 14, 12], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.74, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)'}, {'false,true': [2.153, 15, 13], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, F)', 'false,false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(G, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false,true': [1.988, 13, 12], 'false,false,false,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true': [0.801, 2, 1], 'false,false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'function(A, C), interaction(A, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(I, A)', 'true': 'function(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)'}, {'false,false,true': [1.701, 10, 7], 'false,false,false': [0.0, 0, 0], 'true,false': [0.141, 5, 0], 'false,true,true': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'true,true,false,false': [0.324, 0, 6], 'true,true,false,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,true': 'interaction(A, D), function(A, F)', 'false,true,false': 'interaction(G, D), function(G, H)'}, {'false,true,true,true': [0.663, 2, 1], 'false,true,false,false': [0.374, 1, 1], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.896, 6, 6], 'true': [0.0, 0, 2], 'false,true,true,false': [1.607, 6, 5]}]]
[{'': [0.0, 0.2487244897959179], 'false,false,true': [0.24489795918367352, 0.25000000000000006], 'false,false': [0.2487244897959179, nan], 'false': [nan, 0.24872448979591835]}, {'': [0.0, 0.2483677656219347], 'false,true': [0.24489795918367324, 0.2500000000000001], 'false': [0.2483677656219347, nan], 'false,true,false': [2.5376526277146434e-16, 0.0], 'false,true,true': [0.2222222222222222, 0.2479338842975207]}, {'': [0.0, 0.20575549736639046], 'false,true': [0.24413530311863374, 0.16670851099421893], 'false': [0.20575549736639046, nan], 'false,true,true': [0.2222222222222222, 0.24793388429752075], 'false,true,false': [0.0, 1.1895246692412391e-17]}, {'': [0.0, 0.17252249174350529], 'false,true': [0.2435029703648986, 0.10152346293862524], 'false': [0.17252249174350529, nan], 'true': [nan, 0.0], 'false,true,false': [nan, 0.10152346293862524]}, {'': [0.0, 0.16918408078799044], 'false,false,true': [0.24341163317901424, 0.0949350664581231], 'false,false': [0.16918408078799044, nan], 'false': [nan, 0.16918408078799055], 'true': [0.0, nan]}, {'': [0.0, 0.1669592452318418], 'false,true': [0.2741671183342132, 0.15816742515588206], 'false': [0.1669592452318418, nan], 'true': [nan, 0.0], 'false,true,true': [nan, 0.2741671183342132]}, {'': [0.0, 0.16547859592738376], 'true': [nan, 0.0], 'false': [0.16547859592738376, nan]}, {'': [nan, 0.15431802197585986], 'false,false,true': [0.0, 0.0], 'false,false': [0.0, 0.15806702911708506], 'false': [0.21366505769138514, 0.1470460973695887], 'false,false,false': [0.15806702911708506, nan]}, {'': [0.1370198837207665, 0.1616299041401648], 'true,true,false': [0.0, 0.017454232291096067], 'false,false': [0.17016194339064786, nan], 'true': [0.025429716142011078, 0.003952727653481136], 'false,true': [0.0, nan], 'false': [0.0, 0.17016194339064786], 'true,true': [nan, 0.025429716142011078]}, {'': [0.0, 0.14189938150653159], 'false,true': [0.2161298263731309, 0.06766387283575866], 'false': [0.14189938150653159, nan], 'false,true,true': [0.1465643423867691, 0.2346913880922532], 'false,true,false': [0.06690693985761063, 0.0699186441393941]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false;interaction(D, E), interaction(E, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false;interaction(E, D), interaction(E, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(D, A), interaction(A, D).;true;true
7;false,true;interaction(A, F).;true;true
7;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;;proteinclass(A, B) :- function(A, C), interaction(A, D).;true;true
8;true;function(E, C), recursion_proteinclass(E, B).;true;true
8;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
8;true,true;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), complex(E, F) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.19148226843284558;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), complex(G, H) )
%   | | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 2.8584995808503266E-5;  // std dev = 0,915, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.28549046351016844;  // std dev = 1,763, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(D, J), recursion_proteinclass(J, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), complex(G, H) )
%   | | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.44148961646341717;  // std dev = 0,795, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09932756204723837;  // std dev = 1,817, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), complex(E, F) )
%   | | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.716704966250928;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19997826130171242;  // std dev = 0,157, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.16884391999927342;  // std dev = 1,044, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.03750788632713004;  // std dev = 0,940, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), interaction(E, F) )
%   | | then return 0.32526188415454793;  // std dev = 0,817, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.10101742326814867;  // std dev = 0,538, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then return 0.22105201996981266;  // std dev = 0,853, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.02758437550844486;  // std dev = 1,316, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.14269942554177098;  // std dev = 0,836, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.3957369840019247;  // std dev = 0,348, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.588732944199925;  // std dev = 0,253, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.26991304851243075;  // std dev = 0,120, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1988686598459727;  // std dev = 0,255, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.146925644452372;  // std dev = 1,019, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( complex(A, D) )
%   | then return 0.0029662708447609856;  // std dev = 0,734, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( enzyme(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.2990942999485554;  // std dev = 0,232, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14403398238388235;  // std dev = 0,630, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.013549579823186978;  // std dev = 1,009, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.09484543256335463;  // std dev = 0,955, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.006090902981191378;  // std dev = 0,443, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.357238102094377;  // std dev = 0,478, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.2087766170082986;  // std dev = 0,262, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.10589659795193158;  // std dev = 1,012, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(A, C), interaction(A, D) )
%   then if ( function(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2676766752389012;  // std dev = 0,310, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.17485309708487337;  // std dev = 0,223, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.35536744659499037;  // std dev = 0,290, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1977252416311573;  // std dev = 0,196, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.10147643808083484;  // std dev = 0,847, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then return -0.0732691066561386;  // std dev = 0,457, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23086331131178353;  // std dev = 0,352, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16115270360122727;  // std dev = 0,188, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.14030326923692354;  // std dev = 0,888, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.908518
   AUC PR    = 0.136767
   CLL	      = -0.408431
   Precision = 0.035961 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.068803


Total learning time: 27.601 seconds
Total inference time: 38.767 seconds
AUC ROC: 0.908518


Results scoring model
   AUC ROC   = 0.995556
   AUC PR    = 0.995694
   CLL	      = -0.245439
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 1.685 seconds
Refined model CLL: -0.245439


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.908518
   AUC PR    = 0.136767
   CLL	      = -0.408431
   Precision = 0.035961 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.068803


Total learning time: 32.278 seconds
Total inference time: 38.767 seconds
AUC ROC: 0.908518
Total revision time: 32.278
Best scored revision CLL: -0.245439


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:51:42
{'CLL': -0.408431, 'AUC ROC': 0.908518, 'F1': 0.068803, 'Recall': 0.793478, 'Precision': [0.035961, 0.5], 'parameter_15': {'CLL': -0.272794, 'AUC ROC': 0.843956, 'F1': 0.461538, 'Recall': 0.684783, 'Precision': [0.348066, 0.5], 'Inference time': 9.23, 'Learning time': 1.867, 'AUC PR': 0.296109}, 'Inference time': 38.767, 'Learning time': 32.278, 'AUC PR': 0.136767}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), complex(D, E) )
%   | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), phenotype(A, G) )
%   | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.7609104304538484;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(F, C), complex(F, G) )
%   | | then return 0.28162893957529533;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, H), interaction(A, I) )
%   | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.24811816884741303;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.5989092865963347;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(F, C), complex(F, G) )
%   | | then return 0.2297896197256053;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, H), complex(A, I) )
%   | then return 0.40725476176324155;  // std dev = 0,842, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then return 0.38759213635780876;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.0028385032793780433;  // std dev = 1,223, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.17767963093800185;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.06387701513263938;  // std dev = 0,823, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), enzyme(E, F) )
%   | | then return 0.2951926547576272;  // std dev = 0,475, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.6828162190495338;  // std dev = 0,118, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), interaction(H, I) )
%   | | | then return 0.38134153229933654;  // std dev = 0,824, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17239931584355586;  // std dev = 0,600, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.1639852110857604;  // std dev = 1,055, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.012333616347866038;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.052585399910050144;  // std dev = 0,824, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), enzyme(E, F) )
%   | | then return 0.23433956589495702;  // std dev = 0,442, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5251526614908688;  // std dev = 0,142, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), interaction(H, I) )
%   | | | then return 0.2922354896551112;  // std dev = 0,824, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13207639823517212;  // std dev = 0,598, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.13332655969072998;  // std dev = 1,052, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.010533917740125442;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), complex(D, E) )
%   | then return 0.14176419762770778;  // std dev = 1,014, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.3169601086219932;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then return -0.03762050568953144;  // std dev = 0,962, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5753861941529873;  // std dev = 0,305, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2364235531254946;  // std dev = 0,084, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08491266959309376;  // std dev = 0,510, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.06344656766994608;  // std dev = 0,697, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.28177054710740035;  // std dev = 0,123, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return -0.0027817181923489426;  // std dev = 1,333, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.333416795824077;  // std dev = 0,191, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19239111500276354;  // std dev = 0,820, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then return 0.205911507434297;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, E) )
%   | then return -0.050653906082020674;  // std dev = 0,757, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.1879080513088304;  // std dev = 0,801, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, G), phenotype(A, H) )
%   | | | then return 0.17926606091814082;  // std dev = 0,616, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.007609138283746421;  // std dev = 1,213, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.0665348220085076;  // std dev = 0,673, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), complex(E, F) )
%   | | then return 0.06419542440220406;  // std dev = 0,259, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.25189589626548026;  // std dev = 0,162, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, H), complex(G, I) )
%   | | | then return 0.2680165714930273;  // std dev = 0,622, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.05675531825573422;  // std dev = 1,064, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.15246134245714807;  // std dev = 0,816, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.05534287763558408;  // std dev = 0,676, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.04923798137560647;  // std dev = 0,253, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21355290384787698;  // std dev = 0,128, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I), phenotype(A, H) )
%   | | | then return 0.2074613021908167;  // std dev = 0,611, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.04608060098726353;  // std dev = 1,064, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.12735452787689933;  // std dev = 0,816, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.544331
   AUC PR    = 0.008185
   CLL	      = -0.696687
   Precision = 0.007881 at threshold = 0.5
   Recall    = 0.402174
   F1        = 0.015459


Total learning time: 3.406 seconds
Total inference time: 2.646 seconds
AUC ROC: 0.544331


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:51:48
{'CLL': -0.696687, 'AUC ROC': 0.544331, 'F1': 0.015459, 'Recall': 0.402174, 'Precision': [0.007881, 0.5], 'Inference time': 2.646, 'Learning time': 3.406, 'AUC PR': 0.008185}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), complex(D, E) )
%   | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.499984
   AUC PR    = 0.007253
   CLL	      = -0.223803
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.246 seconds
Total inference time: 1.568 seconds
AUC ROC: 0.499984


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:51:51
{'CLL': -0.223803, 'AUC ROC': 0.499984, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.568, 'Learning time': 1.246, 'AUC PR': 0.007253}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.32873717039363;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.2792015666784597;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return 0.4799159206986556;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24182068260341755;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8206560238683441;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.17934397613165595;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.39602054664030323;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20229235060522185;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6682193454209373;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15444666650574426;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.19075531147717203;  // std dev = 2,037, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13553451855570617;  // std dev = 1,384, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.15101356235190785;  // std dev = 2,036, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.1116336561145205;  // std dev = 1,347, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3639952644790567;  // std dev = 0,811, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.07115819995438516;  // std dev = 2,220, 32,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D), interaction(A, C) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then return 0.08110227305054023;  // std dev = 2,390, 36,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.04167150562505458;  // std dev = 1,100, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.06845819129239468;  // std dev = 2,111, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.45668914912763603;  // std dev = 0,183, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.2949891776449084;  // std dev = 0,233, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.014897118494430298;  // std dev = 2,081, 28,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.08528216819076422;  // std dev = 0,609, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.022575861857482282;  // std dev = 1,816, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(G, D), phenotype(G, H) )
%   | | | then return 0.039695440093272145;  // std dev = 0,970, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.0435740224364893;  // std dev = 0,722, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.924676
   AUC PR    = 0.28672
   CLL	      = -0.392294
   Precision = 0.049317 at threshold = 0.5
   Recall    = 0.902174
   F1        = 0.093521


Total learning time: 1.797 seconds
Total inference time: 4.023 seconds
AUC ROC: 0.924676


Results scoring model
   AUC ROC   = 0.9525
   AUC PR    = 0.958067
   CLL	      = -0.428164
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.857143


Total scoring time: 0.936 seconds
Parameter learned model CLL: -0.428164


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, E), interaction(F, A)', 'false,false': 'interaction(E, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'false,false,true,true': [2.058, 9, 8], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true': [2.11e-08, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true,false': [2.152, 11, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, E), phenotype(A, F)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.816, 1, 2], 'false,true,false,false': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 8], 'true': [0.0, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,true,true,false': [1.852, 8, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.816, 1, 2], 'false,true,false,false': [1.29e-08, 11, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 8], 'true': [1.05e-08, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,true,true,false': [1.852, 8, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false,true': 'interaction(G, F), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true': 'interaction(A, E), interaction(E, C)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false,false': [1.384, 11, 8], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 1], 'false,true,true': [2.037, 9, 8], 'false,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false': 'interaction(G, A)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'false,false,true,true': [2.036, 9, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.347, 11, 8], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'phenotype(A, J)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,true,false': [2.22, 19, 13], 'false,false,false,false': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.811, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'true,true': 'interaction(C, D), interaction(A, C)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'true,true,true': [0.0, 0, 1], 'false,true': [2.39, 20, 16], 'false,false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, G)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, E)', 'false,false,false': 'interaction(H, A)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [2.111, 17, 13], 'false,false,false,false': [0.0, 0, 1], 'false,true': [1.1, 3, 3], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'phenotype(A, C), interaction(A, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(I, A)', 'true': 'phenotype(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'false,false,true': [2.081, 17, 11], 'true,false': [0.233, 3, 0], 'false,false,false,true': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1], 'true,true,false,false': [0.183, 0, 5], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'phenotype(A, J)', 'false,true,false': 'interaction(G, D), phenotype(G, H)'}, {'false,true,true,true': [0.609, 1, 2], 'false,true,false,false': [0.722, 4, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.97, 7, 5], 'true': [0.0, 0, 3], 'false,false,false,false': [0.0, 0, 1], 'false,true,true,false': [1.816, 8, 6]}]]
[{'': [1.4802973661668753e-16, 0.24835646457268032], 'false,false,true': [0.24913494809688583, 0.24376731301939064], 'false,false': [0.2469135802469131, 0.0], 'false': [nan, 0.2483564645726808], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.24558855920753567], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.2222222222222222, 0.24489795918367344], 'false,true': [0.2491349480968855, 0.2437673130193905], 'false': [0.2467443697704984, 0.0], 'false,true,false': [-2.220446049250313e-16, 0.0]}, {'': [3.700743415417188e-17, 0.20146981006351775], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.22222222222222224, 0.2448979591836735], 'false,true': [0.2463506346175981, 0.16497668784427394], 'false': [0.2038977105789924, 0.0], 'false,true,false': [-5.551115123125783e-17, 1.5139404881252134e-17]}, {'': [-3.700743415417188e-17, 0.16637852993332453], 'false,false': [nan, 0.0], 'false,true,false': [nan, 0.10088414722831719], 'true': [0.0, 0.0], 'false,true': [0.24400772089252576, 0.10088414722831719], 'false': [0.16923026034644092, 0.0], 'true,true': [0.0, nan], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.16239624895469795], 'false,false,true': [0.24375194066725162, 0.09556113146538485], 'false,false': [0.16592662236621292, 0.0], 'true,false': [0.0, nan], 'true': [0.0, 0.0], 'false': [nan, 0.16239624895469798], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.15978184848111335], 'false,false': [nan, 0.0], 'false,true,true': [nan, 0.16462355428847766], 'true': [0.0, 0.0], 'false,true': [0.16462355428847766, 0.15394398938294518], 'false': [0.16360009376597237, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.15485622849845243], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'true': [0.0, 0.0], 'false': [0.1587104330253502, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.1462971338389364], 'false,false,true': [0.0, 0.0], 'false,false': [0.0, 0.1441017194779469], 'true': [0.0, nan], 'false': [0.20180736682615527, 0.13599756914411687], 'false,false,false': [0.1485243913649876, 0.0]}, {'': [0.11478108591635679, 0.14554834957872947], 'true,true,false': [0.0, 0.006681333658197497], 'false,false': [0.1546778786883818, 0.0], 'true': [0.023626001580696547, 0.018070689248830023], 'false,true': [0.0, nan], 'false': [0.0, 0.14997679638082514], 'true,true': [0.0, 0.01839871415151484], 'false,false,false': [0.0, nan]}, {'': [-2.3129646346357427e-18, 0.13923536948500614], 'false,false': [nan, 0.0], 'false,true,true': [0.12377600543150712, 0.23557825474946362], 'false,true': [0.2164198903226493, 0.07700122868852699], 'false': [0.1428517734421938, 0.0], 'false,false,false': [nan, 0.0], 'false,true,false': [0.07845975855641261, 0.07449139067678757]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(D, E), interaction(E, A).;true;true
1;false;interaction(D, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false;interaction(D, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, C), phenotype(A, D).;true;true
3;false;interaction(F, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(G, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
6;false;interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;interaction(A, G).;true;true
7;false,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
7;false,false,false;interaction(H, A).;true;true
8;;proteinclass(A, B) :- phenotype(A, C), interaction(A, D).;true;true
8;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(I, A).;true;true
8;true;phenotype(E, C), recursion_proteinclass(E, B).;true;true
8;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( enzyme(G, E), complex(G, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.058148935099512224;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.5692863599676149;  // std dev = 0,879, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21931399531050838;  // std dev = 1,730, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7529488085514597;  // std dev = 0,122, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1682511023627727;  // std dev = 0,070, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.4720867391128027;  // std dev = 0,887, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18622625725854244;  // std dev = 1,723, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.591574525198774;  // std dev = 0,162, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1460625813743421;  // std dev = 0,062, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), location(A, G) )
%   | | then if ( location(H, G), interaction(H, A) )
%   | | | then return 0.2742677157860632;  // std dev = 0,786, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.4418845600133412;  // std dev = 0,101, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.2822681231898394;  // std dev = 1,011, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05765486492577496;  // std dev = 1,807, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), location(A, G) )
%   | | then if ( enzyme(H, F), complex(H, I) )
%   | | | then return 0.18155450841087006;  // std dev = 0,757, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.32239713768696354;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.1659600841746403;  // std dev = 1,471, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.01233340544512435;  // std dev = 1,430, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), location(A, G) )
%   | | then if ( location(H, G), interaction(H, A) )
%   | | | then return 0.17003006384749644;  // std dev = 0,739, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2820787778023474;  // std dev = 0,109, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.17230958169639887;  // std dev = 1,099, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.026312477835594993;  // std dev = 1,718, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), location(A, G) )
%   | | then if ( enzyme(H, F), complex(H, I) )
%   | | | then return 0.1053168101195606;  // std dev = 0,729, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2182418213310779;  // std dev = 0,051, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.09934104249112627;  // std dev = 1,738, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.03086995441386441;  // std dev = 1,035, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return 0.082252589523828;  // std dev = 1,184, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.061995750789676014;  // std dev = 1,830, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3916402765073296;  // std dev = 0,254, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.339232210544356;  // std dev = 0,318, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.05147475929697376;  // std dev = 0,886, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.058469051045356775;  // std dev = 1,635, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( enzyme(G, E), interaction(G, H) )
%   | | | then return 0.1710500231740971;  // std dev = 0,601, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04495108683868017;  // std dev = 0,386, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.06469142319350187;  // std dev = 1,277, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.019332073358807704;  // std dev = 1,412, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.802011
   AUC PR    = 0.046534
   CLL	      = -0.730025
   Precision = 0.016857 at threshold = 0.5
   Recall    = 0.771739
   F1        = 0.032993


Total learning time: 3.7 seconds
Total inference time: 4.16 seconds
AUC ROC: 0.802011


Results scoring model
   AUC ROC   = 0.9525
   AUC PR    = 0.961775
   CLL	      = -0.369776
   Precision = 0.9375 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.833333


Total scoring time: 0.927 seconds
Refined model CLL: -0.369776


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.802011
   AUC PR    = 0.046534
   CLL	      = -0.730025
   Precision = 0.016857 at threshold = 0.5
   Recall    = 0.771739
   F1        = 0.032993


Total learning time: 7.359999999999999 seconds
Total inference time: 4.16 seconds
AUC ROC: 0.802011
Total revision time: 7.359999999999999
Best scored revision CLL: -0.369776


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:52:08
{'CLL': -0.730025, 'AUC ROC': 0.802011, 'F1': 0.032993, 'Recall': 0.771739, 'Precision': [0.016857, 0.5], 'Inference time': 4.16, 'Learning time': 7.359999999999999, 'AUC PR': 0.046534, 'parameter_20': {'CLL': -0.392294, 'AUC ROC': 0.924676, 'F1': 0.093521, 'Recall': 0.902174, 'Precision': [0.049317, 0.5], 'Inference time': 4.023, 'Learning time': 1.797, 'AUC PR': 0.28672}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, C), location(C, D) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(C, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( location(I, H), interaction(I, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), interaction(L, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.016851064900487787;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), complex(E, F) )
%   | then return 0.4350205931216841;  // std dev = 1,115, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.7465686719570416;  // std dev = 0,075, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), location(A, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, G), location(G, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.4379363516812385;  // std dev = 1,138, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.3416482486286218;  // std dev = 0,934, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.16932078898570713;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.19352118395477677;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13981214937855654;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), complex(E, F) )
%   | then return 0.3495884843007199;  // std dev = 1,107, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.5839469126176204;  // std dev = 0,097, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), location(A, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, G), location(G, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3521342322564906;  // std dev = 1,135, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), interaction(L, A) )
%   | | | then return 0.291936062344777;  // std dev = 0,917, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.14797408318242636;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.16858718260266978;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1238286182573222;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, C), location(C, D) )
%   | then return 0.12087934778908352;  // std dev = 0,257, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( phenotype(A, E), location(C, F) )
%   | | then return 0.5154671785905622;  // std dev = 0,147, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2362883443650244;  // std dev = 1,084, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( location(I, H), interaction(I, A) )
%   | | then return 0.20921808759229696;  // std dev = 1,053, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.44910245462985204;  // std dev = 0,110, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.2717313726369971;  // std dev = 0,840, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.17215146714691806;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.14406060028028053;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11100742104220825;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.45286006318352906;  // std dev = 0,167, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(G, C), complex(G, H) )
%   | | then return 0.046490837189979595;  // std dev = 0,928, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3508391434678838;  // std dev = 0,121, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, I), phenotype(A, J) )
%   | then return 0.26686057163940524;  // std dev = 0,750, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then if ( phenotype(K, M) )
%   | | | then return -0.014905524948065407;  // std dev = 0,685, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2911369405686537;  // std dev = 0,845, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return -0.0416764441908227;  // std dev = 0,731, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.038101605321090116;  // std dev = 0,844, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.34859653868235707;  // std dev = 0,156, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(G, C), complex(G, H) )
%   | | then return 0.03516543803265383;  // std dev = 0,928, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2767263021478481;  // std dev = 0,108, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( phenotype(A, I), complex(A, J) )
%   | then return 0.21251650074048878;  // std dev = 0,721, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then if ( phenotype(K, M) )
%   | | | then return -0.012436736452645527;  // std dev = 0,686, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2188622189534504;  // std dev = 0,845, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return -0.03628997473813296;  // std dev = 0,735, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.032968722207165214;  // std dev = 0,843, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3031789426213506;  // std dev = 0,109, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, A), complex(D, F) )
%   | | then if ( complex(E, F), phenotype(A, G) )
%   | | | then return 0.1257827569871674;  // std dev = 0,630, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3444474042729582;  // std dev = 0,627, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(D, H), complex(E, H) )
%   | | | then return -0.21539241173491877;  // std dev = 0,397, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.0393533471029866;  // std dev = 1,388, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else return 0.18435131875005484;  // std dev = 0,362, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), interaction(E, F) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.3063663749989405;  // std dev = 0,280, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1378265178942224;  // std dev = 0,614, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.041602398852322905;  // std dev = 0,566, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then return 0.1318434883036797;  // std dev = 0,612, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.15430845780315178;  // std dev = 0,306, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.20616949192176848;  // std dev = 0,211, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.04905813334284815;  // std dev = 0,984, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.11585338271537311;  // std dev = 0,918, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2129110493835826;  // std dev = 0,103, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(D, F), interaction(E, A) )
%   | | then if ( complex(E, F), phenotype(A, G) )
%   | | | then return 0.07386117540385374;  // std dev = 0,567, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.25394575006721304;  // std dev = 0,594, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(D, H), complex(E, H) )
%   | | | then return -0.1907216434104226;  // std dev = 0,348, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.025031461473704168;  // std dev = 1,350, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else return 0.1490923071658834;  // std dev = 0,313, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( location(E, D), interaction(E, A) )
%   | then if ( enzyme(E, F) )
%   | | then return 0.17279600029608366;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.00632281193682358;  // std dev = 0,794, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.22298368224041776;  // std dev = 0,170, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), location(A, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.19941329586147183;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(G, J) )
%   | | | then return -0.0998274035021522;  // std dev = 0,397, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1286113002245945;  // std dev = 0,815, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, M), interaction(M, A) )
%   | | | then return 0.05937347121744705;  // std dev = 0,694, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12832415075679734;  // std dev = 0,177, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.018157698238581328;  // std dev = 0,814, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.558734
   AUC PR    = 0.026931
   CLL	      = -0.719818
   Precision = 0.008369 at threshold = 0.5
   Recall    = 0.554348
   F1        = 0.016489


Total learning time: 9.211 seconds
Total inference time: 5.09 seconds
AUC ROC: 0.558734


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:52:22
{'CLL': -0.719818, 'AUC ROC': 0.558734, 'F1': 0.016489, 'Recall': 0.554348, 'Precision': [0.008369, 0.5], 'Inference time': 5.09, 'Learning time': 9.211, 'AUC PR': 0.026931}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), complex(E, F) )
%   | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), location(A, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, G), location(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), interaction(L, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.54164
   AUC PR    = 0.009279
   CLL	      = -0.222633
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.138 seconds
Total inference time: 1.926 seconds
AUC ROC: 0.54164


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:52:27
{'CLL': -0.222633, 'AUC ROC': 0.54164, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.926, 'Learning time': 2.138, 'AUC PR': 0.009279}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.27920156667845974;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.3126943896449669;  // std dev = 2,335, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), location(A, F) )
%   | | | then return 0.42065602386834405;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1777988810112013;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8156735149828547;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.18432648501714546;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7744639907355253;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2072058164229512;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), location(A, F) )
%   | | | then return 0.35028678788622336;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.15012564110386287;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6618685162759873;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.15820669945488106;  // std dev = 1,29e-08, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6140573620525817;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17522252554422552;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.16512113323793787;  // std dev = 2,122, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15296904603885259;  // std dev = 1,496, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.39015272596321293;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.23247241926897075;  // std dev = 0,701, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3022043155909466;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.13271054302944033;  // std dev = 2,120, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.125112363207545;  // std dev = 1,452, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return 0.18493811385905728;  // std dev = 0,673, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3858226568449388;  // std dev = 0,780, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.07260907281417728;  // std dev = 2,355, 37,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), interaction(A, J) )
%   | | | then return 0.08650346038457901;  // std dev = 0,599, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.31425858826570635;  // std dev = 0,101, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D), interaction(A, C) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then return 0.08104083354603511;  // std dev = 2,510, 41,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3089079976409603;  // std dev = 0,144, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22787215100335173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, E), interaction(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14651578027156165;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), interaction(A, G) )
%   | then return 0.01659202443282739;  // std dev = 1,115, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07394761451372714;  // std dev = 2,234, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.09329638448349495;  // std dev = 0,519, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14093486931298627;  // std dev = 0,017, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40390603300962746;  // std dev = 0,390, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.2711530451435656;  // std dev = 0,283, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.017715539572666764;  // std dev = 1,979, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13446581523676407;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), location(A, F) )
%   | | | then return 0.08963800207948552;  // std dev = 0,830, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.00763693960719884;  // std dev = 1,764, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(G, D), location(G, H) )
%   | | | then return 0.0042607462677926545;  // std dev = 1,096, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.23859762981960037;  // std dev = 0,470, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11408830094258715;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return 0.050198004198841885;  // std dev = 0,393, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.990899
   AUC PR    = 0.431563
   CLL	      = -0.285502
   Precision = 0.250737 at threshold = 0.5
   Recall    = 0.923913
   F1        = 0.394432


Total learning time: 1.968 seconds
Total inference time: 9.795 seconds
AUC ROC: 0.990899


Results scoring model
   AUC ROC   = 0.9616
   AUC PR    = 0.967614
   CLL	      = -0.387546
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 1.276 seconds
Parameter learned model CLL: -0.387546


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false': 'interaction(G, A)', 'false,true,false': 'interaction(F, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.152, 11, 8], 'false,false,false,true': [1.095, 2, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [2.11e-08, 0, 3], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [2.335, 12, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, E), location(A, F)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [1.095, 2, 3], 'false,true,false,false': [0.0, 12, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 10], 'true': [0.0, 0, 3], 'false,false,true,false': [0.0, 2, 0], 'false,false,true,true': [0.063, 0, 4], 'false,true,true,false': [1.793, 9, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, D), location(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [1.095, 2, 3], 'false,true,false,false': [1.29e-08, 12, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 10], 'true': [1.05e-08, 0, 3], 'false,false,true,false': [0.0, 2, 0], 'false,false,true,true': [0.083, 0, 4], 'false,true,true,false': [1.793, 9, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'true': 'interaction(A, C), location(A, D)', 'false,true': 'interaction(G, F), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true': 'interaction(A, E), interaction(E, C)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false,false': [1.496, 12, 10], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.701, 2, 3], 'false,true,true': [2.122, 11, 8], 'false,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false': 'interaction(G, A)', 'true': 'location(A, D)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, I), interaction(A, J)'}, {'false,false,true,true': [2.12, 11, 8], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.673, 2, 3], 'false,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [1.452, 12, 10], 'true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, J), interaction(A, J)', 'false,false': 'location(A, H), interaction(A, I)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.599, 2, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,false': [2.355, 22, 15], 'false,false,true,false': [0.101, 0, 2], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.78, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'true,true': 'interaction(C, D), interaction(A, C)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.144, 0, 4], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'true,true,true': [0.0, 0, 1], 'false,true': [2.51, 23, 18], 'false,false,true,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, I)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true,false': 'interaction(C, E), interaction(E, C)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(G, A), interaction(A, G)', 'false,false,false': 'interaction(J, A)', 'true,false,false': 'interaction(F, A), recursion_proteinclass(F, B)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [2.234, 19, 15], 'false,false,false,false': [0.519, 2, 3], 'false,true': [1.115, 4, 3], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'location(A, C), interaction(A, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(I, A)', 'true': 'location(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)'}, {'false,false,true': [1.979, 16, 10], 'false,false,false': [0.0, 0, 0], 'true,false': [0.283, 9, 0], 'false,true,true': [0.0, 0, 1], 'true,true,true': [0.017, 0, 2], 'true,true,false,false': [0.39, 0, 11], 'true,true,false,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, J), interaction(J, I)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(A, D), location(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'location(A, K)', 'false,true,false': 'interaction(G, D), location(G, H)'}, {'false,true,true,true': [0.83, 2, 3], 'false,true,false,false': [0.47, 1, 3], 'false,false,false,true': [0.393, 2, 3], 'false,true,false,true': [1.096, 11, 7], 'true': [0.001, 0, 3], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,true,true,false': [1.764, 9, 5]}]]
[{'': [1.4802973661668753e-16, 0.24898143956541377], 'false,false,true': [0.24376731301939059, 0.2479338842975207], 'false,false': [0.2462819750148716, 0.23999999999999994], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.24810964083175788], 'false,false,false': [0.23999999999999994, nan]}, {'': [0.0, 0.24622890389087254], 'false,false,true': [0.0010079879088220611, 0.0], 'false,false': [0.2148221275584504, nan], 'false,true,false': [-2.6645352591003756e-16, -1.3877787807814457e-17], 'false,true': [0.2437673130193905, 0.24793388429752036], 'false': [0.24620515572054164, 0.2148221275584504], 'false,true,true': [0.23999999999999994, 0.22959183673469383]}, {'': [3.700743415417188e-17, 0.1952026485452083], 'false,false,true': [0.00174281693565137, 0.0], 'false,false': [0.1395980426159518, nan], 'false,true,true': [0.23999999999999994, 0.22959183673469383], 'false,true': [0.24009956370945884, 0.1667413287907513], 'false': [0.20077096923108076, 0.1395980426159518], 'false,true,false': [-8.881784197001253e-17, 1.3877787807814457e-17]}, {'': [-3.700743415417188e-17, 0.15547422603699426], 'false,false': [0.0, 0.09819814133929605], 'false,true,false': [nan, 0.10177546625479467], 'true': [0.0, 0.0], 'false,true': [0.23697438163934584, 0.10177546625479467], 'false': [0.16446534281154823, 0.08528498988263426], 'true,true': [0.0, nan], 'false,false,false': [0.09819814133929605, nan]}, {'': [0.0, 0.15104899459282603], 'false,false,true': [0.2366088007093498, 0.09585075885902626], 'false,false': [0.1610944511363036, 0.09057179113033552], 'true': [0.0, nan], 'false,true': [nan, 0.0], 'false': [0.0, 0.15373607770803357], 'false,false,false': [0.09057179113033552, nan]}, {'': [0.0, 0.1481890829422185], 'false,false,true': [0.08970907163505326, 0.0051494400525644995], 'false,false': [0.07304972739114562, nan], 'false,true,true': [nan, 0.1522771342957437], 'true': [0.0, 0.0], 'false,true': [0.1522771342957437, 0.14986419603843362], 'false': [0.15873684848279124, 0.07304972739114562]}, {'': [0.0, 0.1429521230793653], 'false,false,true': [0.005187412121629542, 0.0], 'false,false': [0.06748781429855519, nan], 'true': [0.0, 0.0], 'false': [0.1536899144059173, 0.06748781429855519], 'true,true': [0.0, nan]}, {'': [0.0002337950703018045, 0.13648516654623258], 'false,false,true': [0.0, 0.0], 'false,false': [0.0, 0.13496660173009922], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false': [0.1776064896389152, 0.1288530969891089], 'false,false,false': [0.14684289523583663, 0.05388142777370904], 'true,false,false': [nan, 0.0]}, {'': [0.1084073843872245, 0.14577267182629353], 'true,true,false': [0.0, 0.013826061618417696], 'false,false': [0.15070402983547024, nan], 'true': [0.02218718469133615, 0.008883398130499987], 'false,true': [0.0, nan], 'false': [0.0, 0.15070402983547024], 'true,true': [0.00013945221602233715, 0.017492687172394328]}, {'': [4.2096777224294907e-07, 0.1189788831691524], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.030851571572517285], 'false,true,true': [0.13790853330506028, 0.2223671505465719], 'false,true': [0.2014450551430186, 0.07277934133864344], 'false': [0.13248239097083375, 0.026276583257376047], 'false,false,false': [0.030851571572517285, nan], 'false,true,false': [0.06668371444377143, 0.05528021009875283]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(D, E), interaction(E, A).;true;true
1;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, C), location(A, D).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
3;false;interaction(F, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
6;false,false;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false;interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false;interaction(G, A), interaction(A, G).;true;true
7;false,false,true;interaction(A, I).;true;true
8;;proteinclass(A, B) :- location(A, C), interaction(A, D).;true;true
8;true;location(E, C), recursion_proteinclass(E, B).;true;true
8;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
8;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
9;false;interaction(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, E), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.09344305274657114;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.5681531445875667;  // std dev = 0,877, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1630997237176905;  // std dev = 1,765, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7500185328041313;  // std dev = 0,151, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.15598129018900833;  // std dev = 0,081, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.7417903431046247;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1583517513713782;  // std dev = 0,047, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.30647359180827116;  // std dev = 1,731, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.004103946206033729;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5889858332361108;  // std dev = 0,204, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.13660185562136998;  // std dev = 0,073, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.5794370788969722;  // std dev = 0,102, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.13851519024718265;  // std dev = 0,042, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.2684631120999992;  // std dev = 1,648, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.051375542777445306;  // std dev = 0,720, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.21646982330888406;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13239563061130072;  // std dev = 1,385, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4062773209513467;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.21937422352832128;  // std dev = 0,634, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3131026700447753;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, E), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3780051367736076;  // std dev = 0,189, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1216410466333449;  // std dev = 0,034, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.1458684813411071;  // std dev = 1,805, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.008923399351700593;  // std dev = 1,194, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( phenotype(A, E), interaction(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return 0.30217513991657474;  // std dev = 0,899, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.10613056990911668;  // std dev = 0,635, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(I, K), interaction(J, J) )
%   | | | then return 0.15029754227766703;  // std dev = 1,225, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.0035612715812302046;  // std dev = 1,363, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.018777978395800626;  // std dev = 0,331, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.33135958781501806;  // std dev = 0,167, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.07914812829080553;  // std dev = 0,908, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.24522889751341978;  // std dev = 0,530, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.13073396065140414;  // std dev = 0,637, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.011402138025622737;  // std dev = 1,745, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then return 0.28785044734134885;  // std dev = 0,120, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14685137408870017;  // std dev = 0,044, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20297086020173705;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.16767849369510668;  // std dev = 0,841, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.07969280476263892;  // std dev = 0,709, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.1292658455352108;  // std dev = 0,623, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.027167325236930533;  // std dev = 1,747, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16242313969705058;  // std dev = 0,014, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3512336131816611;  // std dev = 0,475, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return -0.32269005635455916;  // std dev = 0,299, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.16115958229058705;  // std dev = 0,084, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( location(A, L), location(K, L) )
%   | | | then return 0.04403693823072778;  // std dev = 1,539, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.179971737663089;  // std dev = 0,110, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.18024294840852387;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1336339305230968;  // std dev = 0,000914, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.041930184830275066;  // std dev = 0,538, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.03823968038535629;  // std dev = 1,874, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.15515247081281391;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.15017581018202708;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.056207532008055915;  // std dev = 0,335, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.952067
   AUC PR    = 0.200072
   CLL	      = -0.324328
   Precision = 0.056308 at threshold = 0.5
   Recall    = 0.858696
   F1        = 0.105686


Total learning time: 4.357 seconds
Total inference time: 13.224 seconds
AUC ROC: 0.952067


Results scoring model
   AUC ROC   = 0.9824
   AUC PR    = 0.985431
   CLL	      = -0.306148
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.93617


Total scoring time: 1.255 seconds
Refined model CLL: -0.306148


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.952067
   AUC PR    = 0.200072
   CLL	      = -0.324328
   Precision = 0.056308 at threshold = 0.5
   Recall    = 0.858696
   F1        = 0.105686


Total learning time: 8.856 seconds
Total inference time: 13.224 seconds
AUC ROC: 0.952067
Total revision time: 8.856
Best scored revision CLL: -0.306148


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:52:59
{'CLL': -0.324328, 'AUC ROC': 0.952067, 'F1': 0.105686, 'Recall': 0.858696, 'parameter_25': {'CLL': -0.285502, 'AUC ROC': 0.990899, 'F1': 0.394432, 'Recall': 0.923913, 'Precision': [0.250737, 0.5], 'Inference time': 9.795, 'Learning time': 1.968, 'AUC PR': 0.431563}, 'Precision': [0.056308, 0.5], 'Inference time': 13.224, 'Learning time': 8.856, 'AUC PR': 0.200072}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, I), location(I, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, I), location(I, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.13747980798273257;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10951139965368212;  // std dev = 0,849, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, I), location(I, G) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.12200042691900963;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.09578791407476861;  // std dev = 0,848, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( phenotype(A, F), complex(A, G) )
%   | then return 0.2772392134215293;  // std dev = 0,678, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.024054227813838248;  // std dev = 0,725, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2709504837263677;  // std dev = 0,961, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.07144030839421242;  // std dev = 0,599, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.02401023988046596;  // std dev = 0,894, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, F), phenotype(A, G) )
%   | then return 0.22383774187670027;  // std dev = 0,635, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.45719810159507945;  // std dev = 0,112, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10493602811246529;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.051927869398948466;  // std dev = 1,426, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.1408570753526385;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( complex(A, H), complex(F, H) )
%   | | then return -0.015763151866809412;  // std dev = 0,371, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.36687889831632825;  // std dev = 0,152, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0943193185734249;  // std dev = 1,087, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.3594956318220133;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11922761376513011;  // std dev = 0,044, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.09192114863168238;  // std dev = 0,832, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11327727048062139;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24187984115597683;  // std dev = 0,079, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( complex(G, I), complex(A, I) )
%   | | | then return -0.12027908597308501;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13347809620223783;  // std dev = 1,136, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.012912582722452366;  // std dev = 0,596, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.0539759945453987;  // std dev = 0,835, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20073398794565742;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(A, I), phenotype(G, I) )
%   | | | then return 0.15110088546548098;  // std dev = 0,486, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.006149454018671748;  // std dev = 0,841, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.12000765058035909;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.049867404752975464;  // std dev = 1,159, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.15165506408842921;  // std dev = 0,009, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, F), phenotype(A, G) )
%   | then return 0.1121869888298004;  // std dev = 0,468, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.11982772167792555;  // std dev = 0,250, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1949937195972493;  // std dev = 0,308, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.13424990816464275;  // std dev = 0,887, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.004168969783336805;  // std dev = 0,974, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15256530508930086;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, E), enzyme(E, F) )
%   | | then if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.23009203465867778;  // std dev = 0,103, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06509192563980784;  // std dev = 0,480, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(D, I), complex(E, I) )
%   | | | then return -0.10485159126042226;  // std dev = 0,456, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.03445232987946518;  // std dev = 1,226, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then return -4.450687043725421E-4;  // std dev = 0,249, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.17475833336031257;  // std dev = 0,182, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.781521
   AUC PR    = 0.024339
   CLL	      = -0.378108
   Precision = 0.02405 at threshold = 0.5
   Recall    = 0.543478
   F1        = 0.046062


Total learning time: 7.366 seconds
Total inference time: 9.053 seconds
AUC ROC: 0.781521


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:53:16
{'CLL': -0.378108, 'AUC ROC': 0.781521, 'F1': 0.046062, 'Recall': 0.543478, 'Precision': [0.02405, 0.5], 'Inference time': 9.053, 'Learning time': 7.366, 'AUC PR': 0.024339}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, I), location(I, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.705354
   AUC PR    = 0.019874
   CLL	      = -0.176086
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.319 seconds
Total inference time: 2.921 seconds
AUC ROC: 0.705354


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:53:22
{'CLL': -0.176086, 'AUC ROC': 0.705354, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.921, 'Learning time': 2.319, 'AUC PR': 0.019874}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7670719622367216;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.23292803776327828;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6046262796882593;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1939134641799878;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.30002293933631036;  // std dev = 0,537, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2339521673859877;  // std dev = 0,514, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11672011873054855;  // std dev = 1,019, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D), interaction(A, C) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then return 0.09476367285873163;  // std dev = 1,017, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.23595532358959057;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.12131229706895463;  // std dev = 0,959, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.06094676568607133;  // std dev = 0,999, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.004248578607173169;  // std dev = 0,849, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10278974992052306;  // std dev = 0,504, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.746286
   AUC PR    = 0.264948
   CLL	      = -0.335545
   Precision = 0.257919 at threshold = 0.5
   Recall    = 0.662791
   F1        = 0.371336


Total learning time: 1.384 seconds
Total inference time: 3.665 seconds
AUC ROC: 0.746286


Results scoring model
   AUC ROC   = 0.92
   AUC PR    = 0.9425
   CLL	      = -0.358249
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.806 seconds
Parameter learned model CLL: -0.358249


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, E), interaction(F, A)', 'false,false': 'interaction(E, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'false,false,true,true': [0.866, 3, 1], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0], 'true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.866, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [2.11e-08, 0, 3], 'true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 0], 'false,true,true,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 3], 'true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 0], 'false,true,true,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.537, 1, 3], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 1, 0], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false': 'interaction(G, A)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'enzyme(A, I), interaction(A, J)'}, {'false,false,true,true': [0.866, 3, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.514, 1, 3], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'enzyme(A, G), interaction(A, H)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'enzyme(A, I)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1], 'false,true,false': [1.019, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'true,true': 'interaction(C, D), interaction(A, C)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,true': [1.017, 4, 4], 'false,false,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(E, A), interaction(A, E)', 'false,false,false': 'interaction(G, A)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.959, 3, 4], 'false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(A, D)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,false': 'interaction(G, A)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'false,false,true': [0.999, 4, 4], 'false,false,false,true': [0.0, 1, 0], 'false,true,true': [0.0, 0, 1], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'enzyme(A, J)', 'false,true,false': 'interaction(G, D), enzyme(G, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.504, 1, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0], 'false,true,true,false': [0.849, 3, 1]}]]
[{'': [0.0, 0.2469135802469134], 'false,false,true': [0.18750000000000003, 0.18750000000000006], 'false,false': [0.24999999999999986, 0.0], 'false': [nan, 0.24691358024691365], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.22471936986499827], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,false': [1.4802973661668753e-16, 0.0], 'false,true': [0.18749999999999997, 0.18750000000000006], 'false': [0.2321486460110418, 0.0], 'false,true,true': [nan, 0.18749999999999997]}, {'': [0.0, 0.17219675940183746], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [nan, 0.18749999999999994], 'false,true': [0.18749999999999994, 0.11956232297571853], 'false': [0.17966818071746393, 0.0], 'false,true,false': [-7.401486830834377e-17, 0.0]}, {'': [0.0, 0.13530055100121485], 'false,false': [nan, 0.0], 'false,true,false': [nan, 0.07220159737870817], 'true': [nan, 0.0], 'false,true': [0.18749999999999997, 0.07220159737870817], 'false': [0.1430889023412109, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.1251014530979911], 'false,false,true': [0.18749999999999997, 0.06600592600360744], 'false,false': [0.13437403754871957, 0.0], 'true,false': [0.0, nan], 'true': [nan, 0.0], 'false': [nan, 0.12510145309799112], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.11947906991372416], 'false,false': [nan, 0.0], 'true': [0.0, nan], 'false,true': [nan, 0.12988444514430098], 'false': [0.12988444514430098, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.11787441518152912], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'true': [0.0, nan], 'false': [0.1292624637449915, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.11692160985975956], 'true': [0.0, nan], 'false,false': [nan, 0.11921967319699742], 'false': [0.0, 0.11921967319699742], 'false,false,false': [0.13151942773144734, 0.0]}, {'': [nan, 0.10224771583617583], 'false,true': [0.0, nan], 'false,false': [0.12468176089289891, 0.0], 'false': [0.0, 0.11248132479517306], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.11215481249154181], 'false,false': [nan, 0.0], 'false,true,true': [nan, 0.18021728411543866], 'false,true': [0.18021728411543866, 0.06354161498030439], 'false': [0.12474375049137229, 0.0], 'false,false,false': [nan, 0.0], 'false,true,false': [nan, 0.06354161498030439]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(D, E), interaction(E, A).;true;true
1;false;interaction(D, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false;interaction(D, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(G, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(G, A).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false;interaction(G, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.06628734804673159;  // std dev = 0,804, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7580193346218546;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.05637713729574359;  // std dev = 0,802, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5947969362557473;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.12688644689070308;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.36239771504712925;  // std dev = 0,744, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.11351685220093836;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.27969219980423315;  // std dev = 0,741, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.1929166971323602;  // std dev = 0,608, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.06323135650454043;  // std dev = 0,499, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.11496509622054966;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1972915429271965;  // std dev = 0,700, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return -0.1211443048555356;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.20582869276257024;  // std dev = 0,438, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07910318405179441;  // std dev = 0,503, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.11442344227206311;  // std dev = 0,488, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.0656909613094725;  // std dev = 0,500, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.11349648028283917;  // std dev = 0,071, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.13210289182068355;  // std dev = 0,633, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.727404
   AUC PR    = 0.132775
   CLL	      = -0.463761
   Precision = 0.012764 at threshold = 0.5
   Recall    = 0.604651
   F1        = 0.025


Total learning time: 1.914 seconds
Total inference time: 2.61 seconds
AUC ROC: 0.727404


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.223487
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.727 seconds
Refined model CLL: -0.223487


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.727404
   AUC PR    = 0.132775
   CLL	      = -0.463761
   Precision = 0.012764 at threshold = 0.5
   Recall    = 0.604651
   F1        = 0.025


Total learning time: 4.831 seconds
Total inference time: 2.61 seconds
AUC ROC: 0.727404
Total revision time: 4.831
Best scored revision CLL: -0.223487


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:53:34
{'CLL': -0.463761, 'AUC ROC': 0.727404, 'F1': 0.025, 'Recall': 0.604651, 'Precision': [0.012764, 0.5], 'parameter_5': {'CLL': -0.335545, 'AUC ROC': 0.746286, 'F1': 0.371336, 'Recall': 0.662791, 'Precision': [0.257919, 0.5], 'Inference time': 3.665, 'Learning time': 1.384, 'AUC PR': 0.264948}, 'Inference time': 2.61, 'Learning time': 4.831, 'AUC PR': 0.132775}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(C, E) )
%   | then return -0.16834760679113825;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.7296856080441827;  // std dev = 0,118, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.029030012989289606;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return 0.4159029165464776;  // std dev = 0,688, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(A, D) )
%   | then return 0.3008297884202669;  // std dev = 0,547, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.06068994526888661;  // std dev = 0,689, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return 0.3331707519919495;  // std dev = 0,660, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(A, D) )
%   | then return 0.2369394119838603;  // std dev = 0,520, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.048639745225113544;  // std dev = 0,691, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 6.838825097368551E-4;  // std dev = 0,715, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.2345465910574991;  // std dev = 0,820, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return -0.04595345690679635;  // std dev = 0,602, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.18399248991829587;  // std dev = 0,866, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(C, E) )
%   | then return -0.21062894305798455;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.4067228006980511;  // std dev = 0,119, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0994837861854111;  // std dev = 0,623, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return 0.19901814088413586;  // std dev = 0,513, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(A, D) )
%   | then return 0.11352052110034676;  // std dev = 0,365, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.11069257616827372;  // std dev = 0,558, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return -0.05140923230227403;  // std dev = 0,538, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.12943960448977854;  // std dev = 0,666, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.500041
   AUC PR    = 0.007758
   CLL	      = -1.016646
   Precision = 0.00776 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.015354


Total learning time: 2.045 seconds
Total inference time: 1.947 seconds
AUC ROC: 0.500041


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:53:38
{'CLL': -1.016646, 'AUC ROC': 0.500041, 'F1': 0.015354, 'Recall': 0.72093, 'Precision': [0.00776, 0.5], 'Inference time': 1.947, 'Learning time': 2.045, 'AUC PR': 0.007758}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.50009
   AUC PR    = 0.00776
   CLL	      = -0.241609
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.902 seconds
Total inference time: 1.381 seconds
AUC ROC: 0.50009


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:53:40
{'CLL': -0.241609, 'AUC ROC': 0.50009, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.381, 'Learning time': 0.902, 'AUC PR': 0.00776}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.44148226843284566;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7955186846434872;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.20448131535651276;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1667945087684516;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6371461774954758;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1732167244208175;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6846689160841062;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1448829431573806;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4814717053128631;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1945326392408222;  // std dev = 1,043, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08898857449069038;  // std dev = 0,531, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.17354129671120275;  // std dev = 1,026, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.5004136873458059;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13809459444258085;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3253790575897201;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.10218539224910778;  // std dev = 1,314, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), interaction(A, J) )
%   | | | then return 0.3778323673675581;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12246396426214204;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D), interaction(A, C) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then return 0.09339332993561034;  // std dev = 1,316, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2938846419176866;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10989978350528253;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.0038834582846869053;  // std dev = 0,335, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.08522888556361687;  // std dev = 1,262, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.012522271433926202;  // std dev = 0,275, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.23451353690510268;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.25212059300904327;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.10459403801180815;  // std dev = 1,216, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.1007297258360284;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.014811414074706888;  // std dev = 0,862, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return -0.11203714374788071;  // std dev = 0,483, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.15779802740592414;  // std dev = 0,656, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.19505195826265553;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09196520447791737;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.925696
   AUC PR    = 0.381777
   CLL	      = -0.296558
   Precision = 0.266667 at threshold = 0.5
   Recall    = 0.697674
   F1        = 0.385852


Total learning time: 1.536 seconds
Total inference time: 3.437 seconds
AUC ROC: 0.925696


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.983462
   CLL	      = -0.31684
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.827 seconds
Parameter learned model CLL: -0.31684


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, E), interaction(F, A)', 'false,false': 'interaction(E, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'false,false,true,true': [0.866, 3, 1], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0], 'true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.708, 5, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [7.45e-09, 5, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 7], 'true': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 1], 'false,true,true,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [5.27e-09, 5, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 7], 'true': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 1], 'false,true,true,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [1.043, 5, 6], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.531, 2, 1], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false': 'interaction(G, A)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'enzyme(A, I), interaction(A, J)'}, {'false,false,true,true': [0.866, 3, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.026, 5, 7], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, J), interaction(A, J)', 'false,false': 'enzyme(A, H), interaction(A, I)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,false': [1.314, 8, 7], 'false,false,false,false': [0.0, 2, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'true,true': 'interaction(C, D), interaction(A, C)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,true': [1.316, 8, 8], 'false,false,true,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(E, A), interaction(A, E)', 'false,false,false': 'interaction(G, A)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.262, 7, 7], 'false,true': [0.335, 1, 1], 'false,false,false,false': [0.275, 2, 1], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(A, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(I, A)', 'true': 'enzyme(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'false,false,true': [1.216, 6, 8], 'true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 2, 0], 'false,true,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'enzyme(A, J)', 'false,true,false': 'interaction(G, D), enzyme(G, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.656, 2, 6], 'false,false,false,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.483, 3, 1], 'true': [0.0, 0, 1], 'false,false,false,false': [0.0, 2, 0], 'false,true,true,false': [0.862, 3, 1]}]]
[{'': [0.0, 0.2493074792243767], 'false,false,true': [0.18750000000000003, 0.2430555555555555], 'false,false': [0.24999999999999997, 0.22222222222222224], 'false': [nan, 0.24930747922437652], 'false,false,false': [0.22222222222222224, nan]}, {'': [0.0, 0.24349144919250532], 'false,false,true': [0.0, 0.0], 'false,false': [0.2222222222222222, nan], 'false,true,false': [0.0, 1.1102230246251566e-17], 'false,true': [0.18749999999999997, 0.24305555555555558], 'false': [0.24433065218329347, 0.2222222222222222], 'false,true,true': [nan, 0.18749999999999997]}, {'': [0.0, 0.17362970606353295], 'false,false,true': [0.0, 0.0], 'false,false': [0.152923619371335, nan], 'false,true,true': [nan, 0.18749999999999994], 'false,true': [0.18749999999999994, 0.15961167463942252], 'false': [0.17548164114520795, 0.152923619371335], 'false,true,false': [-6.344131569286608e-17, 5.551115123125783e-18]}, {'': [0.0, 0.12011000128152925], 'false,false': [nan, 0.09402909005515275], 'false,true,false': [0.0, 0.09880083316595406], 'true': [nan, 0.0], 'false,true': [0.18749999999999997, 0.09685683529116096], 'false': [0.12365438407267332, 0.09402909005515275], 'false,false,false': [0.09402909005515275, nan]}, {'': [0.0, 0.11191652058629087], 'false,false,true': [0.18749999999999997, 0.08775285458173492], 'false,false': [0.11513437724179311, 0.09059840575830175], 'true,false': [0.0, nan], 'true': [nan, 0.0], 'false': [nan, 0.11191652058629083], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.10284993897514617], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'true': [0.0, nan], 'false,true': [0.0, 0.11516977904724404], 'false': [0.11089053966820792, 0.055621426542696646], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.09752387003321027], 'false,false,true': [0.0, 0.0], 'false,false': [0.0362315249364794, nan], 'true': [0.0, nan], 'false': [0.10827100730117153, 0.0362315249364794], 'true,true': [0.0, nan]}, {'': [0.0, 0.09478756055067229], 'true': [0.0, nan], 'false,false': [nan, 0.09883770767175233], 'false': [0.05616116078605227, 0.09883770767175233], 'false,false,false': [0.11369650067322302, 0.02514328988048604]}, {'': [0.052625061421621745, 0.09161419707861325], 'true,true,false': [nan, 0.0], 'false,false': [0.10560978077212643, 0.0], 'true': [0.0, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.09701957280068087], 'true,true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.08842873607449103], 'false,false': [nan, 0.018306411490588557], 'false,true,true': [nan, 0.18558586841067495], 'false,true': [0.18558586841067493, 0.07146725979329505], 'false': [0.10127817453259355, 0.018306411490588557], 'false,false,false': [0.0, 0.0], 'false,true,false': [0.05843541483199676, 0.05371284241007648]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(D, E), interaction(E, A).;true;true
1;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, E), interaction(F, A).;true;true
3;false;interaction(E, A).;true;true
3;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false,false;enzyme(A, I), interaction(A, J).;true;true
4;false;interaction(G, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;false,false;enzyme(A, H), interaction(A, I).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false;interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- enzyme(A, C), interaction(A, D).;true;true
8;true;enzyme(E, C), recursion_proteinclass(E, B).;true;true
8;false,false;interaction(I, A).;true;true
8;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false;enzyme(A, J).;true;true
9;false;interaction(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.07307944740956937;  // std dev = 0,748, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7492620528604262;  // std dev = 0,125, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1457733213233925;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.2970143868412815;  // std dev = 0,597, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.062498199446987444;  // std dev = 0,743, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5881098386628004;  // std dev = 0,168, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1286187030341143;  // std dev = 0,050, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.2470189847363179;  // std dev = 0,578, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.05307852051038839;  // std dev = 0,738, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.5509424176860344;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1807466222979533;  // std dev = 0,907, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return 0.09946808544052739;  // std dev = 0,615, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.042820470806045195;  // std dev = 0,451, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.3339193277878534;  // std dev = 0,570, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.08724395266729656;  // std dev = 0,687, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then return 0.5740390152586055;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.16274232905776023;  // std dev = 0,073, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.3932414354917084;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.11960191855667442;  // std dev = 0,971, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.019244527233324992;  // std dev = 0,381, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then return 0.4315108905420295;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1421326088922546;  // std dev = 0,065, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.1563810465020409;  // std dev = 0,040, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.15751602906292983;  // std dev = 0,343, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.25807829758498374;  // std dev = 0,529, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.014790998457065996;  // std dev = 0,539, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then return 0.08134317219640053;  // std dev = 0,352, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.08432223446786041;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, D), complex(D, F) )
%   | | then return 0.11131640292542264;  // std dev = 0,467, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.13160055729816428;  // std dev = 0,079, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.20848100849424486;  // std dev = 0,510, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.01195691387635899;  // std dev = 0,538, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.2890792943595064;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.11055449795294234;  // std dev = 0,021, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.06789624657588092;  // std dev = 0,369, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13612616420973497;  // std dev = 0,749, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return -0.11485837441825253;  // std dev = 0,065, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.06342864770172921;  // std dev = 0,373, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.1577279311184829;  // std dev = 0,437, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.012160966198798607;  // std dev = 0,586, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.2334487185228843;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.10389814532838879;  // std dev = 0,059, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.899041
   AUC PR    = 0.247602
   CLL	      = -0.257254
   Precision = 0.17094 at threshold = 0.5
   Recall    = 0.697674
   F1        = 0.2746


Total learning time: 2.867 seconds
Total inference time: 4.891 seconds
AUC ROC: 0.899041


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.214536
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.889 seconds
Refined model CLL: -0.214536


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899041
   AUC PR    = 0.247602
   CLL	      = -0.257254
   Precision = 0.17094 at threshold = 0.5
   Recall    = 0.697674
   F1        = 0.2746


Total learning time: 6.119000000000001 seconds
Total inference time: 4.891 seconds
AUC ROC: 0.899041
Total revision time: 6.119000000000001
Best scored revision CLL: -0.214536


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:53:56
{'CLL': -0.257254, 'AUC ROC': 0.899041, 'F1': 0.2746, 'Recall': 0.697674, 'Precision': [0.17094, 0.5], 'Inference time': 4.891, 'Learning time': 6.119000000000001, 'AUC PR': 0.247602, 'parameter_10': {'CLL': -0.296558, 'AUC ROC': 0.925696, 'F1': 0.385852, 'Recall': 0.697674, 'Precision': [0.266667, 0.5], 'Inference time': 3.437, 'Learning time': 1.536, 'AUC PR': 0.381777}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.4368928284004143;  // std dev = 0,660, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F) )
%   | | then return -0.14966289527974228;  // std dev = 0,167, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.03947074067787304;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.05513060234146019;  // std dev = 0,751, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( phenotype(A, E) )
%   | then if ( interaction(A, F), phenotype(F, E) )
%   | | then return 0.18291080604367946;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return 0.17546374851051938;  // std dev = 0,957, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.08872726733107449;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then return -0.0018484795883079886;  // std dev = 0,512, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then return -0.054834951006061054;  // std dev = 0,439, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.17082871470423672;  // std dev = 0,324, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3700039259176163;  // std dev = 0,823, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.03953745883691199;  // std dev = 0,297, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then return -0.0015646758847855074;  // std dev = 0,512, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.2760903151275746;  // std dev = 0,521, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, F) )
%   | | | then return 0.00973293081209505;  // std dev = 0,294, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.26077534481540776;  // std dev = 0,080, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.057730718122763536;  // std dev = 0,760, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.2177393905421338;  // std dev = 0,497, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.23071238793454668;  // std dev = 0,087, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.10626188350192066;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then return -0.0019574530800361054;  // std dev = 0,723, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1639920390921396;  // std dev = 0,288, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then return 0.1321037869983109;  // std dev = 0,255, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return 0.1713222518894759;  // std dev = 0,483, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.0882393926325829;  // std dev = 0,335, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.0015297711512776517;  // std dev = 0,723, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.145678460632501;  // std dev = 0,264, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return -0.024273990128379275;  // std dev = 0,552, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( phenotype(A, E), enzyme(A, F) )
%   | then return 0.18482350397375644;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then return 0.09234648828773741;  // std dev = 0,365, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.012441302010045016;  // std dev = 0,776, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.796492
   AUC PR    = 0.131392
   CLL	      = -0.305201
   Precision = 0.069221 at threshold = 0.5
   Recall    = 0.651163
   F1        = 0.12514


Total learning time: 3.011 seconds
Total inference time: 2.726 seconds
AUC ROC: 0.796492


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:54:02
{'CLL': -0.305201, 'AUC ROC': 0.796492, 'F1': 0.12514, 'Recall': 0.651163, 'Precision': [0.069221, 0.5], 'Inference time': 2.726, 'Learning time': 3.011, 'AUC PR': 0.131392}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.845608
   AUC PR    = 0.089435
   CLL	      = -0.165575
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.235 seconds
Total inference time: 1.941 seconds
AUC ROC: 0.845608


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:54:05
{'CLL': -0.165575, 'AUC ROC': 0.845608, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.941, 'Learning time': 1.235, 'AUC PR': 0.089435}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.41370449065506787;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12543301544918353;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7926795681245807;  // std dev = 0,077, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.19999981628405664;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1667945087684516;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10782354562777509;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6344697882974067;  // std dev = 0,102, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1699057572478197;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6846689160841062;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1448829431573806;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09150383240113759;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4897879585473275;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.183598313757511;  // std dev = 1,290, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08898857449069038;  // std dev = 0,531, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return 0.3387439533452068;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07678249969777719;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1621633306581246;  // std dev = 1,271, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.5004136873458059;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13809459444258085;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.33340934750539164;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.0992100355063955;  // std dev = 1,706, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), interaction(A, J) )
%   | | | then return 0.3778323673675581;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12246396426214204;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D), interaction(A, C) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then return 0.09416601636226819;  // std dev = 1,713, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2938846419176866;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10989978350528253;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.20419545713127413;  // std dev = 0,038, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.05014516348707334;  // std dev = 0,541, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.09934583887441346;  // std dev = 1,581, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.012522271433926202;  // std dev = 0,275, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.24493593456395057;  // std dev = 0,015, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.24710874495920554;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.1492698002576902;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.12783174016091642;  // std dev = 1,499, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.1007297258360284;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13128900828339596;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0020813410528291837;  // std dev = 1,165, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return -0.021155674986812915;  // std dev = 0,746, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.1404934970526038;  // std dev = 0,764, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.1934207712360113;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09196520447791737;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.97298
   AUC PR    = 0.415634
   CLL	      = -0.306454
   Precision = 0.262931 at threshold = 0.5
   Recall    = 0.709302
   F1        = 0.383648


Total learning time: 1.561 seconds
Total inference time: 3.49 seconds
AUC ROC: 0.97298


Results scoring model
   AUC ROC   = 0.991111
   AUC PR    = 0.991634
   CLL	      = -0.336683
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.928571


Total scoring time: 0.876 seconds
Parameter learned model CLL: -0.336683


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false': 'interaction(G, A)', 'false,true,true': 'interaction(F, A), interaction(A, F)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [1.195, 5, 2], 'false,false,false,true': [0.816, 2, 1], 'false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [2.108, 8, 10], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 8, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.077, 0, 11], 'true': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 1], 'false,true,true,false': [1.195, 5, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 8, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.102, 0, 11], 'true': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 1], 'false,true,true,false': [1.195, 5, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [1.29, 8, 9], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.531, 2, 1], 'false,true,true': [1.195, 5, 2], 'false,true,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false': 'interaction(H, A)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true': 'enzyme(A, D)', 'false,true': 'interaction(A, G), interaction(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'enzyme(A, J), interaction(A, K)'}, {'false,false,true,true': [1.195, 5, 2], 'false,false,false,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0], 'false,false,true,false': [1.271, 8, 10], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, J), interaction(A, J)', 'false,false': 'enzyme(A, H), interaction(A, I)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,false': [1.706, 13, 11], 'false,false,false,false': [0.0, 2, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'true,true': 'interaction(C, D), interaction(A, C)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,true': [1.713, 13, 13], 'false,false,true,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(E, A), interaction(A, E)', 'false,false,false': 'interaction(G, A)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.581, 10, 10], 'false,true': [0.541, 3, 2], 'false,false,false,false': [0.275, 2, 1], 'true,true': [0.038, 0, 2]}], ['proteinclass(A, B)', {'': 'enzyme(A, C), interaction(A, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(I, A)', 'true': 'enzyme(E, C), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'false,false,true': [1.499, 8, 12], 'true,false': [0.04, 5, 0], 'false,false,false,true': [0.0, 2, 0], 'false,true,true': [0.0, 0, 1], 'true,true,false,false': [0.015, 0, 2], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'enzyme(A, J)', 'false,true,false': 'interaction(G, D), enzyme(G, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.764, 3, 7], 'false,false,false,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.746, 5, 4], 'true': [0.0, 0, 1], 'false,false,false,false': [0.0, 2, 0], 'false,true,true,false': [1.165, 5, 2]}]]
[{'': [0.0, 0.24970273483947644], 'false,false,true': [0.20408163265306126, 0.24691358024691354], 'false,false': [0.24959999999999954, 0.22222222222222224], 'false,true,true': [nan, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.2487244897959182], 'false,false,false': [0.22222222222222224, nan]}, {'': [0.0, 0.2426389043660191], 'false,false,true': [0.0, 0.0], 'false,false': [0.2222222222222222, nan], 'false,true,false': [0.0005359141263649195, 0.0], 'false,true': [0.20408163265306117, 0.24052158934250012], 'false': [0.24293633865081304, 0.2222222222222222], 'false,true,true': [nan, 0.2040816326530612]}, {'': [0.0, 0.17620243317502765], 'false,false,true': [0.0, 0.0], 'false,false': [0.152923619371335, nan], 'false,true,true': [nan, 0.2040816326530612], 'false,true': [0.2040816326530612, 0.15826982841087545], 'false': [0.17755472542648873, 0.152923619371335], 'false,true,false': [0.0009456767868998093, -6.938893903907228e-18]}, {'': [0.0, 0.12571373976314615], 'false,false': [nan, 0.09402909005515275], 'false,true,false': [0.0, 0.09792697239820117], 'true': [nan, 0.0], 'false,true': [0.20408163265306117, 0.09644870757955805], 'false': [0.12846783957467992, 0.09402909005515275], 'false,false,false': [0.09402909005515275, nan]}, {'': [0.0, 0.11739994261628044], 'false,false,true': [0.2040816326530612, 0.08973313279848164], 'false,false': [0.12322035383493263, 0.09059840575830175], 'true,false': [0.0, nan], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.1201110679862367], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.1100626855163598], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'true': [0.0, nan], 'false,true': [0.0, 0.12122458425013861], 'false': [0.11579424234267018, 0.055621426542696646], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.10540083297799004], 'false,false,true': [0.0, 0.0], 'false,false': [0.0362315249364794, nan], 'true': [0.0, nan], 'false': [0.11288264298500475, 0.0362315249364794], 'true,true': [0.0, nan]}, {'': [0.000734353599803908, 0.10596506607364399], 'true': [0.000734353599803908, nan], 'false,false': [nan, 0.11286295275432648], 'false': [0.058553801471658715, 0.11286295275432648], 'false,false,false': [0.12503764150760782, 0.02514328988048604]}, {'': [0.04967149841664119, 0.10193921492287522], 'true,true,false': [nan, 0.00010862637295916411], 'false,false': [0.11239573828292534, 0.0], 'true': [0.00010862637295916411, 0.00032294247781531336], 'false,true': [0.0, nan], 'false': [0.0, 0.1064953276736241], 'true,true': [nan, 0.00010862637295916411], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.0930939481148084], 'false,false': [nan, 0.018098923363153576], 'false,true,true': [nan, 0.19379379993829995], 'false,true': [0.19379379993829995, 0.0665302535785191], 'false': [0.10154594399819795, 0.018098923363153576], 'false,false,false': [0.0, 0.0], 'false,true,false': [0.06185960126348278, 0.058356256799459126]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(D, E), interaction(E, A).;true;true
1;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, E), interaction(F, A).;true;true
3;false;interaction(E, A).;true;true
3;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,false;enzyme(A, J), interaction(A, K).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;false,false;enzyme(A, H), interaction(A, I).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false;interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- enzyme(A, C), interaction(A, D).;true;true
8;true;enzyme(E, C), recursion_proteinclass(E, B).;true;true
8;false,false;interaction(I, A).;true;true
8;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false;enzyme(A, J).;true;true
9;false;interaction(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.43783406196450586;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13724991909176654;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7488900013947237;  // std dev = 0,159, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.13724991909176654;  // std dev = 0,058, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.27340382571453126;  // std dev = 0,631, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.17266576078189197;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.3549928621916349;  // std dev = 0,657, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12184116608492501;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5878308359265775;  // std dev = 0,215, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.12184116608492498;  // std dev = 0,052, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.22294274077972326;  // std dev = 0,620, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.14937431704722362;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.13491627994003666;  // std dev = 0,122, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3118840297195171;  // std dev = 0,552, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.4799127691537987;  // std dev = 0,109, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.17981991617409301;  // std dev = 1,142, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else return 0.07429725045926858;  // std dev = 0,661, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3601554094019823;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( enzyme(A, F), interaction(A, G) )
%   | | | then return -0.06510534846267661;  // std dev = 0,404, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.18634252985959635;  // std dev = 1,180, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.5917506598575712;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.20488580160542785;  // std dev = 0,092, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.35031198082634923;  // std dev = 0,060, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.1382597862741628;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12112809301032497;  // std dev = 1,170, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then return 0.4450865465650299;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.17422681424746242;  // std dev = 0,081, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then if ( complex(E, F), complex(A, F) )
%   | | | then return 0.19290095320574202;  // std dev = 0,331, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.06212688583970111;  // std dev = 0,528, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.17743771948751763;  // std dev = 0,253, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.06885717686144607;  // std dev = 0,383, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.10031707209477107;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19999579422005015;  // std dev = 0,032, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.2851080200396544;  // std dev = 0,118, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1273469152338534;  // std dev = 0,061, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(A, F) )
%   | | then return -0.1315519593684756;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.08747960282429229;  // std dev = 0,612, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07373107903326108;  // std dev = 0,419, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.23281932287159074;  // std dev = 0,046, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.1143936683622671;  // std dev = 0,048, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.14980389433283758;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.05546439894937164;  // std dev = 0,882, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.2759605132458522;  // std dev = 0,122, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14332136359939168;  // std dev = 0,082, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1317076398168634;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2069917215510383;  // std dev = 0,110, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11335253896001307;  // std dev = 0,046, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.11159434621102907;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.05456492204856539;  // std dev = 0,708, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.22228246093509596;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.12701491498873602;  // std dev = 0,073, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.941786
   AUC PR    = 0.323321
   CLL	      = -0.235618
   Precision = 0.18845 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.298795


Total learning time: 3.424 seconds
Total inference time: 5.592 seconds
AUC ROC: 0.941786


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.185929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.029 seconds
Refined model CLL: -0.185929


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.941786
   AUC PR    = 0.323321
   CLL	      = -0.235618
   Precision = 0.18845 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.298795


Total learning time: 6.89 seconds
Total inference time: 5.592 seconds
AUC ROC: 0.941786
Total revision time: 6.89
Best scored revision CLL: -0.185929


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:54:22
{'CLL': -0.235618, 'AUC ROC': 0.941786, 'F1': 0.298795, 'Recall': 0.72093, 'Precision': [0.18845, 0.5], 'parameter_15': {'CLL': -0.306454, 'AUC ROC': 0.97298, 'F1': 0.383648, 'Recall': 0.709302, 'Precision': [0.262931, 0.5], 'Inference time': 3.49, 'Learning time': 1.561, 'AUC PR': 0.415634}, 'Inference time': 5.592, 'Learning time': 6.89, 'AUC PR': 0.323321}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( complex(C, D), phenotype(C, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, A) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( phenotype(A, G) )
%   | then if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( complex(C, D), phenotype(C, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, A) )
%   | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), interaction(H, H) )
%   | | then return 0.4850122940520397;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7609104304538484;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22373365448410584;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.1947093843650062;  // std dev = 0,752, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.6028971778104669;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, G) )
%   | then return -0.18501693864343977;  // std dev = 0,160, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6266734813174285;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2631653218794408;  // std dev = 0,147, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.5125948402334376;  // std dev = 0,701, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.22237834126422767;  // std dev = 1,185, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.17011378327224977;  // std dev = 0,743, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.45459569801966704;  // std dev = 0,072, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( interaction(A, H), interaction(I, A) )
%   | | then return 0.2611894445597501;  // std dev = 0,759, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, J), complex(H, J) )
%   | | | then return 0.058285064854955805;  // std dev = 0,643, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.17652311438088647;  // std dev = 0,153, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then return 0.3838164910161207;  // std dev = 0,768, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.25499192429448786;  // std dev = 0,536, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.038308121411444115;  // std dev = 0,831, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.042601850024841965;  // std dev = 0,657, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(G, A) )
%   | | | then return 0.5415655458228357;  // std dev = 0,251, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37669422495456223;  // std dev = 0,135, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.20313952340019759;  // std dev = 0,079, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, H) )
%   | | then return -0.17016977969182978;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.2914894940907525;  // std dev = 0,933, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.011349497792771668;  // std dev = 0,646, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.03458256733697413;  // std dev = 0,659, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(G, A) )
%   | | | then return 0.41910299954730673;  // std dev = 0,260, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2939467082646758;  // std dev = 0,121, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.17258108643139236;  // std dev = 0,070, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, H) )
%   | | then return -0.14845627699119995;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.231839332997151;  // std dev = 0,919, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.00946229804366848;  // std dev = 0,646, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.02816317622882253;  // std dev = 0,661, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.3369986459742707;  // std dev = 0,235, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23441416553984998;  // std dev = 0,107, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1495479711378951;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then return 0.24711367682775842;  // std dev = 0,508, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.14038315047720754;  // std dev = 0,160, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07468149706419337;  // std dev = 0,951, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.16469445244373324;  // std dev = 0,811, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( enzyme(E, F), phenotype(D, G) )
%   | | then return 0.1372556390785142;  // std dev = 0,281, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1433164869169429;  // std dev = 0,126, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.17004282588166078;  // std dev = 0,612, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.17998384376034782;  // std dev = 0,046, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.05978606295657964;  // std dev = 0,789, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.1324407705964282;  // std dev = 0,790, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.12192219219278519;  // std dev = 0,257, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1298607554771456;  // std dev = 0,109, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then return 0.1355385124374276;  // std dev = 0,611, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.15499554443222077;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.04932972606758789;  // std dev = 0,790, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.06317076245208544;  // std dev = 0,641, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, D) )
%   | then if ( complex(D, E), interaction(F, A) )
%   | | then if ( complex(F, E), interaction(D, G) )
%   | | | then return 0.3415868351512749;  // std dev = 0,144, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.002600850251815695;  // std dev = 0,293, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.16254267799373326;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0435772733480367;  // std dev = 0,236, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return 0.2731787477163207;  // std dev = 0,223, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.13513634442730846;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0365413987023776;  // std dev = 0,791, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.700966
   AUC PR    = 0.110824
   CLL	      = -0.489536
   Precision = 0.014807 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.028763


Total learning time: 5.031 seconds
Total inference time: 3.662 seconds
AUC ROC: 0.700966


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:54:31
{'CLL': -0.489536, 'AUC ROC': 0.700966, 'F1': 0.028763, 'Recall': 0.5, 'Precision': [0.014807, 0.5], 'Inference time': 3.662, 'Learning time': 5.031, 'AUC PR': 0.110824}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( complex(C, D), phenotype(C, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, A) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( phenotype(A, G) )
%   | then if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.500104
   AUC PR    = 0.007762
   CLL	      = -0.237257
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.637 seconds
Total inference time: 1.84 seconds
AUC ROC: 0.500104


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:54:34
{'CLL': -0.237257, 'AUC ROC': 0.500104, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.84, 'Learning time': 1.637, 'AUC PR': 0.007762}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.03996711691769402;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.5504566274072047;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), function(A, F) )
%   | | | then return 0.07373365448410585;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.32373365448410585;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8532137785245553;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1467862214754447;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.778022285466718;  // std dev = 0,006, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.22189756666420254;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return 0.06277107303420795;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2717320789530542;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7123488123965616;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12933863112229216;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6168434361956266;  // std dev = 0,008, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.18595118602558586;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then return 0.153444955428665;  // std dev = 1,522, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.21650318712939257;  // std dev = 0,469, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.04168927892403762;  // std dev = 0,626, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.26979286383918055;  // std dev = 1,158, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.12412893280560841;  // std dev = 1,521, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0021485587214766485;  // std dev = 0,822, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( function(A, H), interaction(I, A) )
%   | | | then return 0.21199844565471526;  // std dev = 1,108, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4427215190430749;  // std dev = 0,698, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.04477328683320409;  // std dev = 1,332, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else if ( function(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return 0.056160595847383116;  // std dev = 0,584, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2035190154277019;  // std dev = 0,876, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, C), interaction(C, A) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( function(A, E), function(D, E) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then return 0.03636631706076549;  // std dev = 1,650, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3103235045603236;  // std dev = 0,040, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.26211022790338934;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return 0.03229463405239437;  // std dev = 0,870, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.02939046817181697;  // std dev = 1,396, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.10348504124170244;  // std dev = 0,859, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(A, C), interaction(D, A) )
%   then if ( function(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.24269256867881756;  // std dev = 1,101, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else return -0.208328427777863;  // std dev = 0,251, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return -0.06513438336384476;  // std dev = 0,724, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return -0.010999521899906758;  // std dev = 0,697, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13332313345196142;  // std dev = 1,108, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, G), function(G, H) )
%   | | | then return -0.07653927279764097;  // std dev = 0,442, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.08598670287247927;  // std dev = 0,499, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.06839328054969318;  // std dev = 0,718, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979429
   AUC PR    = 0.326737
   CLL	      = -0.284811
   Precision = 0.246809 at threshold = 0.5
   Recall    = 0.674419
   F1        = 0.361371


Total learning time: 2.127 seconds
Total inference time: 9.71 seconds
AUC ROC: 0.979429


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.282163
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 1.28 seconds
Parameter learned model CLL: -0.282163


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(E, F), interaction(A, F)', 'false,false': 'interaction(A, E)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(G, A), interaction(H, G)'}, {'false,false,true,true': [1.549, 6, 4], 'false,false,false,true': [1.664, 4, 9], 'false,false,false,false': [0.816, 1, 2], 'true': [2.11e-08, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.279, 9, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(E, A), function(A, F)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.866, 3, 1], 'false,true,false,false': [0.0, 9, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'true': [0.0, 0, 3], 'false,false,true,false': [0.004, 5, 0], 'false,false,true,true': [0.006, 0, 11], 'false,true,true,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(D, A), function(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.866, 3, 1], 'false,true,false,false': [5.27e-09, 9, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'true': [1.05e-08, 0, 3], 'false,false,true,false': [0.003, 5, 0], 'false,false,true,true': [0.008, 0, 11], 'false,true,true,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(F, H), recursion_proteinclass(H, B)', 'true': 'interaction(C, A), function(A, D)', 'false,true': 'interaction(F, G), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false,false,false': 'interaction(J, A)'}, {'true,true,false': [0.0, 0, 1], 'false,true,false,false': [0.626, 8, 1], 'true,false': [0.0, 0, 1], 'false,false,false,true': [1.158, 5, 11], 'false,true,true': [1.522, 6, 4], 'false,true,false,true': [0.469, 1, 1], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, G), interaction(A, G)', 'false,false': 'interaction(A, F)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'function(A, H), interaction(I, A)'}, {'false,false,true,true': [1.521, 6, 4], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.108, 5, 11], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.822, 9, 2], 'true,true': [0.0, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), interaction(J, A)', 'false,false': 'function(A, H), interaction(I, A)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.584, 2, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [1.332, 14, 3], 'false,false,true,false': [0.876, 3, 9], 'true,true': [0.0, 0, 3], 'false,true,true,false': [0.698, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'function(A, E), function(D, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false': 'interaction(A, F)', 'true,true': 'interaction(D, C), interaction(C, A)'}, {'false,false,true,true': [0.04, 0, 11], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,true': [1.65, 15, 6], 'true,true,false,true': [0.0, 0, 1], 'false,false,true,false': [0.029, 5, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(A, H)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.396, 11, 4], 'false,false,false,false': [0.859, 5, 11], 'false,true': [0.87, 4, 2], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'function(A, C), interaction(D, A)', 'true,true,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'true': 'function(E, C), recursion_proteinclass(E, B)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)'}, {'false,false,true': [0.724, 3, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.251, 13, 0], 'true,true,false,false': [1.101, 4, 16], 'true,true,true': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(D, A), function(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,false,false': 'function(A, J)', 'false,true,false': 'interaction(D, G), function(G, H)'}, {'false,true,true,true': [0.697, 3, 1], 'false,true,false,false': [0.499, 2, 1], 'false,false,false,true': [0.718, 5, 11], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.442, 7, 1], 'true': [0.0, 0, 3], 'false,false,false,false': [0.0, 0, 0], 'false,true,true,false': [1.108, 3, 3]}]]
[{'': [1.4802973661668753e-16, 0.2483564645726807], 'false,false,true': [0.23999999999999985, 0.14876033057851243], 'false,false': [0.20408163265306134, 0.21484374999999967], 'false': [nan, 0.24835646457268037], 'false,false,false': [0.2130177514792898, 0.22222222222222224]}, {'': [0.0, 0.23550584786044396], 'false,false,true': [2.890656412982392e-06, 3.1090615643047937e-06], 'false,false': [0.2148122717506155, nan], 'false,true,true': [0.18750000000000006, 0.24999999999999992], 'false,true': [0.2399999999999999, 0.14876033057851246], 'false': [0.20108968842298627, 0.2148122717506155], 'false,true,false': [0.0, 0.0]}, {'': [3.700743415417188e-17, 0.17578191361594384], 'false,false,true': [5.44224939949797e-06, 2.387093384570438e-06], 'false,false': [0.13846681681275996, nan], 'false,true,true': [0.18749999999999994, 0.25], 'false,true': [0.23547952847870796, 0.10538743426769806], 'false': [0.1740818529365221, 0.13846681681275996], 'false,true,false': [0.0, 3.0839528461809902e-18]}, {'': [-3.700743415417188e-17, 0.13068010368864125], 'false,false': [nan, 0.08374620415222755], 'false,true,false': [0.11019859819728342, 0.043535248670531726], 'true': [0.0, 0.0], 'false,true': [0.2317219882009355, 0.06557271958846618], 'false': [0.15016904987727037, 0.08374620415222755], 'true,true': [0.0, 0.0], 'false,false,false': [0.08374620415222755, nan]}, {'': [0.0, 0.12169782005054128], 'false,false,true': [0.2312081804159451, 0.061381025840965546], 'false,false': [0.14596246743627897, 0.07677807817739757], 'true': [0.0, nan], 'false': [nan, 0.12169782005054129], 'false,false,false': [0.07677807817739757, nan]}, {'': [0.0, 0.1171058696303567], 'false,false,true': [0.0852667441477866, 0.06390489994581232], 'false,false': [0.07331683046278265, nan], 'false,true,true': [nan, 0.12185317034004631], 'true': [0.0, nan], 'false,true': [0.12185317034004634, 0.10442184446512191], 'false': [0.144386724294885, 0.07331683046278265]}, {'': [0.0, 0.10629047673433764], 'false,false,true': [0.00014539944942840418, 0.00017399800908807217], 'false,false': [0.07055441772365242, nan], 'true,true,false': [0.0, nan], 'true': [0.0, 0.0], 'false': [0.12960935874497054, 0.07055441772365242], 'true,true': [0.0, 0.0]}, {'': [0.0, 0.09225063066974223], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.08806222539609429], 'true': [0.0, nan], 'false': [0.12606613151482385, 0.08567302610798871], 'false,false,false': [0.12995391488204955, 0.046132312103781284]}, {'': [0.08050252719896052, 0.13087076886430016], 'true,true,false': [0.0, 0.0605722174745279], 'false,false': [0.13087076886430016, nan], 'true': [0.05358916119175552, 0.0048292598355547025], 'false': [nan, 0.13087076886430016], 'true,true': [0.0, 0.05805475453519349]}, {'': [-2.3129646346357427e-18, 0.07740127838083892], 'false,false': [nan, 0.0322367831311936], 'false,true,true': [0.12134439324892617, 0.20462298265013398], 'false,true': [0.1763105138131262, 0.04563897481964039], 'false': [0.11076257385379294, 0.0322367831311936], 'false,false,false': [0.0322367831311936, nan], 'false,true,false': [0.024418592864425773, 0.08301597438443731]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, D), interaction(A, E).;true;true
1;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, A), function(A, D).;true;true
3;true,true;interaction(E, A), interaction(C, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
6;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
6;false;interaction(A, F).;true;true
6;true,true;interaction(D, C), interaction(C, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;false;interaction(A, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- function(A, C), interaction(D, A).;true;true
8;true;function(E, C), recursion_proteinclass(E, B).;true;true
8;true,true,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, D), interaction(F, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07042249347191636;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.3731492935750003;  // std dev = 1,228, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.13349284408716358;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8167895590747791;  // std dev = 0,070, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14454119894006523;  // std dev = 0,094, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.517880380128843;  // std dev = 0,744, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.733928133115042;  // std dev = 0,053, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1545786452408299;  // std dev = 0,101, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.015825871207837038;  // std dev = 0,803, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.37582217391975636;  // std dev = 0,903, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6670766800075292;  // std dev = 0,105, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12769222914858758;  // std dev = 0,085, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.4164868089840142;  // std dev = 0,706, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5700925684164337;  // std dev = 0,067, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.13577486532764543;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( phenotype(A, G), interaction(F, F) )
%   | | then return 0.3951874607642421;  // std dev = 0,786, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, A), complex(F, H) )
%   | | | then return 0.3202434228949478;  // std dev = 0,623, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07676738531128723;  // std dev = 0,708, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4365591741635345;  // std dev = 0,109, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.13953980282045397;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3475137785247036;  // std dev = 0,609, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return -0.16460447898014685;  // std dev = 0,241, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.21977256884095278;  // std dev = 1,044, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.47190936236146036;  // std dev = 0,187, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.06829664111032578;  // std dev = 0,459, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.16683242198805015;  // std dev = 0,682, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.41322283166980006;  // std dev = 0,189, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.356927499697182;  // std dev = 0,290, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.1599676963577932;  // std dev = 0,209, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.20719896693149198;  // std dev = 0,125, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), enzyme(I, J) )
%   | | | then return -0.1404136215707966;  // std dev = 0,175, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.18292403455396342;  // std dev = 0,595, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return -0.1134170206220448;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, C), interaction(C, A) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(H, F), enzyme(H, I) )
%   | | | then return 0.037138638497513615;  // std dev = 0,841, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.15606629617947437;  // std dev = 0,497, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.11487486147731386;  // std dev = 0,082, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.16463911368181908;  // std dev = 0,447, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3020485483602655;  // std dev = 0,016, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.13063583724537414;  // std dev = 0,149, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return 0.0018149360878569748;  // std dev = 0,681, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.0735469053250154;  // std dev = 0,923, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.0176226083624806;  // std dev = 0,540, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(A, C), interaction(D, A) )
%   then if ( function(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17923129024097886;  // std dev = 0,731, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else if ( complex(A, G) )
%   | | then if ( interaction(H, A), complex(H, G) )
%   | | | then return -0.240848358063022;  // std dev = 0,146, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1370435168417407;  // std dev = 0,145, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11523426132005465;  // std dev = 0,082, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0038183546827861257;  // std dev = 0,341, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( complex(D, G), interaction(E, D) )
%   | | | then return 0.06965963230340634;  // std dev = 0,624, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.1188786415715394;  // std dev = 0,113, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.09518902370626456;  // std dev = 0,373, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), interaction(I, I) )
%   | | | then return 0.1666877968902239;  // std dev = 0,303, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06408562056562708;  // std dev = 0,324, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.03913320909473343;  // std dev = 0,381, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.20152722440220946;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.915533
   AUC PR    = 0.174533
   CLL	      = -0.366157
   Precision = 0.047555 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.08993


Total learning time: 14.375 seconds
Total inference time: 19.636 seconds
AUC ROC: 0.915533


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.17801
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.506 seconds
Refined model CLL: -0.17801


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.915533
   AUC PR    = 0.174533
   CLL	      = -0.366157
   Precision = 0.047555 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.08993


Total learning time: 19.288 seconds
Total inference time: 19.636 seconds
AUC ROC: 0.915533
Total revision time: 19.288
Best scored revision CLL: -0.17801


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:55:24
{'CLL': -0.366157, 'AUC ROC': 0.915533, 'F1': 0.08993, 'Recall': 0.825581, 'Precision': [0.047555, 0.5], 'Inference time': 19.636, 'Learning time': 19.288, 'AUC PR': 0.174533, 'parameter_20': {'CLL': -0.284811, 'AUC ROC': 0.979429, 'F1': 0.361371, 'Recall': 0.674419, 'Precision': [0.246809, 0.5], 'Inference time': 9.71, 'Learning time': 2.127, 'AUC PR': 0.326737}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(C, C), interaction(E, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07042249347191636;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.20967782478625846;  // std dev = 1,319, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.13349284408716358;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( complex(D, E), phenotype(D, F) )
%   | then return 0.3204113667881897;  // std dev = 0,844, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.1620432338874159;  // std dev = 0,196, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then return 0.016999765225921906;  // std dev = 0,632, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(A, J), phenotype(I, K) )
%   | | | then return 0.5586939578165236;  // std dev = 0,819, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.23552167299944787;  // std dev = 1,140, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.13765218632979798;  // std dev = 0,941, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.04825136059163478;  // std dev = 0,669, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( complex(D, F), complex(E, F) )
%   | | then if ( phenotype(E, G) )
%   | | | then return 0.5778263707937661;  // std dev = 0,122, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2729307345307451;  // std dev = 0,803, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.2181365506854163;  // std dev = 0,146, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12840952705364853;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4591018221962241;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21038197047981436;  // std dev = 0,222, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.31734539300369047;  // std dev = 0,815, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.6018895729598189;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( complex(A, E), interaction(A, D) )
%   | then return 0.2577134429673094;  // std dev = 0,439, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F) )
%   | | then return -0.15138692295924447;  // std dev = 0,149, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.15715301828427194;  // std dev = 0,691, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( complex(G, H), interaction(G, G) )
%   | | then return -0.15838189564488872;  // std dev = 0,113, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.509192538848288;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23460732659700087;  // std dev = 1,204, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else return 0.016024305361167005;  // std dev = 0,498, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.045641579630514635;  // std dev = 0,540, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B), complex(D, F) )
%   | | then return 0.406857587567953;  // std dev = 0,161, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.19876908590429918;  // std dev = 0,392, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.16680282362085241;  // std dev = 0,210, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3151903801780969;  // std dev = 0,074, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1944773528877958;  // std dev = 0,228, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.4056975545352648;  // std dev = 0,280, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20089678374482584;  // std dev = 0,706, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3128582493442079;  // std dev = 0,174, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return -0.136694230277532;  // std dev = 0,107, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then if ( recursion_proteinclass(F, B), complex(E, G) )
%   | | | then return 0.3618090854612741;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06878882099775958;  // std dev = 0,623, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.07157992091336114;  // std dev = 0,591, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.20750541099799275;  // std dev = 0,780, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2524113412946891;  // std dev = 0,153, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return -0.12161834484353369;  // std dev = 0,097, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.26893410699092607;  // std dev = 0,282, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.2477543096167949;  // std dev = 0,122, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.05504308097137899;  // std dev = 0,388, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.09275184001791335;  // std dev = 0,736, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( complex(D, E), phenotype(D, F) )
%   | then return 0.06898583674500976;  // std dev = 0,347, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.08688728283702214;  // std dev = 0,079, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.3050515469677932;  // std dev = 0,166, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16957816908582907;  // std dev = 0,064, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(J, G), interaction(J, J) )
%   | | | then return -0.12462630860147587;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.19976096135599886;  // std dev = 0,119, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.2647638702989459;  // std dev = 0,113, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1716285480910208;  // std dev = 0,178, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0570766364499831;  // std dev = 0,425, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return 0.115998204954969;  // std dev = 0,448, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B), complex(D, F) )
%   | | then return 0.18331332125653854;  // std dev = 0,107, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return -0.15250870580571857;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09316161234925252;  // std dev = 0,077, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.17944392739343654;  // std dev = 0,198, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1471213568804436;  // std dev = 0,253, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.12809679908124302;  // std dev = 0,430, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.817975
   AUC PR    = 0.204055
   CLL	      = -0.371997
   Precision = 0.036585 at threshold = 0.5
   Recall    = 0.627907
   F1        = 0.069142


Total learning time: 6.159 seconds
Total inference time: 3.538 seconds
AUC ROC: 0.817975


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:55:34
{'CLL': -0.371997, 'AUC ROC': 0.817975, 'F1': 0.069142, 'Recall': 0.627907, 'Precision': [0.036585, 0.5], 'Inference time': 3.538, 'Learning time': 6.159, 'AUC PR': 0.204055}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(H, A), complex(H, I) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.661676
   AUC PR    = 0.063555
   CLL	      = -0.215778
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.546 seconds
Total inference time: 1.632 seconds
AUC ROC: 0.661676


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:55:37
{'CLL': -0.215778, 'AUC ROC': 0.661676, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.632, 'Learning time': 1.546, 'AUC PR': 0.063555}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true,true;follows(F, A), follows(A, F).;false;false
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
0;false,true,false;follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H).;true;true
1;false,true,true;follows(A, E), tweets(A, F).;false;false
1;false,true;follows(D, E), follows(E, A).;true;true
1;false;follows(D, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;false,true,true;follows(A, D), tweets(A, F).;false;false
2;false,true;follows(E, D), follows(E, A).;true;true
2;false;follows(D, A).;true;true
2;false,false,false;tweets(A, J).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
3;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
3;true;follows(A, C), tweets(A, D).;true;false
3;false,true;follows(G, F), follows(G, A).;false;true
3;false;follows(F, A).;true;true
3;true,true;follows(A, E), follows(E, C).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(I, H), follows(I, A).;false;false
4;false,false;follows(H, A).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,true;follows(A, G), follows(F, G).;false;false
4;false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false,false,false;tweets(A, J), follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, J), follows(A, J).;false;false
5;false,false;tweets(A, H), follows(A, I).;true;true
5;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true,false;tweets(A, E), tweets(D, E).;false;false
6;false,false;follows(A, G).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;follows(A, D), recursion_accounttype(D, B).;true;false
6;false;follows(F, A).;false;true
6;true,true;follows(C, D), follows(A, C).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;follows(A, I).;false;false
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;true,false;follows(C, E), follows(E, C).;false;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;true
7;false;follows(G, A), follows(A, G).;false;true
7;false,false,false;follows(J, A).;false;false
7;true,false,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
8;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
8;false,false;follows(I, A).;false;true
8;true;tweets(E, C), recursion_accounttype(E, B).;true;false
8;false,true;follows(G, H), follows(H, A).;false;false
8;false;follows(G, A), recursion_accounttype(G, B).;true;true
8;true,true;recursion_accounttype(D, B).;false;true
8;false,false,false;follows(A, J), follows(J, K).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false,false,true;follows(A, J), follows(J, I).;false;false
9;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true;follows(E, D), follows(E, A).;true;true
9;false;follows(D, A).;true;true
9;false,false,false;tweets(A, K).;false;false
9;false,true,false;follows(G, D), tweets(G, H).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.08891816586874296;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.5248156017661789;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), function(A, F) )
%   | | | then return -1.2784210178493072E-4;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.33320549123154836;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8469765504451795;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.15302344955482042;  // std dev = 1,05e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.2183710604247047;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return -1.1007611748299155E-4;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.28165075953675034;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7035176515531233;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1342252649056699;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6209436491414325;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1833886721496299;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then return 0.11485787309164634;  // std dev = 1,579, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2103412688874093;  // std dev = 0,466, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 5.197153952405993E-4;  // std dev = 0,844, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2596304530184242;  // std dev = 1,352, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.09495174572978032;  // std dev = 1,576, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.026862429758644578;  // std dev = 0,980, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( function(A, H), interaction(I, A) )
%   | | | then return 0.20459578487997343;  // std dev = 1,295, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3249497876252797;  // std dev = 0,937, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.0196732148543168;  // std dev = 1,446, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( function(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return 0.1367076328742034;  // std dev = 0,802, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.1761152784315932;  // std dev = 0,974, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, C), interaction(C, A) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( function(A, E), function(D, E) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then return 0.03923849984635815;  // std dev = 1,805, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.32003921601705676;  // std dev = 0,015, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.25857279348785184;  // std dev = 0,010, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.007701587817741631;  // std dev = 0,971, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05165039979971824;  // std dev = 1,508, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.09909180839591651;  // std dev = 1,009, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(A, C), interaction(D, A) )
%   then if ( function(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.22045642120964082;  // std dev = 1,365, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | else return -0.19698547750076403;  // std dev = 0,217, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return -0.04929828264761106;  // std dev = 0,757, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return -0.04859298904418439;  // std dev = 0,823, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.15342486734808955;  // std dev = 1,130, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, G), function(G, H) )
%   | | | then return -0.08599820863564009;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.1635811386224136;  // std dev = 0,595, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.06369581989827962;  // std dev = 0,879, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.981621
   AUC PR    = 0.287793
   CLL	      = -0.277432
   Precision = 0.2607 at threshold = 0.5
   Recall    = 0.77907
   F1        = 0.390671


Total learning time: 2.26 seconds
Total inference time: 9.551 seconds
AUC ROC: 0.981621


Results scoring model
   AUC ROC   = 0.9944
   AUC PR    = 0.995019
   CLL	      = -0.28556
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.84
   F1        = 0.913043


Total scoring time: 1.308 seconds
Parameter learned model CLL: -0.28556


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(E, F), interaction(A, F)', 'false,false': 'interaction(A, E)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(G, A), interaction(H, G)'}, {'false,false,true,true': [1.633, 8, 4], 'false,false,false,true': [2.0, 6, 12], 'false,false,false,false': [0.816, 1, 2], 'true': [0.0, 0, 4], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.519, 10, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(E, A), function(A, F)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.913, 5, 1], 'false,true,false,false': [1.05e-08, 10, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [2.11e-08, 0, 3], 'true': [0.0, 0, 4], 'false,false,true,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 14], 'false,true,true,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(D, A), function(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.913, 5, 1], 'false,true,false,false': [7.45e-09, 10, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 3], 'true': [0.0, 0, 4], 'false,false,true,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 14], 'false,true,true,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(F, H), recursion_proteinclass(H, B)', 'true': 'interaction(C, A), function(A, D)', 'false,true': 'interaction(F, G), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false,false,false': 'interaction(J, A)'}, {'true,true,false': [0.0, 0, 1], 'false,true,false,false': [0.844, 9, 2], 'true,false': [0.0, 0, 2], 'false,false,false,true': [1.352, 7, 14], 'false,true,true': [1.579, 8, 4], 'false,true,false,true': [0.466, 1, 1], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, G), interaction(A, G)', 'false,false': 'interaction(A, F)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'function(A, H), interaction(I, A)'}, {'false,false,true,true': [1.576, 8, 4], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.295, 7, 14], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.98, 10, 3], 'true,true': [0.0, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), interaction(J, A)', 'false,false': 'function(A, H), interaction(I, A)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.802, 3, 5], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [1.446, 16, 4], 'false,false,true,false': [0.974, 4, 9], 'true,true': [0.0, 0, 3], 'false,true,true,false': [0.937, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'function(A, E), function(D, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false': 'interaction(A, F)', 'true,true': 'interaction(D, C), interaction(C, A)'}, {'false,false,true,true': [0.015, 0, 14], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,true': [1.805, 18, 7], 'true,true,false,true': [0.0, 0, 1], 'false,false,true,false': [0.01, 7, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(A, H)'}, {'false,false,true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.508, 12, 5], 'false,false,false,false': [1.009, 7, 14], 'false,true': [0.971, 6, 2], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'function(A, C), interaction(D, A)', 'true,true,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'true': 'function(E, C), recursion_proteinclass(E, B)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)'}, {'false,false,true': [0.757, 3, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.217, 16, 0], 'true,true,false,false': [1.365, 6, 20], 'true,true,true': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(D, A), function(A, F)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,false,false': 'function(A, J)', 'false,true,false': 'interaction(D, G), function(G, H)'}, {'false,true,true,true': [0.823, 5, 1], 'false,true,false,false': [0.595, 2, 2], 'false,false,false,true': [0.879, 7, 14], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.471, 8, 1], 'true': [0.0, 0, 4], 'false,false,false,false': [0.0, 0, 0], 'false,true,true,false': [1.13, 3, 3]}]]
[{'': [0.0, 0.2481096408317579], 'false,false,true': [0.22222222222222207, 0.1775147928994083], 'false,false': [0.2016000000000001, 0.22222222222222185], 'false': [nan, 0.2481096408317578], 'false,false,false': [0.22222222222222188, 0.22222222222222224]}, {'': [0.0, 0.23733812303965446], 'false,false,true': [0.0, 0.0], 'false,false': [0.22222222222222246, nan], 'false,true,true': [0.13888888888888887, 0.25000000000000017], 'false,true': [0.2222222222222224, 0.17751479289940827], 'false': [0.20094225642939975, 0.22222222222222246], 'false,true,false': [1.4802973661668753e-16, 1.1102230246251566e-17]}, {'': [0.0, 0.17372172631212213], 'false,false,true': [-2.5376526277146434e-16, 0.0], 'false,false': [0.14376677401632618, nan], 'false,true,true': [0.13888888888888887, 0.25], 'false,true': [0.21429173657158743, 0.12458222380063042], 'false': [0.16930763213313274, 0.14376677401632618], 'false,true,false': [0.0, 5.551115123125783e-18]}, {'': [0.0, 0.12533520088355535], 'false,false': [nan, 0.08699913286959933], 'false,true,false': [0.10871500411212062, 0.0646899198022536], 'true': [0.0, 0.0], 'false,true': [0.20765855695528057, 0.07719408576008566], 'false': [0.1414977140382167, 0.08699913286959933], 'true,true': [0.0, 0.0], 'false,false,false': [0.08699913286959933, nan]}, {'': [0.0, 0.1171634114707118], 'false,false,true': [0.20690402519938464, 0.07386994493111744], 'false,false': [0.13888348773526019, 0.07987158937103638], 'true': [0.0, nan], 'false': [nan, 0.11716341147071177], 'false,false,false': [0.07987158937103638, nan]}, {'': [0.0, 0.11273492016600084], 'false,false,true': [0.08034204100888476, 0.07302093194653667], 'false,false': [0.0761761574010167, nan], 'false,true,true': [nan, 0.17569792661275754], 'true': [0.0, 0.0], 'false,true': [0.17569792661275754, 0.10448858097758187], 'false': [0.1377328523187054, 0.0761761574010167]}, {'': [0.0, 0.1067013625299212], 'false,false,true': [1.695150774499205e-05, 1.3938626926129111e-05], 'false,false': [0.07441413777931835, nan], 'true,true,false': [0.0, nan], 'true': [0.0, 0.0], 'false': [0.13029294536345645, 0.07441413777931835], 'true,true': [0.0, 0.0]}, {'': [0.0, 0.09019340287257617], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.08717663990891619], 'true': [0.0, nan], 'false': [0.11790299382014513, 0.08328550672306105], 'false,false,false': [0.13377045002388807, 0.04845095484328212]}, {'': [0.07973630046461037, 0.1432436508810442], 'true,true,false': [0.0, 0.0716984358309558], 'false,false': [0.1432436508810442, nan], 'true': [0.06266846559259324, 0.0029548168213598333], 'false': [nan, 0.1432436508810442], 'true,true': [0.0, 0.06688122554531892]}, {'': [0.0, 0.07919821823599207], 'false,false': [nan, 0.036768144886362854], 'false,true,true': [0.11291966686602016, 0.21291131945232578], 'false,true': [0.17311829673450532, 0.057573317693004], 'false': [0.11398266037978695, 0.036768144886362854], 'false,false,false': [0.036768144886362854, nan], 'false,true,false': [0.024694927477721895, 0.08842595296971138]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, D), interaction(A, E).;true;true
1;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, A), function(A, D).;true;true
3;true,true;interaction(E, A), interaction(C, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
6;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
6;false;interaction(A, F).;true;true
6;true,true;interaction(D, C), interaction(C, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;false;interaction(A, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- function(A, C), interaction(D, A).;true;true
8;true;function(E, C), recursion_proteinclass(E, B).;true;true
8;true,true,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( complex(D, F), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, D), interaction(G, A) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), phenotype(A, K) )
%   | | | then return 0.7581489350995123;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.4414822684328456;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.16356091876901846;  // std dev = 0,044, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3230794474095694;  // std dev = 1,273, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7326291456446588;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14125197389401567;  // std dev = 0,100, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.746245971396758;  // std dev = 0,053, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5553982692470023;  // std dev = 1,178, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.1841289790816595;  // std dev = 0,117, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.14246279167413403;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.27275943191179297;  // std dev = 1,245, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5685020562263841;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12509197187979834;  // std dev = 0,091, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.4509650067413018;  // std dev = 1,116, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.6671866539932948;  // std dev = 0,105, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.15847638707293468;  // std dev = 0,103, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( phenotype(A, F), complex(E, G) )
%   | | then if ( complex(A, H), interaction(E, I) )
%   | | | then return -0.008427068157608396;  // std dev = 0,658, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3750159011881982;  // std dev = 0,901, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.07103328888080558;  // std dev = 0,417, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14941201965072012;  // std dev = 0,143, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( complex(A, N), location(L, P) )
%   | | | then return 0.2014262320092759;  // std dev = 1,023, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.4492628438076367;  // std dev = 0,659, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.15554988296153324;  // std dev = 0,155, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( complex(A, G), interaction(D, H) )
%   | | | then return -0.0073215458081195076;  // std dev = 0,659, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.29868469023941147;  // std dev = 0,863, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.03513516376931558;  // std dev = 0,443, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12307004222777963;  // std dev = 0,118, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.09684002506873382;  // std dev = 0,795, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3233607817309839;  // std dev = 0,860, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return -0.1372559404903173;  // std dev = 0,140, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.5358976005390939;  // std dev = 0,136, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.32179524821018884;  // std dev = 0,133, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return -0.12035476672363839;  // std dev = 0,098, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.2417435508725883;  // std dev = 0,072, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.037127140845534;  // std dev = 0,429, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11544379116927031;  // std dev = 0,119, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.04567464882560759;  // std dev = 0,822, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.27427237256872866;  // std dev = 0,389, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3443133189893192;  // std dev = 0,247, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13008949929042768;  // std dev = 0,139, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.10974447331724953;  // std dev = 0,085, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.016505587841523152;  // std dev = 0,449, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.26500396230241585;  // std dev = 0,103, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.16518792905411922;  // std dev = 0,866, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.16878339688724636;  // std dev = 0,184, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.07559281707027024;  // std dev = 0,553, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.16923297888457778;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.12327917004950781;  // std dev = 0,738, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return -0.00688734844221082;  // std dev = 1,021, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(A, C), interaction(D, A) )
%   then if ( function(E, C), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1659188451051614;  // std dev = 0,891, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.13784911584050225;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08031513918015824;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.21446325882441197;  // std dev = 0,372, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.04334271908412006;  // std dev = 0,301, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.15237742035100266;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F), complex(D, G) )
%   | | | then return -0.0949434593219222;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.17157030719688904;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2087674747331176;  // std dev = 0,206, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.11651713357342124;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.14633743843384092;  // std dev = 0,252, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.02545978233248469;  // std dev = 0,924, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */


Results
   AUC ROC   = 0.925621
   AUC PR    = 0.148658
   CLL	      = -0.294349
   Precision = 0.053303 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.100141


Total learning time: 17.048 seconds
Total inference time: 20.877 seconds
AUC ROC: 0.925621


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.177211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.812 seconds
Refined model CLL: -0.177211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.925621
   AUC PR    = 0.148658
   CLL	      = -0.294349
   Precision = 0.053303 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.100141


Total learning time: 22.428 seconds
Total inference time: 20.877 seconds
AUC ROC: 0.925621
Total revision time: 22.428
Best scored revision CLL: -0.177211


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:56:31
{'CLL': -0.294349, 'AUC ROC': 0.925621, 'F1': 0.100141, 'Recall': 0.825581, 'parameter_25': {'CLL': -0.277432, 'AUC ROC': 0.981621, 'F1': 0.390671, 'Recall': 0.77907, 'Precision': [0.2607, 0.5], 'Inference time': 9.551, 'Learning time': 2.26, 'AUC PR': 0.287793}, 'Precision': [0.053303, 0.5], 'Inference time': 20.877, 'Learning time': 22.428, 'AUC PR': 0.148658}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(C, D), location(A, E) )
%   | | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1438632208137979;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( complex(A, I), location(G, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(L, G), enzyme(L, M) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( complex(C, E), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, C), interaction(F, A) )
%   | | then return 0.3196778434809073;  // std dev = 1,180, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, D), enzyme(A, G) )
%   | | | then return 0.13297029056025003;  // std dev = 0,718, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13811250461446803;  // std dev = 0,056, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(J, H), phenotype(A, K) )
%   | | then if ( enzyme(H, L) )
%   | | | then return 0.4585525710859528;  // std dev = 0,717, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7627085782698442;  // std dev = 0,140, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, M), recursion_proteinclass(M, B) )
%   | | | then return 0.7194734122109546;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1509972492549962;  // std dev = 0,081, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6133291196703994;  // std dev = 0,120, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( complex(D, F), complex(E, F) )
%   | | then if ( phenotype(D, G), phenotype(E, G) )
%   | | | then return -0.20809298843374888;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.42354403658998363;  // std dev = 0,982, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.1291375856570218;  // std dev = 0,087, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, I), complex(H, J) )
%   | | | then return 0.64040952419509;  // std dev = 0,175, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.31598942046446177;  // std dev = 1,399, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(C, D), complex(A, E) )
%   | then return 0.46736610378594934;  // std dev = 0,105, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(C, F), interaction(G, A) )
%   | | then return -0.16016580180732098;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0150931346355129;  // std dev = 0,511, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( phenotype(A, H) )
%   | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.6382578154303926;  // std dev = 0,151, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4770379862283029;  // std dev = 0,174, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.17757959581221733;  // std dev = 0,088, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.47067301085972757;  // std dev = 0,076, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15482976453987166;  // std dev = 0,126, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.026058961613764652;  // std dev = 0,529, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(C, D), complex(A, E) )
%   | then return 0.3563260657024994;  // std dev = 0,098, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, C) )
%   | | then return 0.0486384095844385;  // std dev = 0,496, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1155767697288418;  // std dev = 0,057, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.4865498787966387;  // std dev = 0,163, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3630971465366399;  // std dev = 0,160, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.15334226478252136;  // std dev = 0,078, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.35736148196167594;  // std dev = 0,068, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.13605155834896876;  // std dev = 0,113, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.022726633617110154;  // std dev = 0,532, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2777158077028443;  // std dev = 0,103, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then return 0.026383072661633627;  // std dev = 0,581, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.10129245615496085;  // std dev = 0,046, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.313613815588297;  // std dev = 0,250, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.13463466932478155;  // std dev = 0,070, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.21144295162363078;  // std dev = 0,416, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.024899625799462127;  // std dev = 0,737, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(C, D), complex(A, E) )
%   | then return 0.2434677024389291;  // std dev = 0,076, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(C, F), interaction(G, A) )
%   | | then return -0.1352091453331145;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -5.938845879181106E-4;  // std dev = 0,478, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( location(A, I), interaction(H, H) )
%   | | then return 0.0089485801429962;  // std dev = 0,418, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, J), location(A, I) )
%   | | | then return 0.19664546528507085;  // std dev = 0,524, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.08425756878073955;  // std dev = 0,805, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else return -0.026583645128815392;  // std dev = 0,305, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2024401168965036;  // std dev = 0,086, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.16277732125357752;  // std dev = 0,532, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.03211274165717735;  // std dev = 0,614, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.10663815438149264;  // std dev = 0,114, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( complex(A, H), location(F, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.18562252755709827;  // std dev = 0,091, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1378418628376929;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, F), enzyme(K, L) )
%   | | | then return 0.086783017252782;  // std dev = 0,370, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.25093367116538756;  // std dev = 0,050, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.10724076516416087;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(D, C), complex(A, E) )
%   | then return 0.1734241605764879;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(D, F), interaction(G, A) )
%   | | then return -0.12466005172432908;  // std dev = 0,067, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.003720701366610022;  // std dev = 0,439, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( phenotype(A, H) )
%   | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.16731604350221224;  // std dev = 0,088, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2532516888428885;  // std dev = 0,126, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1261670093861838;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then return 0.1410246065713175;  // std dev = 0,347, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.07811015467616575;  // std dev = 0,551, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.11125850216090431;  // std dev = 0,076, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15350394326973493;  // std dev = 0,075, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then return 0.01415412325863529;  // std dev = 0,492, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.08335456013939774;  // std dev = 0,032, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.171947509397213;  // std dev = 0,173, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.11298403432048006;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.1168939942467495;  // std dev = 0,337, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0025495199088639725;  // std dev = 0,599, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */


Results
   AUC ROC   = 0.843384
   AUC PR    = 0.162018
   CLL	      = -0.260674
   Precision = 0.106776 at threshold = 0.5
   Recall    = 0.604651
   F1        = 0.181501


Total learning time: 10.118 seconds
Total inference time: 5.299 seconds
AUC ROC: 0.843384


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:56:47
{'CLL': -0.260674, 'AUC ROC': 0.843384, 'F1': 0.181501, 'Recall': 0.604651, 'Precision': [0.106776, 0.5], 'Inference time': 5.299, 'Learning time': 10.118, 'AUC PR': 0.162018}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( complex(D, F), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, D), interaction(G, A) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), phenotype(A, K) )
%   | | | then return 0.7581489350995123;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.4414822684328456;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.631083
   AUC PR    = 0.056112
   CLL	      = -0.200846
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.854 seconds
Total inference time: 1.866 seconds
AUC ROC: 0.631083


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:56:51
{'CLL': -0.200846, 'AUC ROC': 0.631083, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.866, 'Learning time': 1.854, 'AUC PR': 0.056112}


