Starting experiment #4 for 22_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then return 0.8025933795439563;  // std dev = 0,229, 90,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=85 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.8581489350995118;  // std dev = 2,67e-07, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( follows(F, A) )
%   | then if ( follows(G, F), follows(G, A) )
%   | | then return -0.1177960820826188;  // std dev = 0,153, 291,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=7 */
%   | | else if ( follows(F, H), recursion_accounttype(H, B) )
%   | | | then return 0.834339411289988;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.14185106490048785;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.20460562801289803;  // std dev = 5,362, 127,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
%   | | | else return 0.12644161802634163;  // std dev = 2,837, 41,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), follows(A, E) )
%   | then return 0.7107635175122275;  // std dev = 0,128, 119,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=117 */
%   | else if ( follows(C, F), follows(F, A) )
%   | | then return 0.6681913609289036;  // std dev = 0,221, 39,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else return 0.7194734122109543;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then if ( tweets(A, H) )
%   | | then return 0.728811896425133;  // std dev = 0,147, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.43512492776851686;  // std dev = 0,453, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( follows(I, A) )
%   | | then if ( follows(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.720570894065673;  // std dev = 1,063, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.1275790212114613;  // std dev = 0,151, 421,000 (wgt'ed) examples reached here.  /* #neg=421 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.08757204752394077;  // std dev = 4,802, 121,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=31 */
%   | | | else return 0.2363558192753605;  // std dev = 3,794, 60,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), recursion_accounttype(D, B) )
%   | then return 0.5598841844180963;  // std dev = 0,087, 131,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=130 */
%   | else if ( follows(E, C), follows(A, E) )
%   | | then return 0.39259532296441196;  // std dev = 0,915, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.563921481036952;  // std dev = 0,031, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then return 0.5933590592707271;  // std dev = 0,073, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else return -0.11364066720808245;  // std dev = 0,024, 423,000 (wgt'ed) examples reached here.  /* #neg=423 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.7423817743661354;  // std dev = 1,400, 56,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=55 */
%   | | | else return -0.18615566114362211;  // std dev = 0,096, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.09373536412306097;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.08802107840877536;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.4168098236417339;  // std dev = 0,109, 166,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=164 */
%   | else return 0.08451992497859141;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), recursion_accounttype(G, B) )
%   | | | then return 0.29039192329254687;  // std dev = 1,617, 21,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return 0.43409787160440627;  // std dev = 0,949, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.1027294378874026;  // std dev = 0,022, 435,000 (wgt'ed) examples reached here.  /* #neg=435 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( tweets(A, I) )
%   | | | then return 0.2595591167074736;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.4413572267634527;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.06863798951227908;  // std dev = 3,993, 116,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=31 */
%   | | | else return 0.14554144249413306;  // std dev = 3,551, 64,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( recursion_accounttype(D, B) )
%   | then if ( follows(A, D), tweets(D, E) )
%   | | then return 0.3002455459925571;  // std dev = 0,180, 119,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=115 */
%   | | else return 0.33261244608235935;  // std dev = 0,120, 96,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=95 */
%   | else return -0.09043434115800908;  // std dev = 0,755, 402,000 (wgt'ed) examples reached here.  /* #neg=399 #pos=3 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( recursion_accounttype(G, B) )
%   | | then return 0.5695070495811931;  // std dev = 0,152, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return -0.15640796324658046;  // std dev = 0,052, 98,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=1 */
%   | else if ( follows(A, H), tweets(A, I) )
%   | | then if ( tweets(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.6156477074335354;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19787121716388792;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.20888824513482376;  // std dev = 1,522, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.2271239849487552;  // std dev = 2,441, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then return 0.2537530771757428;  // std dev = 0,115, 148,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=146 */
%   | else return 0.21730772005713345;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( tweets(A, G) )
%   | | | then return 0.30182968296977447;  // std dev = 0,511, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return 0.18575110468939618;  // std dev = 0,663, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.08626029526324094;  // std dev = 0,022, 413,000 (wgt'ed) examples reached here.  /* #neg=413 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.20867772899614476;  // std dev = 0,023, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.07276370701259331;  // std dev = 0,893, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.021229212473656004;  // std dev = 3,925, 169,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=44 */
%   | | | else return -0.034873418747101724;  // std dev = 2,893, 46,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, A) )
%   | then return 0.22234938928720313;  // std dev = 0,055, 135,000 (wgt'ed) examples reached here.  /* #pos=135 */
%   | else return 0.18429438207524723;  // std dev = 0,169, 34,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), follows(G, H) )
%   | | | then return 0.2446937984049781;  // std dev = 0,467, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return -0.24689914658348322;  // std dev = 0,911, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.07967157486605962;  // std dev = 0,021, 437,000 (wgt'ed) examples reached here.  /* #neg=437 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.4016012852061039;  // std dev = 2,102, 58,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=55 */
%   | | | else return -0.16068064736008641;  // std dev = 0,306, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.0655062577830375;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.10171303642406672;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A) )
%   | then if ( follows(D, C), recursion_accounttype(D, B) )
%   | | then return 0.1863554628959147;  // std dev = 0,032, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | | else return 0.14596374272340673;  // std dev = 0,201, 57,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=54 */
%   | else if ( follows(A, E), follows(C, E) )
%   | | then return 0.12840008234940364;  // std dev = 0,033, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.3747628783836184;  // std dev = 0,826, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( follows(F, A), follows(A, F) )
%   | then return -0.049603867478624324;  // std dev = 0,081, 379,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=34 */
%   | else if ( tweets(A, G) )
%   | | then if ( tweets(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.27846186990550786;  // std dev = 1,828, 57,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | | else return -0.1120433134751557;  // std dev = 0,562, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | | then return 0.18133491045611047;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04573017890055162;  // std dev = 3,117, 93,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then return 0.15484486504469064;  // std dev = 0,083, 147,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=146 */
%   | else return 0.10460676678429154;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.33888263146173825;  // std dev = 0,012, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1520366188102687;  // std dev = 1,012, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | else return -0.07064559251094686;  // std dev = 0,115, 419,000 (wgt'ed) examples reached here.  /* #neg=419 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.31471887243279745;  // std dev = 1,437, 56,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=55 */
%   | | | else return -0.13471391637751756;  // std dev = 0,315, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.10857719162454549;  // std dev = 1,423, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.055136208369742555;  // std dev = 2,304, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then if ( recursion_accounttype(E, B) )
%   | | | then return 0.12719611636576575;  // std dev = 1,002, 78,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=77 */
%   | | | else return 0.0427415801388123;  // std dev = 1,639, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | else return 0.13957011122139173;  // std dev = 0,035, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.14210211935967126;  // std dev = 0,093, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( follows(F, A) )
%   | then return -0.043796452885667886;  // std dev = 0,082, 479,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=48 */
%   | else if ( follows(A, G), tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.1914034454981073;  // std dev = 1,154, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.10560970252750283;  // std dev = 0,053, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.022066269789729497;  // std dev = 1,957, 71,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.060496174889843976;  // std dev = 2,585, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.015375036594832933;  // std dev = 0,771, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.6090308916485301;  // std dev = 0,131, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12714114378515878;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.40452322423452736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.491612355368038;  // std dev = 0,123, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.11368739609887528;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.29353731925614;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.08370583464148133;  // std dev = 0,457, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.31777993670476595;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10272521288149856;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.2365292537918362;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3419760647772104;  // std dev = 0,133, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.10046188587467444;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.2557298795007802;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.19317767545624992;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.35437821392690183;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.09174682917833378;  // std dev = 0,017, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.21015154503475308;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1619065707214582;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.03731210198583818;  // std dev = 0,184, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.1773852990503645;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08219774801441754;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2277103827914534;  // std dev = 0,071, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1794832083491369;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.08023630018788044;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.1497593417008607;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then return 0.011474061979501874;  // std dev = 0,321, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.13455062362854098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.12879745329067815;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.959971
   AUC PR    = 0.120194
   CLL	      = -0.1935
   Precision = 0.0887 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.16044


Total learning time: 1.308 seconds
Total inference time: 10.125 seconds
AUC ROC: 0.959971


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114329
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.762 seconds
Parameter learned model CLL: -0.114329


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'interaction(A, H)'}, {'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [2.11e-08, 0, 3], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(F, A)', 'false,true': 'enzyme(A, E)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.771, 5, 1], 'false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false': 'interaction(D, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0], 'false,true,true': [0.131, 0, 3], 'true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(D, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,true,false': [0.0, 5, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true,true,false': [0.123, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.457, 2, 1], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 3, 0], 'false,true,false': [0.007, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true,true': 'enzyme(A, F)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(D, A)', 'false,false,false': 'interaction(A, H)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,true,false': [0.019, 5, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true,true,false': [0.133, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, F), interaction(F, G)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(D, A)'}, {'false,true,true,true': [0.005, 0, 2], 'false,false,true,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.017, 5, 0], 'true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.184, 1, 1], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.071, 0, 2], 'false,false,true,false': [0.013, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'false,true,true': 'interaction(D, F), interaction(F, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(D, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.005, 0, 2], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.022, 5, 0], 'true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.069, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, E), enzyme(A, F)', 'false': 'interaction(D, A)', 'false,false,false': 'interaction(A, H)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true': [0.321, 5, 3], 'false,false,true,false': [0.0, 0, 0]}]]
[{'': [nan, 0.24999999999999992], 'false,false': [nan, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0], 'false,true': [0.0, 0.24489795918367352], 'false': [0.2343749999999999, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.17847162811629394], 'false,false,true': [0.0, 0.09915090450905222], 'false,false': [0.14569112499289297, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.17626827468275946], 'false,false,false': [0.0, nan]}, {'': [nan, 0.12977476626664594], 'false,true': [0.00575974743991033, -2.7755575615628915e-18], 'false,false': [0.0, nan], 'false': [0.12917926445119615, 0.0], 'false,false,true': [0.0, nan]}, {'': [nan, 0.08017493319888706], 'false,false': [nan, 0.0], 'false,true,true': [0.0, 0.007584516761589805], 'false,true': [0.006741792676968765, -2.7755575615628915e-18], 'false': [0.08036110043905213, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.06039028795869683, 0.04421474130606006], 'false,false': [nan, -2.3129646346357427e-18], 'true': [0.0, 0.06951307096103117], 'false,true': [nan, 1.71921978367832e-05], 'false': [1.71921978367832e-05, -2.3129646346357427e-18], 'true,true': [nan, 0.0], 'false,false,false': [nan, -2.3129646346357427e-18]}, {'': [nan, 0.04026661949579353], 'false,false': [nan, 0.0], 'false,true,true': [0.0, 0.008819194352026785], 'false,true': [0.00835035844512568, 6.989553277552824e-05], 'false': [0.04205421146369509, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.028163036044770173], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [1.1019579368228005e-05, 0.0], 'false,true': [0.005781927186962845, 5.9461705679032806e-05], 'false': [0.02908567988350594, 0.0]}, {'': [0.0, 0.0209237838124097], 'false,false,true': [0.0, 3.995835575309418e-05], 'false,false': [0.010813304016352368, 0.0025326140535476063], 'true': [0.0, nan], 'false': [0.017019445607405814, 0.022030989559761353], 'true,true': [nan, 0.0], 'false,false,false': [nan, 0.0025326140535476063]}, {'': [nan, 0.01598989588228494], 'false,false,true': [1.0262834348819666e-05, nan], 'false,false': [1.0262834348819666e-05, nan], 'false,true,true': [nan, 0.0016017450804251265], 'false,true': [0.0016017450804251265, 9.275260077658414e-05], 'false': [0.0164682083231549, 1.0262834348819666e-05]}, {'': [nan, 0.012594501175857295], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.0], 'false': [0.0128514509150994, 8.274742234120475e-06], 'false,false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
0;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;false;interaction(F, A).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
3;;proteinclass(A, B) :- interaction(D, A).;true;true
3;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
3;true,true;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
4;false;interaction(A, F), interaction(F, G).;true;true
5;;proteinclass(A, B) :- interaction(D, A).;true;true
5;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
5;true,true;enzyme(A, F).;true;true
6;;proteinclass(A, B) :- interaction(D, A).;true;true
6;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
6;true,true;interaction(A, F), interaction(F, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(G, F), recursion_proteinclass(G, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(D, A).;true;true
8;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
9;;proteinclass(A, B) :- interaction(D, A).;true;true
9;false;interaction(A, E), enzyme(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.015375036594832933;  // std dev = 0,771, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6090308916485301;  // std dev = 0,131, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.12714114378515878;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.40452322423452736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.491612355368038;  // std dev = 0,123, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.11368739609887528;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.29353731925614;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.08370583464148133;  // std dev = 0,457, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return 0.31777993670476595;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10272521288149856;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.2365292537918362;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3419760647772104;  // std dev = 0,133, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.10046188587467444;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.2557298795007802;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.19317767545624992;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.35437821392690183;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.09174682917833378;  // std dev = 0,017, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.21015154503475308;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1619065707214582;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return 0.03731210198583818;  // std dev = 0,184, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.1773852990503645;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08219774801441754;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2277103827914534;  // std dev = 0,071, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1794832083491369;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.08023630018788044;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.1497593417008607;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(A, D) )
%   | then return -0.02867345588451241;  // std dev = 0,189, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.078386591752859;  // std dev = 0,214, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then return 0.13455062362854098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.12879745329067815;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.931361
   AUC PR    = 0.050926
   CLL	      = -0.262535
   Precision = 0.062545 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.117727


Total learning time: 1.267 seconds
Total inference time: 8.165 seconds
AUC ROC: 0.931361


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112297
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.759 seconds
Refined model CLL: -0.112297


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.931361
   AUC PR    = 0.050926
   CLL	      = -0.262535
   Precision = 0.062545 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.117727


Total learning time: 4.096 seconds
Total inference time: 8.165 seconds
AUC ROC: 0.931361
Total revision time: 4.096
Best scored revision CLL: -0.112297


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:27:08
{'CLL': -0.262535, 'AUC ROC': 0.931361, 'F1': 0.117727, 'Recall': 1.0, 'Precision': [0.062545, 0.5], 'parameter_5': {'CLL': -0.1935, 'AUC ROC': 0.959971, 'F1': 0.16044, 'Recall': 0.83908, 'Precision': [0.0887, 0.5], 'Inference time': 10.125, 'Learning time': 1.308, 'AUC PR': 0.120194}, 'Inference time': 8.165, 'Learning time': 4.096, 'AUC PR': 0.050926}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then return 0.03234149293521425;  // std dev = 0,811, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.5765998742001945;  // std dev = 0,919, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then return 0.027825663954736866;  // std dev = 0,810, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.4625904681178873;  // std dev = 0,929, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.36987663376348634;  // std dev = 0,963, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.008257388528212884;  // std dev = 0,738, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return -0.052886162101441425;  // std dev = 0,900, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.2752970251306374;  // std dev = 0,777, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.2463606428820344;  // std dev = 0,935, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.01901529899506609;  // std dev = 0,697, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return -0.07092374996025502;  // std dev = 0,890, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.19247065852493392;  // std dev = 0,718, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return -0.058200116304364724;  // std dev = 0,891, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.15412521810379962;  // std dev = 0,706, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.1607512091550049;  // std dev = 0,904, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.05075736778372364;  // std dev = 0,653, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return -0.06397146450241586;  // std dev = 0,886, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.1147296738915818;  // std dev = 0,683, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.500109
   AUC PR    = 0.007469
   CLL	      = -0.710685
   Precision = 0.007469 at threshold = 0.5
   Recall    = 0.413793
   F1        = 0.014673


Total learning time: 1.696 seconds
Total inference time: 1.86 seconds
AUC ROC: 0.500109


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:27:12
{'CLL': -0.710685, 'AUC ROC': 0.500109, 'F1': 0.014673, 'Recall': 0.413793, 'Precision': [0.007469, 0.5], 'Inference time': 1.86, 'Learning time': 1.696, 'AUC PR': 0.007469}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.500042
   AUC PR    = 0.007467
   CLL	      = -0.230635
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.82 seconds
Total inference time: 1.428 seconds
AUC ROC: 0.500042


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:27:15
{'CLL': -0.230635, 'AUC ROC': 0.500042, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.428, 'Learning time': 0.82, 'AUC PR': 0.007467}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7518526675222027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7518526675222027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1586280283224096;  // std dev = 1,720, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.5851000878787853;  // std dev = 0,950, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.16440024641484122;  // std dev = 0,069, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4431382950371415;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.45875092980016274;  // std dev = 0,963, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.14311546443665163;  // std dev = 0,061, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.33465936396272933;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.09517542828318408;  // std dev = 1,246, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3640238177230064;  // std dev = 0,131, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11000023001667177;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.30034032361144536;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.4515809857592974;  // std dev = 0,266, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15514230721675332;  // std dev = 0,826, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.13069366778215705;  // std dev = 0,080, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.24702803088586933;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2412171410452154;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.23554591177365633;  // std dev = 0,071, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23481365377687524;  // std dev = 0,918, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.11662879933793772;  // std dev = 0,073, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.20398781743956496;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19367812877503265;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.06595224799058931;  // std dev = 0,247, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3071615273932484;  // std dev = 0,206, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09274746287334915;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.19984949848756428;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06256925166613453;  // std dev = 0,826, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.16979444623054962;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.3356605383239448;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.09192153607751015;  // std dev = 0,840, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.09801172503611794;  // std dev = 0,064, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.14865923407935155;  // std dev = 0,022, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.14718162821786385;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.010307465699098154;  // std dev = 0,979, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.11697814840182208;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.14470236769780664;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.967144
   AUC PR    = 0.174801
   CLL	      = -0.210685
   Precision = 0.072811 at threshold = 0.5
   Recall    = 0.908046
   F1        = 0.134812


Total learning time: 1.55 seconds
Total inference time: 9.425 seconds
AUC ROC: 0.967144


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.990191
   CLL	      = -0.214105
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.807 seconds
Parameter learned model CLL: -0.214105


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 2], 'false,true,true': [1.155, 4, 2], 'false,true,false,true': [0.913, 1, 5], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 2], 'false,true,false': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [1.72, 10, 5], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.069, 9, 0], 'false,false,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.95, 1, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 2], 'false,true,false': [0.061, 9, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.963, 1, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [1.246, 7, 5], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [2.63e-09, 3, 0], 'false,true,false': [0.131, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,true,true': [0.266, 0, 4], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 2], 'false,true,false': [0.08, 9, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.826, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.071, 0, 3], 'false,false,true,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.073, 9, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.918, 1, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.206, 0, 4], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,true': [0.247, 4, 1], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.826, 1, 3], 'false,false,true,false': [0.043, 5, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 2], 'false,false,true,true': [0.022, 0, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.064, 9, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.84, 1, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.979, 10, 7], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.2493074792243768], 'false,false': [nan, 0.0], 'false,true,false': [0.1388888888888887, -2.7755575615628915e-18], 'true': [nan, 0.0], 'false,true': [0.22222222222222224, 0.2479338842975206], 'false': [0.24221453287197234, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.21110203031135835], 'false,false,true': [0.0, 0.19722718863936117], 'false,false': [0.20552053656934588, 0.0], 'true,false': [nan, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.2097796178770219], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.1856926542422822], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'true,false': [nan, 0.0], 'true': [nan, 0.0], 'false,true': [0.11289416986615702, 0.000525037629268526], 'false': [0.19335637349040136, 0.0]}, {'': [0.0, 0.1364889611644339], 'false,false': [nan, 0.0], 'false,true,true': [0.0, 0.13234613042192364], 'true': [nan, 0.0], 'false,true': [0.11582952475277236, 0.0004187368631699335], 'false': [0.1443928118876483, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.12356761119257971, 0.057468068127600636], 'false,false': [nan, 2.3129646346357427e-18], 'true': [0.0, 0.12945317709078968], 'false,true': [nan, 0.0042696344366545125], 'false': [0.0042696344366545125, 2.3129646346357427e-18], 'true,true': [nan, 0.0], 'false,false,false': [nan, 2.3129646346357427e-18]}, {'': [0.0, 0.09402243503216023], 'false,false': [nan, 0.0], 'false,true,true': [0.0176388595624187, 0.17047288558902954], 'true': [nan, 0.0], 'false,true': [0.11602484510973662, 0.0007153892365589375], 'false': [0.10191668729772715, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.07476003760213151], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.0016918749038992709, 0.16861989007094574], 'true': [nan, 0.0], 'false,true': [0.10602201005559408, 0.0005876631454792882], 'false': [0.08102303604388136, 0.0]}, {'': [0.0, 0.06550129141443942], 'false,false,true': [0.010595769453821069, 0.00036939390600835567], 'false,false': [0.044402647358381814, 0.13959199715312431], 'true': [0.0, nan], 'false': [0.01218157256707665, 0.07840466515347766], 'true,true': [nan, 0.0], 'false,false,false': [0.0, 0.17072082320793486]}, {'': [0.0, 0.05767318067010638], 'false,false,true': [0.0002380857128779154, nan], 'false,false': [0.0002380857128779154, nan], 'false,true,true': [0.0, 0.11764874035217592], 'true': [nan, 0.0], 'false,true': [0.09937568674214833, 0.0004622453241906358], 'false': [0.06268899515511828, 0.0002380857128779154]}, {'': [0.0, 0.051848458510153385], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.0], 'true': [nan, 0.0], 'false': [0.05639639095323273, 0.00019215808389296332], 'false,false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false;interaction(E, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
1;false,false;interaction(I, A).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
2;false;interaction(F, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
4;false;interaction(A, F), interaction(F, G).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;false;interaction(E, A).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(G, F), recursion_proteinclass(G, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
7;false,false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;false;interaction(E, A).;true;true
8;false,true,true;interaction(E, G), interaction(G, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(A, F), enzyme(A, G).;true;true
9;false;interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7518526675222027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7518526675222027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1586280283224096;  // std dev = 1,720, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.7323222035570665;  // std dev = 0,182, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4378779722005042;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.16440024641484122;  // std dev = 0,069, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4797079248287488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4544756048123389;  // std dev = 0,923, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.14311546443665163;  // std dev = 0,061, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.30361700281840864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then return -0.13783675093878464;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.2858496474210358;  // std dev = 0,883, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10276012477141978;  // std dev = 0,567, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then return 0.3614516393885009;  // std dev = 0,098, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11000023001667177;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2618544880189696;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.40812422879426036;  // std dev = 0,234, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15349489189905224;  // std dev = 0,830, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.11879586355522408;  // std dev = 0,061, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.24750678064053555;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.21446701419150616;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.23274013375379696;  // std dev = 0,070, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20987101575820294;  // std dev = 0,900, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.10695494444567288;  // std dev = 0,056, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.20432795229847167;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21271995338137628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return -0.05107451660249469;  // std dev = 0,221, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2825728328724455;  // std dev = 0,174, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09487848080036335;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.1805429158762727;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06046312100711501;  // std dev = 0,827, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15535331597261004;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.30361659523616596;  // std dev = 0,027, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.08956660644566121;  // std dev = 0,840, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.09085540494990275;  // std dev = 0,049, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.15045998856951293;  // std dev = 0,020, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13604091224781723;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( enzyme(A, G), interaction(H, E) )
%   | | | then return 0.08634822523922032;  // std dev = 0,348, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.1107423308814299;  // std dev = 0,716, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.10375654182773124;  // std dev = 0,339, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then return 0.11953704174249058;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.14495734248794478;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.936776
   AUC PR    = 0.140182
   CLL	      = -0.262079
   Precision = 0.063205 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.118644


Total learning time: 2.018 seconds
Total inference time: 10.275 seconds
AUC ROC: 0.936776


Results scoring model
   AUC ROC   = 0.995
   AUC PR    = 0.995455
   CLL	      = -0.199246
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.806 seconds
Refined model CLL: -0.199246


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.936776
   AUC PR    = 0.140182
   CLL	      = -0.262079
   Precision = 0.063205 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.118644


Total learning time: 5.181 seconds
Total inference time: 10.275 seconds
AUC ROC: 0.936776
Total revision time: 5.181
Best scored revision CLL: -0.199246


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:27:40
{'CLL': -0.262079, 'AUC ROC': 0.936776, 'F1': 0.118644, 'Recall': 0.965517, 'Precision': [0.063205, 0.5], 'Inference time': 10.275, 'Learning time': 5.181, 'AUC PR': 0.140182, 'parameter_10': {'CLL': -0.210685, 'AUC ROC': 0.967144, 'F1': 0.134812, 'Recall': 0.908046, 'Precision': [0.072811, 0.5], 'Inference time': 9.425, 'Learning time': 1.55, 'AUC PR': 0.174801}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E), interaction(F, C) )
%   | then return 0.38778311848168984;  // std dev = 1,025, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(G, C), interaction(G, G) )
%   | | then return 0.16698779682180664;  // std dev = 0,716, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.15612031201574286;  // std dev = 0,106, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( enzyme(A, H), interaction(I, A) )
%   | then return 0.15619471171805724;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.745376816459953;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then return 0.6236459792914274;  // std dev = 0,099, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.12711636253566394;  // std dev = 0,036, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.37502026362305657;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1427514605958043;  // std dev = 0,046, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.47640571210313376;  // std dev = 0,772, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then return 0.4726095462009408;  // std dev = 0,104, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.11370234904895019;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.2920311408157467;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12622191514141465;  // std dev = 0,042, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3647561444054838;  // std dev = 0,753, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(C, E) )
%   | then if ( enzyme(C, F), phenotype(A, G) )
%   | | then return 0.3306585662518841;  // std dev = 0,513, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.011146367042099994;  // std dev = 0,412, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.2664043046951573;  // std dev = 0,312, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2586433178622991;  // std dev = 0,430, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.3072127491228701;  // std dev = 0,508, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then return 0.31520128971032774;  // std dev = 0,105, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, E) )
%   | then return -0.1264732257502501;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return 0.26833478084998624;  // std dev = 0,464, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08517162386594312;  // std dev = 0,684, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.22720434818857652;  // std dev = 0,420, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(C, E) )
%   | then if ( enzyme(C, F), phenotype(A, G) )
%   | | then return 0.22617975580533936;  // std dev = 0,407, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H) )
%   | | | then return -7.155001822053315E-4;  // std dev = 0,343, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.2193424383528687;  // std dev = 0,246, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1751813441732318;  // std dev = 0,350, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.20962044914956518;  // std dev = 0,495, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then return 0.22930026297252093;  // std dev = 0,104, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.10684679513021367;  // std dev = 0,033, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.16290411697982962;  // std dev = 0,585, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13152811107186727;  // std dev = 0,117, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1685582860476125;  // std dev = 0,487, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then return 0.191977932988458;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.09709663111501762;  // std dev = 0,031, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.12553736606333757;  // std dev = 0,583, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11760645906642832;  // std dev = 0,106, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.137310235236876;  // std dev = 0,490, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(C, E) )
%   | then if ( enzyme(C, F), phenotype(A, G) )
%   | | then return 0.1484965445843975;  // std dev = 0,315, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.00795476750005272;  // std dev = 0,259, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.2107211449226682;  // std dev = 0,294, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.11319362182726611;  // std dev = 0,269, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.1318677001851263;  // std dev = 0,398, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.50004
   AUC PR    = 0.007467
   CLL	      = -0.988962
   Precision = 0.007468 at threshold = 0.5
   Recall    = 0.528736
   F1        = 0.014727


Total learning time: 3.538 seconds
Total inference time: 3.247 seconds
AUC ROC: 0.50004


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:27:47
{'CLL': -0.988962, 'AUC ROC': 0.50004, 'F1': 0.014727, 'Recall': 0.528736, 'Precision': [0.007468, 0.5], 'Inference time': 3.247, 'Learning time': 3.538, 'AUC PR': 0.007467}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.49996
   AUC PR    = 0.007465
   CLL	      = -0.258968
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.158 seconds
Total inference time: 1.752 seconds
AUC ROC: 0.49996


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:27:51
{'CLL': -0.258968, 'AUC ROC': 0.49996, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.752, 'Learning time': 1.158, 'AUC PR': 0.007465}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7413433124639606;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7413433124639606;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.15821589879528175;  // std dev = 1,988, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.6023255840130197;  // std dev = 0,974, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.15880906679815945;  // std dev = 0,068, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.66257245288266;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3374275471173401;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4278308590075445;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4711280637540711;  // std dev = 0,988, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.13877260586022697;  // std dev = 0,061, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.31065166142555994;  // std dev = 0,666, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3190693139304956;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.03934148571688861;  // std dev = 1,297, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.28825036548801664;  // std dev = 0,686, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11561513552938736;  // std dev = 0,620, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.25548454691814027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3122021979891332;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.4511670090907106;  // std dev = 0,292, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2141663511161259;  // std dev = 0,865, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.12917882926678162;  // std dev = 0,053, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.16851508523220465;  // std dev = 0,654, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20997829872758944;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.24935672223801197;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.2264488454009654;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2635909378557182;  // std dev = 0,950, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.11535382205622172;  // std dev = 0,048, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3196870286872028;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.4391063842006829;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.1772582680659054;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19040154683181232;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.06053388622727503;  // std dev = 0,233, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3090412301409133;  // std dev = 0,190, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10002870925594264;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.20564113001550988;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.010893598824364897;  // std dev = 1,003, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15286656604503135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17407123682889858;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.3455464738440057;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13337501099161844;  // std dev = 0,876, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.09853881592406351;  // std dev = 0,045, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.21772200312675996;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3378248967672606;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.14227390773848736;  // std dev = 0,012, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then return 0.015191791545021852;  // std dev = 1,064, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.16774963370346352;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.026621815423881257;  // std dev = 0,340, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977965
   AUC PR    = 0.181854
   CLL	      = -0.177467
   Precision = 0.099282 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.179848


Total learning time: 2.036 seconds
Total inference time: 10.129 seconds
AUC ROC: 0.977965


Results scoring model
   AUC ROC   = 0.995556
   AUC PR    = 0.995618
   CLL	      = -0.204013
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.93 seconds
Parameter learned model CLL: -0.204013


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.866, 1, 3], 'false,true,true': [1.195, 5, 2], 'false,true,false,true': [0.943, 1, 8], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'false,false,true,true': [0.0, 0, 2], 'false,false,false,true': [0.866, 1, 3], 'false,true,false': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [1.988, 14, 7], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 3], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.068, 13, 0], 'false,false,true,false': [0.0, 1, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.974, 1, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.666, 1, 3], 'false,true,false': [0.061, 13, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.988, 1, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.002, 0, 3], 'false,false,true': [0.0, 0, 0], 'true,false': [1.297, 11, 5], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.62, 3, 2], 'false,true,false': [0.686, 1, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,true,true': [0.292, 0, 5], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.654, 1, 3], 'false,true,false': [0.053, 13, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.865, 1, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.077, 0, 4], 'false,false,true,true': [0.0, 0, 3], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.048, 13, 0], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.95, 1, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.19, 0, 6], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,true': [0.233, 4, 1], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [1.003, 5, 5], 'false,false,true,false': [0.022, 6, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 2], 'false,false,true,true': [0.042, 0, 3], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.045, 13, 0], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.876, 1, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.0, 0, 2], 'true,false': [0.012, 0, 2], 'false,false,false,true': [0.34, 1, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true': [1.064, 14, 10], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.2487244897959184], 'false,false': [nan, 0.18750000000000006], 'false,true,false': [0.09876543209876527, -6.938893903907228e-18], 'true': [nan, 0.0], 'false,true': [0.20408163265306126, 0.24913494809688566], 'false': [0.24305555555555558, 0.18750000000000006], 'false,false,false': [0.18750000000000006, nan]}, {'': [0.0, 0.20988375786141664], 'false,false,true': [0.0, 0.18827483382033489], 'false,false': [0.19890042177550557, 0.18750000000000006], 'true,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.20919494500271918], 'false,false,false': [0.18750000000000006, nan]}, {'': [0.0, 0.1901726141383235], 'false,false,true': [0.0, 0.0], 'false,false': [0.18750000000000003, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false,true': [0.08623508288129358, 0.0003578060057616636], 'false': [0.18354393950975575, 0.18750000000000003]}, {'': [0.0, 0.13269027391261687], 'false,false': [nan, 0.11105323743522254], 'false,true,true': [0.0, 0.09767547886341221], 'true': [0.0, 0.0], 'false,true': [0.08895081945755337, 0.0002869971320045081], 'false': [0.13208535645567887, 0.11105323743522254], 'false,false,false': [0.11105323743522254, nan]}, {'': [0.0990031478553033, 0.08515045827630555], 'false,false': [nan, 0.07698805356786594], 'true': [1.3489577052605561e-06, 0.10521109179958693], 'false,true': [nan, 0.07840567918961035], 'false': [0.07840567918961035, 0.07698805356786594], 'true,true': [nan, 1.3489577052605561e-06], 'false,false,false': [nan, 0.07698805356786594]}, {'': [0.0008042229857527367, 0.09491675936129328], 'false,false': [nan, 0.10702510657326109], 'false,true,true': [0.017099257650522004, 0.12456999565675538], 'true': [0.0, 0.0], 'false,true': [0.08964593587219959, 0.00021379595661059583], 'false': [0.09171694302000837, 0.10702510657326109], 'false,false,false': [0.10702510657326109, nan]}, {'': [0.00038766505954155456, 0.07726510888226557], 'false,false,true': [0.0, 0.0], 'false,false': [0.10795639564538348, nan], 'false,true,true': [0.001494609906655786, 0.1290473457629819], 'true': [0.0, 0.0], 'false,true': [0.08298376397137314, 0.00017609887435278095], 'false': [0.07128409495973109, 0.10795639564538348]}, {'': [4.318644417958262e-05, 0.06194962090770978], 'false,false,true': [0.006026981824950299, 8.165614408537382e-05], 'false,false': [0.04488887281405468, 0.09458353527925363], 'true': [4.318644417958262e-05, nan], 'false': [0.0108734090544245, 0.07009368124222], 'true,true': [0.0, 0.0], 'false,false,false': [0.0, 0.10059401599762938]}, {'': [0.00011240951576305114, 0.05436097342038648], 'false,false,true': [0.0006016865586940442, 0.0], 'false,false': [0.0583198320406187, nan], 'false,true,true': [0.0, 0.08527153583837263], 'true': [0.0, 0.0], 'false,true': [0.07646432381553298, 0.00015398977921896254], 'false': [0.05329380859305683, 0.0583198320406187]}, {'': [6.676669253537909e-05, 0.0462557704464912], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.05769420407149886], 'true': [nan, 6.676669253537909e-05], 'false': [0.04714502747079732, 0.03829216709471542], 'false,false,false': [0.05769420407149886, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false;interaction(E, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, F), interaction(F, A).;true;true
1;false,false;interaction(I, A).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false;interaction(F, A).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
6;true;interaction(C, D), interaction(D, A).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;false;interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(G, F), recursion_proteinclass(G, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
7;false,false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
8;false,true,true;interaction(E, G), interaction(G, A).;true;true
8;true;interaction(A, D).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;false;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(A, F), enzyme(A, G).;true;true
9;false;interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7413433124639606;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7413433124639606;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1565529062461406;  // std dev = 1,939, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.7010344043958643;  // std dev = 0,145, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.49923415129910653;  // std dev = 0,877, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.16075266177559924;  // std dev = 0,094, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.14365015093891934;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.66257245288266;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.3374275471173401;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4532332780723831;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4552320434458618;  // std dev = 0,927, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.12659811530312762;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.14074342733771816;  // std dev = 0,084, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.31065166142555994;  // std dev = 0,666, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.32195729339438894;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E) )
%   | | then return -0.1132572390638751;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.19238010111705742;  // std dev = 0,933, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.01879420107616869;  // std dev = 0,549, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, G), enzyme(A, H) )
%   | then return 0.4290913770695825;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.025710268461556655;  // std dev = 0,473, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.23125367229081784;  // std dev = 0,657, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.2549356060296042;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.280318465096961;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.38589409752980713;  // std dev = 0,199, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2186757961697027;  // std dev = 0,871, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.10237129293697071;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12809540418355653;  // std dev = 0,078, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.15937835113803264;  // std dev = 0,629, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20959054488801876;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.22737363618254902;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.22877691266633213;  // std dev = 0,064, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2300305748087769;  // std dev = 0,914, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.11362472694050135;  // std dev = 0,071, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09716602808839744;  // std dev = 0,025, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then return 0.3059107588881136;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.4228894696005278;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.19393311223443221;  // std dev = 0,024, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.03966601349925349;  // std dev = 0,206, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.26767727747163717;  // std dev = 0,109, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10275680819827902;  // std dev = 0,065, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.18991315479020243;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.018052846105036165;  // std dev = 1,006, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15047007693341563;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.16239870862908856;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.2640456205117549;  // std dev = 0,024, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1372389260210725;  // std dev = 0,882, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.09287868336904043;  // std dev = 0,065, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08293515838976381;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then return 0.21438869742528444;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.32832743301833806;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13686473784216197;  // std dev = 0,007, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( phenotype(A, G), enzyme(E, H) )
%   | | | then return 0.14916447887077475;  // std dev = 0,276, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.09301792378111945;  // std dev = 0,728, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.027183444844963277;  // std dev = 0,288, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.24998050647573578;  // std dev = 0,109, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then return 0.15777310754830753;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.01686525103046793;  // std dev = 0,344, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */


Results
   AUC ROC   = 0.971149
   AUC PR    = 0.169414
   CLL	      = -0.196195
   Precision = 0.107143 at threshold = 0.5
   Recall    = 0.896552
   F1        = 0.191411


Total learning time: 2.744 seconds
Total inference time: 12.782 seconds
AUC ROC: 0.971149


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.185147
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.927 seconds
Refined model CLL: -0.185147


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.971149
   AUC PR    = 0.169414
   CLL	      = -0.196195
   Precision = 0.107143 at threshold = 0.5
   Recall    = 0.896552
   F1        = 0.191411


Total learning time: 6.6370000000000005 seconds
Total inference time: 12.782 seconds
AUC ROC: 0.971149
Total revision time: 6.6370000000000005
Best scored revision CLL: -0.185147


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:28:21
{'CLL': -0.196195, 'AUC ROC': 0.971149, 'F1': 0.191411, 'Recall': 0.896552, 'Precision': [0.107143, 0.5], 'parameter_15': {'CLL': -0.177467, 'AUC ROC': 0.977965, 'F1': 0.179848, 'Recall': 0.954023, 'Precision': [0.099282, 0.5], 'Inference time': 10.129, 'Learning time': 2.036, 'AUC PR': 0.181854}, 'Inference time': 12.782, 'Learning time': 6.6370000000000005, 'AUC PR': 0.169414}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( enzyme(E, G), phenotype(A, H) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( enzyme(E, G), phenotype(A, H) )
%   | | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( complex(A, G), interaction(H, A) )
%   | | then return 0.2094924108206232;  // std dev = 1,004, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.17725565720184927;  // std dev = 0,225, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.673429469382408;  // std dev = 0,177, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13099345439278368;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.1528719965674182;  // std dev = 0,117, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.6707551267684768;  // std dev = 0,105, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( complex(A, G), interaction(H, A) )
%   | | then return 0.16502310041827462;  // std dev = 1,005, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.15478587032027208;  // std dev = 0,204, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5173599157663862;  // std dev = 0,221, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11686791454988738;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.13440426052860316;  // std dev = 0,105, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.5133313887847453;  // std dev = 0,123, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then return 0.1548609519888942;  // std dev = 0,770, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.269007735792492;  // std dev = 0,245, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.41993546127572756;  // std dev = 0,283, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.09985155865139034;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.002520618120576773;  // std dev = 0,555, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.04067082665506792;  // std dev = 0,369, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then return 0.12597202785414655;  // std dev = 0,763, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.2238239426073699;  // std dev = 0,211, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3266501315578559;  // std dev = 0,265, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.0912686955975999;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.002178305324248156;  // std dev = 0,555, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.03497927684866244;  // std dev = 0,365, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E) )
%   | then if ( enzyme(C, F), interaction(A, G) )
%   | | then return -0.08526936902137137;  // std dev = 0,606, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(C, H) )
%   | | | then return 0.1333539980081916;  // std dev = 0,628, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2506507294766468;  // std dev = 0,191, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, C), phenotype(I, D) )
%   | | then return -0.023479869836838228;  // std dev = 0,296, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11282272069264117;  // std dev = 0,047, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( phenotype(A, J) )
%   | then return 0.024478517503662582;  // std dev = 0,376, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.3256402231863916;  // std dev = 0,205, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then return 0.1964923662591147;  // std dev = 0,042, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then return 0.0803438800945777;  // std dev = 0,715, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.18405712340559074;  // std dev = 0,176, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.23450145471654318;  // std dev = 0,256, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.0882258024421769;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.012690852517463816;  // std dev = 0,479, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.01515236116375123;  // std dev = 0,298, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E) )
%   | then if ( enzyme(C, F), interaction(A, G) )
%   | | then return -0.07660949039891925;  // std dev = 0,560, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, D) )
%   | | | then return 0.21692547870491752;  // std dev = 0,460, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09297823588216195;  // std dev = 0,365, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(H, C), phenotype(H, D) )
%   | | then return -0.02976036576605255;  // std dev = 0,270, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10222785882648018;  // std dev = 0,044, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( phenotype(A, I) )
%   | then return 0.01514579190121438;  // std dev = 0,325, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.2518744810397412;  // std dev = 0,202, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then return 0.1606579112891595;  // std dev = 0,061, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then return 0.04392843835134363;  // std dev = 0,659, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.15459369856937846;  // std dev = 0,149, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.1865903140293194;  // std dev = 0,248, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.08680473655405041;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.018131420445355935;  // std dev = 0,423, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.004561911641304715;  // std dev = 0,252, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.624497
   AUC PR    = 0.014042
   CLL	      = -0.807607
   Precision = 0.012051 at threshold = 0.5
   Recall    = 0.632184
   F1        = 0.023651


Total learning time: 4.539 seconds
Total inference time: 3.766 seconds
AUC ROC: 0.624497


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:28:29
{'CLL': -0.807607, 'AUC ROC': 0.624497, 'F1': 0.023651, 'Recall': 0.632184, 'Precision': [0.012051, 0.5], 'Inference time': 3.766, 'Learning time': 4.539, 'AUC PR': 0.014042}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( enzyme(E, G), phenotype(A, H) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.500045
   AUC PR    = 0.007466
   CLL	      = -0.242242
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.392 seconds
Total inference time: 1.725 seconds
AUC ROC: 0.500045


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:28:33
{'CLL': -0.242242, 'AUC ROC': 0.500045, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.725, 'Learning time': 1.392, 'AUC PR': 0.007466}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7359812264346162;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7664322306957801;  // std dev = 0,075, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1753512517892002;  // std dev = 2,291, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.6197984373003318;  // std dev = 0,988, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return -0.16162235059346908;  // std dev = 0,100, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7209254696911421;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.27907453030885787;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4180957929450433;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.48210934115272186;  // std dev = 0,998, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.14098128396024046;  // std dev = 0,090, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.24346861347553564;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3369116426828681;  // std dev = 0,103, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.051581287665777575;  // std dev = 1,454, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2432831007383586;  // std dev = 0,876, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16258832884544602;  // std dev = 0,673, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.252105549711342;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3095799811987374;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.41258697022840796;  // std dev = 0,284, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2693857311719393;  // std dev = 0,919, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.13265343836684423;  // std dev = 0,080, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1323407328946174;  // std dev = 0,831, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20758907774422264;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.24756086529501486;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.2478046377907955;  // std dev = 0,157, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.25889082597911994;  // std dev = 0,964, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.11816393924798307;  // std dev = 0,073, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4034859724001147;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3522784542599826;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.17550426300250155;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18106264304288744;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.022501056320363932;  // std dev = 0,349, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3168021495130376;  // std dev = 0,148, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12497005063819516;  // std dev = 0,165, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.20436636987585843;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.04180049818240811;  // std dev = 1,115, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15153491152105603;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17313198391445483;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.2865691694543889;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15394717393343507;  // std dev = 0,922, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.10268600104055389;  // std dev = 0,070, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.26586728380352204;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.26868717591531754;  // std dev = 0,023, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.14417395254142895;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then return 0.0199393942160001;  // std dev = 1,164, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2014725112290615;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.2050582681061751;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.007881785349228149;  // std dev = 0,341, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97974
   AUC PR    = 0.183142
   CLL	      = -0.188854
   Precision = 0.099401 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.180043


Total learning time: 1.831 seconds
Total inference time: 10.336 seconds
AUC ROC: 0.97974


Results scoring model
   AUC ROC   = 0.99375
   AUC PR    = 0.993562
   CLL	      = -0.197251
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.917 seconds
Parameter learned model CLL: -0.197251


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.0, 12, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [2.11e-08, 0, 3], 'false,false,false,true': [1.095, 2, 3], 'false,true,true': [1.369, 5, 3], 'false,true,false,true': [0.957, 1, 11], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'false,false,true,true': [0.075, 0, 3], 'false,false,false,true': [1.095, 2, 3], 'false,true,false': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [2.291, 18, 10], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [2.11e-08, 0, 3], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.1, 17, 0], 'false,false,true,false': [0.0, 2, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.988, 1, 14]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.858, 2, 3], 'false,true,false': [0.09, 17, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.998, 1, 13]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.103, 0, 4], 'false,false,true': [0.0, 0, 0], 'true,false': [1.454, 15, 8], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.673, 3, 3], 'false,true,false': [0.876, 2, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,true,true': [0.284, 0, 6], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.831, 2, 3], 'false,true,false': [0.08, 17, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.919, 1, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.157, 0, 6], 'false,false,true,true': [0.0, 0, 3], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,false': [0.073, 17, 0], 'false,false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.964, 1, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.148, 0, 6], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,true': [0.349, 4, 2], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [1.115, 8, 8], 'false,false,true,false': [0.165, 8, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.084, 0, 3], 'false,false,true,true': [0.045, 0, 3], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,false': [0.07, 17, 0], 'false,false,true,false': [0.023, 2, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.922, 1, 11]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.0, 0, 2], 'true,false': [0.014, 0, 3], 'false,false,false,true': [0.341, 1, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true': [1.164, 18, 14], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24835646457268037], 'false,false': [nan, 0.23999999999999994], 'false,true,false': [0.07638888888888877, -1.1564823173178714e-17], 'true': [nan, 1.4802973661668753e-16], 'false,true': [0.2343749999999999, 0.24826388888888892], 'false': [0.24609374999999953, 0.23999999999999994], 'false,false,false': [0.23999999999999994, nan]}, {'': [0.0, 0.20910976960342487], 'false,false,true': [0.0018545273210268665, 0.1874633791256737], 'false,false': [0.2000398843979747, 0.24], 'true,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.20866088020795776], 'false,false,false': [0.24, nan]}, {'': [3.700743415417188e-17, 0.19217383274119335], 'false,false,true': [1.4802973661668753e-16, 0.0], 'false,false': [0.24000000000000005, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false,true': [0.06507563815977235, 0.0005873783089497264], 'false': [0.1828745549742815, 0.24000000000000005]}, {'': [-3.700743415417188e-17, 0.13065703732795098], 'false,false': [nan, 0.1472524123495884], 'false,true,true': [0.0, 0.07115111776867221], 'true': [0.0, 0.0], 'false,true': [0.06666268005501816, 0.0004719273530723518], 'false': [0.12686036933273676, 0.1472524123495884], 'false,false,false': [0.1472524123495884, nan]}, {'': [0.08896154217783149, 0.09541528905332367], 'false,false': [nan, 0.0754736051120944], 'true': [0.002663510292410548, 0.0919086494019233], 'false,true': [nan, 0.10950278582871062], 'false': [0.10950278582871062, 0.0754736051120944], 'true,true': [nan, 0.002663510292410562], 'false,false,false': [nan, 0.0754736051120944]}, {'': [0.0007340689499554057, 0.09153884198445926], 'false,false': [nan, 0.13804290535135177], 'false,true,true': [0.013397542606321977, 0.09379541457422177], 'true': [0.0, 0.0], 'false,true': [0.06655784855521578, 0.00038088637026502636], 'false': [0.08393894625677345, 0.13804290535135177], 'false,false,false': [0.13804290535135177, nan]}, {'': [0.0003550541777790443, 0.07461572223526775], 'false,false,true': [-3.700743415417188e-17, 0.0], 'false,false': [0.13708316846516772, nan], 'false,true,true': [0.004112698759514884, 0.10331773679910972], 'true': [0.0, 0.0], 'false,true': [0.06366521843972313, 0.00031338003625382057], 'false': [0.06458543272865604, 0.13708316846516772]}, {'': [7.723897168340765e-06, 0.05699007250849037], 'false,false,true': [0.0036508924554357614, 0.0034141587504014723], 'false,false': [0.05131055731618207, 0.07162926721077628], 'true': [7.723897168340765e-06, nan], 'false': [0.020309171527696627, 0.06274480953785393], 'true,true': [0.0, 0.0], 'false,false,false': [0.0, 0.0776465186521843]}, {'': [0.00010365189688126923, 0.05107975479006003], 'false,false,true': [0.0006646077161438224, 0.00026794937832644306], 'false,false': [0.06908557727828898, nan], 'false,true,true': [0.0023383877584708204, 0.07078013642531165], 'true': [0.0, 0.0], 'false,true': [0.05990596168329706, 0.00028942667936231425], 'false': [0.048200931366996935, 0.06908557727828898]}, {'': [6.173202088611181e-05, 0.04290900019897492], 'false,false,true': [0.0, 0.0], 'false,false': [0.03672606101042552, 0.05830393167545539], 'true': [nan, 6.173202088611181e-05], 'false': [0.042329776087945165, 0.04616681100665147], 'false,false,false': [0.05830393167545539, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false;interaction(E, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, F), interaction(F, A).;true;true
1;false,false;interaction(I, A).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false;interaction(F, A).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, D), interaction(D, A).;true;true
6;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
7;false,false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
8;false,true,true;interaction(E, G), interaction(G, A).;true;true
8;true;interaction(A, D).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;false;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
9;false,false;interaction(A, F), enzyme(A, G).;true;true
9;false;interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7359812264346162;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7463448050353181;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17564045386312324;  // std dev = 2,241, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.5687695643526708;  // std dev = 0,933, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.6809819848539566;  // std dev = 0,128, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.16312163466415108;  // std dev = 0,111, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.146014209691904;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.47092546969114213;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.27907453030885787;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.43056008390725464;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.46683163607017253;  // std dev = 0,956, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.14230276207680229;  // std dev = 0,100, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1287311113761393;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.24854350234418549;  // std dev = 1,016, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(E, F), phenotype(C, G) )
%   | | then return 0.08141324710253439;  // std dev = 0,782, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4028894158665809;  // std dev = 0,152, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, H) )
%   | | | then return -0.11496942875258333;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11394110940175033;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.13285083966241132;  // std dev = 0,087, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( phenotype(A, I), enzyme(A, J) )
%   | then return 0.3625280733443764;  // std dev = 0,556, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(A, K) )
%   | | then return -0.06016055795032119;  // std dev = 0,623, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.21289863049353955;  // std dev = 0,705, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.32353445259249025;  // std dev = 0,518, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.23987010525713504;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2761977752566631;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.21558700736714473;  // std dev = 0,864, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3589391910596815;  // std dev = 0,150, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.10341678915143239;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.12483061289726842;  // std dev = 0,095, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.13297941975532765;  // std dev = 0,926, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1988875253450978;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.22450583265121393;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.30578241486089286;  // std dev = 0,173, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17803666183201164;  // std dev = 0,854, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.0942135483386044;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11191645842391158;  // std dev = 0,086, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.21261027811692051;  // std dev = 0,778, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.3466698151067238;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17877444131103415;  // std dev = 0,014, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 8.385634102890347E-4;  // std dev = 0,304, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.18902233952297917;  // std dev = 0,525, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.056796328882233474;  // std dev = 0,663, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.18784033895399443;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.04031715725691739;  // std dev = 1,070, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.14542747604649287;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.16084625785747875;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.24740551816171572;  // std dev = 0,104, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15722889644883373;  // std dev = 0,875, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.10146742208690833;  // std dev = 0,080, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09437768377528558;  // std dev = 0,046, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.14015395971659017;  // std dev = 0,740, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.2808877146363236;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13629041218442361;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then return 0.020641056722874154;  // std dev = 0,197, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | else if ( interaction(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.30837951412933073;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.5347436331540408;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.06100525361197044;  // std dev = 0,408, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */


Results
   AUC ROC   = 0.977644
   AUC PR    = 0.152623
   CLL	      = -0.199759
   Precision = 0.098976 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.180124


Total learning time: 3.495 seconds
Total inference time: 12.492 seconds
AUC ROC: 0.977644


Results scoring model
   AUC ROC   = 0.9975
   AUC PR    = 0.99756
   CLL	      = -0.204598
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.979 seconds
Refined model CLL: -0.204598


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97974
   AUC PR    = 0.183142
   CLL	      = -0.188854
   Precision = 0.099401 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.180043


Total learning time: 7.222 seconds
Total inference time: 10.336 seconds
AUC ROC: 0.97974
Total revision time: 7.222
Best scored revision CLL: -0.197251


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:29:03
{'CLL': -0.188854, 'AUC ROC': 0.97974, 'F1': 0.180043, 'Recall': 0.954023, 'Precision': [0.099401, 0.5], 'Inference time': 10.336, 'Learning time': 7.222, 'AUC PR': 0.183142, 'parameter_20': {'CLL': -0.188854, 'AUC ROC': 0.97974, 'F1': 0.180043, 'Recall': 0.954023, 'Precision': [0.099401, 0.5], 'Inference time': 10.336, 'Learning time': 1.831, 'AUC PR': 0.183142}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, E) )
%   | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( location(A, G), interaction(A, H) )
%   | then if ( complex(A, I) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(A, E), enzyme(C, F) )
%   | then return 0.5758061486398659;  // std dev = 0,888, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( complex(A, G) )
%   | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(C, H), interaction(H, A) )
%   | | | then return 0.09768451166288689;  // std dev = 0,773, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.13888006343275225;  // std dev = 0,101, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(A, I), location(A, J) )
%   | then if ( interaction(I, I), location(I, J) )
%   | | then return 0.42757709712051506;  // std dev = 0,792, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7319045176838227;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.673613861807092;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), interaction(D, F) )
%   | | then return -0.2273429863895965;  // std dev = 0,183, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(D, G) )
%   | | | then return 0.44406655202217177;  // std dev = 0,930, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.0908531113097248;  // std dev = 1,579, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then return 0.510391940474799;  // std dev = 0,752, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.26893946819608977;  // std dev = 0,920, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5129421698612893;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then return 0.5129766560652681;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25492313059977284;  // std dev = 0,893, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, I) )
%   | | | then return -0.1857433983941409;  // std dev = 0,162, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.11546208118516116;  // std dev = 1,625, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.5866708475440913;  // std dev = 0,126, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.022777669855477644;  // std dev = 0,633, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(C, E), phenotype(A, F) )
%   | then return 0.3631600750234848;  // std dev = 0,684, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( complex(A, G) )
%   | | then return 0.27898293573232646;  // std dev = 0,639, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(C, H), interaction(H, A) )
%   | | | then return 0.03676673792652381;  // std dev = 0,537, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1557130046571949;  // std dev = 0,105, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(A, I), interaction(J, A) )
%   | then return 0.42140389275148815;  // std dev = 0,114, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, K) )
%   | | then return -0.05217113866650517;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.07420197088931721;  // std dev = 0,965, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.32061860535683256;  // std dev = 0,986, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then return 0.3254346973537129;  // std dev = 0,618, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1150425815688884;  // std dev = 0,577, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( complex(A, I), interaction(J, A) )
%   | | then return 0.10612139511005862;  // std dev = 0,745, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.179868990167391;  // std dev = 0,219, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.20400802751159558;  // std dev = 0,999, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.034217495687996244;  // std dev = 0,930, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.3928288382488031;  // std dev = 0,170, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3154348559453736;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then return 0.27581459076659653;  // std dev = 0,558, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(F, H), complex(F, I) )
%   | | | then return 0.16779807519169487;  // std dev = 0,738, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.06791992953029577;  // std dev = 1,059, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.3499984575483509;  // std dev = 0,580, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.004510440411078458;  // std dev = 0,753, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2515735991206876;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then return 0.2799756084517228;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.08076675721290835;  // std dev = 0,754, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, I), phenotype(A, J) )
%   | | | then return -0.32386461999523997;  // std dev = 0,074, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.028906580148440473;  // std dev = 0,521, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.012751222671580265;  // std dev = 1,280, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.3126009096130501;  // std dev = 0,150, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then return 0.21559144597411084;  // std dev = 0,527, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.02536625170309703;  // std dev = 0,521, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20721575484158536;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, I), phenotype(A, J) )
%   | | | then return -0.2578121471107035;  // std dev = 0,065, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.02492904765626705;  // std dev = 0,518, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.010443755292619986;  // std dev = 1,278, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.2510562574592538;  // std dev = 0,130, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return -0.08667401513802608;  // std dev = 0,331, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.25291124498061857;  // std dev = 0,562, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.14851586027264335;  // std dev = 0,462, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.13179696554893444;  // std dev = 0,129, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.07898390886970888;  // std dev = 0,337, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20289215621914472;  // std dev = 0,116, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.10585099037709292;  // std dev = 1,029, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.139104425070366;  // std dev = 0,450, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.601244
   AUC PR    = 0.010699
   CLL	      = -0.797666
   Precision = 0.009117 at threshold = 0.5
   Recall    = 0.609195
   F1        = 0.017966


Total learning time: 5.399 seconds
Total inference time: 4.384 seconds
AUC ROC: 0.601244


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:29:14
{'CLL': -0.797666, 'AUC ROC': 0.601244, 'F1': 0.017966, 'Recall': 0.609195, 'Precision': [0.009117, 0.5], 'Inference time': 4.384, 'Learning time': 5.399, 'AUC PR': 0.010699}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(C, E), phenotype(A, F) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, G), interaction(G, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( location(A, I), interaction(A, J) )
%   | then if ( complex(A, K) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, L) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.50011
   AUC PR    = 0.007469
   CLL	      = -0.228306
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.115 seconds
Total inference time: 2.265 seconds
AUC ROC: 0.50011


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:29:18
{'CLL': -0.228306, 'AUC ROC': 0.50011, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.265, 'Learning time': 2.115, 'AUC PR': 0.007469}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7347337483847239;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7717374420851795;  // std dev = 0,074, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16265431076756007;  // std dev = 2,559, 35,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.6333115952170147;  // std dev = 1,007, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return -0.16438906642005968;  // std dev = 0,153, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6956966796559563;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3043033203440437;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.41355916390233427;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4971301696909077;  // std dev = 1,016, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.14318250856165793;  // std dev = 0,137, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2738536555829794;  // std dev = 0,897, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3329175361104055;  // std dev = 0,097, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.05535958902265629;  // std dev = 1,631, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.251458367692455;  // std dev = 0,907, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12199728277435298;  // std dev = 0,710, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.25285937725663177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.30877298781183105;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.3816987166830484;  // std dev = 0,272, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3073259555141389;  // std dev = 0,981, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.13408481310378031;  // std dev = 0,126, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.15081741474239113;  // std dev = 0,873, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20812259524256516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.24700780168403857;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.25889799037685784;  // std dev = 0,255, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.26363372653740513;  // std dev = 0,981, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.1193497724956659;  // std dev = 0,114, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.36703978379485735;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3881577462880099;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.17589628229171672;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1651101818984026;  // std dev = 0,008, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.05400415924783736;  // std dev = 0,363, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2848755196004174;  // std dev = 0,156, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.127012954744048;  // std dev = 0,191, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.20397344261392902;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.05868070570299441;  // std dev = 1,255, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15183276286630132;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1728422369019358;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.2826835570903728;  // std dev = 0,199, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14452985702850613;  // std dev = 0,926, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.10450441289895974;  // std dev = 0,101, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2533924972678668;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.29408814363970937;  // std dev = 0,027, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.14410434914213874;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then return 0.021059055297251182;  // std dev = 1,260, 41,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.18996384369946961;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.22023086390412455;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06689438107494182;  // std dev = 0,393, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979504
   AUC PR    = 0.178953
   CLL	      = -0.199746
   Precision = 0.099401 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.180043


Total learning time: 1.888 seconds
Total inference time: 10.18 seconds
AUC ROC: 0.979504


Results scoring model
   AUC ROC   = 0.9928
   AUC PR    = 0.992338
   CLL	      = -0.191001
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 0.971 seconds
Parameter learned model CLL: -0.191001


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.0, 16, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [2.11e-08, 0, 3], 'false,false,false,true': [1.155, 2, 4], 'false,true,true': [1.732, 6, 6], 'false,true,false,true': [0.961, 1, 12], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'false,false,true,true': [0.074, 0, 4], 'false,false,false,true': [1.155, 2, 4], 'false,true,false': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [2.559, 23, 12], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 4], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.153, 22, 0], 'false,false,true,false': [0.0, 2, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [1.007, 1, 18]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.897, 2, 4], 'false,true,false': [0.137, 22, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [1.016, 1, 16]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.097, 0, 6], 'false,false,true': [0.0, 0, 0], 'true,false': [1.631, 19, 10], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.71, 4, 3], 'false,true,false': [0.907, 2, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,true,true': [0.272, 0, 7], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.873, 2, 4], 'false,true,false': [0.126, 22, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.981, 1, 11]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.255, 0, 8], 'false,false,true,true': [0.0, 0, 4], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,false': [0.114, 22, 0], 'false,false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.981, 1, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.008, 0, 2], 'false,false,true,true': [0.156, 0, 7], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,true': [0.363, 6, 2], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [1.255, 11, 11], 'false,false,true,false': [0.191, 8, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.199, 0, 6], 'false,false,true,true': [0.043, 0, 4], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,false': [0.101, 22, 0], 'false,false,true,false': [0.027, 2, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.926, 1, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.0, 0, 2], 'true,false': [0.013, 0, 3], 'false,false,false,true': [0.393, 1, 2], 'false,false,false,false': [0.0, 0, 0], 'false,true': [1.26, 23, 18], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24898143956541377], 'false,false': [nan, 0.22222222222222213], 'false,true,false': [0.07100591715976314, -6.938893903907228e-18], 'true': [nan, 1.4802973661668753e-16], 'false,true': [0.25, 0.24256837098692036], 'false': [0.2462819750148716, 0.22222222222222213], 'false,false,false': [0.22222222222222213, nan]}, {'': [0.0, 0.21108558455210819], 'false,false,true': [0.0013692733474771623, 0.187159174258125], 'false,false': [0.20225075346767982, 0.2222222222222222], 'true,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.21066890642958833], 'false,false,false': [0.2222222222222222, nan]}, {'': [3.700743415417188e-17, 0.19121615145843648], 'false,false,true': [0.0, 0.0], 'false,false': [0.22222222222222224, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false,true': [0.05335841424050113, 0.001065250539458117], 'false': [0.18352853844783096, 0.22222222222222224]}, {'': [-3.700743415417188e-17, 0.12797926676988955], 'false,false': [nan, 0.1340557396126514], 'false,true,true': [0.0, 0.06073074809837637], 'true': [0.0, 0.0], 'false,true': [0.05499582126887831, 0.0008571078923780763], 'false': [0.12511500371071935, 0.1340557396126514], 'false,false,false': [0.1340557396126514, nan]}, {'': [0.08718165946608326, 0.09256832989562207], 'false,false': [nan, 0.07200484533840575], 'true': [0.0015786779611215995, 0.091686035901068], 'false,true': [nan, 0.10273996504603931], 'false': [0.10273996504603931, 0.07200484533840575], 'true,true': [nan, 0.0015786779611215995], 'false,false,false': [nan, 0.07200484533840575]}, {'': [0.0006947404100707821, 0.08728794562385779], 'false,false': [nan, 0.1269157806525988], 'false,true,true': [0.010564520741035708, 0.0801709583162621], 'true': [0.0, 0.0], 'false,true': [0.05581354458003337, 0.0007229227389772906], 'false': [0.08090454391906923, 0.1269157806525988], 'false,false,false': [0.1269157806525988, nan]}, {'': [0.00033601317333244635, 0.07018916167004524], 'false,false,true': [0.0, 0.0], 'false,false': [0.12673851320961405, nan], 'false,true,true': [0.008116907176874535, 0.08752657914266698], 'true': [0.0, 0.0], 'false,true': [0.05409639480619605, 0.0005957635476779955], 'false': [0.06148270401554334, 0.12673851320961405]}, {'': [4.685495929999487e-05, 0.054053166156736075], 'false,false,true': [0.003495740871220478, 0.004575072637084971], 'false,false': [0.04629591095380349, 0.0672616269822593], 'true': [4.685495929999487e-05, nan], 'false': [0.01645536988961317, 0.059205277496125315], 'true,true': [0.0, 3.1502451718443125e-05], 'false,false,false': [0.0, 0.07161715539436037]}, {'': [9.808844427866559e-05, 0.04829952058920161], 'false,false,true': [0.0004561175125759459, 0.00037072250953110175], 'false,false': [0.0670354418823544, nan], 'false,true,true': [0.0066285421326742104, 0.06599605745272509], 'true': [0.0, 0.0], 'false,true': [0.05137236202639645, 0.000467549898793618], 'false': [0.045355667583663065, 0.0670354418823544]}, {'': [5.84172356401629e-05, 0.03964068804512562], 'false,false,true': [0.0, 0.0], 'false,false': [0.037391044032444025, 0.051411466086080874], 'true': [nan, 5.84172356401629e-05], 'false': [0.03874297816940751, 0.04444791834829053], 'false,false,false': [0.051411466086080874, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false;interaction(E, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, F), interaction(F, A).;true;true
1;false,false;interaction(I, A).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false;interaction(F, A).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, D), interaction(D, A).;true;true
6;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
7;false,false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D).;true;true
8;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
8;false;interaction(E, A).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
9;false,false;interaction(A, F), enzyme(A, G).;true;true
9;false;interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7347337483847239;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7271035802978393;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16639463863723272;  // std dev = 2,538, 35,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.579148680786199;  // std dev = 0,954, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.6948151659383247;  // std dev = 0,238, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.1757662207015499;  // std dev = 0,054, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.15065904437469976;  // std dev = 0,061, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.49569667965595626;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.3043033203440437;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.41274004801752007;  // std dev = 0,020, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.48727044916231643;  // std dev = 1,016, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.15180414430360084;  // std dev = 0,047, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1324076209064969;  // std dev = 0,055, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.2777176452119104;  // std dev = 1,061, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.30506191850075903;  // std dev = 0,025, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.1333212967186824;  // std dev = 0,042, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.33261658596153737;  // std dev = 0,776, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.004699586145758914;  // std dev = 1,081, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( interaction(A, H), location(A, I) )
%   | then if ( complex(A, J) )
%   | | then return 0.2109910157911934;  // std dev = 0,628, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.46754268743549854;  // std dev = 0,159, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, K) )
%   | | then return -0.07590462326372102;  // std dev = 0,668, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.24114342187582793;  // std dev = 0,434, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.2581580373816068;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32173654056373435;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.27406980749003224;  // std dev = 0,917, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3734964763158701;  // std dev = 0,293, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.1393849012420012;  // std dev = 0,076, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11391980445613974;  // std dev = 0,046, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0.14035459438613063;  // std dev = 0,952, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.2118646312293483;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25587131854883993;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.2159515642025159;  // std dev = 0,916, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.29482850348766526;  // std dev = 0,263, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.12358890108573066;  // std dev = 0,069, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10293041310660646;  // std dev = 0,042, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then return 0.20357016210450957;  // std dev = 0,791, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.3770405100924001;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.15996856819911198;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.07220118425541155;  // std dev = 0,186, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09832529055735004;  // std dev = 0,025, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.01687667921842139;  // std dev = 0,518, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.11436884219845596;  // std dev = 0,832, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.21025141132687397;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.05488652389406823;  // std dev = 1,213, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.1563612266318526;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17745851547579083;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.24723119005289215;  // std dev = 0,191, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.13233424388287107;  // std dev = 0,901, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.09211694236418935;  // std dev = 0,027, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10756323016620163;  // std dev = 0,076, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then return 0.13571145739386667;  // std dev = 0,803, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.30485528821426816;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14762053948216947;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( enzyme(E, G), complex(E, H) )
%   | | | then return 0.14287894805078308;  // std dev = 0,406, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.04932377393669382;  // std dev = 0,930, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.07383597582119478;  // std dev = 0,194, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16419675537324374;  // std dev = 0,313, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, K), enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.2939234620601241;  // std dev = 0,038, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.6141110084059934;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.10467212304355229;  // std dev = 0,427, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.974916
   AUC PR    = 0.132304
   CLL	      = -0.215249
   Precision = 0.091966 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.168441


Total learning time: 3.539 seconds
Total inference time: 14.263 seconds
AUC ROC: 0.974916


Results scoring model
   AUC ROC   = 0.996
   AUC PR    = 0.995964
   CLL	      = -0.193314
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 1.038 seconds
Refined model CLL: -0.193314


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.979504
   AUC PR    = 0.178953
   CLL	      = -0.199746
   Precision = 0.099401 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.180043


Total learning time: 7.436 seconds
Total inference time: 10.18 seconds
AUC ROC: 0.979504
Total revision time: 7.436
Best scored revision CLL: -0.191001


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:29:51
{'CLL': -0.199746, 'AUC ROC': 0.979504, 'F1': 0.180043, 'Recall': 0.954023, 'parameter_25': {'CLL': -0.199746, 'AUC ROC': 0.979504, 'F1': 0.180043, 'Recall': 0.954023, 'Precision': [0.099401, 0.5], 'Inference time': 10.18, 'Learning time': 1.888, 'AUC PR': 0.178953}, 'Precision': [0.099401, 0.5], 'Inference time': 10.18, 'Learning time': 7.436, 'AUC PR': 0.178953}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), complex(D, G) )
%   | | then if ( interaction(D, H), complex(H, G) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(D, I) )
%   | | | then return -0.07042249347191636;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(C, E), complex(C, F) )
%   | then if ( interaction(C, G), interaction(G, A) )
%   | | then return 0.7609104304538484;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.42757709712051506;  // std dev = 1,121, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( complex(C, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.48416257467887575;  // std dev = 0,764, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1334928440871636;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(C, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7881877713337404;  // std dev = 0,115, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18432648501714544;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( phenotype(A, K), interaction(L, A) )
%   | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, M), complex(M, N) )
%   | | then return 0.42757709712051506;  // std dev = 1,121, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7505511758931249;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(C, E), complex(C, F) )
%   | then if ( interaction(C, G), complex(G, F) )
%   | | then return 0.341979271222647;  // std dev = 1,114, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5989092865963348;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | then return 0.6934841082035662;  // std dev = 0,136, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, I) )
%   | | | then return -0.1250396077980949;  // std dev = 0,078, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.2332841042789724;  // std dev = 1,364, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(A, J), location(A, K) )
%   | then if ( complex(J, L), phenotype(A, M) )
%   | | then return 0.2272389612684796;  // std dev = 0,949, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6633675360833453;  // std dev = 0,163, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15104629960661306;  // std dev = 0,797, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.46717777532908333;  // std dev = 0,032, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), complex(D, G) )
%   | | then if ( interaction(D, H), interaction(H, A) )
%   | | | then return 0.4943126015192488;  // std dev = 0,119, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24213861365998315;  // std dev = 1,081, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(D, I) )
%   | | | then return -0.05642379036658878;  // std dev = 0,754, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.16438085044732362;  // std dev = 1,298, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then return 0.08027410312863782;  // std dev = 0,741, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.5683655432981055;  // std dev = 0,167, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.203554767879394;  // std dev = 0,944, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.43956377345167824;  // std dev = 0,175, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then return 0.32534397274863575;  // std dev = 0,675, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.062261324318258614;  // std dev = 0,490, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2199965979563696;  // std dev = 0,274, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.24524547472870561;  // std dev = 1,469, 20,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.002943404724494088;  // std dev = 1,266, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, E) )
%   | | then return 0.2322162570365057;  // std dev = 0,436, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4385650332515987;  // std dev = 0,088, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then return -0.15154235386456288;  // std dev = 0,092, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.3003705979224096;  // std dev = 0,189, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( location(A, H), interaction(A, I) )
%   | then if ( complex(A, J) )
%   | | then return 0.3922362939642678;  // std dev = 0,262, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1578320665050837;  // std dev = 0,518, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(M, K) )
%   | | | then return -0.21585891923081665;  // std dev = 0,273, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.006376169046895926;  // std dev = 0,682, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.14964210641350992;  // std dev = 0,652, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.26526802371318875;  // std dev = 0,118, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.3298333756428344;  // std dev = 0,164, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.17795692833309681;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( phenotype(A, I), complex(A, H) )
%   | | | then return -0.2968977558636143;  // std dev = 0,170, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.009748421019408727;  // std dev = 0,676, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.029090928130825013;  // std dev = 1,310, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.38041550702848925;  // std dev = 0,180, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21787762689956156;  // std dev = 0,104, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, F) )
%   | | | then return 0.14432055821456982;  // std dev = 0,339, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.301625779167038;  // std dev = 0,258, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.24113115492968107;  // std dev = 0,145, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12430914183221348;  // std dev = 0,139, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then return 0.18730657193683994;  // std dev = 0,578, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.17321692326015875;  // std dev = 0,563, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.03583207861980776;  // std dev = 0,745, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.05855229325194706;  // std dev = 0,319, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.18139518946023475;  // std dev = 0,323, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.0927511559373471;  // std dev = 0,296, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2501482185899185;  // std dev = 0,221, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.11111947622851882;  // std dev = 0,143, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1893122126182984;  // std dev = 0,103, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then return 0.12496143434763607;  // std dev = 0,519, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.24566309278866855;  // std dev = 0,244, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.029677028733977845;  // std dev = 0,741, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.19158191349348533;  // std dev = 0,111, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0667443152741533;  // std dev = 0,412, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.07858826314716229;  // std dev = 0,294, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20710970537973872;  // std dev = 0,193, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.10094245565168673;  // std dev = 0,132, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.16236942837418214;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, L), interaction(A, M) )
%   | | then return 0.2376991541784248;  // std dev = 0,227, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.17586512181937833;  // std dev = 0,159, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.03859200364678316;  // std dev = 0,810, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */


Results
   AUC ROC   = 0.728327
   AUC PR    = 0.085795
   CLL	      = -0.504125
   Precision = 0.015165 at threshold = 0.5
   Recall    = 0.609195
   F1        = 0.029592


Total learning time: 6.176 seconds
Total inference time: 5.625 seconds
AUC ROC: 0.728327


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:30:03
{'CLL': -0.504125, 'AUC ROC': 0.728327, 'F1': 0.029592, 'Recall': 0.609195, 'Precision': [0.015165, 0.5], 'Inference time': 5.625, 'Learning time': 6.176, 'AUC PR': 0.085795}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), complex(D, G) )
%   | | then if ( interaction(D, H), complex(H, G) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(D, I) )
%   | | | then return -0.07042249347191636;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.53275
   AUC PR    = 0.008379
   CLL	      = -0.226282
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.709 seconds
Total inference time: 2.3 seconds
AUC ROC: 0.53275


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:30:07
{'CLL': -0.226282, 'AUC ROC': 0.53275, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.3, 'Learning time': 1.709, 'AUC PR': 0.008379}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.23666309750275685;  // std dev = 1,106, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.308741135785635;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.6693370059817904;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1537889007096384;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7564123687585864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.24358763124141355;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5089617804995704;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.13482235087935313;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.19576821930211952;  // std dev = 0,562, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.01910835860316327;  // std dev = 0,451, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.15511210341084916;  // std dev = 0,552, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3838802192323262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.3884095676980507;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29796838709914264;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.11785435632198732;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.12127906392049084;  // std dev = 0,545, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.26006526873985386;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.10614268042295621;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.47615265067629386;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.2881187948218251;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.0964850472330173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.24927601140980682;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03278723399904483;  // std dev = 0,530, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1954203189434671;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09663480141513127;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.35333729853931317;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.23869095587489972;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.020778945209938615;  // std dev = 0,334, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03964325182996854;  // std dev = 0,336, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.969095
   AUC PR    = 0.160964
   CLL	      = -0.172493
   Precision = 0.087004 at threshold = 0.5
   Recall    = 0.759615
   F1        = 0.156126


Total learning time: 1.291 seconds
Total inference time: 9.901 seconds
AUC ROC: 0.969095


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158402
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.724 seconds
Parameter learned model CLL: -0.158402


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.707, 1, 1], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [2.11e-08, 0, 3], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.106, 4, 3], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.11e-08, 0, 3], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1], 'false,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.562, 1, 1], 'false,true,false': [0.0, 4, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [1.49e-08, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.451, 4, 1], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2], 'false,true,false': [0.552, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.545, 1, 1], 'false,true,false': [0.0, 4, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.05, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.53, 4, 3], 'false,false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.01, 4, 0], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.012, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, H)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.336, 1, 1], 'false,true': [0.334, 4, 3], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.24691358024691348], 'false,false': [nan, 0.25], 'false,true,false': [1.4802973661668753e-16, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, 0.25000000000000006], 'false': [0.24489795918367335, 0.25], 'false,false,false': [0.25, nan]}, {'': [0.0, 0.19243188222099536], 'false,false,true': [nan, 0.17482934999147165], 'false,false': [0.17482934999147157, 0.25000000000000006], 'true,false': [0.0, nan], 'true': [nan, 0.0], 'false': [nan, 0.19243188222099536], 'false,false,false': [0.25000000000000006, nan]}, {'': [0.0, 0.18518020107581823], 'false,false,true': [0.0, 0.0], 'false,false': [0.24999999999999997, nan], 'true': [0.0, nan], 'false,true': [1.4802973661668753e-16, 0.0], 'false': [0.1659272469224295, 0.24999999999999997]}, {'': [0.0, 0.11453982499754972], 'false,false': [nan, 0.15785374942340044], 'false,true,true': [nan, 7.401486830834377e-17], 'true': [0.0, nan], 'false,true': [7.401486830834377e-17, 0.0], 'false': [0.10149992028130164, 0.15785374942340044], 'false,false,false': [0.15785374942340044, nan]}, {'': [0.04987186986719803, 0.08913263739923409], 'false,false': [nan, 0.0], 'true': [0.0, 0.04059994846646758], 'false,true': [nan, 0.15209784939021384], 'false': [0.15209784939021384, 0.0], 'true,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.07185662956424986], 'false,false': [nan, 0.14835969358710954], 'false,true,true': [0.0, 0.0], 'true': [0.0, nan], 'false,true': [0.001817690477360967, 0.0], 'false': [0.04948653650863499, 0.14835969358710954], 'false,false,false': [0.14835969358710954, nan]}, {'': [0.0, 0.05859743678981498], 'false,false,true': [0.0, 0.0], 'false,false': [0.14602771060094605, nan], 'false,true,true': [nan, 0.0008389327910612124], 'true': [0.0, nan], 'false,true': [0.0008389327910612124, 0.0], 'false': [0.03320238230556451, 0.14602771060094605]}, {'': [0.0, 0.03821598329630865], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.0401729038610946], 'true': [0.0, nan], 'false': [0.0, 0.04027741174117097], 'true,true': [0.0, nan], 'false,false,false': [nan, 0.04017290386109459]}, {'': [0.0, 0.03588952445712801], 'false,false,true': [0.0, 0.0], 'false,false': [0.087624363506185, nan], 'false,true,true': [nan, 5.1648937547212524e-05], 'true': [0.0, nan], 'false,true': [5.1648937547212524e-05, 2.2630683894483625e-05], 'false': [0.02092393075040085, 0.087624363506185]}, {'': [0.0, 0.02502757864308152], 'true': [nan, 0.0], 'false,false': [nan, 0.05649551846157309], 'false': [0.015957658236217847, 0.05649551846157309], 'false,false,false': [0.05649551846157309, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false;interaction(E, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
2;false;interaction(E, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
4;false;interaction(A, F), interaction(F, G).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;false;interaction(E, A).;true;true
5;false,true,true;enzyme(A, G).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
6;false;interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
8;false;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then return 0.0435389716194778;  // std dev = 0,756, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.5141072739982948;  // std dev = 0,818, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.6404240232922875;  // std dev = 0,086, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.13029963138511108;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(F, G), recursion_proteinclass(F, B) )
%   | | then return 0.7166173254811361;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.2833826745188639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.4860586600169139;  // std dev = 0,096, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11623145211411734;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.16154231539036776;  // std dev = 0,553, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.004789435557164601;  // std dev = 0,490, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return 0.1265442674907741;  // std dev = 0,546, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.3320918909000846;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.4420219642129264;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2629230711984716;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.10526432786526242;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.09821527947749933;  // std dev = 0,541, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.2559394695316738;  // std dev = 0,100, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09575408446677304;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(F, G), recursion_proteinclass(F, B) )
%   | | then return 0.45631779787623494;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.30474049138205744;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return -0.08777802627857179;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.2827378077852608;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return -0.08777802627857179;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1132979499170899;  // std dev = 0,436, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.18259198380365738;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.08099901650617847;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(F, G), recursion_proteinclass(F, B) )
%   | | then return 0.3219573420276982;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.2657551530082956;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then return -0.02045414309238628;  // std dev = 0,245, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.07790008963605256;  // std dev = 0,354, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.966681
   AUC PR    = 0.111741
   CLL	      = -0.188359
   Precision = 0.078254 at threshold = 0.5
   Recall    = 0.913462
   F1        = 0.144158


Total learning time: 1.554 seconds
Total inference time: 8.16 seconds
AUC ROC: 0.966681


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.14701
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.869 seconds
Refined model CLL: -0.14701


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.966681
   AUC PR    = 0.111741
   CLL	      = -0.188359
   Precision = 0.078254 at threshold = 0.5
   Recall    = 0.913462
   F1        = 0.144158


Total learning time: 4.438 seconds
Total inference time: 8.16 seconds
AUC ROC: 0.966681
Total revision time: 4.438
Best scored revision CLL: -0.14701


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:30:31
{'CLL': -0.188359, 'AUC ROC': 0.966681, 'F1': 0.144158, 'Recall': 0.913462, 'Precision': [0.078254, 0.5], 'parameter_5': {'CLL': -0.172493, 'AUC ROC': 0.969095, 'F1': 0.156126, 'Recall': 0.759615, 'Precision': [0.087004, 0.5], 'Inference time': 9.901, 'Learning time': 1.291, 'AUC PR': 0.160964}, 'Inference time': 8.16, 'Learning time': 4.438, 'AUC PR': 0.111741}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then return 0.550138726734135;  // std dev = 0,830, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.1444943148999395;  // std dev = 1,138, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then return 0.44876054176234625;  // std dev = 0,819, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.12152051635495138;  // std dev = 1,137, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then return 0.07788541525562985;  // std dev = 1,125, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.3821593144772816;  // std dev = 0,781, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.3965090476318811;  // std dev = 0,763, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then return -0.2701576190347856;  // std dev = 0,122, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2927530399466424;  // std dev = 0,776, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.3141528274239011;  // std dev = 0,757, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then return -0.22140448074972985;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.22209658048728154;  // std dev = 0,776, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then return 0.2132068396049719;  // std dev = 0,561, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.0016701017437745584;  // std dev = 1,039, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.22469430377230026;  // std dev = 0,740, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then return -0.20066379668200143;  // std dev = 0,131, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.14656973234623188;  // std dev = 0,760, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then return 0.14920627465986053;  // std dev = 0,486, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.023542524875114598;  // std dev = 1,021, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.16424710562544279;  // std dev = 0,732, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then return -0.17973871743920414;  // std dev = 0,144, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.10302382066779114;  // std dev = 0,751, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.500103
   AUC PR    = 0.006336
   CLL	      = -1.07251
   Precision = 0.006333 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.012569


Total learning time: 1.583 seconds
Total inference time: 2.833 seconds
AUC ROC: 0.500103


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:30:35
{'CLL': -1.07251, 'AUC ROC': 0.500103, 'F1': 0.012569, 'Recall': 0.826923, 'Precision': [0.006333, 0.5], 'Inference time': 2.833, 'Learning time': 1.583, 'AUC PR': 0.006336}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.500038
   AUC PR    = 0.006333
   CLL	      = -0.200352
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.858 seconds
Total inference time: 1.634 seconds
AUC ROC: 0.500038


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:30:38
{'CLL': -0.200352, 'AUC ROC': 0.500038, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.634, 'Learning time': 0.858, 'AUC PR': 0.006333}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109544;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2366630975027568;  // std dev = 1,564, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.653055496091004;  // std dev = 0,106, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.15378890070963844;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7564123687585864;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.24358763124141355;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.39396448044451593;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5130301668506281;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1348223508793531;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.19576821930211952;  // std dev = 0,795, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.08440684500574226;  // std dev = 0,840, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.15511210341084913;  // std dev = 0,780, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.21789675707434664;  // std dev = 0,414, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.366954476022364;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3435197861529477;  // std dev = 0,070, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.13101921911428943;  // std dev = 0,015, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.12127906392049083;  // std dev = 0,770, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.291352504701733;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.270108713645919;  // std dev = 0,059, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11681260924560491;  // std dev = 0,013, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.47615265067629386;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.2881187948218251;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17906755746067415;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.10365807577104758;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2977455576903705;  // std dev = 0,089, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11019574240832772;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05202439281075192;  // std dev = 0,715, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20543811912413817;  // std dev = 0,068, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.10286243952740816;  // std dev = 0,019, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3221708916455994;  // std dev = 0,038, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.24220423826225643;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.03121297448176473;  // std dev = 0,521, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2329852426412341;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.04045975658054592;  // std dev = 0,392, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971618
   AUC PR    = 0.200126
   CLL	      = -0.186028
   Precision = 0.077532 at threshold = 0.5
   Recall    = 0.942308
   F1        = 0.143275


Total learning time: 1.443 seconds
Total inference time: 10.972 seconds
AUC ROC: 0.971618


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.161438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.833 seconds
Parameter learned model CLL: -0.161438


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,true,true': [0.0, 2, 0], 'false,true,false,true': [0.0, 0, 7], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false,true': [1.0, 2, 2], 'false,true,false': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [1.564, 8, 6], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,false,true,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.106, 0, 7], 'false,false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 1], 'false,true,false': [0.0, 8, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.795, 2, 2], 'false,true,false': [0.0, 8, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.84, 7, 5], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.414, 1, 2], 'false,true,false': [0.78, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.77, 2, 2], 'false,true,false': [0.015, 8, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.07, 0, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.013, 8, 0], 'false,false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.059, 0, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.089, 0, 2], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.715, 6, 6], 'false,false,true,false': [0.009, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.038, 0, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.019, 8, 0], 'false,false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.068, 0, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.392, 2, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.521, 8, 7], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.2493074792243767], 'false,false': [nan, 0.25], 'false,true,false': [-2.5376526277146434e-16, -6.938893903907228e-18], 'true': [nan, 0.0], 'false,true': [0.0, 0.2485207100591715], 'false': [0.24888888888888888, 0.25], 'false,false,false': [0.25, nan]}, {'': [0.0, 0.1931684929388199], 'false,false,true': [nan, 0.17482934999147168], 'false,false': [0.17482934999147165, 0.25], 'true,false': [0.0, nan], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.19243188222099536], 'false,false,false': [0.25, nan]}, {'': [0.0, 0.1813213999243203], 'false,false,true': [0.0, 0.0], 'false,false': [0.25, nan], 'true': [0.0, nan], 'false,true': [0.001590525385942573, -3.469446951953614e-18], 'false': [0.1627683843637561, 0.25]}, {'': [0.0, 0.11228593304291828], 'false,false': [nan, 0.1578537494234004], 'false,true,true': [0.0, 0.0], 'true': [0.0, nan], 'false,true': [0.0017359148178806652, 0.0], 'false': [0.09985867731966255, 0.1578537494234004], 'false,false,false': [0.1578537494234004, nan]}, {'': [0.05829778795069711, 0.11232340658448355], 'false,false': [nan, 0.05703829461361721], 'true': [0.0, 0.05886054817403511], 'false,true': [nan, 0.15209784939021384], 'false': [0.15209784939021384, 0.05703829461361721], 'true,true': [nan, 0.0], 'false,false,false': [nan, 0.05703829461361721]}, {'': [0.0, 0.07654504332406475], 'false,false': [nan, 0.14835969358710954], 'false,true,true': [0.0, 0.000819633406494639], 'true': [0.0, nan], 'false,true': [0.0007697900246618206, 2.71687259522993e-05], 'false': [0.05721392716079898, 0.14835969358710954], 'false,false,false': [0.14835969358710954, nan]}, {'': [0.0, 0.06097584098273016], 'false,false,true': [0.0, 0.0], 'false,false': [0.14602771060094608, nan], 'false,true,true': [0.0, 0.0005872700467404365], 'true': [0.0, nan], 'false,true': [0.000558635385992577, 2.237314121764089e-05], 'false': [0.03812011662330015, 0.14602771060094608]}, {'': [9.712691004110097e-07, 0.041113056639017605], 'false,false,true': [0.0039839852551364074, 4.274108506020606e-05], 'false,false': [0.043617389251652344, 0.04260639932124544], 'true': [9.712691004110097e-07, nan], 'false': [0.0, 0.04318597908295828], 'true,true': [0.0, 0.0], 'false,false,false': [nan, 0.04260639932124544]}, {'': [0.0, 0.035777552871764665], 'false,false,true': [0.000717350982594428, 0.0], 'false,false': [0.07998849730592451, nan], 'false,true,true': [nan, 0.0006573826974642054], 'true': [0.0, nan], 'false,true': [0.0006573826974642054, 4.550312841339679e-05], 'false': [0.023987745283001172, 0.07998849730592451]}, {'': [0.0, 0.02533970350829349], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.05126019356943726], 'true': [nan, 0.0], 'false': [0.01810400207107969, 0.052464926601965306], 'false,false,false': [0.05126019356943726, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false;interaction(E, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
2;false;interaction(E, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;false;interaction(E, A).;true;true
5;false,true,true;enzyme(A, G).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
6;false;interaction(E, A).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
7;false,false,true;enzyme(G, F), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
8;false;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(A, F), enzyme(A, G).;true;true
9;false;interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.006563038633824958;  // std dev = 0,799, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.2366630975027568;  // std dev = 1,106, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5861968914929575;  // std dev = 0,801, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.6313468162366218;  // std dev = 0,093, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6415272971059062;  // std dev = 0,113, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14928528560229398;  // std dev = 0,071, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.701751887675692;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.19024575702049795;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3991593221330252;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4978279625677602;  // std dev = 0,130, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.13138075354711495;  // std dev = 0,064, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.18787615436067834;  // std dev = 0,701, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38899131881576776;  // std dev = 0,103, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.10501159837493113;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11481446157926992;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( phenotype(A, H) )
%   | then return 0.03724846178319808;  // std dev = 0,556, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.23889662189711103;  // std dev = 0,486, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.30509358608584836;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.28908200079387997;  // std dev = 0,100, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.09355431445921178;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13133021671038686;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.13076259044759322;  // std dev = 0,654, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.29545941046936586;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2253493795978825;  // std dev = 0,059, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.08084621097773077;  // std dev = 0,000594, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11401502907408409;  // std dev = 0,072, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then return 0.4250572587946474;  // std dev = 0,035, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.2170786261574876;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.16502956296718813;  // std dev = 0,017, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.08291909759737078;  // std dev = 0,012, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.25460212196742593;  // std dev = 0,070, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11867681968409385;  // std dev = 0,061, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.12118838537843978;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.03829603728308305;  // std dev = 0,442, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1543120305098482;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.1710723332476499;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17585723176021936;  // std dev = 0,047, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.08311014042716815;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09375966270504886;  // std dev = 0,061, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.30490302690874066;  // std dev = 0,074, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.17680476172736084;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13523009075726256;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then return 0.026037500865760614;  // std dev = 0,118, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(A, E), enzyme(A, F) )
%   | | then return 0.19969599307442942;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.004895893509620608;  // std dev = 0,362, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.970574
   AUC PR    = 0.213147
   CLL	      = -0.191372
   Precision = 0.075145 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.139785


Total learning time: 2.668 seconds
Total inference time: 28.646 seconds
AUC ROC: 0.970574


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.140705
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.931 seconds
Refined model CLL: -0.140705


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.970574
   AUC PR    = 0.213147
   CLL	      = -0.191372
   Precision = 0.075145 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.139785


Total learning time: 5.875 seconds
Total inference time: 28.646 seconds
AUC ROC: 0.970574
Total revision time: 5.875
Best scored revision CLL: -0.140705


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:31:24
{'CLL': -0.191372, 'AUC ROC': 0.970574, 'F1': 0.139785, 'Recall': 1.0, 'Precision': [0.075145, 0.5], 'Inference time': 28.646, 'Learning time': 5.875, 'AUC PR': 0.213147, 'parameter_10': {'CLL': -0.186028, 'AUC ROC': 0.971618, 'F1': 0.143275, 'Recall': 0.942308, 'Precision': [0.077532, 0.5], 'Inference time': 10.972, 'Learning time': 1.443, 'AUC PR': 0.200126}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( complex(E, G), phenotype(F, H) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then return 0.032043174539001636;  // std dev = 0,799, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.6024530121006139;  // std dev = 0,799, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.4668053934008017;  // std dev = 1,099, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then return 0.32952304008824407;  // std dev = 0,697, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.04397867471705669;  // std dev = 0,710, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( complex(G, I) )
%   | | then return 0.46760311291159384;  // std dev = 0,691, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5080886221676344;  // std dev = 0,838, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then return -0.0571517377725239;  // std dev = 0,777, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( complex(A, E) )
%   | then return 0.5418092896324703;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.2988962576033659;  // std dev = 0,615, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10319870489019548;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3078887041990077;  // std dev = 0,943, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then return 0.18886133894200843;  // std dev = 0,588, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.08345532262946781;  // std dev = 0,695, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(G, A), enzyme(A, H) )
%   | then return 0.03664607550323001;  // std dev = 0,725, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then return 0.10307136356298068;  // std dev = 0,536, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.5031423728186568;  // std dev = 0,090, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then return -0.06113078998845117;  // std dev = 0,788, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.3026832328788726;  // std dev = 0,609, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then return -0.21484920285097578;  // std dev = 0,151, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.10158470705957356;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.38071650258265644;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), phenotype(E, F) )
%   | then return -0.12198926731957367;  // std dev = 0,525, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.18160301697067358;  // std dev = 0,522, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), enzyme(A, H) )
%   | then return 0.04156339651660116;  // std dev = 0,726, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then return 0.06620725187491425;  // std dev = 0,435, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.296440426913004;  // std dev = 0,078, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(C, E), interaction(D, F) )
%   | then return -0.12884550178236132;  // std dev = 0,548, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.18850117238168185;  // std dev = 0,455, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then return 0.2859495081074546;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then return 0.001514387979887552;  // std dev = 0,466, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.14049441700244492;  // std dev = 0,585, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then return -0.09785999538448058;  // std dev = 0,353, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.2665277324697587;  // std dev = 0,122, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0950789637881294;  // std dev = 0,787, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then return -0.16609622509172325;  // std dev = 0,136, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.06273711969011676;  // std dev = 0,418, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(E, A), interaction(E, C) )
%   | then return 0.0919581501705883;  // std dev = 0,503, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.069995953319469;  // std dev = 0,500, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then return 0.14690890987613314;  // std dev = 0,654, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.04671206008073761;  // std dev = 0,392, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.500043
   AUC PR    = 0.006333
   CLL	      = -1.000697
   Precision = 0.006333 at threshold = 0.5
   Recall    = 0.644231
   F1        = 0.012542


Total learning time: 3.895 seconds
Total inference time: 3.451 seconds
AUC ROC: 0.500043


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:31:32
{'CLL': -1.000697, 'AUC ROC': 0.500043, 'F1': 0.012542, 'Recall': 0.644231, 'Precision': [0.006333, 0.5], 'Inference time': 3.451, 'Learning time': 3.895, 'AUC PR': 0.006333}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( complex(E, G), phenotype(F, H) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.499896
   AUC PR    = 0.00633
   CLL	      = -0.291452
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.333 seconds
Total inference time: 2.133 seconds
AUC ROC: 0.499896


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:31:35
{'CLL': -0.291452, 'AUC ROC': 0.499896, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.133, 'Learning time': 1.333, 'AUC PR': 0.00633}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109544;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.27864660312955675;  // std dev = 2,024, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.22373365448410584;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.65126207339538;  // std dev = 0,100, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.1593323049320869;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7888683221574974;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.2111316778425026;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3943927530423309;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5029855616104131;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.13912975940612266;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.14486103486007917;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.09930482150578297;  // std dev = 1,103, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11778929402953968;  // std dev = 0,871, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2539141890415857;  // std dev = 0,436, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.34962822124497694;  // std dev = 0,031, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.33635632158717776;  // std dev = 0,069, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.13601363528567656;  // std dev = 0,018, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.09459905962990045;  // std dev = 0,861, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.28157731398951913;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2637642573163526;  // std dev = 0,061, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.12080968144482705;  // std dev = 0,016, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5428942288359271;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.23649371936722932;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17906389632146458;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.10724607512032791;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.25443891890929615;  // std dev = 0,170, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12823654545327906;  // std dev = 0,077, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05871671856627558;  // std dev = 0,745, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19583394478409263;  // std dev = 0,076, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.10447616604282085;  // std dev = 0,028, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3713942908682394;  // std dev = 0,032, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.19627496882605433;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.035894327659601884;  // std dev = 0,646, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.26958527318757664;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15020361926246398;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.013834685847843439;  // std dev = 0,396, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.970837
   AUC PR    = 0.20288
   CLL	      = -0.187935
   Precision = 0.077532 at threshold = 0.5
   Recall    = 0.942308
   F1        = 0.143275


Total learning time: 1.513 seconds
Total inference time: 10.566 seconds
AUC ROC: 0.970837


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.154605
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.869 seconds
Parameter learned model CLL: -0.154605


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.0, 9, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,true,true': [0.0, 3, 0], 'false,true,false,true': [0.0, 0, 12], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false,true': [1.095, 3, 2], 'false,true,false': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [2.024, 12, 11], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,false,true,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.1, 0, 12], 'false,false,true,false': [5.27e-09, 3, 0], 'true,true': [0.0, 0, 1], 'false,true,false': [0.0, 12, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.884, 3, 2], 'false,true,false': [0.0, 12, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 11]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [1.103, 11, 9], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.436, 1, 3], 'false,true,false': [0.871, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,true,true': [0.031, 0, 5], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.861, 3, 2], 'false,true,false': [0.018, 12, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.069, 0, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.002, 0, 4], 'false,false,true,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.016, 12, 0], 'false,false,true,false': [0.0, 3, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.061, 0, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.17, 0, 6], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.745, 7, 7], 'false,false,true,false': [0.077, 5, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.032, 0, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.028, 12, 0], 'false,false,true,false': [0.024, 3, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.076, 0, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.396, 2, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.646, 12, 12], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.24970273483947644], 'false,false': [nan, 0.24000000000000005], 'false,true,false': [-1.4802973661668753e-16, -9.25185853854297e-18], 'true': [nan, 0.0], 'false,true': [0.0, 0.2448979591836734], 'false': [0.24999999999999956, 0.24000000000000005], 'false,false,false': [0.24000000000000005, nan]}, {'': [0.0, 0.18984620815352798], 'false,false,true': [nan, 0.1781342526378132], 'false,false': [0.17813425263781318, 0.24000000000000005], 'true,false': [0.0, nan], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.18962402215635146], 'false,false,false': [0.24000000000000005, nan]}, {'': [0.0, 0.17813452327300916], 'false,false,true': [0.0, 9.25185853854297e-18], 'false,false': [0.23999999999999994, nan], 'true': [0.0, nan], 'false,true': [0.0008359975571214928, 0.0], 'false': [0.1646838103225837, 0.23999999999999994]}, {'': [0.0, 0.11041801931207246], 'false,false': [nan, 0.15645921338890426], 'false,true,true': [0.0, 0.0], 'true': [0.0, nan], 'false,true': [0.0009008081861094549, -6.938893903907228e-18], 'false': [0.10064351895517655, 0.15645921338890426], 'false,false,false': [0.15645921338890426, nan]}, {'': [0.06013240384899167, 0.10997399190500862], 'false,false': [nan, 0.04742686314152715], 'true': [0.0, 0.06080468732672156], 'false,true': [nan, 0.15177614511933135], 'false': [0.15177614511933135, 0.04742686314152715], 'true,true': [nan, 0.0], 'false,false,false': [nan, 0.04742686314152715]}, {'': [0.0, 0.07305887200507827], 'false,false': [nan, 0.14830792514563065], 'false,true,true': [0.00019192172825364118, 0.0006778326005487349], 'true': [0.0, nan], 'false,true': [0.0005181823497204344, 2.765616207648508e-05], 'false': [0.057370001460348485, 0.14830792514563065], 'false,false,false': [0.14830792514563065, nan]}, {'': [0.0, 0.05685296749704758], 'false,false,true': [0.0, -9.25185853854297e-18], 'false,false': [0.14578693771303824, nan], 'false,true,true': [1.3554259148396142e-06, 0.00045985653850602604], 'true': [0.0, nan], 'false,true': [0.0003775350538737232, 2.268542462482287e-05], 'false': [0.03832494242129607, 0.14578693771303824]}, {'': [9.676642893988174e-07, 0.03836980429361325], 'false,false,true': [0.004813841815768642, 0.0012011112881001984], 'false,false': [0.039479256292889404, 0.03961553482254693], 'true': [9.676642893988174e-07, nan], 'false': [0.0, 0.03967244384375955], 'true,true': [0.0, 0.0], 'false,false,false': [nan, 0.03961553482254692]}, {'': [0.0, 0.03230420735079786], 'false,false,true': [0.0005209749182300827, 0.00018554746146210813], 'false,false': [0.07765933166061748, nan], 'false,true,true': [nan, 0.00047599531906325027], 'true': [0.0, nan], 'false,true': [0.00047599531906325027, 6.495662546133578e-05], 'false': [0.02281701663848056, 0.07765933166061748]}, {'': [0.0, 0.02311642654753059], 'false,false,true': [0.0, 0.0], 'false,false': [0.04405567855610794, 0.05237309200500192], 'true': [nan, 0.0], 'false': [0.01737292392658833, 0.050343566873612064], 'false,false,false': [0.05237309200500192, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false;interaction(E, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
2;false;interaction(E, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;false;interaction(E, A).;true;true
5;false,true,true;enzyme(A, G).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
6;false;interaction(E, A).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
7;false,false,true;enzyme(G, F), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
8;false;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
9;false,false;interaction(A, F), enzyme(A, G).;true;true
9;false;interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.561177509120215;  // std dev = 0,829, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.25489932571922164;  // std dev = 1,930, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.6383150784247024;  // std dev = 0,136, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.1452119471769389;  // std dev = 0,066, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(F, G), recursion_proteinclass(F, B) )
%   | | then return 0.7554363183067445;  // std dev = 0,040, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.23516552361916407;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.39748929600407257;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49137134888491213;  // std dev = 0,113, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.12814376553843407;  // std dev = 0,059, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.11978790291240009;  // std dev = 0,866, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( phenotype(A, G), interaction(H, E) )
%   | | | then return 0.3631132817755341;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10141757981319673;  // std dev = 0,733, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.18475371219040726;  // std dev = 0,334, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1163093668255861;  // std dev = 0,032, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, J), phenotype(J, K) )
%   | then return -0.21512466356099483;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3629458017712675;  // std dev = 0,568, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.3079397680370023;  // std dev = 0,070, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3150420924263918;  // std dev = 0,109, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.09299819484492161;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1281380322321643;  // std dev = 0,054, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.08095390215980537;  // std dev = 0,721, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.2461873664001834;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25135373035325587;  // std dev = 0,095, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.12032319911522149;  // std dev = 0,044, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09419520691785273;  // std dev = 0,024, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then return 0.4540717985473062;  // std dev = 0,054, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.19341061476502475;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.16301845579073537;  // std dev = 0,020, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.07773953884760125;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2216208867004048;  // std dev = 0,112, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1276871102357487;  // std dev = 0,081, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.04021237489388913;  // std dev = 0,335, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10556175909301105;  // std dev = 0,543, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1545746621470423;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.15693597121246528;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19303420220500106;  // std dev = 0,102, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.09404670696190351;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09541477573865062;  // std dev = 0,045, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.31119523584103087;  // std dev = 0,064, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1553165962256535;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13543469302208833;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.14718303781302386;  // std dev = 0,038, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08635692684632927;  // std dev = 0,034, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.07992941138903137;  // std dev = 0,353, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.0343671962913258;  // std dev = 0,259, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.2099315121201646;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15360051759459728;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.01130726507369804;  // std dev = 0,339, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.97194
   AUC PR    = 0.201741
   CLL	      = -0.21712
   Precision = 0.079877 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.147937


Total learning time: 2.727 seconds
Total inference time: 11.875 seconds
AUC ROC: 0.97194


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.134929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.013 seconds
Refined model CLL: -0.134929


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97194
   AUC PR    = 0.201741
   CLL	      = -0.21712
   Precision = 0.079877 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.147937


Total learning time: 6.122 seconds
Total inference time: 11.875 seconds
AUC ROC: 0.97194
Total revision time: 6.122
Best scored revision CLL: -0.134929


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:32:05
{'CLL': -0.21712, 'AUC ROC': 0.97194, 'F1': 0.147937, 'Recall': 1.0, 'Precision': [0.079877, 0.5], 'parameter_15': {'CLL': -0.187935, 'AUC ROC': 0.970837, 'F1': 0.143275, 'Recall': 0.942308, 'Precision': [0.077532, 0.5], 'Inference time': 10.566, 'Learning time': 1.513, 'AUC PR': 0.20288}, 'Inference time': 11.875, 'Learning time': 6.122, 'AUC PR': 0.201741}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.4295775065280836;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), phenotype(E, D) )
%   | then if ( complex(C, F) )
%   | | then return 0.764966243819192;  // std dev = 0,125, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.46786697865201904;  // std dev = 0,783, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.7714567408497411;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.17040261772453327;  // std dev = 0,039, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then return -0.18472705238272571;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(J, L), interaction(J, K) )
%   | | | then return 0.33763462655204984;  // std dev = 0,991, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.16236537344795016;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.7714567408497411;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), phenotype(E, D) )
%   | then if ( complex(C, F) )
%   | | then return 0.6061488278445984;  // std dev = 0,170, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3851831315091687;  // std dev = 0,777, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.6111117045029767;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14769054700573553;  // std dev = 0,035, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then return -0.15860577674775797;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return -0.15441124013406604;  // std dev = 0,051, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2993122774399893;  // std dev = 0,965, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6111117045029767;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), phenotype(E, D) )
%   | then if ( enzyme(E, F) )
%   | | then return 0.5417101416813063;  // std dev = 0,224, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.31742400764415973;  // std dev = 0,731, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.46183238128385423;  // std dev = 0,086, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1300802199053818;  // std dev = 0,031, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then return -0.1386332550422468;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(J, L), interaction(J, K) )
%   | | | then return 0.25061345111999805;  // std dev = 0,952, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13860803876182026;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.46183238128385423;  // std dev = 0,086, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), phenotype(E, D) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.4320415429818556;  // std dev = 0,194, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.23280663949137384;  // std dev = 0,723, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.35195897336037235;  // std dev = 0,078, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11607727955371623;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return -0.14103548810959557;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.31125516673222176;  // std dev = 0,553, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.0776601546069383;  // std dev = 0,745, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.013518527997079186;  // std dev = 0,459, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.12688064714689085;  // std dev = 0,486, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.3354028999766003;  // std dev = 0,180, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, D), complex(D, I) )
%   | | | then return 0.22420545547098303;  // std dev = 0,983, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.04753114389518012;  // std dev = 0,570, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.016214202784736894;  // std dev = 0,521, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.10588170437991326;  // std dev = 0,481, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( location(A, E), complex(D, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.12856909252519394;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.21096584983028782;  // std dev = 0,404, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, D), phenotype(A, I) )
%   | | | then return 0.04525960657399008;  // std dev = 0,325, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.23499908965130667;  // std dev = 0,888, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.013880931368259122;  // std dev = 0,519, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return 0.1746010328361541;  // std dev = 0,465, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, F) )
%   | | then return -0.17632420242133096;  // std dev = 0,243, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.23105734100494368;  // std dev = 0,123, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.23187788632451659;  // std dev = 0,110, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0637640946623437;  // std dev = 0,869, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.13550115315538286;  // std dev = 0,042, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.25071399549187084;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return 0.14640466742555733;  // std dev = 0,440, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, F) )
%   | | then return -0.15365521359262319;  // std dev = 0,222, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.19352266473608226;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.043590702283517725;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.20676285679342776;  // std dev = 0,429, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.12044866181291232;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.20660612800197944;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.0817153263045437;  // std dev = 0,382, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then return 0.15831662209337244;  // std dev = 0,335, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, A), location(E, F) )
%   | | then if ( phenotype(E, G), enzyme(A, H) )
%   | | | then return -0.05329454629325797;  // std dev = 0,190, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09212345919020838;  // std dev = 0,928, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else return -0.045757027053557185;  // std dev = 0,238, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.545276
   AUC PR    = 0.007134
   CLL	      = -1.070578
   Precision = 0.007027 at threshold = 0.5
   Recall    = 0.769231
   F1        = 0.013926


Total learning time: 5.015 seconds
Total inference time: 5.458 seconds
AUC ROC: 0.545276


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:32:16
{'CLL': -1.070578, 'AUC ROC': 0.545276, 'F1': 0.013926, 'Recall': 0.769231, 'Precision': [0.007027, 0.5], 'Inference time': 5.458, 'Learning time': 5.015, 'AUC PR': 0.007134}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.4295775065280836;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */


Results
   AUC ROC   = 0.500061
   AUC PR    = 0.006334
   CLL	      = -0.230723
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.322 seconds
Total inference time: 2.172 seconds
AUC ROC: 0.500061


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:32:19
{'CLL': -0.230723, 'AUC ROC': 0.500061, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.172, 'Learning time': 1.322, 'AUC PR': 0.006334}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109544;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2856563696895541;  // std dev = 2,441, 31,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.1528800736093178;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.8195467402759845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.6711343083781407;  // std dev = 0,198, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.17510208934973107;  // std dev = 0,123, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.752815357287378;  // std dev = 0,105, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.20417537054725088;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.389656422934326;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.520800552399642;  // std dev = 0,190, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.15137031439077303;  // std dev = 0,111, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.10046907417111177;  // std dev = 0,947, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.48523367988681565;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.12850464548232488;  // std dev = 1,320, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1237254847978121;  // std dev = 0,974, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3671841102897513;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08905685830186735;  // std dev = 0,642, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.3611448272715678;  // std dev = 0,108, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.35909459975639046;  // std dev = 0,170, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.14733561637817671;  // std dev = 0,111, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.09232623604678929;  // std dev = 0,950, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.264324411948923;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2907838279850457;  // std dev = 0,174, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.12986874540872445;  // std dev = 0,101, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.47090088689280574;  // std dev = 0,248, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.22303715855402703;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16564719407809636;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.1444572398807036;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2531538074246653;  // std dev = 0,235, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1253373858457827;  // std dev = 0,100, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0741295412514725;  // std dev = 0,882, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.27949069562075135;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1878883634108209;  // std dev = 0,066, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.11193339367151856;  // std dev = 0,092, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.32703946356238073;  // std dev = 0,218, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18339001268571134;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.03598166962837108;  // std dev = 0,791, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.21609785577251783;  // std dev = 0,145, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14432552298690307;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.005736565856238014;  // std dev = 0,432, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.968815
   AUC PR    = 0.185202
   CLL	      = -0.229881
   Precision = 0.077963 at threshold = 0.5
   Recall    = 0.942308
   F1        = 0.144012


Total learning time: 1.614 seconds
Total inference time: 10.874 seconds
AUC ROC: 0.968815


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.159172
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.808 seconds
Parameter learned model CLL: -0.159172


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.0, 13, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [1.309, 4, 3], 'false,true,true': [1.225, 3, 3], 'false,true,false,true': [0.0, 0, 13], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false,true': [1.155, 4, 2], 'false,true,false': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1], 'false,false,true,false': [2.441, 16, 15], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,false,true,true': [0.105, 0, 3], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.198, 0, 16], 'false,false,true,false': [0.0, 4, 0], 'true,true': [0.0, 0, 1], 'false,true,false': [0.123, 16, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.947, 4, 2], 'false,true,false': [0.111, 16, 0], 'false,false,false,false': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.19, 0, 15]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false,true': 'enzyme(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, K)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'true,false': [1.32, 12, 12], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.642, 4, 3], 'false,false,true,false': [0.0, 0, 0], 'false,true,false': [0.974, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,true,true': [0.108, 0, 6], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.95, 4, 3], 'false,true,false': [0.111, 16, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.17, 0, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.001, 0, 5], 'false,false,true,true': [0.248, 0, 3], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.101, 16, 0], 'false,false,true,false': [0.0, 4, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.174, 0, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.235, 0, 8], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.047, 3, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.882, 9, 10], 'false,false,true,false': [0.1, 8, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.029, 0, 3], 'false,false,true,true': [0.218, 0, 3], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.092, 16, 0], 'false,false,true,false': [0.03, 4, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.066, 0, 13]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.145, 0, 2], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.432, 2, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.791, 16, 16], 'false,false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.24983563445101867], 'false,false': [nan, 0.24489795918367335], 'false,true,false': [-2.7328566760003855e-16, -1.2810265668751807e-17], 'true': [nan, 0.0], 'false,true': [0.24999999999999992, 0.2499999999999999], 'false': [0.24999999999999953, 0.24489795918367335], 'false,false,false': [0.24489795918367335, nan]}, {'': [0.0, 0.20180033880374304], 'false,false,true': [nan, 0.19221344069645116], 'false,false': [0.19221344069645074, 0.2448979591836735], 'true,false': [0.0, nan], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.20213024139103286], 'false,false,false': [0.2222222222222223, 0.0]}, {'': [0.0, 0.1890976130202384], 'false,false,true': [0.00369959498438995, 0.0], 'false,false': [0.22587074556346173, nan], 'true': [0.0, nan], 'false,true': [0.002461295284765297, 0.0009528470931134507], 'false': [0.18073608139880054, 0.22587074556346173]}, {'': [0.0, 0.11844309325783287], 'false,false': [nan, 0.14632294886276084], 'false,true,true': [0.0, 0.0024079407090889402], 'true': [0.0, nan], 'false,true': [0.0032651855882014913, 0.0007649625761260888], 'false': [0.11223056133454554, 0.14632294886276084], 'false,false,false': [0.14956099246204568, 0.0]}, {'': [0.071143935924089, 0.09526627869330098], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.058851345808127405], 'true': [0.0, 0.07263052225251991], 'false,true': [nan, 0.13562132887879427], 'false': [0.13562132887879427, 0.059955605364741524], 'true,true': [nan, 0.0], 'false,false,false': [nan, 0.058851345808127405]}, {'': [0.0, 0.07728448368918533], 'false,false': [nan, 0.12885358441071842], 'false,true,true': [0.0019269069566731172, 0.002900350522643613], 'true': [0.0, nan], 'false,true': [0.002536294364982178, 0.0007760186448185977], 'false': [0.06596887595354489, 0.12885358441071842], 'false,false,false': [0.12885358441071842, nan]}, {'': [0.0, 0.05872811196923973], 'false,false,true': [0.020545901745552413, 0.0], 'false,false': [0.12673600138121324, nan], 'false,true,true': [2.6565753782348265e-07, 0.0027428554896532305], 'true': [0.0, nan], 'false,true': [0.0020362084262323943, 0.0006349029601054358], 'false': [0.043850697770089604, 0.12673600138121324]}, {'': [3.277163861583124e-05, 0.04067499951061346], 'false,false,true': [0.006908839026459376, 0.0012605281165923472], 'false,false': [0.03989857941734778, 0.040932450525905495], 'true': [3.277163861583124e-05, nan], 'false': [0.000736202688558669, 0.040485750738572884], 'true,true': [0.0, 0.0], 'false,false,false': [nan, 0.040932450525905495]}, {'': [0.0, 0.03419678436251132], 'false,false,true': [0.015834247025622323, 0.00022226829032685747], 'false,false': [0.07071840208861305, nan], 'false,true,true': [0.0002870325689296553, 0.0003308985114594372], 'true': [0.0, nan], 'false,true': [0.0016009881135852638, 0.0005257346930761398], 'false': [0.02618516671321326, 0.07071840208861305]}, {'': [0.0, 0.02475385707146044], 'false,false,true': [0.010514807389869013, 0.0], 'false,false': [0.03773365668402375, 0.062291958320212774], 'true': [nan, 0.0], 'false': [0.019533077184364974, 0.04848125495565938], 'false,false,false': [0.062291958320212774, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false;interaction(E, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(I, A).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;false,false,false;interaction(A, K), interaction(K, L).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
2;false;interaction(E, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, I), interaction(I, J).;true;true
3;false;interaction(E, A).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
4;false,false;interaction(A, H), enzyme(A, I).;true;true
4;false;interaction(A, F), interaction(F, G).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;false;interaction(E, A).;true;true
5;false,true,true;enzyme(A, G).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
6;false;interaction(E, A).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
7;false,false,true;enzyme(G, F), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
8;false;interaction(E, A).;true;true
8;false,true,true;interaction(E, G), interaction(G, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
9;false,false;interaction(A, F), enzyme(A, G).;true;true
9;false;interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.39715646033806373;  // std dev = 1,805, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.1312716287916176;  // std dev = 1,472, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.15619471171805724;  // std dev = 0,976, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.6199809269838373;  // std dev = 0,071, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6875433929050065;  // std dev = 0,166, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1702578046599103;  // std dev = 0,134, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.6430540824444307;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14360609334012844;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.40188831495102106;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5122067322185252;  // std dev = 0,214, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.1784521868622483;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14060103824745823;  // std dev = 0,071, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.0939752663329579;  // std dev = 0,765, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.3963548977717103;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( complex(E, G), interaction(H, E) )
%   | | | then return 0.2906212332160922;  // std dev = 0,474, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.08160040305705298;  // std dev = 0,718, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.0980613015761643;  // std dev = 0,558, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0022492144778487487;  // std dev = 0,595, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, K), interaction(K, L) )
%   | then if ( interaction(A, M), enzyme(M, N) )
%   | | then return 0.027330341191008228;  // std dev = 0,404, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.18727236636810757;  // std dev = 0,650, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, P), enzyme(A, Q) )
%   | | then return 0.3063941897757755;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.08615913315562625;  // std dev = 0,240, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.3542098243084583;  // std dev = 0,084, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.34510088101952674;  // std dev = 0,255, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return -0.1767255189774484;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1305216975311753;  // std dev = 0,072, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then return -0.15113133763446507;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3920548635605046;  // std dev = 0,180, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.2517616648166114;  // std dev = 0,047, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2861193302559237;  // std dev = 0,228, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.13959515327771205;  // std dev = 0,052, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11049643797297588;  // std dev = 0,057, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then return 0.3069450644826339;  // std dev = 0,155, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.13276039838021453;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.16439801895553685;  // std dev = 0,018, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return -0.12828128880015263;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.22582100062508545;  // std dev = 0,129, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.10409032104213478;  // std dev = 0,030, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.15807014641109057;  // std dev = 0,301, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.040507356792312155;  // std dev = 0,698, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15439446488868525;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.27997071866843576;  // std dev = 0,109, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1826244473305471;  // std dev = 0,100, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.11886182401420527;  // std dev = 0,043, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09759728050575558;  // std dev = 0,057, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.2214793432303185;  // std dev = 0,134, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11560039373969189;  // std dev = 0,031, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13529431810048875;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.16293213767701054;  // std dev = 0,075, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0854031507061018;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.030407711232161447;  // std dev = 0,142, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.15518551522989615;  // std dev = 0,087, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.09017178039861291;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.004289640288622017;  // std dev = 0,301, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.974732
   AUC PR    = 0.249618
   CLL	      = -0.267855
   Precision = 0.075643 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.140252


Total learning time: 3.159 seconds
Total inference time: 11.482 seconds
AUC ROC: 0.974732


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.140355
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.064 seconds
Refined model CLL: -0.140355


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.974732
   AUC PR    = 0.249618
   CLL	      = -0.267855
   Precision = 0.075643 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.140252


Total learning time: 6.645 seconds
Total inference time: 11.482 seconds
AUC ROC: 0.974732
Total revision time: 6.645
Best scored revision CLL: -0.140355


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:32:49
{'CLL': -0.267855, 'AUC ROC': 0.974732, 'F1': 0.140252, 'Recall': 0.961538, 'Precision': [0.075643, 0.5], 'Inference time': 11.482, 'Learning time': 6.645, 'AUC PR': 0.249618, 'parameter_20': {'CLL': -0.229881, 'AUC ROC': 0.968815, 'F1': 0.144012, 'Recall': 0.942308, 'Precision': [0.077963, 0.5], 'Inference time': 10.874, 'Learning time': 1.614, 'AUC PR': 0.185202}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), phenotype(E, D) )
%   | then if ( interaction(A, F), phenotype(F, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), phenotype(E, D) )
%   | then if ( complex(C, F) )
%   | | then return 0.7401919213324014;  // std dev = 0,072, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4850122940520397;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then return -0.14048860034631788;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), enzyme(K, L) )
%   | | | then return -0.13296661943735463;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2563028688650728;  // std dev = 1,388, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.7611380874192215;  // std dev = 0,102, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), phenotype(E, D) )
%   | then if ( complex(C, F) )
%   | | then return 0.5770453436263576;  // std dev = 0,093, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.38116505386410415;  // std dev = 0,801, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then return -0.1243924937147545;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), phenotype(K, L) )
%   | | | then return 0.4365039332037381;  // std dev = 0,710, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.015111654122791219;  // std dev = 1,132, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.6024437669660495;  // std dev = 0,141, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.04527579931280909;  // std dev = 0,655, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), phenotype(F, E) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.40724016970707066;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5115541378673445;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then return -0.11148435210065762;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.4578478376560214;  // std dev = 0,151, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.132998630846327;  // std dev = 1,376, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), phenotype(E, F) )
%   | then if ( interaction(A, G), complex(E, D) )
%   | | then return 0.3931959379608922;  // std dev = 0,137, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3675603132869599;  // std dev = 0,186, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, H) )
%   | | then return -0.10527789438558458;  // std dev = 0,028, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.21263005398028684;  // std dev = 0,788, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( complex(A, I) )
%   | then return 0.24727141771367592;  // std dev = 0,397, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(K, L), interaction(M, K) )
%   | | | then return 0.11358356935187398;  // std dev = 0,868, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.14154267234325385;  // std dev = 0,124, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return -0.10469156097155158;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.19014565218425702;  // std dev = 0,848, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), phenotype(E, F) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.30790233858415844;  // std dev = 0,121, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2885412199626092;  // std dev = 0,172, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, I) )
%   | | then return -0.09578407749562218;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1744711666631764;  // std dev = 0,779, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( complex(A, J) )
%   | then return 0.20097656390709043;  // std dev = 0,369, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then return -0.06710260567375625;  // std dev = 0,558, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.03195142234498479;  // std dev = 0,749, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1534983229167564;  // std dev = 0,829, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then return -0.09138702220911588;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.2394695904667464;  // std dev = 0,117, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3299631053921487;  // std dev = 0,417, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17621176584194434;  // std dev = 0,181, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, H), interaction(A, I) )
%   | then return 0.15013329960015795;  // std dev = 0,464, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then return -0.19728951033247563;  // std dev = 0,248, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return -0.03909363774095357;  // std dev = 0,660, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1219141163916621;  // std dev = 0,904, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( enzyme(C, E), enzyme(A, E) )
%   | then return -0.08408844892958994;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( location(A, F), location(C, F) )
%   | | then return 0.24219625807361683;  // std dev = 0,099, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17380887703890913;  // std dev = 0,628, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), enzyme(A, H) )
%   | then if ( interaction(I, G), interaction(J, I) )
%   | | then return 0.23280308327457902;  // std dev = 0,180, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.014607239398382621;  // std dev = 0,620, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return -0.10746915332750329;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return -0.06830365235688081;  // std dev = 0,280, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09598242643547188;  // std dev = 0,900, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.07601357129589353;  // std dev = 0,405, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.024508518858791323;  // std dev = 0,297, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2217212853998319;  // std dev = 0,759, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.24457082800937172;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -3.1276419937578865E-4;  // std dev = 0,839, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then return -0.09842731083664065;  // std dev = 0,047, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.11035884013302762;  // std dev = 0,436, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.06494658213774102;  // std dev = 0,404, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), phenotype(F, E) )
%   | | then if ( complex(D, G) )
%   | | | then return 0.12711892805959413;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.20471804889421616;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.19492997902918718;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08824386392232199;  // std dev = 0,056, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then return -0.09007952846085093;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.21235819634442546;  // std dev = 0,120, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.01541250725861918;  // std dev = 1,169, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */


Results
   AUC ROC   = 0.60675
   AUC PR    = 0.033348
   CLL	      = -1.31146
   Precision = 0.007265 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.014412


Total learning time: 6.286 seconds
Total inference time: 5.73 seconds
AUC ROC: 0.60675


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:33:01
{'CLL': -1.31146, 'AUC ROC': 0.60675, 'F1': 0.014412, 'Recall': 0.884615, 'Precision': [0.007265, 0.5], 'Inference time': 5.73, 'Learning time': 6.286, 'AUC PR': 0.033348}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), phenotype(E, D) )
%   | then if ( interaction(A, F), phenotype(F, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.588381
   AUC PR    = 0.007912
   CLL	      = -0.263905
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.986 seconds
Total inference time: 2.341 seconds
AUC ROC: 0.588381


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:33:06
{'CLL': -0.263905, 'AUC ROC': 0.588381, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.341, 'Learning time': 1.986, 'AUC PR': 0.007912}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.3381489350995123;  // std dev = 2,498, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.26393936132783563;  // std dev = 2,149, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.3118156270860296;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.24038705565745846;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7139222834014236;  // std dev = 0,160, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1898953973972457;  // std dev = 0,133, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7627183136224079;  // std dev = 0,019, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.23654301163806463;  // std dev = 0,021, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5524792387552284;  // std dev = 0,194, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1626201257393217;  // std dev = 0,118, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.19784106766824344;  // std dev = 1,688, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.1547229132286925;  // std dev = 1,049, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1235528529558832;  // std dev = 1,260, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.13868135392582512;  // std dev = 1,706, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5754256236705825;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.21361282586254776;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.18090639890401733;  // std dev = 0,789, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3569814350191156;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.2672075974622498;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.3799421635250771;  // std dev = 0,170, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.38816735366233934;  // std dev = 0,118, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.15769922453398935;  // std dev = 0,114, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.11697595476866375;  // std dev = 1,888, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.20776971066366912;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.239323619448646;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.292600986962496;  // std dev = 0,116, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.30518692348361304;  // std dev = 0,139, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1380094968335631;  // std dev = 0,102, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4798603623134083;  // std dev = 0,082, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.26708622859739567;  // std dev = 0,108, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.1756370113262924;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.13592505471118776;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2739514588425655;  // std dev = 0,205, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16896022377818165;  // std dev = 0,148, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.18706698890317092;  // std dev = 0,016, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.07418673124281396;  // std dev = 1,349, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.15740296511137794;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.25209343105510695;  // std dev = 0,038, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16452516783394042;  // std dev = 0,048, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11600479719185795;  // std dev = 0,082, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.33618797627451086;  // std dev = 0,118, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.2166399133528127;  // std dev = 0,135, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13764522925743292;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then return 0.022636136863495263;  // std dev = 0,669, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.22146541652592253;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14750389343040152;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.05261438212106583;  // std dev = 0,998, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.98156
   AUC PR    = 0.217064
   CLL	      = -0.232384
   Precision = 0.096304 at threshold = 0.5
   Recall    = 0.951923
   F1        = 0.174912


Total learning time: 1.657 seconds
Total inference time: 8.098 seconds
AUC ROC: 0.98156


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.194347
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.901 seconds
Parameter learned model CLL: -0.194347


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A)'}, {'false,true,false,false': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [2.11e-08, 0, 3], 'false,false,false,true': [2.498, 13, 12], 'false,true,true': [1.581, 5, 5], 'false,true,false,true': [0.0, 0, 5], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(F, C), interaction(A, F)', 'true': 'enzyme(A, D), interaction(E, A)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false,true': [2.121, 9, 9], 'false,false,false,false': [1.309, 4, 3], 'false,true': [0.0, 0, 0], 'false,false,true,false': [2.149, 12, 10], 'true,false,true': [0.0, 0, 2], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)'}, {'false,false,true,true': [0.019, 0, 12], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.133, 12, 0], 'false,false,true,false': [0.021, 13, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.16, 0, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [1.688, 9, 9], 'false,true,false': [0.118, 12, 0], 'false,false,false,false': [1.049, 4, 3], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.194, 0, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'false,false,true': 'enzyme(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(H, A), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(F, A), interaction(G, F)', 'true,true': 'interaction(D, A), enzyme(D, E)', 'false,false,false': 'interaction(K, A)'}, {'true,true,false': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 1], 'true,false': [1.26, 10, 9], 'false,false,false,true': [0.789, 2, 2], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'false,true,false': [1.706, 11, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(D, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A)'}, {'false,true,true,true': [0.17, 0, 6], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.888, 13, 12], 'false,true,false': [0.114, 12, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.029, 0, 3], 'false,true,true,false': [0.118, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'false,true,true': 'interaction(G, A), interaction(H, G)', 'true': 'interaction(D, C), interaction(A, D)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)'}, {'false,true,true,true': [0.116, 0, 5], 'false,false,true,true': [0.082, 0, 12], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.102, 12, 0], 'false,false,true,false': [0.108, 13, 0], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.139, 0, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), interaction(E, A)', 'true,true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, H), recursion_proteinclass(H, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.205, 0, 9], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.016, 0, 2], 'false,true': [0.045, 3, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [1.349, 13, 13], 'false,false,true,false': [0.148, 9, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'true': 'interaction(D, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)'}, {'false,true,true,true': [0.038, 0, 5], 'false,false,true,true': [0.118, 0, 12], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.082, 12, 0], 'false,false,true,false': [0.135, 13, 0], 'true,true': [0.016, 0, 3], 'false,true,true,false': [0.048, 0, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(F, A), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A)'}, {'false,false,true,true': [0.044, 0, 3], 'true,false': [0.014, 0, 3], 'false,false,false,true': [0.998, 8, 9], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.669, 12, 10], 'false,false,true,false': [0.062, 5, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24898143956541396], 'false,false': [nan, 0.24959999999999954], 'false,true,false': [0.0, -7.93016446160826e-18], 'true': [nan, 1.4802973661668753e-16], 'false,true': [0.24999999999999983, 0.24305555555555544], 'false': [0.2479338842975207, 0.24959999999999954], 'false,false,false': [0.24959999999999954, nan]}, {'': [0.0, 0.23123534478196542], 'false,false,true': [nan, 0.2099530746783561], 'false,false': [0.2099530746783561, 0.24959999999999966], 'true,false': [0.0, 0.0], 'true': [nan, 0.0], 'false': [nan, 0.23123534478196522], 'false,false,false': [0.2500000000000002, 0.24489795918367352]}, {'': [3.700743415417188e-17, 0.22843677672321824], 'false,false,true': [3.0737740889315766e-05, 3.492098373221346e-05], 'false,false': [0.249264302789032, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false,true': [0.0025654054187113752, 0.0014808624623568422], 'false': [0.20450765474605967, 0.249264302789032]}, {'': [-3.700743415417188e-17, 0.14481604126019945], 'false,false': [nan, 0.15835780544292707], 'false,true,true': [nan, 0.003779902415095915], 'true': [0.0, 0.0], 'false,true': [0.0037799024150957814, 0.001163189498063974], 'false': [0.1291378361381635, 0.15835780544292707], 'false,false,false': [0.15824135322972377, 0.1573186478167277]}, {'': [0.07893213677561199, 0.13887973011984697], 'false,false,true': [0.0, 0.0], 'false,false': [0.1383514832981436, 0.12947672190319853], 'true': [0.0, 0.08353871903812193], 'false,true': [nan, 0.13865081228255957], 'false': [0.13865081228255957, 0.13931945204642052], 'true,true': [nan, 0.0], 'false,false,false': [0.15564541871041154, 0.0]}, {'': [0.0002896995347893838, 0.11118815960366109], 'false,false': [nan, 0.14256763625796604], 'false,true,true': [0.004792491875156475, 0.003483326405028103], 'true': [0.0002896995347893838, nan], 'false,true': [0.004285062587775746, 0.0010883548635455171], 'false': [0.07508855644112572, 0.14256763625796604], 'false,false,false': [0.14256763625796604, nan]}, {'': [0.00022125536880236255, 0.09778853462528947], 'false,false,true': [0.000566227336959583, 0.0008982834702841233], 'false,false': [0.13999802726073707, nan], 'false,true,true': [0.002695142129459005, 0.0038818626700120483], 'true': [0.0, 0.0], 'false,true': [0.0033281038492639194, 0.0008743678211181813], 'false': [0.04931646926010735, 0.13999802726073707]}, {'': [0.0, 0.0596159901278357], 'false,false,true': [0.004657848193234189, 0.002423935453407818], 'false,false': [0.05258358147380637, 0.06581641533240058], 'true': [0.0, nan], 'false': [0.0006627089277255772, 0.060849215286543946], 'true,true': [0.0, nan], 'false,false,false': [0.0001306443874079452, 0.06995902747430609]}, {'': [8.484303098980443e-05, 0.05417366900144408], 'false,false,true': [0.0011534157850536426, 0.0014112583672611667], 'false,false': [0.07756991534503169, nan], 'false,true,true': [0.0002913703546676527, 0.00046531183108668996], 'true': [8.484303098980443e-05, nan], 'false,true': [0.002295391273770048, 0.0005623736400918155], 'false': [0.027427703955500683, 0.07756991534503169]}, {'': [6.807914138567499e-05, 0.03674158896644881], 'false,false,true': [0.0006405682946811949, 0.0007577875465922035], 'false,false': [0.03262125650438633, 0.05864521550733148], 'true': [nan, 6.807914138567499e-05], 'false': [0.02031582766468285, 0.051147399603213906], 'false,false,false': [0.05864521550733148, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false;interaction(A, E).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(F, C), interaction(A, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
2;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;false;interaction(A, F).;true;true
2;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
4;false,false,true;enzyme(J, I), recursion_proteinclass(J, B).;true;true
4;false,false;interaction(H, A), enzyme(A, I).;true;true
4;true;recursion_proteinclass(D, B).;true;true
4;false;interaction(F, A), interaction(G, F).;true;true
4;false,false,false;interaction(K, A).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, E).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, C), interaction(A, D).;true;true
6;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
6;false;interaction(A, E).;true;true
6;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(G, F), recursion_proteinclass(G, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;false;interaction(A, E), interaction(E, A).;true;true
7;false,false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
8;false;interaction(A, E).;true;true
8;false,true,true;interaction(G, E), interaction(A, G).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
9;false,false;interaction(F, A), enzyme(A, G).;true;true
9;false;interaction(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.39148226843284567;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( complex(E, F) )
%   | | then return 0.747492956713281;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3273894877577045;  // std dev = 0,952, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( phenotype(G, I), phenotype(A, J) )
%   | | | then return 0.05486054504937363;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.504803905283876;  // std dev = 1,061, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.43783406196450586;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16868751271608676;  // std dev = 2,330, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.7433529284779579;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6344638398299166;  // std dev = 0,160, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.19427059499611787;  // std dev = 0,079, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.16839766303325526;  // std dev = 0,057, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.24417380835302838;  // std dev = 1,190, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.6451235755203402;  // std dev = 0,928, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.18401410702074314;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.22446553997995894;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.556052089768507;  // std dev = 0,148, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.48741703189469254;  // std dev = 0,170, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.16585043526905943;  // std dev = 0,069, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1461784043094371;  // std dev = 0,051, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then return 0.538914713376942;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.04385264275339541;  // std dev = 0,915, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.23014259675165225;  // std dev = 1,617, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.12086681808180243;  // std dev = 0,274, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then return 0.33742023827105405;  // std dev = 0,643, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.04064103847991372;  // std dev = 0,709, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11605120171620179;  // std dev = 1,109, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8068990165582224;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.3014780865630305;  // std dev = 0,153, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.19043332130366078;  // std dev = 0,800, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.32006594344549344;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2687721410777208;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.4185829298478194;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3275920760399767;  // std dev = 0,169, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.13754836280136895;  // std dev = 0,043, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.15900153566398487;  // std dev = 0,068, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return 0.3027642365985642;  // std dev = 0,602, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.23397007363762815;  // std dev = 0,614, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.029708482217326825;  // std dev = 1,498, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21940140131091643;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.30568278133326054;  // std dev = 0,154, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.25539055138844047;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.15119996826130366;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11575122943786206;  // std dev = 0,039, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.28467527207495363;  // std dev = 0,924, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.16436414898868787;  // std dev = 1,012, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.1787845689526919;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.2592868761537591;  // std dev = 0,021, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17373451734797152;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.12432383466925394;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.30088751893532634;  // std dev = 0,443, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1902974131031407;  // std dev = 0,251, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1894165693012192;  // std dev = 0,022, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.07679425634016751;  // std dev = 1,382, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1581068084869837;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, D), interaction(A, F) )
%   | | | then return 0.2334649359870414;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16220177280048387;  // std dev = 0,085, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.12075745741133898;  // std dev = 0,025, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09910162544603013;  // std dev = 0,036, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.022178100280409938;  // std dev = 0,871, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3071449864568438;  // std dev = 0,737, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.15063357118396759;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.21676463616041097;  // std dev = 0,027, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.138201409374461;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( complex(F, E), interaction(F, A) )
%   | | | then return -0.09366809709383611;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.002401329404309266;  // std dev = 0,287, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.12192915208398822;  // std dev = 0,263, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.01881058447914794;  // std dev = 0,408, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.34945864142834565;  // std dev = 0,269, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2179957841527509;  // std dev = 0,222, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.037800740036274434;  // std dev = 0,660, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.12929491700712642;  // std dev = 0,830, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */


Results
   AUC ROC   = 0.945232
   AUC PR    = 0.112591
   CLL	      = -0.321201
   Precision = 0.044433 at threshold = 0.5
   Recall    = 0.855769
   F1        = 0.08448


Total learning time: 9.545 seconds
Total inference time: 30.541 seconds
AUC ROC: 0.945232


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.212301
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.359 seconds
Refined model CLL: -0.212301


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98156
   AUC PR    = 0.217064
   CLL	      = -0.232384
   Precision = 0.096304 at threshold = 0.5
   Recall    = 0.951923
   F1        = 0.174912


Total learning time: 13.462 seconds
Total inference time: 8.098 seconds
AUC ROC: 0.98156
Total revision time: 13.462
Best scored revision CLL: -0.194347


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:33:59
{'CLL': -0.232384, 'AUC ROC': 0.98156, 'F1': 0.174912, 'Recall': 0.951923, 'parameter_25': {'CLL': -0.232384, 'AUC ROC': 0.98156, 'F1': 0.174912, 'Recall': 0.951923, 'Precision': [0.096304, 0.5], 'Inference time': 8.098, 'Learning time': 1.657, 'AUC PR': 0.217064}, 'Precision': [0.096304, 0.5], 'Inference time': 8.098, 'Learning time': 13.462, 'AUC PR': 0.217064}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( complex(C, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(E, F), phenotype(A, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( interaction(J, H), interaction(H, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.016851064900487794;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.24703782398840118;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( complex(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( complex(A, E), enzyme(A, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return -0.15945187714009357;  // std dev = 0,068, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.4721886587495747;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.7580193346218546;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09135266795518789;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.5260118154066014;  // std dev = 1,168, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.16168398251613628;  // std dev = 2,118, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6323770949060764;  // std dev = 0,143, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, F), interaction(A, G) )
%   | | then if ( complex(G, F) )
%   | | | then return -0.23839416677801925;  // std dev = 0,056, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1843291833122832;  // std dev = 0,956, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.48127182466777646;  // std dev = 0,827, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.19166504622493646;  // std dev = 2,399, 27,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.08763851196104336;  // std dev = 0,573, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.40712581598442693;  // std dev = 0,664, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6881716164748509;  // std dev = 0,200, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return -0.15786469762064548;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.256020249912616;  // std dev = 0,126, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then return 0.5618254957514248;  // std dev = 0,289, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.6062387714867469;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17322000817930747;  // std dev = 1,823, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then return -0.14056009432190006;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.26387986827571175;  // std dev = 0,608, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.42418742134917203;  // std dev = 0,120, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), interaction(J, K) )
%   | | | then return -0.24439654018483134;  // std dev = 0,103, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.3627444127152746;  // std dev = 0,687, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.46201002652899964;  // std dev = 0,267, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14289315220219065;  // std dev = 2,047, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.08673917090436771;  // std dev = 0,488, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.23361882262155784;  // std dev = 0,574, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.481478823271215;  // std dev = 0,230, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return -0.13524172200342435;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.22048543976003337;  // std dev = 0,127, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.46205242170066724;  // std dev = 0,524, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.23283690761066264;  // std dev = 0,124, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.4269539854510316;  // std dev = 0,788, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.19003669567780584;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3012174330275661;  // std dev = 0,110, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.20860056839771265;  // std dev = 0,119, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.25799820273869395;  // std dev = 0,682, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.16902341707402888;  // std dev = 0,158, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.32061533159204736;  // std dev = 0,350, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11957164488455822;  // std dev = 1,591, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2427933047540444;  // std dev = 0,094, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( phenotype(D, F), phenotype(A, G) )
%   | | then return -0.15583118374429206;  // std dev = 0,092, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.044732190537343;  // std dev = 0,467, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then return 0.22536497937150954;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.010432938703913661;  // std dev = 0,908, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.10145869229350034;  // std dev = 1,667, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.08488747224254307;  // std dev = 0,382, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.10742236969896636;  // std dev = 0,547, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.31346469942619676;  // std dev = 0,205, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return -0.10071625752346743;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.15513658281712253;  // std dev = 0,088, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then return 0.2750157341491736;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.24616569973676963;  // std dev = 0,291, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.034472300726345086;  // std dev = 1,520, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return 0.19216220166596384;  // std dev = 0,078, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3159107254343168;  // std dev = 0,297, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.18957635159444783;  // std dev = 0,117, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( interaction(I, G) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return -0.09947422310249233;  // std dev = 0,392, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1472097316538677;  // std dev = 0,581, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.2969211180919319;  // std dev = 0,565, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then return 0.07953803659210314;  // std dev = 0,556, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.11476715228600479;  // std dev = 0,386, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.16747857671275018;  // std dev = 0,798, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.828451
   AUC PR    = 0.044573
   CLL	      = -0.42549
   Precision = 0.031161 at threshold = 0.5
   Recall    = 0.634615
   F1        = 0.059406


Total learning time: 5.872 seconds
Total inference time: 5.138 seconds
AUC ROC: 0.828451


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:34:10
{'CLL': -0.42549, 'AUC ROC': 0.828451, 'F1': 0.059406, 'Recall': 0.634615, 'Precision': [0.031161, 0.5], 'Inference time': 5.138, 'Learning time': 5.872, 'AUC PR': 0.044573}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( phenotype(A, I) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( phenotype(J, L), phenotype(A, M) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.19148226843284566;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */


Results
   AUC ROC   = 0.499869
   AUC PR    = 0.00633
   CLL	      = -0.241851
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.731 seconds
Total inference time: 2.383 seconds
AUC ROC: 0.499869


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:34:14
{'CLL': -0.241851, 'AUC ROC': 0.499869, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.383, 'Learning time': 1.731, 'AUC PR': 0.00633}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.015375036594832933;  // std dev = 0,771, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.6358631190996529;  // std dev = 0,114, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.12714114378515878;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.48511142176346517;  // std dev = 0,123, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.11368739609887528;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30502538488457365;  // std dev = 0,022, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.10272521288149856;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10899331713932556;  // std dev = 0,299, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.45152808199786176;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25816503408631986;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.28735847703363443;  // std dev = 0,080, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.09755160092655674;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2974447222057308;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.2108136394592679;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.18377456783009716;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2822384617928778;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.08929966102904269;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2392236734887534;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.1769426669163321;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.19842551949684784;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.15779120086546872;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.1787988834679305;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0831444928864389;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07488536925393412;  // std dev = 0,218, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15262715194444243;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15403406545268816;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.1379351897031027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21576668622736073;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.07853197061982478;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.16873915176475884;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.13391591273100834;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13501347090528326;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then return -0.008765284351916586;  // std dev = 0,272, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1463739270697182;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996713
   AUC PR    = 0.563909
   CLL	      = -0.139584
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.610169


Total learning time: 1.363 seconds
Total inference time: 3.526 seconds
AUC ROC: 0.996713


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110239
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.826 seconds
Parameter learned model CLL: -0.110239


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(F, H), recursion_proteinclass(H, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(G, F), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true': 'interaction(A, E), interaction(E, C)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 5, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 1], 'true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,false': [0.771, 5, 1], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0], 'false,false,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.114, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(A, I)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.0, 5, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.123, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.022, 0, 2], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 4, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.299, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.018, 5, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.08, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.016, 5, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.001, 0, 2], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'enzyme(A, G)', 'true,false': 'interaction(A, E), interaction(C, E)', 'true': 'interaction(D, A)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(I, A), recursion_proteinclass(I, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.218, 1, 1], 'false,false,true,false': [0.015, 4, 0], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.015, 5, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(A, G), enzyme(A, H)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'true,true,true,true': [0.0, 0, 1], 'false,true': [0.272, 5, 2], 'false,false,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.23437500000000006], 'false,false': [0.0, nan], 'false,true,false': [0.0, -2.7755575615628915e-18], 'true': [0.0, 0.0], 'false,true': [0.0, 0.1388888888888889], 'false': [0.20408163265306126, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.16731715135902556], 'false,false,true': [0.0, 0.09915090450905222], 'false,false': [0.14569112499289297, nan], 'true,false': [0.0, nan], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.14569112499289302]}, {'': [0.0, 0.12917926445119615], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false,true': [0.006479715869899094, -2.7755575615628915e-18], 'false': [0.12066267497923541, 0.0]}, {'': [0.0, 0.0801064431567101], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [nan, 0.007575048554207875], 'true': [0.0, 0.0], 'false,true': [0.007575048554207875, -2.7755575615628915e-18], 'false': [0.07533981474474027, 0.0]}, {'': [0.04186157585051307, 0.05595650511093964], 'false,false': [nan, 0.0], 'true': [0.0002187245321982704, 0.0], 'false,true': [nan, 0.0448247359541786], 'false': [0.0448247359541786, 0.0], 'true,true': [0.0, 0.00024606509872306115], 'false,false,false': [nan, 0.0]}, {'': [2.2392002658050414e-06, 0.03617890597873744], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [nan, 0.003195303527318713], 'true': [0.0, 0.0], 'false,true': [0.003195303527318713, 6.13375981354164e-05], 'false': [0.03119262747898788, 0.0]}, {'': [1.1149751278569098e-06, 0.025303228435606083], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.0, 0.0], 'true': [1.1149751278569098e-06, nan], 'false,true': [0.0024237846035784286, 5.245359086428758e-05], 'false': [0.021930236122037056, 0.0]}, {'': [0.00011537823874904762, 0.017539200076997136], 'false,false,true': [0.0, 5.3113892093637274e-05], 'false,false': [0.011020784300223196, 0.02366126153538049], 'true,false': [0.0, nan], 'true': [0.0, 0.0], 'false': [0.0, 0.016909912563981697], 'true,true': [0.0, nan], 'false,false,false': [nan, 0.02366126153538049]}, {'': [4.948514049224473e-07, 0.01537695136142559], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.0, 0.0], 'true': [0.0, 0.0], 'false,true': [0.0015144354628014028, 4.6074444384987256e-05], 'false': [0.013775898000129126, 0.0]}, {'': [3.011584864820449e-07, 0.011912648497101832], 'true,true,true': [0.0, nan], 'false,false': [nan, 0.0], 'true': [0.0, 0.0], 'false': [0.0106059335601934, 0.0], 'true,true': [0.0, nan], 'false,false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true,false;interaction(F, H), recursion_proteinclass(H, B).;true;true
0;false,true;interaction(G, F), interaction(G, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;enzyme(A, D), interaction(A, E).;true;true
1;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(F, A).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
4;false;interaction(A, F), interaction(F, G).;true;true
4;true,true;interaction(A, D), enzyme(D, E).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;false;interaction(E, A).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A).;true;true
7;false,false;enzyme(A, G).;true;true
7;false;interaction(F, A), interaction(A, F).;true;true
7;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D).;true;true
8;false;interaction(E, A).;true;true
8;false,true,true;interaction(E, G), interaction(G, A).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;enzyme(A, D), enzyme(C, D).;true;true
9;false;interaction(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then return 0.11401028548544434;  // std dev = 0,292, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.08869480599064038;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.29639738602405064;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.08178639505352005;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.23850196552411718;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1979094339073446;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.07661618794892977;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.052145803654992814;  // std dev = 0,177, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16962462119173982;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.07237822780698273;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1683563136939754;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then return -0.06672347251551736;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.06986929357307188;  // std dev = 0,173, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.14608066647661733;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.92924
   AUC PR    = 0.219792
   CLL	      = -0.441499
   Precision = 0.029013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.05639


Total learning time: 1.894 seconds
Total inference time: 7.236 seconds
AUC ROC: 0.92924


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101392
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.875 seconds
Refined model CLL: -0.101392


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.92924
   AUC PR    = 0.219792
   CLL	      = -0.441499
   Precision = 0.029013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.05639


Total learning time: 4.958 seconds
Total inference time: 7.236 seconds
AUC ROC: 0.92924
Total revision time: 4.958
Best scored revision CLL: -0.101392


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:34:31
{'CLL': -0.441499, 'AUC ROC': 0.92924, 'F1': 0.05639, 'Recall': 1.0, 'Precision': [0.029013, 0.5], 'parameter_5': {'CLL': -0.139584, 'AUC ROC': 0.996713, 'F1': 0.610169, 'Recall': 0.782609, 'Precision': [0.5, 0.5], 'Inference time': 3.526, 'Learning time': 1.363, 'AUC PR': 0.563909}, 'Inference time': 7.236, 'Learning time': 4.958, 'AUC PR': 0.219792}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.13347206006746834;  // std dev = 1,099, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.5666721089828417;  // std dev = 0,849, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return 0.49079330618265404;  // std dev = 0,864, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.09574189861483058;  // std dev = 1,045, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.05238739011248816;  // std dev = 1,095, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.4252041420167195;  // std dev = 0,723, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.3501613962404347;  // std dev = 0,849, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.027636956058967117;  // std dev = 0,956, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return -0.014389268272758576;  // std dev = 0,994, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.3207288143681492;  // std dev = 0,723, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.29084037746682206;  // std dev = 0,631, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(A, E) )
%   | then return 0.17801442760951702;  // std dev = 0,778, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.12438429093126535;  // std dev = 0,572, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return -0.03894029039246161;  // std dev = 0,951, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.23003039290345953;  // std dev = 0,663, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.2114153071824756;  // std dev = 0,828, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.05424026050739417;  // std dev = 0,770, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return -0.06152195247996036;  // std dev = 0,994, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.1887401862067572;  // std dev = 0,497, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.49996
   AUC PR    = 0.00725
   CLL	      = -0.927496
   Precision = 0.007253 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.014358


Total learning time: 1.776 seconds
Total inference time: 1.836 seconds
AUC ROC: 0.49996


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:34:35
{'CLL': -0.927496, 'AUC ROC': 0.49996, 'F1': 0.014358, 'Recall': 0.706522, 'Precision': [0.007253, 0.5], 'Inference time': 1.836, 'Learning time': 1.776, 'AUC PR': 0.00725}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.499939
   AUC PR    = 0.007251
   CLL	      = -0.238319
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.864 seconds
Total inference time: 1.413 seconds
AUC ROC: 0.499939


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:34:37
{'CLL': -0.238319, 'AUC ROC': 0.499939, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.413, 'Learning time': 0.864, 'AUC PR': 0.007251}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.15828702057354846;  // std dev = 1,609, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.5537892954632088;  // std dev = 0,879, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.14386360449062538;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.42736067125578486;  // std dev = 0,874, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.12703557395337992;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.31951252868486807;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0991782194741483;  // std dev = 0,936, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10355483672236634;  // std dev = 0,307, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.015277501434236599;  // std dev = 0,717, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2554002512043979;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.5091412791657108;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.26601097641872173;  // std dev = 0,826, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.12270830592476073;  // std dev = 0,011, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2985824593706914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20983824020342917;  // std dev = 0,000114, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.26587221548791545;  // std dev = 0,145, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20625740283639246;  // std dev = 0,827, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.11009976881856205;  // std dev = 0,010, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.24000726791825433;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.1770847629366874;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.19898552539119396;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.16656528548543348;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2502853888198775;  // std dev = 0,103, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.10092421061202696;  // std dev = 0,000344, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.029659929775878967;  // std dev = 0,924, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15273495600498999;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1436205538470695;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.2440659601560918;  // std dev = 0,181, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03249659802520225;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09734327491889966;  // std dev = 0,017, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.16915434553056907;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.13400008024696652;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.12684365866502167;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then return 0.01701391041936901;  // std dev = 0,941, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.14669182564790406;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996583
   AUC PR    = 0.559727
   CLL	      = -0.151534
   Precision = 0.493151 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.605042


Total learning time: 1.473 seconds
Total inference time: 3.517 seconds
AUC ROC: 0.996583


Results scoring model
   AUC ROC   = 0.995
   AUC PR    = 0.995455
   CLL	      = -0.205329
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.797 seconds
Parameter learned model CLL: -0.205329


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(F, H), recursion_proteinclass(H, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(G, F), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true': 'interaction(A, E), interaction(E, C)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 9, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.816, 1, 2], 'true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,false': [1.609, 10, 5], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 9, 0], 'false,false,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.879, 1, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(A, I)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.0, 9, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.874, 1, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.001, 0, 3], 'false,false,true': [0.0, 0, 0], 'true,false': [0.936, 7, 4], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.717, 2, 1], 'false,true,false': [0.307, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.011, 9, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.826, 1, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.145, 0, 3], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.01, 9, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.000114, 0, 2], 'false,true,true,false': [0.827, 1, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'enzyme(A, G)', 'true,false': 'interaction(A, E), interaction(C, E)', 'true': 'interaction(D, A)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(I, A), recursion_proteinclass(I, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.103, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 2], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.924, 6, 4], 'false,false,true,false': [0.000344, 4, 0], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.181, 0, 5], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.017, 9, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.765, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(A, G), enzyme(A, H)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'true,true,true,true': [0.0, 0, 1], 'false,true': [0.941, 10, 7], 'false,false,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2469135802469136], 'false,false': [0.0, nan], 'false,true,false': [0.22222222222222224, -9.25185853854297e-18], 'true': [0.0, 0.0], 'false,true': [0.0, 0.13888888888888892], 'false': [0.24221453287197234, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.18753502273422604], 'false,false,true': [0.0, 0.1725536662545693], 'false,false': [0.1849449476805727, nan], 'true,false': [0.0, nan], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.1849449476805728]}, {'': [0.0, 0.1646912290608061], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false,true': [0.0966376771318267, -3.0839528461809902e-18], 'false': [0.1667354084586021, 0.0]}, {'': [0.0, 0.11893993382466439], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [nan, 0.09539850420312485], 'true': [0.0, 0.0], 'false,true': [0.09539850420312485, 0.0], 'false': [0.12146633472031304, 0.0]}, {'': [0.06796875724967748, 0.12515225912869435], 'false,false': [nan, 0.17150053725626746], 'true': [8.090802028903887e-07, 0.0797031952413027], 'false,true': [nan, 0.047157167182275535], 'false': [0.047157167182275535, 0.17150053725626746], 'true,true': [0.0, 7.191824025568986e-07], 'false,false,false': [nan, 0.17150053725626746]}, {'': [1.29969843915001e-08, 0.08471653449017849], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [0.0, 0.09738387454854507], 'true': [0.0, 0.0], 'false,true': [0.09167630286742844, 1.4161188543751787e-05], 'false': [0.08691075465351822, 0.0]}, {'': [6.484206518941882e-09, 0.06844406992596498], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.006977989959189125, 0.13680798386312637], 'true': [6.484206518941882e-09, nan], 'false,true': [0.08895468752902713, 1.1704821152446692e-05], 'false': [0.07044955963796473, 0.0]}, {'': [0.00011991084902217286, 0.0591857917037317], 'false,false,true': [0.005337622833317429, 2.9622349557653638e-08], 'false,false': [0.029189934633365246, 0.08536861737503217], 'true,false': [0.0, nan], 'true': [0.0, 0.0], 'false': [0.0, 0.06434441656550023], 'true,true': [0.0, nan], 'false,false,false': [nan, 0.08536861737503217]}, {'': [2.0768081674074623e-05, 0.05626665036089619], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.006581472384424192, 0.19514750676682568], 'true': [0.0, 0.0], 'false,true': [0.08778473410418526, 3.093052890647109e-05], 'false': [0.058437691538795196, 0.0]}, {'': [1.2803592464631641e-05, 0.05010496602257706], 'true,true,true': [0.0, nan], 'false,false': [nan, 0.0], 'true': [0.0, 0.0], 'false': [0.05211807464852497, 0.0], 'true,true': [0.0, nan], 'false,false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true,false;interaction(F, H), recursion_proteinclass(H, B).;true;true
0;false,true;interaction(G, F), interaction(G, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;enzyme(A, D), interaction(A, E).;true;true
1;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(F, A).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
4;true,true;interaction(A, D), enzyme(D, E).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D).;true;true
5;false;interaction(E, A).;true;true
5;false,true,true;enzyme(A, G).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;false;interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A).;true;true
7;false,false;enzyme(A, G).;true;true
7;false;interaction(F, A), interaction(A, F).;true;true
7;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D).;true;true
8;false;interaction(E, A).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;enzyme(A, D), enzyme(C, D).;true;true
9;false;interaction(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.5237827813672032;  // std dev = 0,751, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.42757709712051506;  // std dev = 0,792, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.21252258176734698;  // std dev = 0,926, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.6469683296836232;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3419792712226471;  // std dev = 0,788, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.15067349426876447;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12609108089809754;  // std dev = 0,075, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.49065770514218326;  // std dev = 0,087, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2635098279230946;  // std dev = 0,786, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.1083566105977377;  // std dev = 0,028, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1282801191365673;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.37513807957453355;  // std dev = 0,125, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.07297251809722076;  // std dev = 0,236, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return 0.04048325809830498;  // std dev = 0,794, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.24496653788570666;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.3871763502315214;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2588888913892585;  // std dev = 0,798, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.10409363589291568;  // std dev = 0,024, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12155399575585586;  // std dev = 0,060, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.31195707552497687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2061397560488683;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.27723960345791204;  // std dev = 0,090, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17525445767755582;  // std dev = 0,789, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.09479149321156019;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1092351649161204;  // std dev = 0,054, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2491889268684928;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17762437115007335;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20552209508736918;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.21608561821660233;  // std dev = 0,074, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.20829923050766702;  // std dev = 0,052, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.08697454840072298;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.26618362540176926;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08732469906179094;  // std dev = 0,711, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15314418520056516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.14368117638546996;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.14422837708201597;  // std dev = 0,273, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.08031957880810735;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09161866211390582;  // std dev = 0,047, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.17398358021819993;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.1343194816503379;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.12689153245883944;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.1941878228586658;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.10499205880747163;  // std dev = 0,234, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07736430534061912;  // std dev = 0,709, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else return 0.15037827040831875;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.902598
   AUC PR    = 0.178981
   CLL	      = -0.429922
   Precision = 0.02812 at threshold = 0.5
   Recall    = 0.967391
   F1        = 0.054652


Total learning time: 4.665 seconds
Total inference time: 12.242 seconds
AUC ROC: 0.902598


Results scoring model
   AUC ROC   = 0.995
   AUC PR    = 0.995455
   CLL	      = -0.177808
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 1.203 seconds
Refined model CLL: -0.177808


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.902598
   AUC PR    = 0.178981
   CLL	      = -0.429922
   Precision = 0.02812 at threshold = 0.5
   Recall    = 0.967391
   F1        = 0.054652


Total learning time: 8.138 seconds
Total inference time: 12.242 seconds
AUC ROC: 0.902598
Total revision time: 8.138
Best scored revision CLL: -0.177808


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:35:02
{'CLL': -0.429922, 'AUC ROC': 0.902598, 'F1': 0.054652, 'Recall': 0.967391, 'Precision': [0.02812, 0.5], 'Inference time': 12.242, 'Learning time': 8.138, 'AUC PR': 0.178981, 'parameter_10': {'CLL': -0.151534, 'AUC ROC': 0.996583, 'F1': 0.605042, 'Recall': 0.782609, 'Precision': [0.493151, 0.5], 'Inference time': 3.517, 'Learning time': 1.473, 'AUC PR': 0.559727}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.7275682260387666;  // std dev = 0,028, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then return 0.5518526675222027;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.22373365448410584;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.5635505195233433;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then return 0.4356805498648179;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.1888683221574974;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return 0.35092043568173414;  // std dev = 0,902, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return 0.41356001787188545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.15570029437174368;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.4184106170447315;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D) )
%   | then return 0.3596110899130853;  // std dev = 0,102, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5531132942490788;  // std dev = 0,357, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3449382995100864;  // std dev = 0,245, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.32174030310426704;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D) )
%   | then return 0.28261906162051104;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.4330830986560005;  // std dev = 0,349, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.27612284650300656;  // std dev = 0,225, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.22961108478339198;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return 0.25611854581110677;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.3426161058001983;  // std dev = 0,314, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22741383793961123;  // std dev = 0,203, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.21057226757106887;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D) )
%   | then return 0.1919301971769677;  // std dev = 0,070, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.27698786622798555;  // std dev = 0,274, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19192185755486446;  // std dev = 0,183, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.17778549858087925;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D) )
%   | then return 0.1641712625161813;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2292882868563;  // std dev = 0,238, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1652579295970182;  // std dev = 0,165, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.14304758806303672;  // std dev = 0,056, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return 0.15332674700908488;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( enzyme(A, G), interaction(H, E) )
%   | | | then return -0.005280222548419339;  // std dev = 0,144, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07940899244256909;  // std dev = 0,246, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.03749045717559573;  // std dev = 0,451, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.58542
   AUC PR    = 0.010619
   CLL	      = -0.945943
   Precision = 0.009236 at threshold = 0.5
   Recall    = 0.641304
   F1        = 0.01821


Total learning time: 2.966 seconds
Total inference time: 2.394 seconds
AUC ROC: 0.58542


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:35:08
{'CLL': -0.945943, 'AUC ROC': 0.58542, 'F1': 0.01821, 'Recall': 0.641304, 'Precision': [0.009236, 0.5], 'Inference time': 2.394, 'Learning time': 2.966, 'AUC PR': 0.010619}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.499938
   AUC PR    = 0.007252
   CLL	      = -0.247496
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.155 seconds
Total inference time: 1.52 seconds
AUC ROC: 0.499938


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:35:10
{'CLL': -0.247496, 'AUC ROC': 0.499938, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.52, 'Learning time': 1.155, 'AUC PR': 0.007252}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16876557505756673;  // std dev = 2,112, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.6251273759207842;  // std dev = 0,956, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.16731191529403772;  // std dev = 0,159, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4851937833223056;  // std dev = 0,959, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.145536005942602;  // std dev = 0,143, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.335614623206701;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.06688781449565494;  // std dev = 1,208, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10512014572877776;  // std dev = 0,305, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1505015514312901;  // std dev = 0,914, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.27128011803157287;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25235017920242864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.438851753058264;  // std dev = 0,015, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.30796954543603755;  // std dev = 0,962, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.13705623757633092;  // std dev = 0,134, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2982547385713108;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.2074312052026509;  // std dev = 0,000468, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.22826620899845834;  // std dev = 0,033, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.2621338777177666;  // std dev = 0,101, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2522034506451379;  // std dev = 0,962, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.12178950215809535;  // std dev = 0,122, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.23978159979278668;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.175097022962311;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.1988242842881245;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.06392449288277006;  // std dev = 0,282, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.24560420797319446;  // std dev = 0,086, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09378926303133221;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.19066167134931072;  // std dev = 0,029, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.01861602646955121;  // std dev = 1,124, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15909262960353057;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14288860110163304;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.2853528615365216;  // std dev = 0,200, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07109107262427275;  // std dev = 0,869, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.10908905094967246;  // std dev = 0,123, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.16903482377199075;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.1319169088571338;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13709445340954104;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then return 0.01178391811458166;  // std dev = 1,128, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.14660032790117972;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996606
   AUC PR    = 0.528386
   CLL	      = -0.133478
   Precision = 0.493151 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.605042


Total learning time: 1.687 seconds
Total inference time: 3.82 seconds
AUC ROC: 0.996606


Results scoring model
   AUC ROC   = 0.977778
   AUC PR    = 0.974852
   CLL	      = -0.205267
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.901 seconds
Parameter learned model CLL: -0.205267


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(F, H), recursion_proteinclass(H, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(G, F), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true': 'interaction(A, E), interaction(E, C)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 11, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [1.414, 3, 6], 'false,true,false,true': [0.894, 1, 4], 'true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,false': [2.112, 15, 8], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.159, 14, 0], 'false,false,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false,false': [1.05e-08, 0, 3], 'false,true,true': [0.956, 1, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(A, I)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,false': [0.143, 14, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.959, 1, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.03, 0, 4], 'false,false,true': [0.0, 0, 0], 'true,false': [1.208, 12, 6], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.914, 2, 3], 'false,true,false': [0.305, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.015, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.134, 14, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.043, 0, 3], 'false,true,true,false': [0.962, 1, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.101, 0, 3], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.033, 0, 2], 'false,true,false': [0.122, 14, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.000468, 0, 2], 'false,true,true,false': [0.962, 1, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'enzyme(A, G)', 'true,false': 'interaction(A, E), interaction(C, E)', 'true': 'interaction(D, A)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(I, A), recursion_proteinclass(I, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.086, 0, 3], 'false,false,false,true': [0.029, 0, 2], 'false,true': [0.282, 1, 2], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [1.124, 10, 6], 'false,false,true,false': [0.003, 4, 0], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.2, 0, 6], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.123, 14, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.028, 0, 3], 'false,true,true,false': [0.869, 1, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(A, G), enzyme(A, H)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.027, 0, 3], 'false,false,false,true': [0.0, 0, 1], 'true,true,true,true': [0.0, 0, 1], 'false,true': [1.128, 15, 10], 'false,false,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24408284023668642], 'false,false': [0.0, nan], 'false,true,false': [0.15999999999999986, -1.0092936587501423e-17], 'true': [0.0, 1.4802973661668753e-16], 'false,true': [0.22222222222222218, 0.1875], 'false': [0.24000000000000005, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.20749566245825937], 'false,false,true': [0.0, 0.19399038835241172], 'false,false': [0.2061154279468228, nan], 'true,false': [0.0, 0.0], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.20611542794682286]}, {'': [0.0, 0.19004600646761027], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'true,false': [nan, 3.700743415417188e-17], 'true': [0.0, 3.700743415417188e-17], 'false,true': [0.0830246139162162, 0.0017994166202682158], 'false': [0.19226785488680767, 0.0]}, {'': [0.0, 0.13344956472753922], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [nan, 0.08366660468198228], 'true': [0.0, -3.700743415417188e-17], 'false,true': [0.08366660468198228, 0.001456681353996855], 'false': [0.1356519121434109, 0.0]}, {'': [0.07549578041249845, 0.13300505279923752], 'false,false': [nan, 0.16702674066177847], 'true': [0.00021320902453794143, 0.08105519900451935], 'false,true': [nan, 0.0464797817260738], 'false': [0.0464797817260738, 0.16702674066177847], 'true,true': [0.0, 0.0002220927338936335], 'false,false,false': [nan, 0.16702674066177847]}, {'': [0.0005285529010850276, 0.09139792930372116], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [0.00010596293934780898, 0.10286378266503779], 'true': [0.0006151515554279063, 0.0], 'false,true': [0.08672882982976536, 0.0012826840567438816], 'false': [0.09303637308972065, 0.0]}, {'': [0.0003871191603299559, 0.07163412957931833], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.003398211038578708, 0.11577913098201319], 'true': [1.0958721818887796e-07, 0.0005570800418560617], 'false,true': [0.08514934885830193, 0.0010603796840674279], 'false': [0.07302463046773226, 0.0]}, {'': [0.0001407457325058592, 0.05730439563643585], 'false,false,true': [0.002481589241443168, 2.0105389672529783e-06], 'false,false': [0.0292739756548448, 0.07320605274905463], 'true,false': [0.0, nan], 'true': [0.0, 0.0], 'false': [0.02652898259365381, 0.06094420674951821], 'true,true': [0.0, nan], 'false,false,false': [0.0004271149113845643, 0.0790145639874198]}, {'': [0.0002393158206233613, 0.05767820099905062], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.006665855517259826, 0.15099179867044055], 'true': [0.00025344512590856627, 0.0], 'false,true': [0.08365073402189828, 0.0010733396655651472], 'false': [0.05914943732883374, 0.0]}, {'': [0.00018277601528186166, 0.04962777619801899], 'true,true,true': [0.0, nan], 'false,false': [nan, 0.0], 'true': [0.0, 0.00023699961181110804], 'false': [0.05091383092487252, 0.0], 'true,true': [0.0, nan], 'false,false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true,false;interaction(F, H), recursion_proteinclass(H, B).;true;true
0;false,true;interaction(G, F), interaction(G, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;enzyme(A, D), interaction(A, E).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;true,false;interaction(C, F), interaction(F, A).;true;true
1;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(F, A).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
4;true,true;interaction(A, D), enzyme(D, E).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D).;true;true
5;false;interaction(E, A).;true;true
5;false,true,true;enzyme(A, G).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, D), interaction(D, A).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
7;false,false;enzyme(A, G).;true;true
7;true;interaction(D, A).;true;true
7;false;interaction(F, A), interaction(A, F).;true;true
7;false,false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D).;true;true
8;false;interaction(E, A).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;enzyme(A, D), enzyme(C, D).;true;true
9;false;interaction(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.433139634815818;  // std dev = 1,126, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.5914709002245615;  // std dev = 0,803, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.45850053539770813;  // std dev = 0,797, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13603882278745993;  // std dev = 0,111, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.6716551170645386;  // std dev = 0,083, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.41114322475723336;  // std dev = 0,856, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.1569838355516606;  // std dev = 0,201, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.13259348779912217;  // std dev = 0,095, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.521111867481556;  // std dev = 0,085, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.29781554454203596;  // std dev = 0,840, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.13745705130717376;  // std dev = 0,141, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12598296768428469;  // std dev = 0,147, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3548632561328475;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.27264308049134456;  // std dev = 0,556, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.011681600311419345;  // std dev = 0,597, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.10972715200807406;  // std dev = 0,076, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.15052348550312397;  // std dev = 0,353, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.27572339811064356;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.248735888606596;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.37700609241382554;  // std dev = 0,010, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2596721136435851;  // std dev = 0,866, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.12213765764659323;  // std dev = 0,118, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11657090825006002;  // std dev = 0,180, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.288839729749921;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.2057860595110661;  // std dev = 0,000828, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.23346282363570975;  // std dev = 0,046, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.2786304602680384;  // std dev = 0,075, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.11469987779373533;  // std dev = 0,834, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.10988070123688959;  // std dev = 0,108, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10550792191485972;  // std dev = 0,166, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.23328297692322397;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17469323322998576;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1941684631364503;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.08890309716775935;  // std dev = 0,325, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.21726726222776335;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0707505621479521;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.19450146872850171;  // std dev = 0,040, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.006856105679732133;  // std dev = 0,997, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.16094268804097175;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1446548100262286;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.21705853181137685;  // std dev = 0,067, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.07678211299547674;  // std dev = 0,828, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.07008857740298953;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1089180979116787;  // std dev = 0,181, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.1655752178766482;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.1314316206154803;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1391830138480602;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then return 0.010651977042876735;  // std dev = 0,208, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else return 0.1439463681507459;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.926242
   AUC PR    = 0.225731
   CLL	      = -0.416957
   Precision = 0.029022 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.056407


Total learning time: 6.221 seconds
Total inference time: 11.559 seconds
AUC ROC: 0.926242


Results scoring model
   AUC ROC   = 0.995556
   AUC PR    = 0.995618
   CLL	      = -0.183905
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.196 seconds
Refined model CLL: -0.183905


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.926242
   AUC PR    = 0.225731
   CLL	      = -0.416957
   Precision = 0.029022 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.056407


Total learning time: 10.005 seconds
Total inference time: 11.559 seconds
AUC ROC: 0.926242
Total revision time: 10.005
Best scored revision CLL: -0.183905


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:35:37
{'CLL': -0.416957, 'AUC ROC': 0.926242, 'F1': 0.056407, 'Recall': 1.0, 'Precision': [0.029022, 0.5], 'parameter_15': {'CLL': -0.133478, 'AUC ROC': 0.996606, 'F1': 0.605042, 'Recall': 0.782609, 'Precision': [0.493151, 0.5], 'Inference time': 3.82, 'Learning time': 1.687, 'AUC PR': 0.528386}, 'Inference time': 11.559, 'Learning time': 10.005, 'AUC PR': 0.225731}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( complex(A, E) )
%   | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.1286281315580171;  // std dev = 0,724, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.7357208520710393;  // std dev = 0,105, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( complex(A, F) )
%   | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.10730255867486949;  // std dev = 0,717, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( complex(A, F) )
%   | | then return 0.6026763512907366;  // std dev = 0,126, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5513508584413074;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, G) )
%   | then return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.054239369720251784;  // std dev = 0,628, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, E), phenotype(E, F) )
%   | | then return 0.49952761520056926;  // std dev = 0,208, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4083421646049532;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( complex(A, I) )
%   | | then return 0.5651786576185065;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3136916014290807;  // std dev = 0,464, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.212671333785722;  // std dev = 0,272, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3816314911543111;  // std dev = 0,200, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return 0.2259966710890699;  // std dev = 0,688, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, E) )
%   | | then return 0.17321355945150727;  // std dev = 0,699, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return -0.09090562504791815;  // std dev = 0,011, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.17712027235201971;  // std dev = 0,535, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return -0.008033644394924008;  // std dev = 0,572, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2519837343755852;  // std dev = 0,028, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.35151393933975084;  // std dev = 0,192, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( complex(A, H) )
%   | | then return 0.37458175121733994;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.09159277873307574;  // std dev = 0,571, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.08532400727519994;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.19739637246183897;  // std dev = 0,295, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2745792921833896;  // std dev = 0,219, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(D, D) )
%   | | then return 0.26541221034097917;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F), interaction(G, D) )
%   | | | then return 0.15492595694890568;  // std dev = 0,485, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.02248631042645038;  // std dev = 0,632, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else return -0.07732017163432292;  // std dev = 0,425, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return -0.040425659865460206;  // std dev = 0,520, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, F), complex(F, G) )
%   | | then return 0.250919813362222;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1602546314839015;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( complex(A, J) )
%   | | then return 0.2590892576724562;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06792203725383715;  // std dev = 0,529, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.07727759597037932;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.16376492144115826;  // std dev = 0,255, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return -0.05149677426749357;  // std dev = 0,475, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.14691394883986536;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.24086502173624966;  // std dev = 0,188, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( complex(A, H) )
%   | | then return 0.212727565457164;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, F), phenotype(I, J) )
%   | | | then return -0.04559820014162988;  // std dev = 0,278, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.08879768996816975;  // std dev = 0,441, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.1456017645629435;  // std dev = 0,231, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return -0.04453030637936586;  // std dev = 0,469, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, F), phenotype(F, G) )
%   | | then return 0.20844667125532335;  // std dev = 0,170, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1269618154348384;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(H, H) )
%   | | then return 0.1823570538481838;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.14379699248994565;  // std dev = 0,378, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.08131222315129029;  // std dev = 0,062, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.130657939714022;  // std dev = 0,211, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.536733
   AUC PR    = 0.042753
   CLL	      = -1.072226
   Precision = 0.007501 at threshold = 0.5
   Recall    = 0.630435
   F1        = 0.014826


Total learning time: 4.79 seconds
Total inference time: 2.814 seconds
AUC ROC: 0.536733


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:35:44
{'CLL': -1.072226, 'AUC ROC': 0.536733, 'F1': 0.014826, 'Recall': 0.630435, 'Precision': [0.007501, 0.5], 'Inference time': 2.814, 'Learning time': 4.79, 'AUC PR': 0.042753}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( complex(A, E) )
%   | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.527879
   AUC PR    = 0.00779
   CLL	      = -0.259882
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.322 seconds
Total inference time: 1.798 seconds
AUC ROC: 0.527879


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:35:48
{'CLL': -0.259882, 'AUC ROC': 0.527879, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.798, 'Learning time': 1.322, 'AUC PR': 0.00779}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.3966104735610508;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8027212043484538;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1725294405604522;  // std dev = 2,456, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.6474368974318865;  // std dev = 0,985, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return -0.171017516336126;  // std dev = 0,163, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.501575025947162;  // std dev = 0,994, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return -0.1483183073884216;  // std dev = 0,146, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.34348031931281103;  // std dev = 0,056, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.057997159238331174;  // std dev = 1,411, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10525384605430851;  // std dev = 0,305, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17885713694585056;  // std dev = 0,949, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.26628017025418793;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2508690545055089;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.40786922611357185;  // std dev = 0,021, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3318528170213018;  // std dev = 1,017, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.13830233819814594;  // std dev = 0,135, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2982267560018276;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20627777193056293;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22934638265954804;  // std dev = 0,036, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.25228514752611747;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2685443999428769;  // std dev = 1,010, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.12274299491035522;  // std dev = 0,122, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.23976232941543218;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.1743488473336362;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.1988105141680807;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.019199818160405085;  // std dev = 0,409, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.23237192211702581;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09261565817011826;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.19145515227485754;  // std dev = 0,031, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.04156803518914228;  // std dev = 1,237, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15714264583379464;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1438713159241195;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.2786123675543541;  // std dev = 0,219, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.12637505066884025;  // std dev = 0,934, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.11096331914977177;  // std dev = 0,122, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.16902461562064597;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.13293384823054766;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13598978427264438;  // std dev = 0,029, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then return 0.015022132950207307;  // std dev = 1,247, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1465925126466754;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996825
   AUC PR    = 0.5435
   CLL	      = -0.131112
   Precision = 0.493151 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.605042


Total learning time: 1.767 seconds
Total inference time: 3.938 seconds
AUC ROC: 0.996825


Results scoring model
   AUC ROC   = 0.98125
   AUC PR    = 0.97771
   CLL	      = -0.197793
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.923 seconds
Parameter learned model CLL: -0.197793


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(F, H), recursion_proteinclass(H, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(G, F), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true': 'interaction(A, E), interaction(E, C)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 13, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [1.797, 6, 7], 'false,true,false,true': [0.935, 1, 7], 'true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 3], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,false': [2.456, 20, 11], 'true,false,true': [0.0, 0, 2], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.163, 19, 0], 'false,false,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'true,false,false': [1.05e-08, 0, 3], 'false,true,true': [0.985, 1, 14]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(A, I)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,false': [0.146, 19, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.994, 1, 14]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.056, 0, 6], 'false,false,true': [0.0, 0, 0], 'true,false': [1.411, 17, 8], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.949, 2, 4], 'false,true,false': [0.305, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.021, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.135, 19, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.049, 0, 4], 'false,true,true,false': [1.017, 1, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.087, 0, 4], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.036, 0, 2], 'false,true,false': [0.122, 19, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.003, 0, 3], 'false,true,true,false': [1.01, 1, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'enzyme(A, G)', 'true,false': 'interaction(A, E), interaction(C, E)', 'true': 'interaction(D, A)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(I, A), recursion_proteinclass(I, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.073, 0, 3], 'false,false,false,true': [0.031, 0, 2], 'false,true': [0.409, 3, 3], 'true,true,true': [0.002, 0, 2], 'false,false,false,false': [1.237, 12, 9], 'false,false,true,false': [0.004, 5, 0], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.219, 0, 7], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.122, 19, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.03, 0, 4], 'false,true,true,false': [0.934, 1, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(A, G), enzyme(A, H)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.029, 0, 4], 'false,false,false,true': [0.0, 0, 1], 'true,true,true,true': [0.0, 0, 1], 'false,true': [1.247, 20, 14], 'false,false,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.244897959183673], 'false,false': [0.0, nan], 'false,true,false': [0.10937499999999978, -1.2810265668751807e-17], 'true': [0.0, 0.0], 'false,true': [0.24852071005917156, 0.2222222222222221], 'false': [0.2422145328719718, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.21011007940984386], 'false,false,true': [-1.4802973661668753e-16, 0.19461410455290576], 'false,false': [0.20939224956692196, nan], 'true,false': [0.0, 0.0], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.2093922495669223]}, {'': [-4.4408920985006264e-17, 0.19261983839618554], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'true,false': [nan, 3.700743415417188e-17], 'true': [0.0, 3.700743415417188e-17], 'false,true': [0.06469702720383204, 0.001396834729440989], 'false': [0.19447241602320983, 0.0]}, {'': [4.4408920985006264e-17, 0.1321571903407411], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [nan, 0.06588091449925976], 'true': [0.0, -3.700743415417188e-17], 'false,true': [0.06588091449925981, 0.0011172196413930496], 'false': [0.13381831619936205, 0.0]}, {'': [0.0759659202393296, 0.12515477297044783], 'false,false': [nan, 0.15004461943957262], 'true': [0.0005078236644896166, 0.07966986010340675], 'false,true': [nan, 0.046422150240524644], 'false': [0.046422150240524644, 0.15004461943957262], 'true,true': [0.0, 0.0005184033241664906], 'false,false,false': [nan, 0.15004461943957262]}, {'': [0.0005093062549229588, 0.08703537146423516], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [0.00021285848770502547, 0.07961442162705266], 'true': [0.0005891323209298444, 0.0], 'false,true': [0.06969528367839907, 0.000955536041485338], 'false': [0.08815348106483953, 0.0]}, {'': [0.0003821477578634658, 0.06669739954344946], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.001874263146855959, 0.09276458531693534], 'true': [2.4072377249051424e-06, 0.000632462057492067], 'false,true': [0.06857886378145944, 0.0007837093629545737], 'false': [0.0676081181758766, 0.0]}, {'': [0.00013476211290418724, 0.05273473008574027], 'false,false,true': [0.0017666578252648797, 2.5819780329949803e-06], 'false,false': [0.02541807776626673, 0.06838389865824175], 'true,false': [0.0, nan], 'true': [2.6854545831615784e-06, 0.0], 'false': [0.02783502150425678, 0.05741895703108571], 'true,true': [2.6854545831615784e-06, nan], 'false,false,false': [0.00048471619343365413, 0.07289690938891248]}, {'': [0.0002141115050454251, 0.052556858194131334], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.006835048640214035, 0.10910968528479223], 'true': [0.00023241374179249277, 0.0], 'false,true': [0.06714982034638917, 0.0007872262543912498], 'false': [0.05351071049027053, 0.0]}, {'': [0.00016702101661962289, 0.0448910344165976], 'true,true,true': [0.0, nan], 'false,false': [nan, 0.0], 'true': [0.0, 0.0002069085217558525], 'false': [0.0457167656778773, 0.0], 'true,true': [0.0, nan], 'false,false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true,false;interaction(F, H), recursion_proteinclass(H, B).;true;true
0;false,true;interaction(G, F), interaction(G, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;enzyme(A, D), interaction(A, E).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;true,false;interaction(C, F), interaction(F, A).;true;true
1;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(F, A).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
4;true,true;interaction(A, D), enzyme(D, E).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D).;true;true
5;false;interaction(E, A).;true;true
5;false,true,true;enzyme(A, G).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, D), interaction(D, A).;true;true
6;false;interaction(E, A).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
7;false,false;enzyme(A, G).;true;true
7;true;interaction(D, A).;true;true
7;false;interaction(F, A), interaction(A, F).;true;true
7;false,false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D).;true;true
8;false;interaction(E, A).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;enzyme(A, D), enzyme(C, D).;true;true
9;false;interaction(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5581489350995124;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.09191592468991167;  // std dev = 0,753, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4906009097352605;  // std dev = 1,599, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.10850393711698486;  // std dev = 1,337, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.1451784999133296;  // std dev = 0,088, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.6999264288886947;  // std dev = 0,115, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.44020411143265975;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.23332446706305296;  // std dev = 0,131, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1410998477384054;  // std dev = 0,110, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.5379211413522222;  // std dev = 0,138, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.33395914926682285;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.11153525917570704;  // std dev = 0,026, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.14736391076584274;  // std dev = 0,172, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.35070365190402414;  // std dev = 0,073, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(F, F), phenotype(F, H) )
%   | | | then return 0.4272970473478929;  // std dev = 0,093, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.007653886634859643;  // std dev = 0,796, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.16312915726003774;  // std dev = 0,110, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.005227575275757762;  // std dev = 0,391, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.1724048896918039;  // std dev = 0,353, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.26914544941958096;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2495139907697651;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.4224969016649693;  // std dev = 0,020, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.27880245334363446;  // std dev = 0,924, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.16457999169857387;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11042874638989401;  // std dev = 0,081, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.2843658909887088;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20525555632448197;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.23457644188907317;  // std dev = 0,045, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.2692416786925511;  // std dev = 0,078, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21917034046716674;  // std dev = 0,929, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.09061415818095743;  // std dev = 0,027, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11446731676306099;  // std dev = 0,113, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.23018389142355788;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17356950165102408;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19193944934958973;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.05766086501079689;  // std dev = 0,349, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.24010184247214905;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0873073244097589;  // std dev = 0,024, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.19529419299267298;  // std dev = 0,040, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.023823933667611354;  // std dev = 1,118, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15830202618359687;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1423292303796495;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.22534094380815706;  // std dev = 0,124, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.07700670549161392;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.08390831397310575;  // std dev = 0,026, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10719799969317532;  // std dev = 0,106, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.16391305286205105;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.13267781753676555;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13666814717839576;  // std dev = 0,036, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.18867751557872048;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 5.530756875757788E-6;  // std dev = 1,048, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else return -0.04191824013520098;  // std dev = 0,268, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.1426674430182927;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.94531
   AUC PR    = 0.219072
   CLL	      = -0.393961
   Precision = 0.029022 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.056407


Total learning time: 8.788 seconds
Total inference time: 12.169 seconds
AUC ROC: 0.94531


Results scoring model
   AUC ROC   = 0.99625
   AUC PR    = 0.996206
   CLL	      = -0.175237
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 1.326 seconds
Refined model CLL: -0.175237


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.94531
   AUC PR    = 0.219072
   CLL	      = -0.393961
   Precision = 0.029022 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.056407


Total learning time: 12.804 seconds
Total inference time: 12.169 seconds
AUC ROC: 0.94531
Total revision time: 12.804
Best scored revision CLL: -0.175237


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:36:17
{'CLL': -0.393961, 'AUC ROC': 0.94531, 'F1': 0.056407, 'Recall': 1.0, 'Precision': [0.029022, 0.5], 'Inference time': 12.169, 'Learning time': 12.804, 'AUC PR': 0.219072, 'parameter_20': {'CLL': -0.131112, 'AUC ROC': 0.996825, 'F1': 0.605042, 'Recall': 0.782609, 'Precision': [0.493151, 0.5], 'Inference time': 3.938, 'Learning time': 1.767, 'AUC PR': 0.5435}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), interaction(E, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, F) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1914822684328457;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), interaction(E, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, F) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.15306838868004846;  // std dev = 1,798, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.4332054912315484;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), interaction(E, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, F) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.36652327614763613;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12859174631669773;  // std dev = 1,793, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, D), phenotype(D, F) )
%   | | then return 0.6254151991202417;  // std dev = 0,240, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.054846712850207625;  // std dev = 1,565, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else return 0.3403472370778269;  // std dev = 0,438, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, D), phenotype(D, F) )
%   | | then return 0.4810890363508954;  // std dev = 0,235, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(E, E), interaction(D, E) )
%   | | | then return -0.2092907073069441;  // std dev = 0,212, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.09380835767578774;  // std dev = 1,520, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return 0.27244642889417503;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), phenotype(F, G) )
%   | | then if ( enzyme(F, H), enzyme(E, I) )
%   | | | then return -0.07033457466332213;  // std dev = 0,616, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.22724045608715715;  // std dev = 1,409, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else return -0.16674648970478897;  // std dev = 0,137, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2133392402860385;  // std dev = 0,430, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.39505192921899923;  // std dev = 0,383, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.22137771826353403;  // std dev = 0,180, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09061328006545889;  // std dev = 0,047, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.29544914354184076;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20539204791120086;  // std dev = 0,058, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, H), phenotype(H, J) )
%   | | | then return 0.37484540313166875;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.05475614736864239;  // std dev = 1,243, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return 0.15492436415934743;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16731456412494933;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then return -0.042911450176716846;  // std dev = 0,682, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then return 0.2101866721148616;  // std dev = 0,101, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.0032205469849981047;  // std dev = 1,362, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.166128238094323;  // std dev = 1,129, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14530494049959844;  // std dev = 0,025, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.312433845084587;  // std dev = 0,216, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.19829025801931877;  // std dev = 0,380, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, H), enzyme(I, J) )
%   | | | then return 0.155420121102229;  // std dev = 1,267, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.11886625565459172;  // std dev = 0,463, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.1342997112368292;  // std dev = 0,903, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1281884587638638;  // std dev = 0,023, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.25354240291435093;  // std dev = 0,191, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.17277263836379372;  // std dev = 0,350, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then return -0.01905448652437383;  // std dev = 0,651, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.03661888144380988;  // std dev = 1,293, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.16443208986790409;  // std dev = 0,842, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.646985
   AUC PR    = 0.111701
   CLL	      = -0.794346
   Precision = 0.00928 at threshold = 0.5
   Recall    = 0.586957
   F1        = 0.018271


Total learning time: 8.001 seconds
Total inference time: 2.789 seconds
AUC ROC: 0.646985


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:36:28
{'CLL': -0.794346, 'AUC ROC': 0.646985, 'F1': 0.018271, 'Recall': 0.586957, 'Precision': [0.00928, 0.5], 'Inference time': 2.789, 'Learning time': 8.001, 'AUC PR': 0.111701}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), interaction(E, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, F) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1914822684328457;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */


Results
   AUC ROC   = 0.561614
   AUC PR    = 0.008947
   CLL	      = -0.242037
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.408 seconds
Total inference time: 1.896 seconds
AUC ROC: 0.561614


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:36:32
{'CLL': -0.242037, 'AUC ROC': 0.561614, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.896, 'Learning time': 1.408, 'AUC PR': 0.008947}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.3966104735610508;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7271035802978392;  // std dev = 0,011, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8027212043484538;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18965033826475466;  // std dev = 2,768, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.647385387975602;  // std dev = 0,999, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.16808740613829778;  // std dev = 0,172, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5534814974072537;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.41199727997635727;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5031775652635503;  // std dev = 1,005, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return -0.14605102964056335;  // std dev = 0,155, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4161170332298316;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3433003514368594;  // std dev = 0,055, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07228609988647307;  // std dev = 1,618, 34,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.17477588380874862;  // std dev = 0,352, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1648689164422368;  // std dev = 0,945, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.26553751625260347;  // std dev = 0,046, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.25090287806368183;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.3991446506985344;  // std dev = 0,020, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3193812471707019;  // std dev = 1,019, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.13804680126899185;  // std dev = 0,145, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.28300040848299046;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20637652818208221;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22814059483274624;  // std dev = 0,034, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.2632924599644562;  // std dev = 0,111, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2678962155133005;  // std dev = 1,014, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.12253056499452003;  // std dev = 0,132, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2292365038815235;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.17445441817692542;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1787026904199871;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.19125688784219574;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.016843473616288407;  // std dev = 0,414, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2433235211101212;  // std dev = 0,076, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.096098370818795;  // std dev = 0,009, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.19057269247980074;  // std dev = 0,029, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.024786596975881016;  // std dev = 1,245, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.156848905769674;  // std dev = 0,029, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.14253342720893003;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.27837185960601435;  // std dev = 0,217, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1506003984351647;  // std dev = 0,944, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.10893532203307842;  // std dev = 0,133, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.16340330086841837;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.1330297835954356;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13547008086244777;  // std dev = 0,028, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then return 0.019303582696688828;  // std dev = 1,314, 44,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.14227471931066904;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996879
   AUC PR    = 0.569116
   CLL	      = -0.135681
   Precision = 0.493151 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.605042


Total learning time: 1.9 seconds
Total inference time: 3.593 seconds
AUC ROC: 0.996879


Results scoring model
   AUC ROC   = 0.988
   AUC PR    = 0.986304
   CLL	      = -0.18596
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 0.923 seconds
Parameter learned model CLL: -0.18596


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(F, H), recursion_proteinclass(H, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(G, F), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true': 'interaction(A, E), interaction(E, C)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 18, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [1.797, 6, 7], 'false,true,false,true': [0.961, 1, 12], 'true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 3], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.011, 0, 2], 'false,false,true,false': [2.768, 25, 15], 'true,false,true': [0.0, 0, 2], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.172, 24, 0], 'false,false,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'true,false,false': [1.05e-08, 0, 3], 'false,true,true': [0.999, 1, 19]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(A, I)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,false': [0.155, 24, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 2], 'false,true,true,false': [1.005, 1, 18]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'false,false': 'interaction(A, H), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.055, 0, 6], 'false,false,true': [0.0, 0, 0], 'true,false': [1.618, 22, 12], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.945, 2, 4], 'false,true,false': [0.352, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.02, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.145, 24, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.046, 0, 4], 'false,true,true,false': [1.019, 1, 13]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.111, 0, 7], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.034, 0, 2], 'false,true,false': [0.132, 24, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.003, 0, 3], 'false,true,true,false': [1.014, 1, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'enzyme(A, G)', 'true,false': 'interaction(A, E), interaction(C, E)', 'true': 'interaction(D, A)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(I, A), recursion_proteinclass(I, B)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.076, 0, 7], 'false,false,false,true': [0.029, 0, 2], 'false,true': [0.414, 3, 3], 'true,true,true': [0.002, 0, 2], 'false,false,false,false': [1.245, 14, 9], 'false,false,true,false': [0.009, 8, 0], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.217, 0, 7], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.133, 24, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.029, 0, 4], 'false,true,true,false': [0.944, 1, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(A, G), enzyme(A, H)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.028, 0, 4], 'false,false,false,true': [0.0, 0, 1], 'true,true,true,true': [0.0, 0, 1], 'false,true': [1.314, 25, 19], 'false,false,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24691358024691315], 'false,false': [0.0, nan], 'false,true,false': [0.07100591715976314, -3.0839528461809902e-18], 'true': [0.0, 0.0], 'false,true': [0.24852071005917156, 0.23725286160249745], 'false': [0.24535123966942105, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.20401650899402993], 'false,false,true': [-1.4802973661668753e-16, 0.19160149855557346], 'false,false': [0.20262697887315276, nan], 'true,false': [0.0, 0.0], 'true': [0.0, 0.0], 'false,true': [nan, 5.821946503414832e-05], 'false': [5.821946503414832e-05, 0.20262697887315326]}, {'': [-4.4408920985006264e-17, 0.18671820025997343], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'true,false': [nan, 3.700743415417188e-17], 'true': [0.0, 3.700743415417188e-17], 'false,true': [0.04988512356601511, 0.00123841084356822], 'false': [0.18822556404962212, 0.0]}, {'': [4.4408920985006264e-17, 0.12548349168525783], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [0.0, 0.05317486704966542], 'true': [0.0, -3.700743415417188e-17], 'false,true': [0.05091103130737249, 0.0009960790725727687], 'false': [0.12672573542778826, 0.0]}, {'': [0.07411622552460122, 0.11290853631200755], 'false,false': [nan, 0.14871025048490202], 'true': [0.000499827453510769, 0.07702936350264969], 'false,true': [nan, 0.0412396759646179], 'false': [0.0412396759646179, 0.14871025048490202], 'true,true': [0.0, 0.0005102405254588938], 'false,false,false': [nan, 0.14871025048490202]}, {'': [0.00045560396696765483, 0.08118627047415759], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [6.757203315258901e-05, 0.07410598154501799], 'true': [0.0005266704317254262, 0.0], 'false,true': [0.053230520805350554, 0.0008787256692465278], 'false': [0.08212242470361059, 0.0]}, {'': [0.0003415314215807708, 0.06081010256470123], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.0017547056230832905, 0.07904350639171814], 'true': [2.3432773522772767e-06, 0.0005661088796187902], 'false,true': [0.051997247886268375, 0.0007227196577603937], 'false': [0.06151133992325746, 0.0]}, {'': [4.8719690856728615e-05, 0.048263936182600144], 'false,false,true': [0.0008175204285422257, 9.218410280356637e-06], 'false,false': [0.02906022317593087, 0.06408582354034772], 'true,false': [0.0, nan], 'true': [5.774423760115018e-06, 0.0], 'false': [0.028631606765816858, 0.051089039497364805], 'true,true': [2.6456966231089285e-06, 0.0], 'false,false,false': [0.0004340585073108541, 0.06742195727318225]}, {'': [0.0001991866267061243, 0.045712103416682776], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,true': [0.006748368504894702, 0.06849951216907864], 'true': [0.0002079966980980258, 0.0], 'false,true': [0.050600673667528726, 0.0007330047090897777], 'false': [0.046351751024241876, 0.0]}, {'': [0.00015415866141738622, 0.03871773375672238], 'true,true,true': [0.0, nan], 'false,false': [nan, 0.0], 'true': [0.0, 0.00019150731662145176], 'false': [0.039261640019190365, 0.0], 'true,true': [0.0, nan], 'false,false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true,false;interaction(F, H), recursion_proteinclass(H, B).;true;true
0;false,true;interaction(G, F), interaction(G, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;enzyme(A, D), interaction(A, E).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;true,false;interaction(C, F), interaction(F, A).;true;true
1;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(F, A).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
4;true,true;interaction(A, D), enzyme(D, E).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D).;true;true
5;false;interaction(E, A).;true;true
5;false,true,true;enzyme(A, G).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, D), interaction(D, A).;true;true
6;false;interaction(E, A).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
7;false,false;enzyme(A, G).;true;true
7;true;interaction(D, A).;true;true
7;false;interaction(F, A), interaction(A, F).;true;true
7;true,true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false,false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D).;true;true
8;false;interaction(E, A).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;enzyme(A, D), enzyme(C, D).;true;true
9;false;interaction(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5581489350995124;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7271035802978392;  // std dev = 0,011, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.5066484155549248;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.16128149044264706;  // std dev = 0,702, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.06420929679578945;  // std dev = 1,384, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.6756763396631686;  // std dev = 0,177, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.4498213957702732;  // std dev = 0,904, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.1297584121443268;  // std dev = 0,102, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.16867761830965422;  // std dev = 0,211, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.5534814974072537;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.46054449457161994;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4636159244010793;  // std dev = 0,996, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.2078901739724254;  // std dev = 0,113, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12190196766317288;  // std dev = 0,137, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.4161170332298316;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3605210054676893;  // std dev = 0,098, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.4549581824788559;  // std dev = 0,109, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17645292027013867;  // std dev = 0,099, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.0817135898598202;  // std dev = 0,784, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.009547714442213352;  // std dev = 0,808, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( phenotype(A, J) )
%   | then return 0.06863052275851395;  // std dev = 0,912, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.35694689834815757;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.26833199093167837;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.24768014930392057;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.3280426961628858;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2888300126277388;  // std dev = 0,959, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.15274060011533197;  // std dev = 0,088, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1122787209741976;  // std dev = 0,128, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.24753584811977625;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.20438278007016544;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2341160148589484;  // std dev = 0,047, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.25444747988481003;  // std dev = 0,037, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22644280560110303;  // std dev = 0,959, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.13434087648485984;  // std dev = 0,079, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10164199615297902;  // std dev = 0,117, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.20434859979254338;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.17311578118529536;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.17962065126272475;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17311888254392416;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.048184720882308324;  // std dev = 0,407, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.21041218264138836;  // std dev = 0,041, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.07763059186999387;  // std dev = 0,008, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.19497573741632618;  // std dev = 0,041, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.015902382251402024;  // std dev = 1,160, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.1580148771280933;  // std dev = 0,040, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.14510779738779;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.22363992911177105;  // std dev = 0,187, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.06809007074595634;  // std dev = 0,883, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, I) )
%   | | | then return -0.09949630889221242;  // std dev = 0,141, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06975193803594658;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.14971968799488744;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.13295736422507054;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13692690980137356;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.12840820473844228;  // std dev = 0,673, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return -0.11930463182013976;  // std dev = 0,649, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.06536002691276811;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.13164165618093826;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.950374
   AUC PR    = 0.339013
   CLL	      = -0.397116
   Precision = 0.029031 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.056424


Total learning time: 9.758 seconds
Total inference time: 13.812 seconds
AUC ROC: 0.950374


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.15799
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 1.453 seconds
Refined model CLL: -0.15799


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.950374
   AUC PR    = 0.339013
   CLL	      = -0.397116
   Precision = 0.029031 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.056424


Total learning time: 14.033999999999999 seconds
Total inference time: 13.812 seconds
AUC ROC: 0.950374
Total revision time: 14.033999999999999
Best scored revision CLL: -0.15799


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:37:04
{'CLL': -0.397116, 'AUC ROC': 0.950374, 'F1': 0.056424, 'Recall': 1.0, 'parameter_25': {'CLL': -0.135681, 'AUC ROC': 0.996879, 'F1': 0.605042, 'Recall': 0.782609, 'Precision': [0.493151, 0.5], 'Inference time': 3.593, 'Learning time': 1.9, 'AUC PR': 0.569116}, 'Precision': [0.029031, 0.5], 'Inference time': 13.812, 'Learning time': 14.033999999999999, 'AUC PR': 0.339013}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), phenotype(A, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5248156017661789;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(D, F), interaction(D, D) )
%   | | then return 0.7505511758931249;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.7609104304538484;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06890918311943207;  // std dev = 2,067, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.29701438684128156;  // std dev = 1,035, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.7816289395752953;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(E, F), enzyme(A, F) )
%   | | | then return 0.7020021284727823;  // std dev = 0,106, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.40765516085629233;  // std dev = 1,680, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else return -0.1382498632153577;  // std dev = 0,045, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.13320168913009878;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( phenotype(D, F) )
%   | | then return -0.25485466235227455;  // std dev = 0,136, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2122991605745972;  // std dev = 0,809, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(D, G) )
%   | | then return 0.4941680891572167;  // std dev = 0,112, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4435006578823417;  // std dev = 0,090, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( interaction(H, H), phenotype(H, J) )
%   | | then return 0.47381786341469767;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.26950840833069734;  // std dev = 0,723, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.05703398919163396;  // std dev = 1,163, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return 0.3062147060012477;  // std dev = 0,786, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.36025552218709966;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), phenotype(A, F) )
%   | | | then return 0.4204846017552834;  // std dev = 0,266, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.204742024713468;  // std dev = 1,418, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else return -0.13066157210854268;  // std dev = 0,102, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.11272761886690542;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E) )
%   | | then if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.04298452236284487;  // std dev = 0,677, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.32478840094883876;  // std dev = 0,850, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.05528289433433184;  // std dev = 0,761, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.11659196872330069;  // std dev = 0,093, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.10193517526503243;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22202527504881261;  // std dev = 0,068, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(E, F), enzyme(A, F) )
%   | | | then return 0.3233113963814283;  // std dev = 0,224, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.13644163850176716;  // std dev = 1,346, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else return -0.10516147751954698;  // std dev = 0,085, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.09297491727885294;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), enzyme(D, F) )
%   | then return -0.25516318897321133;  // std dev = 0,208, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( complex(D, G), phenotype(D, H) )
%   | | then return 0.019920408030992594;  // std dev = 0,280, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.10002530214328562;  // std dev = 0,387, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( interaction(J, A), phenotype(I, K) )
%   | | then if ( interaction(I, J) )
%   | | | then return 0.24746848824502576;  // std dev = 0,108, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1258014375083503;  // std dev = 0,234, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(J, J), phenotype(I, L) )
%   | | | then return -0.21466838220758788;  // std dev = 0,292, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.016413526168049877;  // std dev = 1,103, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( phenotype(A, M) )
%   | | then return 0.11191137086966138;  // std dev = 0,457, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.21159659538814446;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15753948089702358;  // std dev = 0,031, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return -0.1808859787502318;  // std dev = 0,209, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.07054344176621392;  // std dev = 0,447, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then return 0.20129472831378667;  // std dev = 0,086, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.12268072708819917;  // std dev = 0,444, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -1.3869047863064704E-4;  // std dev = 1,214, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14218772470050042;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( enzyme(E, D) )
%   | | then return -0.18557836808779773;  // std dev = 0,158, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2393536937200834;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10694479704231077;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G) )
%   | | then return 0.17040564841288894;  // std dev = 0,077, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.10780802808290295;  // std dev = 0,430, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -1.1953236830479728E-4;  // std dev = 1,214, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */


Results
   AUC ROC   = 0.931487
   AUC PR    = 0.134441
   CLL	      = -0.370855
   Precision = 0.040373 at threshold = 0.5
   Recall    = 0.847826
   F1        = 0.077075


Total learning time: 18.084 seconds
Total inference time: 21.886 seconds
AUC ROC: 0.931487


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:37:44
{'CLL': -0.370855, 'AUC ROC': 0.931487, 'F1': 0.077075, 'Recall': 0.847826, 'Precision': [0.040373, 0.5], 'Inference time': 21.886, 'Learning time': 18.084, 'AUC PR': 0.134441}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( location(G, D), recursion_proteinclass(G, B) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( interaction(I, A), phenotype(H, J) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0168510649004878;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.537584
   AUC PR    = 0.007642
   CLL	      = -0.25232
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.544 seconds
Total inference time: 3.06 seconds
AUC ROC: 0.537584


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:37:50
{'CLL': -0.25232, 'AUC ROC': 0.537584, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 3.06, 'Learning time': 2.544, 'AUC PR': 0.007642}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.7927941835770488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7927941835770488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22377715687089614;  // std dev = 1,196, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.6731660503472927;  // std dev = 0,098, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.19924407571919703;  // std dev = 0,094, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.46901247283180936;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5252226201146739;  // std dev = 0,103, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.16971290087877272;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3431401329113096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.12634294065690718;  // std dev = 0,783, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.3401664469512346;  // std dev = 0,018, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.35725492143825544;  // std dev = 0,126, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.16376056582271784;  // std dev = 0,081, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.23164750244776167;  // std dev = 0,036, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3060873680028933;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14277527708266632;  // std dev = 0,072, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2156364846507366;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.005903128981283423;  // std dev = 0,233, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.22219654805115663;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1086383308849292;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14021248708231263;  // std dev = 0,292, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.20603399661079946;  // std dev = 0,075, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19118399963096516;  // std dev = 0,007, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.12398265629728278;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06620508747563794;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then return 0.04509375556376806;  // std dev = 0,428, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.062227835325903987;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.921659
   AUC PR    = 0.23529
   CLL	      = -0.142811
   Precision = 0.23431 at threshold = 0.5
   Recall    = 0.651163
   F1        = 0.344615


Total learning time: 1.327 seconds
Total inference time: 4.074 seconds
AUC ROC: 0.921659


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.14528
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.771 seconds
Parameter learned model CLL: -0.14528


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'interaction(A, H)'}, {'false,true,false,false': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,true,true': [1.095, 2, 3], 'false,true,false,true': [0.0, 0, 2], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(F, A)', 'false,true': 'enzyme(A, E)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 1, 0], 'false,true,true': [0.0, 0, 1], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [1.196, 4, 3], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false': 'interaction(D, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true': [0.098, 0, 5], 'true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,true,false': [0.094, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(D, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,true,false': [0.083, 4, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true,true,false': [0.103, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,true': 'recursion_proteinclass(G, B)'}, {'true,true,false': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.783, 4, 4], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true,true': 'enzyme(A, F)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(D, A)', 'false,false,false': 'interaction(A, H)'}, {'false,true,true,true': [0.018, 0, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,true,false': [0.081, 4, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true,true,false': [0.126, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(A, F), interaction(F, G)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(D, A)'}, {'false,true,true,true': [0.036, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.072, 4, 0], 'true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.069, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.233, 1, 1], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.292, 1, 2], 'false,false,true,false': [0.063, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'false,true,true': 'interaction(D, F), interaction(F, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(D, A)'}, {'false,true,true,true': [0.075, 0, 3], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.059, 4, 0], 'true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.007, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, E), enzyme(A, F)', 'false': 'interaction(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.428, 4, 5], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0]}]]
[{'': [nan, 0.24999999999999983], 'false,false': [nan, 0.0], 'false,true,false': [0.0, 0.0], 'false,true': [0.23999999999999994, 0.25], 'false': [0.2469135802469134, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.21379084410058002], 'false,false,true': [0.0, 0.20437347187143384], 'false,false': [0.21424026658704487, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.20788697451562724], 'false,false,false': [0.0, nan]}, {'': [nan, 0.18521532807269683], 'false,true': [0.0019115200712381153, 0.0022207329079965282], 'false,false': [0.0, nan], 'false': [0.1899747327056859, 0.0], 'false,false,true': [nan, 0.0]}, {'': [nan, 0.1146272888822231], 'false,false': [nan, 0.0], 'false,true,true': [0.0, 0.002660491010384125], 'false,true': [0.0026339257135171044, 0.0017265650718703875], 'false': [0.11764714576658306, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.07283938923311221, 0.0], 'true': [0.0, 0.07672197704620765], 'false': [0.0, nan], 'true,true': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [nan, 0.06491848975143608], 'false,false': [nan, 0.0], 'false,true,true': [0.00016016295956157445, 0.005296104132083239], 'false,true': [0.0033118114935450694, 0.0016295714106389463], 'false': [0.06784345111850403, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.0433920202428607], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [0.0006621599768976763, 0.001601208337512335], 'false,true': [0.0025554994533943274, 0.0012983129846132653], 'false': [0.0453630860016674, 0.0]}, {'': [0.0, 0.030571036191010457], 'false,false,true': [0.0, 0.0013287474072077056], 'false,false': [0.02151875751552851, 0.028360856053266353], 'true': [0.0, nan], 'false': [0.027125365389718454, 0.031211052024845642], 'true,true': [nan, 0.0], 'false,false,false': [nan, 0.028360856053266353]}, {'': [nan, 0.025631515452956506], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [0.0018772048152795688, 2.5165726597158045e-05], 'false,true': [0.0011893145582788645, 0.0008810814635036371], 'false': [0.02698458818112389, 0.0]}, {'': [nan, 0.019382505025807736], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false': [0.020384324308232914, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
0;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;false;interaction(F, A).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
3;;proteinclass(A, B) :- interaction(D, A).;true;true
3;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
3;true,true;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
4;true;recursion_proteinclass(D, B).;true;true
5;;proteinclass(A, B) :- interaction(D, A).;true;true
5;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
5;true,true;enzyme(A, F).;true;true
6;;proteinclass(A, B) :- interaction(D, A).;true;true
6;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
6;true,true;interaction(A, F), interaction(F, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(G, F), recursion_proteinclass(G, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(D, A).;true;true
8;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
8;true,true;interaction(D, F), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7927941835770488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.7927941835770488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.04490428520916517;  // std dev = 0,782, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4622743190865373;  // std dev = 0,722, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6605075190906368;  // std dev = 0,089, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.18632610541669828;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.4721661455218603;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.510110435653502;  // std dev = 0,094, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.15989290664994704;  // std dev = 0,061, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.3494264929592572;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, E) )
%   | | then return 0.10848173332142173;  // std dev = 0,478, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.13974509943108904;  // std dev = 0,581, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.365829828344423;  // std dev = 0,046, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3262499541602166;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.15532308509331846;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.23616792724993824;  // std dev = 0,030, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2929048344840232;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.13613711486083474;  // std dev = 0,054, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21516028128761555;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return 0.019398865832870482;  // std dev = 0,224, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2549942506219013;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09897408278281639;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.11084031243446085;  // std dev = 0,288, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.1980853110458309;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19384809471521147;  // std dev = 0,022, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.11997021727490595;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06680506096946362;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(A, D) )
%   | then return 0.004331637609866393;  // std dev = 0,300, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.09579624045875093;  // std dev = 0,254, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06275888952471399;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.88912
   AUC PR    = 0.281731
   CLL	      = -0.161193
   Precision = 0.247387 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.380697


Total learning time: 1.4 seconds
Total inference time: 3.233 seconds
AUC ROC: 0.88912


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.14022
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.816 seconds
Refined model CLL: -0.14022


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.88912
   AUC PR    = 0.281731
   CLL	      = -0.161193
   Precision = 0.247387 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.380697


Total learning time: 4.314 seconds
Total inference time: 3.233 seconds
AUC ROC: 0.88912
Total revision time: 4.314
Best scored revision CLL: -0.14022


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:38:03
{'CLL': -0.161193, 'AUC ROC': 0.88912, 'F1': 0.380697, 'Recall': 0.825581, 'Precision': [0.247387, 0.5], 'parameter_5': {'CLL': -0.142811, 'AUC ROC': 0.921659, 'F1': 0.344615, 'Recall': 0.651163, 'Precision': [0.23431, 0.5], 'Inference time': 4.074, 'Learning time': 1.327, 'AUC PR': 0.23529}, 'Inference time': 3.233, 'Learning time': 4.314, 'AUC PR': 0.281731}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then return 0.08320549123154841;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.4557831385683307;  // std dev = 1,138, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then return 0.07131940340711884;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.37076029718210374;  // std dev = 1,134, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.40384966714441745;  // std dev = 0,743, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then return 0.3304204926449756;  // std dev = 0,637, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.05671306147462164;  // std dev = 0,872, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then return 0.01385533179039098;  // std dev = 0,841, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.25135858950489925;  // std dev = 1,056, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.3074528983686386;  // std dev = 0,727, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( enzyme(A, E) )
%   | then return -0.03632883934359783;  // std dev = 0,794, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.13889431580745085;  // std dev = 0,730, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.24783774558916508;  // std dev = 0,730, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then return 0.180934942107607;  // std dev = 0,518, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.0918719463684449;  // std dev = 0,886, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then return -0.0510997095242601;  // std dev = 0,788, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.1518186409342135;  // std dev = 1,000, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.18797224162685697;  // std dev = 0,721, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then return 0.12223975590819401;  // std dev = 0,476, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.09750714731336481;  // std dev = 0,884, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then return -0.06624870965340524;  // std dev = 0,776, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.11383970504209455;  // std dev = 0,973, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.499892
   AUC PR    = 0.007756
   CLL	      = -0.814849
   Precision = 0.007758 at threshold = 0.5
   Recall    = 0.732558
   F1        = 0.015353


Total learning time: 1.779 seconds
Total inference time: 2.197 seconds
AUC ROC: 0.499892


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:38:07
{'CLL': -0.814849, 'AUC ROC': 0.499892, 'F1': 0.015353, 'Recall': 0.732558, 'Precision': [0.007758, 0.5], 'Inference time': 2.197, 'Learning time': 1.779, 'AUC PR': 0.007756}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.499875
   AUC PR    = 0.007757
   CLL	      = -0.24857
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.886 seconds
Total inference time: 1.271 seconds
AUC ROC: 0.499875


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:38:09
{'CLL': -0.24857, 'AUC ROC': 0.499875, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.271, 'Learning time': 0.886, 'AUC PR': 0.007757}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.4581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.7927941835770488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.536363628241967;  // std dev = 0,888, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2234705893822737;  // std dev = 1,625, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.6047370043189471;  // std dev = 1,003, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.2059267011243298;  // std dev = 0,123, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4860835644647281;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.46487009734046464;  // std dev = 1,013, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.174650917864591;  // std dev = 0,108, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1752446345760635;  // std dev = 0,898, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.14850697249180267;  // std dev = 1,140, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.2892541207005702;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.40041086549257954;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2547715333877985;  // std dev = 0,987, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.1709570061999799;  // std dev = 0,106, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.233569658168031;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.10399277736144492;  // std dev = 0,901, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3773954462018668;  // std dev = 0,069, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1483024669561175;  // std dev = 0,095, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2324239829954482;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.08173391515205364;  // std dev = 0,539, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.26356132176102376;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1084572568470914;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.1943743691150216;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.014824394216993058;  // std dev = 0,924, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.16572856816780657;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.28333252308892526;  // std dev = 0,112, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0023627103603427735;  // std dev = 0,834, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.13120899047869897;  // std dev = 0,091, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06923127747452223;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1440642348862463;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.03339351720210542;  // std dev = 1,052, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06206201371561707;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.06774113883113636;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.924111
   AUC PR    = 0.215477
   CLL	      = -0.131269
   Precision = 0.212329 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.328042


Total learning time: 1.573 seconds
Total inference time: 4.014 seconds
AUC ROC: 0.924111


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.990455
   CLL	      = -0.239884
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.872 seconds
Parameter learned model CLL: -0.239884


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 2, 0], 'false,true,true': [1.549, 4, 6], 'false,true,false,true': [0.866, 1, 3], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'false,false,true,true': [0.888, 1, 3], 'false,false,false,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [1.625, 7, 5], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.123, 7, 0], 'false,false,true,false': [0.0, 2, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [1.003, 1, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 2, 0], 'false,true,false': [0.108, 7, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [1.013, 1, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,true': 'recursion_proteinclass(G, B)'}, {'true,true,false': [0.898, 1, 3], 'false,false': [0.0, 0, 0], 'true,false': [1.14, 7, 7], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,true,true': [0.085, 0, 4], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,true,false': [0.106, 7, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.987, 1, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.901, 1, 4], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.095, 7, 0], 'false,false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.069, 0, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,true': [0.539, 3, 3], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.924, 4, 3], 'false,false,true,false': [0.063, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.112, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.091, 7, 0], 'false,false,true,false': [0.004, 2, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.834, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true': [1.052, 8, 9], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.24930747922437665], 'false,false': [nan, 0.0], 'false,true,false': [0.18750000000000006, 0.0], 'true': [nan, 0.0], 'false,true': [0.23999999999999994, 0.24489795918367335], 'false': [0.24913494809688577, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.2275704269606099], 'false,false,true': [0.1972698891283753, 0.22016002019954306], 'false,false': [0.23279412251303633, 0.0], 'true,false': [nan, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.22494759409663218], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.21004168898281814], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'true,false': [nan, 0.0], 'true': [nan, 0.0], 'false,true': [0.1006712634197163, 0.0021746096026840794], 'false': [0.21929130919267417, 0.0]}, {'': [0.0, 0.15264273041063497], 'false,false': [nan, 0.0], 'false,true,true': [0.0, 0.11411433395622803], 'true': [nan, 0.0], 'false,true': [0.10274340156747411, 0.0016757608508677635], 'false': [0.16084822923950523, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.11705959942918026, 0.0], 'true': [0.20140875226686555, 0.09280097423694873], 'false': [0.0, nan], 'true,true': [nan, 0.20140875226686555], 'false,true': [nan, 0.0]}, {'': [0.0, 0.10944549128680842], 'false,false': [nan, 0.0], 'false,true,true': [0.001823950697405874, 0.16243364042064604], 'true': [0.0, nan], 'false,true': [0.10328036014477242, 0.0016183990573993795], 'false': [0.11815607276675652, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.0884332630204554], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [0.16222523018248758, 0.0009616319499025083], 'true': [nan, 0.0], 'false,true': [0.10028068589846142, 0.001277351237177141], 'false': [0.09616610753924226, 0.0]}, {'': [0.0, 0.07206881567619111], 'false,false,true': [0.0, 0.0013197481582801276], 'false,false': [0.034007326374072645, 0.11151892890417861], 'true': [0.0, nan], 'false': [0.04835298747118777, 0.08190616688212644], 'true,true': [nan, 0.0], 'false,false,false': [0.0, 0.12197968913946287]}, {'': [0.0, 0.06874031755843339], 'false,false,true': [nan, 9.090193433611803e-06], 'false,false': [9.090193433611803e-06, nan], 'false,true,true': [0.0021046802126403565, 0.17392369596116977], 'true': [0.0, nan], 'false,true': [0.08977885507158843, 0.0011931205692123081], 'false': [0.07541578575065422, 9.090193433611803e-06]}, {'': [0.0, 0.05913495108314496], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0], 'true': [nan, 0.0], 'false': [0.06507401077083456, 8.06311551943082e-06], 'false,false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false;interaction(E, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(I, A).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
2;false;interaction(F, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;false;interaction(E, A).;true;true
5;false,true,true;enzyme(A, G).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;false;interaction(E, A).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(G, F), recursion_proteinclass(G, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
7;false,false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;false;interaction(E, A).;true;true
8;false,true,true;interaction(E, G), interaction(G, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(A, F), enzyme(A, G).;true;true
9;false;interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7580193346218546;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.026711071491134164;  // std dev = 0,846, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.39465460485876025;  // std dev = 1,585, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), phenotype(A, G) )
%   | | | then return 0.44717899944247197;  // std dev = 0,799, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7107813034650095;  // std dev = 0,084, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.20508141509960295;  // std dev = 0,087, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.48416847651738626;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4662593265213246;  // std dev = 0,855, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.1738429863567916;  // std dev = 0,077, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then return -0.08475873529914717;  // std dev = 0,581, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then return 0.43091638181026143;  // std dev = 0,169, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.01734908121689752;  // std dev = 0,652, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.30317038631408205;  // std dev = 0,561, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2347971971015872;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.3697254485917877;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26007638980345926;  // std dev = 0,750, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.1570891511098642;  // std dev = 0,093, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19525548920054014;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.1447251765134759;  // std dev = 0,707, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.32581009241110176;  // std dev = 0,081, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.13755570893392605;  // std dev = 0,084, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2734462010479144;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return 0.07987538766654759;  // std dev = 0,479, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.22617336941471777;  // std dev = 0,035, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.10470866233121867;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.16638442420544775;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0038485704661041886;  // std dev = 0,743, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1445680938472208;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.26047857633715865;  // std dev = 0,105, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.033812571385271745;  // std dev = 0,639, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1224832246801154;  // std dev = 0,075, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06971692533663298;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.12759150766551164;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.15736176333776083;  // std dev = 0,500, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.21028877625379672;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.042225274711847054;  // std dev = 0,552, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then return -0.06225222251861499;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06840662886687097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.880784
   AUC PR    = 0.266806
   CLL	      = -0.148539
   Precision = 0.233553 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.364103


Total learning time: 2.053 seconds
Total inference time: 4.186 seconds
AUC ROC: 0.880784


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.18849
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.784 seconds
Refined model CLL: -0.18849


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.880784
   AUC PR    = 0.266806
   CLL	      = -0.148539
   Precision = 0.233553 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.364103


Total learning time: 5.281999999999999 seconds
Total inference time: 4.186 seconds
AUC ROC: 0.880784
Total revision time: 5.281999999999999
Best scored revision CLL: -0.18849


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:38:24
{'CLL': -0.148539, 'AUC ROC': 0.880784, 'F1': 0.364103, 'Recall': 0.825581, 'Precision': [0.233553, 0.5], 'Inference time': 4.186, 'Learning time': 5.281999999999999, 'AUC PR': 0.266806, 'parameter_10': {'CLL': -0.131269, 'AUC ROC': 0.924111, 'F1': 0.328042, 'Recall': 0.72093, 'Precision': [0.212329, 0.5], 'Inference time': 4.014, 'Learning time': 1.573, 'AUC PR': 0.215477}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), complex(D, F) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), complex(D, F) )
%   | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return 0.3251946922071284;  // std dev = 0,968, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.1418981949498848;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), complex(D, F) )
%   | then return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), enzyme(A, H) )
%   | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return 0.27360935760281774;  // std dev = 0,961, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.1255810648927358;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.017125640988619475;  // std dev = 0,508, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return 0.47930717888331625;  // std dev = 0,906, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then return 0.317255844523735;  // std dev = 0,596, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.21831206368834044;  // std dev = 0,488, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.02458154286967463;  // std dev = 0,752, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), complex(D, F) )
%   | then return 0.028559281633242672;  // std dev = 0,820, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.3677356794260758;  // std dev = 0,064, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then return 0.2588476933897718;  // std dev = 0,785, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then return -0.12377613015534346;  // std dev = 0,093, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.15493710723494863;  // std dev = 0,889, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.02955147905364872;  // std dev = 0,429, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return 0.34715940541135415;  // std dev = 0,930, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, E), complex(A, F) )
%   | | then return -0.06440625211125107;  // std dev = 0,420, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.3409032095534305;  // std dev = 0,161, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02452945955248305;  // std dev = 0,781, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3132413063515687;  // std dev = 0,536, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.0357316259939713;  // std dev = 0,287, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( enzyme(A, H) )
%   | | then return -0.0828854479728369;  // std dev = 0,756, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.04462717417167109;  // std dev = 0,325, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.1737150406005603;  // std dev = 0,829, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), complex(D, F) )
%   | then return 0.001794373061475285;  // std dev = 0,675, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.2365629603223467;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then return 0.15357310429012047;  // std dev = 0,735, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then return -0.15147277311632393;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.020676665082540867;  // std dev = 0,838, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.23447469652933312;  // std dev = 0,491, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.04160897593086155;  // std dev = 0,259, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( enzyme(A, H) )
%   | | then return -0.08492786111367268;  // std dev = 0,746, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.037160309231625964;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.11821156685771686;  // std dev = 0,825, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(A, D) )
%   | then return -0.008502152207048946;  // std dev = 0,350, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.18419567753253183;  // std dev = 0,503, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then return 0.11644824888271453;  // std dev = 0,723, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return -0.13758415231959553;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.0012169573593924232;  // std dev = 0,830, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.516762
   AUC PR    = 0.010501
   CLL	      = -0.63591
   Precision = 0.007764 at threshold = 0.5
   Recall    = 0.360465
   F1        = 0.0152


Total learning time: 3.434 seconds
Total inference time: 2.566 seconds
AUC ROC: 0.516762


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:38:30
{'CLL': -0.63591, 'AUC ROC': 0.516762, 'F1': 0.0152, 'Recall': 0.360465, 'Precision': [0.007764, 0.5], 'Inference time': 2.566, 'Learning time': 3.434, 'AUC PR': 0.010501}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), complex(D, F) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.500003
   AUC PR    = 0.007758
   CLL	      = -0.220445
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.33 seconds
Total inference time: 1.518 seconds
AUC ROC: 0.500003


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:38:33
{'CLL': -0.220445, 'AUC ROC': 0.500003, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.518, 'Learning time': 1.33, 'AUC PR': 0.007758}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.41370449065506787;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.8000001837159434;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5934145394200991;  // std dev = 0,924, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2276254926016977;  // std dev = 2,085, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.6442119657542953;  // std dev = 1,045, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.2153746908955538;  // std dev = 0,127, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.48552488594361953;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.500322418077859;  // std dev = 1,061, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.18146560789432395;  // std dev = 0,111, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2232346959809539;  // std dev = 0,942, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.1358328391160178;  // std dev = 1,420, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.283001471795683;  // std dev = 0,013, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.41316533895662216;  // std dev = 0,123, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.27842606042210705;  // std dev = 1,037, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.17483463209785174;  // std dev = 0,108, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.22153584598538245;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.23697490356651907;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.11305431765019042;  // std dev = 0,936, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.36861203731678244;  // std dev = 0,084, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.15117953395392722;  // std dev = 0,095, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.1856882051977249;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.23049930276920394;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.04344019253086492;  // std dev = 0,608, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2692335012006226;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09652590125802514;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.1968164684848125;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.014502038639964892;  // std dev = 1,017, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.16338783208085722;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.26671352337412674;  // std dev = 0,129, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.018381260711800407;  // std dev = 0,857, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1328746440809886;  // std dev = 0,090, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06872785909963189;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1422651822260294;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then return 0.032788780077137085;  // std dev = 1,166, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06278979978697494;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.06779330695478718;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.926248
   AUC PR    = 0.309957
   CLL	      = -0.127641
   Precision = 0.233553 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.364103


Total learning time: 1.616 seconds
Total inference time: 4.127 seconds
AUC ROC: 0.926248


Results scoring model
   AUC ROC   = 0.982222
   AUC PR    = 0.980804
   CLL	      = -0.216551
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.907 seconds
Parameter learned model CLL: -0.216551


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,false,false': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.0, 3, 0], 'false,true,true': [2.108, 8, 10], 'false,true,false,true': [0.866, 1, 3], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'false,false,true,true': [0.924, 1, 4], 'false,false,false,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [2.085, 11, 8], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.127, 11, 0], 'false,false,true,false': [2.63e-09, 3, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [1.045, 1, 13]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 3, 0], 'false,true,false': [0.111, 11, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [1.061, 1, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,true': 'recursion_proteinclass(G, B)'}, {'true,true,false': [0.942, 1, 5], 'false,false': [0.0, 0, 0], 'true,false': [1.42, 11, 10], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [2.63e-09, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,true,true': [0.123, 0, 6], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 3, 0], 'false,true,false': [0.108, 11, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.013, 0, 2], 'false,true,true,false': [1.037, 1, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.936, 1, 5], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.095, 11, 0], 'false,false,true,false': [0.0, 3, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.084, 0, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.038, 0, 4], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,true': [0.608, 5, 4], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [1.017, 6, 4], 'false,false,true,false': [0.062, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.129, 0, 10], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.09, 11, 0], 'false,false,true,false': [0.004, 3, 0], 'true,true': [0.006, 0, 2], 'false,true,true,false': [0.857, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.005, 0, 2], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true': [1.166, 12, 13], 'false,false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.24872448979591796], 'false,false': [nan, 0.0], 'false,true,false': [0.18750000000000006, 0.0], 'true': [nan, 0.0], 'false,true': [0.24691358024691354, 0.24489795918367335], 'false': [0.24959999999999957, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.23242045021785201], 'false,false,true': [0.1707105137165164, 0.2288396950963929], 'false,false': [0.23879742561338033, 0.0], 'true,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.23046467865932138], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.21586438160725968], 'false,false,true': [nan, 2.3129646346357427e-18], 'false,false': [2.3129646346357427e-18, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false,true': [0.07807463779669702, 0.0014769741520755941], 'false': [0.22643396967263435, 2.3129646346357427e-18]}, {'': [0.0, 0.15131656618451297], 'false,false': [nan, -1.1564823173178713e-18], 'false,true,true': [0.0, 0.08666073303293921], 'true': [0.0, 0.0], 'false,true': [0.08048520399203765, 0.0011208351701727211], 'false': [0.15974535432458054, -1.1564823173178713e-18], 'false,false,false': [-1.1564823173178713e-18, nan]}, {'': [0.10888976700375506, 2.3129646346357427e-18], 'true': [0.14784144286623502, 0.09606314240545692], 'false': [2.3129646346357427e-18, nan], 'true,true': [nan, 0.14784144286623505], 'false,true': [nan, 2.3129646346357427e-18]}, {'': [7.859210360472435e-05, 0.10272428352702698], 'false,false': [nan, 0.0], 'false,true,true': [0.0025366342966933373, 0.13440522664804044], 'true': [7.859210360472435e-05, nan], 'false,true': [0.08233615805174925, 0.001053641924448643], 'false': [0.11091360086896448, 0.0], 'false,false,false': [0.0, nan]}, {'': [5.959112474841072e-05, 0.07925321716305057], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [0.14597302223541397, 0.000889588492963389], 'true': [0.0, 0.0], 'false,true': [0.07906242697389652, 0.000823258759275666], 'false': [0.0861109638340083, 0.0]}, {'': [0.0005020086163901524, 0.06246904525156789], 'false,false,true': [0.0003649434102618171, 0.0009562560289277326], 'false,false': [0.034105584841321535, 0.0977763293974525], 'true': [0.0005020086163901524, nan], 'false': [0.0410843821413154, 0.0725925274447726], 'true,true': [0.0, 0.0], 'false,false,false': [0.0, 0.10349437038688461]}, {'': [1.7281051622249077e-05, 0.05893174073117544], 'false,false,true': [nan, 6.2658798826858986e-06], 'false,false': [6.2658798826858986e-06, nan], 'false,true,true': [0.0016522174894333607, 0.18372241272222328], 'true': [1.7281051622249077e-05, nan], 'false,true': [0.07025983161982262, 0.0007430856906820539], 'false': [0.06461018779441223, 6.2658798826858986e-06]}, {'': [1.3771268255198532e-05, 0.04941977968198449], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0], 'true': [nan, 1.3771268255198532e-05], 'false': [0.05433625006896202, 5.5633519951888794e-06], 'false,false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false;interaction(E, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, F), interaction(F, A).;true;true
1;false,false;interaction(I, A).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(F, A).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, D), interaction(D, A).;true;true
6;false;interaction(E, A).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(G, F), recursion_proteinclass(G, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
7;false,false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;false;interaction(E, A).;true;true
8;false,true,true;interaction(E, G), interaction(G, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(A, F), enzyme(A, G).;true;true
9;false;interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7816289395752953;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.2494601161011758;  // std dev = 2,011, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.4613571803349186;  // std dev = 1,099, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.5474784152979658;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7081279993141335;  // std dev = 0,060, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16542538805913484;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.2286395073247717;  // std dev = 0,165, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4865225263695011;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.494282027820225;  // std dev = 0,944, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.18935707174663832;  // std dev = 0,118, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1654262847449149;  // std dev = 0,103, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( complex(A, F) )
%   | | then return 0.14700657103633855;  // std dev = 0,537, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.2844675581630027;  // std dev = 0,297, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then return 0.4387853432335911;  // std dev = 0,170, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.046115770086068056;  // std dev = 0,847, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.27409519236255353;  // std dev = 0,559, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2614745161105393;  // std dev = 0,040, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.23429314674162183;  // std dev = 0,766, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.37787084343109334;  // std dev = 0,127, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return -0.12005120879102556;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.17283962061304442;  // std dev = 0,152, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.23885204568311158;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.18988428617154218;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.18171176879156378;  // std dev = 0,770, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.29410401692776733;  // std dev = 0,113, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.11078800655180399;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.16155452050686997;  // std dev = 0,121, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1983665126168921;  // std dev = 0,000292, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.16801676692419956;  // std dev = 0,475, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.09814064788935907;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2416901007066091;  // std dev = 0,081, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09730711212209206;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.16237711054606208;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.03034182502587906;  // std dev = 0,792, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1549982524747851;  // std dev = 0,019, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.23360812175710977;  // std dev = 0,136, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.029284307668333592;  // std dev = 0,674, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10202550567094167;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.13535357729965744;  // std dev = 0,108, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06834372840630659;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13578857935407807;  // std dev = 0,017, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return -0.022950959890985605;  // std dev = 0,332, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.09033338258815823;  // std dev = 0,415, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.13876730492310083;  // std dev = 0,251, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.03860330728194377;  // std dev = 0,701, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then return -0.06276643677084044;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06682305075642804;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.898243
   AUC PR    = 0.248247
   CLL	      = -0.130355
   Precision = 0.23588 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.366925


Total learning time: 2.986 seconds
Total inference time: 4.641 seconds
AUC ROC: 0.898243


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.176571
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.951 seconds
Refined model CLL: -0.176571


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.898243
   AUC PR    = 0.248247
   CLL	      = -0.130355
   Precision = 0.23588 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.366925


Total learning time: 6.46 seconds
Total inference time: 4.641 seconds
AUC ROC: 0.898243
Total revision time: 6.46
Best scored revision CLL: -0.176571


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:38:49
{'CLL': -0.130355, 'AUC ROC': 0.898243, 'F1': 0.366925, 'Recall': 0.825581, 'Precision': [0.23588, 0.5], 'parameter_15': {'CLL': -0.127641, 'AUC ROC': 0.926248, 'F1': 0.364103, 'Recall': 0.825581, 'Precision': [0.233553, 0.5], 'Inference time': 4.127, 'Learning time': 1.616, 'AUC PR': 0.309957}, 'Inference time': 4.641, 'Learning time': 6.46, 'AUC PR': 0.248247}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(C, D), interaction(A, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( phenotype(C, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, A) )
%   | then return 0.07031135331748513;  // std dev = 0,882, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, C), complex(C, D) )
%   | | then return 0.7662366248076266;  // std dev = 0,098, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(C, E), phenotype(A, F) )
%   | | | then return 0.7683539264550174;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2408563146552094;  // std dev = 1,885, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C), interaction(A, C) )
%   | then return 0.09663253657188758;  // std dev = 1,036, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.6376692963603241;  // std dev = 0,117, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(C, E) )
%   | | | then return 0.15648731486288645;  // std dev = 1,495, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.5377541242905254;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then return -0.028431990001298275;  // std dev = 0,511, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(C, E) )
%   | | | then return 0.4847667535829047;  // std dev = 0,775, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2690893356270507;  // std dev = 0,678, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(C, H) )
%   | | then if ( location(A, I), location(C, I) )
%   | | | then return -0.06222777909991208;  // std dev = 0,686, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12656354366464148;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3100117085258033;  // std dev = 1,083, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2617068796305446;  // std dev = 0,768, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.24587134019892587;  // std dev = 0,100, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.44563117128489704;  // std dev = 0,170, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, H), phenotype(E, I) )
%   | | | then return -0.07622112424615865;  // std dev = 0,688, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2846943912151565;  // std dev = 1,261, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.15568929727128897;  // std dev = 0,735, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.27643374438809226;  // std dev = 0,162, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( complex(A, F), enzyme(A, G) )
%   | | then return 0.07576549358555568;  // std dev = 0,631, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, H), complex(C, I) )
%   | | | then return 0.37848600492539575;  // std dev = 0,229, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11470725774311578;  // std dev = 1,328, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.20092112592196285;  // std dev = 0,695, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.1948435169931068;  // std dev = 0,092, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), interaction(E, E) )
%   | | then return 0.3498103335345994;  // std dev = 0,124, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.2847475287612753;  // std dev = 0,179, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03738271484578394;  // std dev = 1,406, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.043232603332919714;  // std dev = 0,487, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.3497332308681188;  // std dev = 0,295, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.013346533299894442;  // std dev = 0,399, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then return -0.17306828736996574;  // std dev = 0,079, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.008735810850027153;  // std dev = 1,046, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.22472332066965883;  // std dev = 0,882, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( complex(A, E), complex(C, F) )
%   | then return -0.10037777832663612;  // std dev = 0,384, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.2512760830456329;  // std dev = 0,708, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( complex(A, G), interaction(H, A) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.31090313570535116;  // std dev = 0,296, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.2268186426132941;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return -0.20786225765867314;  // std dev = 0,203, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.05011306236645322;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07136545152169985;  // std dev = 0,349, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( complex(A, D) )
%   | then return 0.06429323790556599;  // std dev = 0,487, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.17809185113388606;  // std dev = 0,181, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(E, F), phenotype(A, G) )
%   | | then return 0.2522004215239559;  // std dev = 0,146, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.16925195793741002;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.009651358429537184;  // std dev = 1,272, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return -0.06821522589759998;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.542941
   AUC PR    = 0.010034
   CLL	      = -0.517789
   Precision = 0.008939 at threshold = 0.5
   Recall    = 0.348837
   F1        = 0.017432


Total learning time: 4.978 seconds
Total inference time: 2.794 seconds
AUC ROC: 0.542941


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:38:57
{'CLL': -0.517789, 'AUC ROC': 0.542941, 'F1': 0.017432, 'Recall': 0.348837, 'Precision': [0.008939, 0.5], 'Inference time': 2.794, 'Learning time': 4.978, 'AUC PR': 0.010034}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(C, D), interaction(A, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( phenotype(C, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.499927
   AUC PR    = 0.007757
   CLL	      = -0.204985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.758 seconds
Total inference time: 1.575 seconds
AUC ROC: 0.499927


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:39:01
{'CLL': -0.204985, 'AUC ROC': 0.499927, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.575, 'Learning time': 1.758, 'AUC PR': 0.007757}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.40814893509951233;  // std dev = 2,225, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.8008875906974797;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6163863716231791;  // std dev = 0,953, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.24492041340772516;  // std dev = 2,362, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.6476760063350009;  // std dev = 1,077, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return -0.21027030369378927;  // std dev = 0,155, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.48582566585262477;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5006639068424132;  // std dev = 1,095, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.17776703985317205;  // std dev = 0,135, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.24316550388923525;  // std dev = 0,976, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.1353811921957098;  // std dev = 1,575, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.27744549083846426;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.3844801997511944;  // std dev = 0,164, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2981387772776782;  // std dev = 1,080, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.17170909218527636;  // std dev = 0,131, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.21906672228529833;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.22856481392063072;  // std dev = 0,013, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.11781543821679663;  // std dev = 0,964, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3521776530885766;  // std dev = 0,127, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.14882187592252466;  // std dev = 0,117, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.18389469915118062;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20874353164833598;  // std dev = 0,037, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.02347335204722467;  // std dev = 0,657, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2587824672464234;  // std dev = 0,065, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08974485252895736;  // std dev = 0,070, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.19910558417450663;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.01879844897940442;  // std dev = 1,110, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.16016450918008215;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.26714961952062366;  // std dev = 0,116, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.06632456132235402;  // std dev = 0,933, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.13186350462648705;  // std dev = 0,108, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06881270294614485;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.13370539369380996;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.14281723787098322;  // std dev = 0,007, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then return 0.035813347146985745;  // std dev = 1,260, 32,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06318500852410365;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.06992282404662795;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.926744
   AUC PR    = 0.325317
   CLL	      = -0.133461
   Precision = 0.233553 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.364103


Total learning time: 1.827 seconds
Total inference time: 4.559 seconds
AUC ROC: 0.926744


Results scoring model
   AUC ROC   = 0.97
   AUC PR    = 0.957593
   CLL	      = -0.203109
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.95 seconds
Parameter learned model CLL: -0.203109


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(F, H), recursion_proteinclass(H, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false,true': 'interaction(G, F), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true': 'interaction(A, E), interaction(E, C)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.0, 0, 1], 'false,true,false,false': [0.0, 5, 0], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.0, 5, 0], 'false,true,true': [2.225, 9, 11], 'false,true,false,true': [0.926, 1, 6], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(C, F), interaction(F, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'false,false,true,true': [0.953, 1, 5], 'false,false,false,true': [0.0, 5, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [2.362, 14, 11], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.155, 14, 0], 'false,false,true,false': [0.0, 5, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 1], 'false,true,true': [1.077, 1, 17]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 5, 0], 'false,true,false': [0.135, 14, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'false,true,true,false': [1.095, 1, 16]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'false,true': 'recursion_proteinclass(G, B)'}, {'true,true,false': [0.976, 1, 7], 'false,false': [0.0, 0, 0], 'true,false': [1.575, 14, 13], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'false,true,true,true': [0.164, 0, 8], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 5, 0], 'false,true,false': [0.131, 14, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.018, 0, 3], 'false,true,true,false': [1.08, 1, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'true': 'interaction(C, D), interaction(D, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.964, 1, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.013, 0, 2], 'false,true,false': [0.117, 14, 0], 'false,false,true,false': [0.0, 5, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.127, 0, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(D, A)', 'false': 'interaction(E, A), interaction(A, E)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,true,false': [0.037, 0, 2], 'false,false,true,true': [0.065, 0, 5], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,true': [0.657, 7, 5], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [1.11, 7, 6], 'false,false,true,false': [0.07, 6, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'interaction(A, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.116, 0, 11], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.108, 14, 0], 'false,false,true,false': [0.006, 5, 0], 'true,true': [0.012, 0, 3], 'false,true,true,false': [0.933, 1, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, G), enzyme(A, H)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(F, A)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.007, 0, 2], 'false,false,false,true': [0.0, 1, 0], 'false,true': [1.26, 15, 17], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 4, 0]}]]
[{'': [1.4802973661668753e-16, 0.2483564645726804], 'false,false': [nan, -2.7755575615628915e-18], 'false,true,false': [0.12244897959183662, -2.7755575615628915e-18], 'true': [0.0, 0.0], 'false,true': [0.2474999999999996, 0.25], 'false': [0.24902343749999953, -2.7755575615628915e-18], 'true,true': [nan, 0.0], 'false,false,false': [-2.7755575615628915e-18, nan]}, {'': [0.0, 0.22392216396861334], 'false,false,true': [0.15141473301313954, 0.22309130582422185], 'false,false': [0.23075644752461444, 0.0], 'true,false': [0.0, 0.0], 'true': [0.0, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.22209990947546837], 'false,false,false': [0.0, nan]}, {'': [3.700743415417188e-17, 0.20595678511492657], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false,true': [0.06445460342407348, 0.0017053190384505115], 'false': [0.21814447848269586, 0.0]}, {'': [-3.700743415417188e-17, 0.1414919759848006], 'false,false': [nan, 0.0], 'false,true,true': [0.0, 0.07051083707220396], 'true': [0.0, 0.0], 'false,true': [0.06660512065376814, 0.0013052649440231498], 'false': [0.15103055242403002, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.10014087539996805, 0.0], 'true': [0.11895684398625048, 0.0919103546601116], 'false': [0.0, nan], 'true,true': [nan, 0.11895684398625048], 'false,true': [nan, 0.0]}, {'': [0.00010533615503309039, 0.09321398770066422], 'false,false': [nan, 0.0], 'false,true,true': [0.0033525994153371375, 0.11658214758280143], 'true': [0.00010533615503309039, nan], 'false,true': [0.06809860549226181, 0.0012330085679944092], 'false': [0.10240832213238668, 0.0], 'false,false,false': [0.0, nan]}, {'': [8.018999530060023e-05, 0.07101324059918653], 'false,false,true': [nan, -1.3877787807814458e-18], 'false,false': [-1.3877787807814458e-18, nan], 'false,true,true': [0.13263992965139115, 0.001473118213789179], 'true': [0.0, 9.021374471317178e-05], 'false,true': [0.06553575129597294, 0.000969655197115881], 'false': [0.07862792812129142, -1.3877787807814458e-18]}, {'': [0.0005972897403865538, 0.055349894515542244], 'false,false,true': [0.000852271473421573, 0.0008269488729798895], 'false,false': [0.030955308558257635, 0.09018995416595495], 'true': [0.0005972897403865538, nan], 'false': [0.035957103962934854, 0.06446401576979358], 'true,true': [0.0, 0.0006901131184226181], 'false,false,false': [0.0, 0.09480545273350399]}, {'': [4.460718414641777e-05, 0.05240280350558222], 'false,false,true': [nan, 8.179216643553616e-06], 'false,false': [8.179216643553616e-06, nan], 'false,true,true': [0.0012239234426058212, 0.12436667335038516], 'true': [4.460718414641777e-05, nan], 'false,true': [0.05869753670311893, 0.0008304170149291075], 'false': [0.05872490988446791, 8.179216643553616e-06]}, {'': [3.567617995491277e-05, 0.04411708706581432], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0], 'true': [0.0, 2.583903516267111e-05], 'false': [0.049648530288205775, 7.263705282491845e-06], 'true,true': [nan, 0.0], 'false,false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true,false;interaction(F, H), recursion_proteinclass(H, B).;true;true
0;false,true;interaction(G, F), interaction(G, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;enzyme(A, D), interaction(A, E).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;true,false;interaction(C, F), interaction(F, A).;true;true
1;false,false;interaction(I, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(F, A).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, D), interaction(D, A).;true;true
6;false;interaction(E, A).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(G, F), recursion_proteinclass(G, B).;true;true
7;false,false;enzyme(A, F).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(E, A), interaction(A, E).;true;true
7;false,false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;false;interaction(E, A).;true;true
8;false,true,true;interaction(E, G), interaction(G, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;enzyme(A, D), enzyme(C, D).;true;true
9;false,false;interaction(A, G), enzyme(A, H).;true;true
9;false;interaction(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.5724346493852266;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7733921696315487;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.16225586148162;  // std dev = 1,014, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3526253873261973;  // std dev = 2,372, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.42705180947229715;  // std dev = 0,872, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7048935681179261;  // std dev = 0,117, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.1940211311094363;  // std dev = 0,170, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.25264924824915475;  // std dev = 0,102, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5067799272909159;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49411287598748277;  // std dev = 0,963, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return -0.12675253781535598;  // std dev = 0,016, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.19438545497991594;  // std dev = 0,147, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( complex(A, F) )
%   | | then return 0.09379681876126274;  // std dev = 0,650, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.27605768795222546;  // std dev = 0,332, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.4258799853070422;  // std dev = 0,121, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.16188604847091315;  // std dev = 0,470, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.08083507046619004;  // std dev = 0,926, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.29597278945753386;  // std dev = 0,566, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2968345969961743;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.42244012050671803;  // std dev = 0,124, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2735880682203318;  // std dev = 0,791, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.1744666225551014;  // std dev = 0,127, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.149195633378726;  // std dev = 0,153, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.24211225771457334;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.23716858079587;  // std dev = 0,010, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.1878116306273069;  // std dev = 0,806, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.28233299686902114;  // std dev = 0,093, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return -0.10579516177194377;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.15365192258151;  // std dev = 0,163, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.19805355728203075;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.28585730188532354;  // std dev = 0,108, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11207031725242082;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08860163923628703;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.23533196994176292;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09687636211338012;  // std dev = 0,111, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.20337368309531068;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.00619125147818795;  // std dev = 0,887, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16829079293099058;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.22358701573980297;  // std dev = 0,135, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.0868467841959856;  // std dev = 0,732, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.10723591800487534;  // std dev = 0,122, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.15657989260420227;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06811417800048485;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.14030778706931024;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1488963060682919;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08402269345094611;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.03187156650197515;  // std dev = 0,971, 24,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.11417869902269076;  // std dev = 0,330, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return -0.0628052913547727;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06835949004959402;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.88836
   AUC PR    = 0.25975
   CLL	      = -0.135985
   Precision = 0.235099 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.365979


Total learning time: 3.154 seconds
Total inference time: 4.336 seconds
AUC ROC: 0.88836


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.167056
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.951 seconds
Refined model CLL: -0.167056


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.88836
   AUC PR    = 0.25975
   CLL	      = -0.135985
   Precision = 0.235099 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.365979


Total learning time: 6.882 seconds
Total inference time: 4.336 seconds
AUC ROC: 0.88836
Total revision time: 6.882
Best scored revision CLL: -0.167056


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:39:17
{'CLL': -0.135985, 'AUC ROC': 0.88836, 'F1': 0.365979, 'Recall': 0.825581, 'Precision': [0.235099, 0.5], 'Inference time': 4.336, 'Learning time': 6.882, 'AUC PR': 0.25975, 'parameter_20': {'CLL': -0.133461, 'AUC ROC': 0.926744, 'F1': 0.364103, 'Recall': 0.825581, 'Precision': [0.233553, 0.5], 'Inference time': 4.559, 'Learning time': 1.827, 'AUC PR': 0.325317}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( enzyme(A, E), interaction(F, C) )
%   | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( phenotype(G, H) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.030739953789376676;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( enzyme(A, E), phenotype(C, F) )
%   | then return 0.4379363516812385;  // std dev = 1,138, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.7319045176838227;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.18162893957529533;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7816289395752953;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(G, J) )
%   | | | then return -0.027039036105351237;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then if ( interaction(A, C) )
%   | | then return 0.3160217684900958;  // std dev = 0,764, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5956296491143046;  // std dev = 0,130, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.6675231221671444;  // std dev = 0,100, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.07384381238934423;  // std dev = 0,910, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2587437693183103;  // std dev = 1,853, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), enzyme(C, E) )
%   | then if ( phenotype(C, D), interaction(F, C) )
%   | | then return 0.21987528977981463;  // std dev = 0,742, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4640439339220294;  // std dev = 0,129, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.5101741187184589;  // std dev = 0,116, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.060795439861340506;  // std dev = 0,910, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.21130519834109598;  // std dev = 1,823, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.07485141019669261;  // std dev = 1,041, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.20769038934792025;  // std dev = 0,113, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(A, C), phenotype(C, H) )
%   | | | then return 0.5288418160671129;  // std dev = 0,056, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.38269242866796416;  // std dev = 0,140, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(C, I), complex(A, J) )
%   | | | then return -0.11656030743905327;  // std dev = 0,456, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.27852414556203076;  // std dev = 1,481, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then return -0.11503898959242331;  // std dev = 0,685, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(C, A) )
%   | then if ( complex(C, D), interaction(A, C) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.36174991124902506;  // std dev = 0,127, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2937123799346629;  // std dev = 0,714, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(C, C), enzyme(A, F) )
%   | | | then return 0.39269990465331706;  // std dev = 0,170, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08124521288598746;  // std dev = 1,670, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.05184204012941629;  // std dev = 1,014, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.1764053667696881;  // std dev = 0,085, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(A, C), phenotype(C, H) )
%   | | | then return 0.32096650308893393;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2531883883097416;  // std dev = 0,158, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(C, I), complex(A, J) )
%   | | | then return -0.1106620183949452;  // std dev = 0,457, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.18679626683032738;  // std dev = 1,455, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.04054429090869084;  // std dev = 1,014, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.15257411171723573;  // std dev = 0,075, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, F), complex(C, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.09322908791884028;  // std dev = 0,342, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24622859685336201;  // std dev = 0,154, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(C, J) )
%   | | | then return -0.04571115082467294;  // std dev = 1,157, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2252757576161081;  // std dev = 0,883, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.254143485756195;  // std dev = 0,260, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, D), interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.2799815892662397;  // std dev = 0,200, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03240896176339024;  // std dev = 0,770, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, E), complex(E, F) )
%   | | | then return 0.21703219843365948;  // std dev = 0,130, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.049928915611837925;  // std dev = 1,553, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21410293374124847;  // std dev = 0,233, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.23022672876676106;  // std dev = 0,177, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(D, A), enzyme(A, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3490444539395657;  // std dev = 0,455, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.27530613279306604;  // std dev = 0,313, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.18445633432877356;  // std dev = 0,109, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.02265448704383766;  // std dev = 1,283, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */


Results
   AUC ROC   = 0.594492
   AUC PR    = 0.013038
   CLL	      = -0.596558
   Precision = 0.010184 at threshold = 0.5
   Recall    = 0.430233
   F1        = 0.019898


Total learning time: 5.403 seconds
Total inference time: 3.282 seconds
AUC ROC: 0.594492


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:39:26
{'CLL': -0.596558, 'AUC ROC': 0.594492, 'F1': 0.019898, 'Recall': 0.430233, 'Precision': [0.010184, 0.5], 'Inference time': 3.282, 'Learning time': 5.403, 'AUC PR': 0.013038}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( enzyme(A, E), interaction(F, C) )
%   | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(G, J) )
%   | | | then return -0.030739953789376676;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.499878
   AUC PR    = 0.007756
   CLL	      = -0.220038
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.794 seconds
Total inference time: 1.781 seconds
AUC ROC: 0.499878


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:39:30
{'CLL': -0.220038, 'AUC ROC': 0.499878, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.781, 'Learning time': 1.794, 'AUC PR': 0.007756}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
0;true;follows(A, C), tweets(A, D).;true;false
0;false,true;follows(G, F), follows(G, A).;false;true
0;false;follows(F, A).;true;true
0;true,true;follows(A, E), follows(E, C).;false;false
0;false,false,false;follows(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
1;false,false;follows(I, A).;true;true
1;true,false;follows(C, F), follows(F, A).;false;false
1;true;tweets(A, D), follows(A, E).;false;true
1;false,true;tweets(A, H).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;false,false,false;follows(A, K), follows(K, L).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false;follows(A, H).;true;true
2;true,false;follows(E, C), follows(A, E).;false;false
2;true;follows(A, D), recursion_accounttype(D, B).;false;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
2;false;follows(F, A).;true;true
2;false,false,false;tweets(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;tweets(A, I).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;true;follows(D, C), recursion_accounttype(D, B).;false;false
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false;follows(E, A).;true;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;true;recursion_accounttype(D, B).;true;false
4;false,true;recursion_accounttype(G, B).;false;false
4;false;follows(A, F), follows(F, G).;true;true
4;true,true;follows(A, D), tweets(D, E).;false;false
4;false,false,false;follows(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(A, I), follows(I, H).;false;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;false,true,true;tweets(A, G).;false;false
5;true;follows(A, D).;false;false
5;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
5;false;follows(E, A).;true;true
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(J, I), recursion_accounttype(J, B).;false;false
6;false,false;follows(A, I).;true;true
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;true;follows(C, D), follows(D, A).;false;false
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, K).;false;false
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
7;false,false;tweets(A, G).;true;true
7;true,false;follows(A, E), follows(C, E).;false;false
7;true;follows(D, A).;true;true
7;false;follows(F, A), follows(A, F).;false;true
7;true,true;follows(D, C), recursion_accounttype(D, B).;false;false
7;false,false,false;follows(I, A), recursion_accounttype(I, B).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,true,true;follows(E, G), follows(G, A).;false;false
8;true;follows(A, D).;false;false
8;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
8;false;follows(E, A).;true;true
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true,true;recursion_accounttype(E, B).;false;false
9;false,false;follows(A, G), tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;true;tweets(A, D), tweets(C, D).;true;false
9;false;follows(F, A).;false;true
9;true,true;follows(C, E), follows(E, A).;true;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then return 0.1914822684328457;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.40814893509951233;  // std dev = 2,225, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109544;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6475834780614494;  // std dev = 0,898, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.07286403649944766;  // std dev = 1,733, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.3798349591185324;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.19911240930252025;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.61549355292306;  // std dev = 0,961, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.15976438299984438;  // std dev = 0,083, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7334145189805817;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.255770248244087;  // std dev = 0,092, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4029674367274082;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.48319582453842697;  // std dev = 0,965, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.13952562459391246;  // std dev = 0,074, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.23706028648114233;  // std dev = 1,698, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.13625685171345361;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), enzyme(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2888104304403114;  // std dev = 0,898, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.05507457534669281;  // std dev = 0,805, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2199614537167606;  // std dev = 1,715, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1210004018172075;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4428255838907319;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.2612826116411737;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.39219372295037386;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26332403709631325;  // std dev = 0,970, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.11781463850835862;  // std dev = 0,064, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.12200559300527984;  // std dev = 1,660, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.2140648274336594;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2140648274336594;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.20183444549629143;  // std dev = 0,922, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.41933487169494893;  // std dev = 0,195, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.10613797636797491;  // std dev = 0,058, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4254534092417997;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.3106200989584976;  // std dev = 0,201, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.1802491728161566;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20531454410616556;  // std dev = 0,035, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return 0.02855885111365147;  // std dev = 0,646, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2914530031916855;  // std dev = 0,142, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.13553307763617015;  // std dev = 0,220, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.027573606755331406;  // std dev = 1,379, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.14937141317518865;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.13655737492830652;  // std dev = 0,946, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.21056930218306147;  // std dev = 0,083, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.09469093494038346;  // std dev = 0,064, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2952866826412706;  // std dev = 0,090, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.24607645074842605;  // std dev = 0,179, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.13361739134410855;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13025116811692133;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then return 0.015482845430318855;  // std dev = 1,126, 27,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else if ( interaction(G, A), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2120489471456164;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.155404218310329;  // std dev = 0,111, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.015578917526034122;  // std dev = 0,845, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.992918
   AUC PR    = 0.46307
   CLL	      = -0.153909
   Precision = 0.295455 at threshold = 0.5
   Recall    = 0.906977
   F1        = 0.445714


Total learning time: 1.836 seconds
Total inference time: 4.159 seconds
AUC ROC: 0.992918


Results scoring model
   AUC ROC   = 0.9888
   AUC PR    = 0.987449
   CLL	      = -0.214299
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 0.972 seconds
Parameter learned model CLL: -0.214299


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'false,true': 'interaction(F, G), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false,false,false': 'interaction(J, A)'}, {'true,true,false': [0.0, 0, 1], 'false,true,false,false': [0.0, 6, 0], 'true,false': [0.0, 0, 2], 'false,false,false,true': [2.225, 9, 11], 'false,true,true': [1.826, 10, 5], 'false,true,false,true': [0.0, 0, 6], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false': 'interaction(A, I)', 'true,false': 'interaction(F, C), interaction(A, F)', 'true': 'enzyme(A, D), interaction(E, A)', 'false,true': 'enzyme(A, H)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(K, A), interaction(L, K)'}, {'false,false,true,true': [0.898, 1, 5], 'false,false,false,true': [2.152, 8, 11], 'false,true,false': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0], 'false,false,true,false': [1.733, 15, 5], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)'}, {'false,false,true,true': [0.0, 0, 11], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.083, 15, 0], 'false,false,true,false': [0.092, 9, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.961, 1, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [1.698, 8, 11], 'false,true,false': [0.074, 15, 0], 'false,false,false,false': [0.0, 1, 0], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.965, 1, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'false,false,true': 'enzyme(J, I), recursion_proteinclass(J, B)', 'false,false': 'interaction(H, A), enzyme(A, I)', 'true': 'recursion_proteinclass(D, B)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(F, A), interaction(G, F)', 'true,true': 'interaction(D, A), enzyme(D, E)', 'false,false,false': 'interaction(K, A)'}, {'true,true,false': [0.898, 1, 8], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.805, 15, 2], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,true,false': [1.715, 8, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true,true': 'enzyme(A, G)', 'true': 'interaction(D, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A)'}, {'false,true,true,true': [0.006, 0, 4], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.66, 9, 11], 'false,true,false': [0.064, 15, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 3], 'false,true,true,false': [0.97, 1, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false': 'interaction(I, A)', 'false,true,true': 'interaction(G, A), interaction(H, G)', 'true': 'interaction(D, C), interaction(A, D)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)'}, {'false,true,true,true': [0.922, 1, 9], 'false,false,true,true': [2.98e-08, 0, 11], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.058, 15, 0], 'false,false,true,false': [0.201, 9, 0], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.195, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, F)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), interaction(E, A)', 'true,true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, H), recursion_proteinclass(H, B)'}, {'true,true,false': [0.035, 0, 2], 'false,false,true,true': [0.142, 0, 8], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.646, 9, 5], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [1.379, 8, 9], 'false,false,true,false': [0.22, 8, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'true': 'interaction(D, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)'}, {'false,true,true,true': [0.946, 1, 5], 'false,false,true,true': [0.09, 0, 11], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.064, 15, 0], 'false,false,true,false': [0.179, 9, 0], 'true,true': [0.01, 0, 3], 'false,true,true,false': [0.083, 0, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(G, A), enzyme(A, H)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(A, F)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false,false,false': 'interaction(J, A)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 5], 'true,false': [0.009, 0, 2], 'false,false,false,true': [0.845, 6, 6], 'false,true': [1.126, 16, 11], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.111, 3, 0]}]]
[{'': [1.4802973661668753e-16, 0.24898143956541383], 'false,false': [nan, 0.2474999999999996], 'false,true,false': [-1.4802973661668753e-16, -6.938893903907228e-18], 'true': [0.0, 0.0], 'false,true': [0.22222222222222202, 0.25000000000000006], 'false': [0.2414266117969817, 0.2474999999999996], 'true,true': [nan, 0.0], 'false,false,false': [0.2474999999999996, nan]}, {'': [0.0, 0.228126237900578], 'false,false,true': [0.13436696585973743, 0.15017089076216697], 'false,false': [0.20515739978042388, 0.24749999999999978], 'true,false': [0.0, nan], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.22876230958629812], 'false,false,false': [0.24376731301939036, 0.0]}, {'': [3.700743415417188e-17, 0.21087729554725462], 'false,false,true': [-8.074349270001139e-17, 0.0009357540798768197], 'false,false': [0.2425964990040018, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false,true': [0.07688419295723763, 0.0004543282073894724], 'false': [0.1828243587657027, 0.2425964990040018]}, {'': [-3.700743415417188e-17, 0.1397457704021783], 'false,false': [nan, 0.15072408383522123], 'false,true,true': [0.0, 0.08462937019285345], 'true': [0.0, 0.0], 'false,true': [0.07806860695677047, 0.0003621914207654675], 'false': [0.12860209103195716, 0.15072408383522123], 'false,false,false': [0.1516886460693743, 0.0]}, {'': [0.08269056124345048, 0.12948836615898768], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0], 'true': [0.0895726645713088, 0.038112014973985746], 'false,true': [nan, 0.13374447765449868], 'false': [0.13374447765449868, 0.07947493553988239], 'true,true': [nan, 0.0895726645713088], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.10581512339389289], 'false,false': [nan, 0.13770463859562676], 'false,true,true': [7.579119257805633e-06, 0.11769043040701227], 'true': [0.0, nan], 'false,true': [0.08215334574045503, 0.0002704565801127101], 'false': [0.08107193090266038, 0.13770463859562676], 'false,false,false': [0.13770463859562676, nan]}, {'': [0.0, 0.0959174709570824], 'false,false,true': [8.074349270001139e-17, 0.00448938506322537], 'false,false': [0.136116765123339, nan], 'false,true,true': [0.084999362358963, 0.01893262768081161], 'true': [0.0, 0.0], 'false,true': [0.08055857816213188, 0.00022490965481790636], 'false': [0.06518533630411401, 0.136116765123339]}, {'': [0.0005584647448053324, 0.06689425397726478], 'false,false,true': [0.0025365098073709402, 0.006062064732184333], 'false,false': [0.04987856557496065, 0.11192444661689362], 'true': [0.0005584647448053324, nan], 'false': [0.029780618723590276, 0.08247570859611757], 'true,true': [0.0, 0.0006282728379060076], 'false,false,false': [nan, 0.1119244466168936]}, {'': [3.5905482931507714e-05, 0.06172723977659247], 'false,false,true': [0.0007370213066258655, 0.003567050827178317], 'false,false': [0.07454636003376833, nan], 'false,true,true': [0.14911875721018916, 0.0011437024756446128], 'true': [3.5905482931507714e-05, nan], 'false,true': [0.07650067118690766, 0.00026976198936886633], 'false': [0.05191815502751029, 0.07454636003376833]}, {'': [2.8932972607080554e-05, 0.04831262541504418], 'false,false,true': [0.0, 0.004130686402577318], 'false,false': [0.033194748526808926, 0.05948151160902757], 'true': [0.0, 3.962230597220201e-05], 'false': [0.04697967550735164, 0.04979307033338512], 'true,true': [nan, 0.0], 'false,false,false': [0.05948151160902757, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), enzyme(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
0;false,true;interaction(F, G), interaction(A, G).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;enzyme(A, D), interaction(E, A).;true;true
1;false,false;interaction(A, I).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false,false;interaction(K, A), interaction(L, K).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
2;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;false;interaction(A, F).;true;true
2;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(I, A), interaction(J, I).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
3;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false;interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
4;false,false;interaction(H, A), enzyme(A, I).;true;true
4;false;interaction(F, A), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, E).;true;true
5;false,true,true;enzyme(A, G).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, C), interaction(A, D).;true;true
6;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
6;false;interaction(A, E).;true;true
6;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
8;false;interaction(A, E).;true;true
8;false,true,true;interaction(G, E), interaction(A, G).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;enzyme(A, D), enzyme(C, D).;true;true
9;false,false;interaction(G, A), enzyme(A, H).;true;true
9;false;interaction(A, F).;true;true
9;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.058148935099512175;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.11090894654824511;  // std dev = 1,985, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.7194734122109544;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.37763158977345984;  // std dev = 2,059, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.21837106042470472;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.7709606062083068;  // std dev = 0,099, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.49277564301121674;  // std dev = 0,754, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return -0.18862743500499018;  // std dev = 0,068, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.148356183521057;  // std dev = 0,040, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.5783043676691298;  // std dev = 0,975, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.39480717507118485;  // std dev = 1,096, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.21178162983151605;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.43280939160099974;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4820545725521562;  // std dev = 0,844, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.14883129557163008;  // std dev = 0,078, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.12905903987056347;  // std dev = 0,027, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.17922545852814173;  // std dev = 1,522, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.42310434796247887;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.24997450181958916;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(E, A), phenotype(A, F) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return 0.03413150530723812;  // std dev = 0,781, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.40735961011528693;  // std dev = 0,169, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0019659556174734583;  // std dev = 0,255, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), complex(K, L) )
%   | | | then return 0.1856345572504227;  // std dev = 0,976, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.49195772744693195;  // std dev = 0,226, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.49333947291230995;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04836827202664843;  // std dev = 1,211, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(P, A), enzyme(A, Q) )
%   | | then return -0.20607925919976033;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.32028713465799785;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2911727750790339;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.32336994168127464;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3132306871664102;  // std dev = 0,820, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( enzyme(A, G), interaction(H, A) )
%   | | | then return -0.11169702888345748;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1302315758900558;  // std dev = 0,071, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return 0.24332583483043715;  // std dev = 0,876, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.021254458233100203;  // std dev = 0,969, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2034903895935705;  // std dev = 0,961, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.22222527613374737;  // std dev = 0,045, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2612061102472014;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.3614645734687926;  // std dev = 0,205, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17091983619611767;  // std dev = 0,731, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return -0.12968509975015424;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10344584215320511;  // std dev = 0,027, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.2835924878893976;  // std dev = 1,002, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.15657929037587495;  // std dev = 0,954, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.21483242498843705;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19907621721103197;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(F, G) )
%   | | then if ( phenotype(A, H), interaction(F, F) )
%   | | | then return 0.16743842953677035;  // std dev = 0,579, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return -0.03218037501727627;  // std dev = 1,423, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.2197793580149347;  // std dev = 0,661, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, I) )
%   | | then return -0.12271679145095316;  // std dev = 0,128, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.1930871260827994;  // std dev = 0,483, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1674964386315131;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, D), interaction(A, F) )
%   | | | then return 0.19836881193289127;  // std dev = 0,756, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1649842191085911;  // std dev = 0,051, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return -0.12765258895050396;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.090922330715161;  // std dev = 0,035, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.2046773981172404;  // std dev = 0,974, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.11093989022110501;  // std dev = 0,912, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.18260894860110402;  // std dev = 0,037, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.1587593872673445;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1388494425191441;  // std dev = 0,029, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(G, F), phenotype(G, H) )
%   | | | then return 0.054590811299403345;  // std dev = 0,876, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.09169596134122722;  // std dev = 0,070, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.15006533936185304;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.31054052995834924;  // std dev = 0,119, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3699915346044425;  // std dev = 0,423, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.0020731810897196903;  // std dev = 0,811, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05574195606859628;  // std dev = 0,640, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */


Results
   AUC ROC   = 0.960295
   AUC PR    = 0.153791
   CLL	      = -0.243031
   Precision = 0.084951 at threshold = 0.5
   Recall    = 0.813953
   F1        = 0.153846


Total learning time: 10.289 seconds
Total inference time: 12.015 seconds
AUC ROC: 0.960295


Results scoring model
   AUC ROC   = 0.9912
   AUC PR    = 0.991372
   CLL	      = -0.236249
   Precision = 0.892857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943396


Total scoring time: 1.491 seconds
Refined model CLL: -0.236249


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.992918
   AUC PR    = 0.46307
   CLL	      = -0.153909
   Precision = 0.295455 at threshold = 0.5
   Recall    = 0.906977
   F1        = 0.445714


Total learning time: 14.588 seconds
Total inference time: 4.159 seconds
AUC ROC: 0.992918
Total revision time: 14.588
Best scored revision CLL: -0.214299


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:40:02
{'CLL': -0.153909, 'AUC ROC': 0.992918, 'F1': 0.445714, 'Recall': 0.906977, 'parameter_25': {'CLL': -0.153909, 'AUC ROC': 0.992918, 'F1': 0.445714, 'Recall': 0.906977, 'Precision': [0.295455, 0.5], 'Inference time': 4.159, 'Learning time': 1.836, 'AUC PR': 0.46307}, 'Precision': [0.295455, 0.5], 'Inference time': 4.159, 'Learning time': 14.588, 'AUC PR': 0.46307}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(D, E) )
%   | then return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( interaction(H, I), interaction(G, I) )
%   | | then return 0.23314893509951226;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7983551693490115;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.0077864464562488415;  // std dev = 0,915, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(E, G) )
%   | | | then return 0.6533042520680452;  // std dev = 0,849, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.17780077116908896;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( phenotype(I, J), interaction(I, H) )
%   | | | then return 0.327334239218108;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13961097520444157;  // std dev = 0,068, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.25007449513354013;  // std dev = 1,260, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.6189245999260166;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194445022472462;  // std dev = 0,171, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), interaction(F, D) )
%   | | then if ( interaction(F, F) )
%   | | | then return -0.18877913872283306;  // std dev = 0,094, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.059726298530269575;  // std dev = 0,591, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(C, G), enzyme(D, G) )
%   | | | then return 0.6148228292490552;  // std dev = 0,058, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2808208884234225;  // std dev = 1,746, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   else if ( enzyme(A, H) )
%   | then return -0.17103639003550608;  // std dev = 0,229, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.4212684469634789;  // std dev = 0,710, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5334308852491715;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B), phenotype(D, F) )
%   | | then return 0.5368321185028173;  // std dev = 0,237, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(D, G), complex(E, H) )
%   | | | then return -0.16620463564754576;  // std dev = 0,125, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.03748921526554363;  // std dev = 0,859, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.5350599847143037;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14257785705716874;  // std dev = 1,365, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.4247808362559431;  // std dev = 0,768, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26532281480363856;  // std dev = 0,717, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.3411842102504763;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4637849948244052;  // std dev = 0,149, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C) )
%   | | then return -0.13772855546466475;  // std dev = 0,080, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(D, D), interaction(C, D) )
%   | | | then return 0.3327552599404861;  // std dev = 0,968, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.09892013048629963;  // std dev = 1,304, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( enzyme(A, F) )
%   | then return -0.15470759770452114;  // std dev = 0,257, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.3234633122716451;  // std dev = 0,646, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3154585864499594;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B), interaction(D, A) )
%   | | then return 0.32542017422219616;  // std dev = 0,185, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), interaction(E, F) )
%   | | | then return -0.12433637971494793;  // std dev = 0,075, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.02285103160350957;  // std dev = 0,752, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then return 0.37129588881403586;  // std dev = 0,109, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.26114741931687646;  // std dev = 0,550, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.04271570013651359;  // std dev = 1,485, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.21163683532899147;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2858453477146474;  // std dev = 0,123, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C) )
%   | | then return -0.10959052270923791;  // std dev = 0,066, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(C, F), phenotype(D, F) )
%   | | | then return 0.06131828479028495;  // std dev = 1,194, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.26172575212543997;  // std dev = 0,979, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( enzyme(A, G) )
%   | then return -0.14027835992550747;  // std dev = 0,243, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.22290084847953195;  // std dev = 0,615, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(C, E), phenotype(D, E) )
%   | then if ( phenotype(A, F), complex(C, G) )
%   | | then if ( complex(D, G), phenotype(D, F) )
%   | | | then return 0.047426420611615595;  // std dev = 0,729, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.24748819225243368;  // std dev = 0,126, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(C, D), enzyme(A, H) )
%   | | | then return 0.16759035672971775;  // std dev = 0,526, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.17202160619557122;  // std dev = 0,499, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( enzyme(D, I), interaction(J, D) )
%   | | then return 0.06766261475058997;  // std dev = 0,914, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.2449087040159977;  // std dev = 0,398, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( enzyme(A, K) )
%   | then return -0.12540323650150167;  // std dev = 0,223, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.17496990726225312;  // std dev = 0,608, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, D), phenotype(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.02771754755354588;  // std dev = 0,239, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(C, F) )
%   | | | then return 0.18791635942036838;  // std dev = 0,339, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.07023883704298745;  // std dev = 0,715, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(C, G), phenotype(D, G) )
%   | | then if ( phenotype(A, H), phenotype(D, H) )
%   | | | then return -0.26944177648676465;  // std dev = 0,191, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.004664011320329772;  // std dev = 0,862, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, C) )
%   | | | then return 0.004528515510659271;  // std dev = 0,255, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2083670224058438;  // std dev = 0,598, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( enzyme(A, I) )
%   | then return -0.1132033486339711;  // std dev = 0,207, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.13707466134233126;  // std dev = 0,605, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, C), complex(A, E) )
%   | then return -8.456509209868208E-4;  // std dev = 0,309, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.1567089881529462;  // std dev = 0,165, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( complex(F, H), complex(A, H) )
%   | | then return -0.08750194846736759;  // std dev = 0,376, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(F, I), enzyme(A, J) )
%   | | | then return -0.04746241113970983;  // std dev = 0,195, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.17974985554582584;  // std dev = 0,531, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( enzyme(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.29094198896084794;  // std dev = 0,239, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22336059699177732;  // std dev = 0,218, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return -0.1379516464763541;  // std dev = 0,613, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 2.857414453047528E-4;  // std dev = 0,758, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.728338
   AUC PR    = 0.071137
   CLL	      = -0.572671
   Precision = 0.017086 at threshold = 0.5
   Recall    = 0.662791
   F1        = 0.033314


Total learning time: 9.168 seconds
Total inference time: 4.317 seconds
AUC ROC: 0.728338


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:40:16
{'CLL': -0.572671, 'AUC ROC': 0.728338, 'F1': 0.033314, 'Recall': 0.662791, 'Precision': [0.017086, 0.5], 'Inference time': 4.317, 'Learning time': 9.168, 'AUC PR': 0.071137}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(D, E) )
%   | then if ( interaction(A, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( interaction(H, I), interaction(G, I) )
%   | | then if ( complex(H, J) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.607788
   AUC PR    = 0.010923
   CLL	      = -0.224119
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.818 seconds
Total inference time: 2.311 seconds
AUC ROC: 0.607788


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:40:21
{'CLL': -0.224119, 'AUC ROC': 0.607788, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.311, 'Learning time': 2.818, 'AUC PR': 0.010923}


