Starting experiment #3 for 22_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( follows(D, A), recursion_accounttype(D, B) )
%   | | then return 0.8440644280572592;  // std dev = 0,118, 71,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=70 */
%   | | else return 0.7812258581764351;  // std dev = 0,266, 52,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | else return 0.858148935099512;  // std dev = 1,88e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( follows(A, F), follows(E, F) )
%   | | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.7956489350995116;  // std dev = 1,369, 32,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | | else return -0.1418510649004873;  // std dev = 2,98e-07, 419,000 (wgt'ed) examples reached here.  /* #neg=419 */
%   | | else if ( follows(A, I), tweets(A, J) )
%   | | | then return 0.17698951480965672;  // std dev = 3,871, 69,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return 0.12427796735757655;  // std dev = 4,921, 124,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then return 0.7165959200989501;  // std dev = 0,088, 126,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=125 */
%   | else return 0.7266523127063117;  // std dev = 0,046, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.6038032450875985;  // std dev = 0,945, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.7303318559861939;  // std dev = 0,098, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return -0.1254446385283923;  // std dev = 0,000, 442,000 (wgt'ed) examples reached here.  /* #neg=442 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.6968020850043901;  // std dev = 2,217, 46,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=41 */
%   | | | else return -0.15136544798745655;  // std dev = 0,951, 91,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.25847326989775926;  // std dev = 2,747, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.13181091060153588;  // std dev = 2,796, 38,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, E) )
%   | then if ( follows(A, D), follows(E, A) )
%   | | then return 0.5476272499464169;  // std dev = 0,125, 123,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=121 */
%   | | else if ( tweets(C, F), tweets(A, F) )
%   | | | then return 0.471711301456692;  // std dev = 1,352, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.5573103182478537;  // std dev = 0,029, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.645057773181348;  // std dev = 0,213, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( follows(A, G), follows(G, A) )
%   | then if ( follows(G, H), recursion_accounttype(H, B) )
%   | | then return 0.5740196904050037;  // std dev = 0,070, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.11231637819360651;  // std dev = 0,000, 345,000 (wgt'ed) examples reached here.  /* #neg=345 */
%   | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | then return 0.5556111526042056;  // std dev = 0,005, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.09551648373050743;  // std dev = 0,950, 81,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=2 */
%   | | | else return 0.13173199315214235;  // std dev = 5,649, 175,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=55 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), follows(A, E) )
%   | then return 0.38720568446569453;  // std dev = 0,197, 122,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=117 */
%   | else return 0.42300826123005153;  // std dev = 0,059, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then if ( follows(F, H), follows(H, A) )
%   | | | then return 0.2515689043870405;  // std dev = 1,148, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.4348327894768725;  // std dev = 0,248, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return -0.10192050608975473;  // std dev = 0,013, 400,000 (wgt'ed) examples reached here.  /* #neg=400 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then if ( follows(A, J), follows(J, I) )
%   | | | then return 0.43890624633104564;  // std dev = 0,026, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.22899425971919743;  // std dev = 0,859, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.05559323033110954;  // std dev = 5,130, 170,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=44 */
%   | | | else return 0.10966497752117396;  // std dev = 2,764, 36,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( tweets(C, E), follows(D, C) )
%   | | then return 0.31706878111776327;  // std dev = 0,134, 211,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=207 */
%   | | else if ( recursion_accounttype(C, B) )
%   | | | then return 0.31702688425204345;  // std dev = 0,019, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08148553433319022;  // std dev = 1,084, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.0929712373801853;  // std dev = 0,012, 412,000 (wgt'ed) examples reached here.  /* #neg=412 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return 0.36869162222298507;  // std dev = 0,091, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.6508556785514162;  // std dev = 0,990, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.16655398778906247;  // std dev = 0,034, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.12085643917179752;  // std dev = 2,904, 37,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.06125780652334125;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.2611435352154719;  // std dev = 0,077, 165,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=164 */
%   | else return 0.053282330189038385;  // std dev = 0,883, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then return -0.07729439345391306;  // std dev = 0,073, 278,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=7 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.27332045898317175;  // std dev = 0,266, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.08542452655000464;  // std dev = 0,007, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.4728014079498204;  // std dev = 2,278, 58,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=55 */
%   | | | else return -0.1729396017397858;  // std dev = 0,530, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.10911595689488947;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.1646715124504449;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(E, D) )
%   | then return 0.21579210556961453;  // std dev = 0,083, 147,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=146 */
%   | else if ( follows(A, F), follows(F, C) )
%   | | then if ( follows(C, F) )
%   | | | then return 0.17784187929129772;  // std dev = 0,015, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.01025996469929875;  // std dev = 0,888, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.14563637341301128;  // std dev = 0,972, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( follows(G, A), recursion_accounttype(G, B) )
%   | then if ( tweets(G, H) )
%   | | then return 0.21379645479265755;  // std dev = 0,057, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.03580388499972459;  // std dev = 0,856, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(I, A) )
%   | | then return -0.05951549611478086;  // std dev = 0,083, 469,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=30 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.028861162877679963;  // std dev = 2,521, 108,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | | else return 0.13300196132572825;  // std dev = 3,564, 60,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then if ( follows(E, C), follows(C, E) )
%   | | then if ( follows(E, A), follows(A, C) )
%   | | | then return 0.13254166432466893;  // std dev = 1,936, 74,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=70 */
%   | | | else return 0.18450500033487527;  // std dev = 0,060, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else return -0.03574373873645645;  // std dev = 0,911, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.18503178475940088;  // std dev = 0,071, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( follows(F, A) )
%   | then return -0.045748859979025905;  // std dev = 0,110, 452,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=48 */
%   | else if ( follows(A, G), tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.3805145941850896;  // std dev = 0,821, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.15623089533265083;  // std dev = 0,398, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.05191317805752901;  // std dev = 1,786, 52,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.13170722298756452;  // std dev = 3,085, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.1659092941780613;  // std dev = 0,143, 137,000 (wgt'ed) examples reached here.  /* #pos=137 */
%   | else if ( follows(A, C), tweets(A, E) )
%   | | then return -0.03522169034597513;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( follows(A, F) )
%   | | | then return 0.1516138418709874;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10700763084142566;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( follows(G, A) )
%   | then return -0.04492951435659373;  // std dev = 0,106, 491,000 (wgt'ed) examples reached here.  /* #neg=443 #pos=48 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.2716867658591869;  // std dev = 1,293, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.11347146241263517;  // std dev = 0,590, 88,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.09870893320519018;  // std dev = 2,068, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.06430869088446343;  // std dev = 2,751, 37,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, E) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then return 0.14868708358396876;  // std dev = 0,218, 119,000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else if ( follows(D, A), tweets(D, F) )
%   | | | then return -0.10322008329797214;  // std dev = 0,861, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10839091469138319;  // std dev = 1,018, 33,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | else return 0.2932270812535156;  // std dev = 0,242, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( follows(A, G), follows(G, A) )
%   | then return -0.043610613776853394;  // std dev = 0,097, 394,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=34 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.30805601465699356;  // std dev = 1,402, 55,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=54 */
%   | | | else return -0.13151869615071496;  // std dev = 0,806, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | | then return 0.09383310671412864;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.052838112798775545;  // std dev = 2,903, 97,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.781970425023355;  // std dev = 0,088, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1555325621642444;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5398852345479344;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.07610864789974872;  // std dev = 0,735, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.5516388476775469;  // std dev = 0,206, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14538384447947555;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(C, D) )
%   | | then return 0.2825914146636497;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5700691149133855;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.12823461436532158;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.18096415380914496;  // std dev = 0,388, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11456938878269128;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then return 0.04846188386521683;  // std dev = 0,464, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then return 0.04168107542330166;  // std dev = 0,458, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(F, A), enzyme(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, A), enzyme(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then return 0.035817851850979146;  // std dev = 0,454, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(A, D), interaction(D, A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.17929079321847297;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2447636694434281;  // std dev = 0,157, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.09842122383461396;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11573005509338641;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.757654
   AUC PR    = 0.163369
   CLL	      = -0.130734
   Precision = 0.216418 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.262443


Total learning time: 1.306 seconds
Total inference time: 6.36 seconds
AUC ROC: 0.757654


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.138578
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.732 seconds
Parameter learned model CLL: -0.138578


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), enzyme(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 2, 0], 'false,false,true,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.088, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.0, 1, 0], 'false,true,false': [0.0, 3, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(D, A), interaction(A, E)', 'false,false,false': 'interaction(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.735, 3, 1], 'false,true,true': [0.0, 0, 1], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'true': 'enzyme(A, D), interaction(E, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.206, 0, 2], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.0, 2, 0], 'false,true,false': [0.0, 3, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(C, D)', 'false,false,false': 'interaction(I, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 3, 0], 'false,false,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 3], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false': 'interaction(A, E)'}, {'false,true,false,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.388, 1, 2], 'false,true,false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H)', 'true': 'interaction(A, D), interaction(D, E)', 'false,true': 'enzyme(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,false,true': [0.464, 3, 2], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(F, A), enzyme(A, G)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(H, A), interaction(I, H)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.0, 1, 0], 'false,true': [0.458, 3, 2], 'false,false,false,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'true,false': 'interaction(C, A), enzyme(A, E)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, G)', 'false,false,false': 'enzyme(A, J)', 'true,false,false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.454, 3, 2], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(D, C), interaction(E, D)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(A, D), interaction(D, A)', 'false,false,false': 'interaction(A, I), recursion_proteinclass(I, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.157, 0, 2], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0], 'false,false,true,false': [0.073, 4, 0]}]]
[{'': [1.4802973661668753e-16, 0.20408163265306123], 'false,false,true': [0.0, 0.18750000000000003], 'false,false': [0.24000000000000005, 0.0], 'true': [0.0, 0.0], 'false': [nan, 0.20408163265306126], 'true,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.17606517280807027], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0], 'false,true,true': [0.00390587661047348, nan], 'true': [nan, 0.0], 'false,true': [0.00390587661047348, -4.625929269271485e-18], 'false': [0.21250119488075075, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.12942594940711635], 'false,false': [0.0, 0.09802304002081934], 'true': [0.0, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.12861147193649017], 'true,true': [0.0, nan], 'false,false,false': [0.13519989654513517, 0.0]}, {'': [-3.700743415417188e-17, 0.10060917081119634], 'false,false': [nan, 0.0], 'false,true,true': [0.02117405027840452, nan], 'true': [nan, -3.700743415417188e-17], 'false,true': [0.02117405027840452, -4.625929269271485e-18], 'false': [0.1250713721229994, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.06338648081889184, 0.0], 'true,true,false': [0.0, 0.0], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'true': [0.01094160284824459, -2.3129646346357427e-18], 'false': [nan, 0.0], 'true,true': [0.0, 0.0116585713090048], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.04099911223381168], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,false': [nan, 0.0], 'true': [0.0, nan], 'false,true': [0.050307180218533844, 0.0], 'false': [0.05114592608237169, 0.0]}, {'': [0.0, 0.033238135975945854], 'false,false': [0.04304933970502236, 0.0], 'true': [0.0, nan], 'false,true': [nan, 0.0], 'false': [0.0, 0.03405354288151434], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.032724379849397585], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false': [0.04204033620114394, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [-4.625929269271485e-18, 0.03167258087067213], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false': [0.0412367604994617, 0.0], 'false,false,false': [nan, 0.0], 'true,false,false': [0.0, 0.0]}, {'': [0.0, 0.02692108320290945], 'false,false,true': [0.012267033179026957, 0.0013148032604299014], 'false,false': [0.03113796233868694, 0.015592152918735676], 'true': [0.0, nan], 'false': [0.0, 0.027260270112212947], 'true,true': [0.0, nan], 'false,false,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, A), interaction(C, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;false;interaction(A, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false;interaction(F, A), interaction(A, F).;true;true
2;false,false,false;interaction(A, I).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
3;false;interaction(A, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(G, A), interaction(H, G).;true;true
4;true,true,false;recursion_proteinclass(C, B).;true;true
4;true,true;enzyme(C, E), interaction(C, D).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false;interaction(A, E).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false;interaction(A, H).;true;true
6;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
6;false,false,false;interaction(I, A), interaction(J, I).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false;interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(A, G).;true;true
8;true,false;interaction(F, A).;true;true
8;false,false;interaction(H, A), interaction(I, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
9;false,false;interaction(G, A).;true;true
9;false;interaction(F, A), interaction(A, F).;true;true
9;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.781970425023355;  // std dev = 0,088, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1555325621642444;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return 0.5398852345479344;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.07610864789974872;  // std dev = 0,735, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.5516388476775469;  // std dev = 0,206, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.14538384447947555;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(C, D) )
%   | | then return 0.2825914146636497;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5700691149133855;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.12823461436532158;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then return 0.18096415380914496;  // std dev = 0,388, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.11456938878269128;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E) )
%   | | then return 0.04846188386521683;  // std dev = 0,464, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then return 0.04168107542330166;  // std dev = 0,458, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then return 0.035817851850979146;  // std dev = 0,454, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return 0.17929079321847297;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2447636694434281;  // std dev = 0,157, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.09842122383461396;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11573005509338641;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.748794
   AUC PR    = 0.132638
   CLL	      = -0.155968
   Precision = 0.268293 at threshold = 0.5
   Recall    = 0.505747
   F1        = 0.350598


Total learning time: 1.099 seconds
Total inference time: 4.373 seconds
AUC ROC: 0.748794


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.138578
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.736 seconds
Refined model CLL: -0.138578


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.757654
   AUC PR    = 0.163369
   CLL	      = -0.130734
   Precision = 0.216418 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.262443


Total learning time: 3.873 seconds
Total inference time: 6.36 seconds
AUC ROC: 0.757654
Total revision time: 3.873
Best scored revision CLL: -0.138578


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 04:15:31
{'CLL': -0.130734, 'AUC ROC': 0.757654, 'F1': 0.262443, 'Recall': 0.333333, 'Precision': [0.216418, 0.5], 'parameter_5': {'CLL': -0.130734, 'AUC ROC': 0.757654, 'F1': 0.262443, 'Recall': 0.333333, 'Precision': [0.216418, 0.5], 'Inference time': 6.36, 'Learning time': 1.306, 'AUC PR': 0.163369}, 'Inference time': 6.36, 'Learning time': 3.873, 'AUC PR': 0.163369}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return 0.7518526675222027;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 3.211301551399777E-4;  // std dev = 0,831, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return 0.4760861838239833;  // std dev = 0,807, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12547987340353495;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return 0.4701801510435637;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.023907310728148622;  // std dev = 0,771, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.35672634652272106;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1461332408545831;  // std dev = 0,627, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.18720009247875027;  // std dev = 0,189, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.2796239671643149;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12484430646022626;  // std dev = 0,612, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.16225355054408688;  // std dev = 0,170, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return 0.20579737074195822;  // std dev = 0,615, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10979334928236839;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, C) )
%   | then return 0.20089090374019614;  // std dev = 0,475, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.08629083377574882;  // std dev = 0,261, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.15164205987465287;  // std dev = 0,194, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return 0.15040112645488912;  // std dev = 0,552, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10327854849775597;  // std dev = 0,081, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.1557340676613857;  // std dev = 0,412, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08065671613606978;  // std dev = 0,338, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.508789
   AUC PR    = 0.014994
   CLL	      = -0.472001
   Precision = 0.007467 at threshold = 0.5
   Recall    = 0.321839
   F1        = 0.014595


Total learning time: 2.089 seconds
Total inference time: 3.263 seconds
AUC ROC: 0.508789


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 04:15:36
{'CLL': -0.472001, 'AUC ROC': 0.508789, 'F1': 0.014595, 'Recall': 0.321839, 'Precision': [0.007467, 0.5], 'Inference time': 3.263, 'Learning time': 2.089, 'AUC PR': 0.014994}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.007467
   CLL	      = -0.196856
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.792 seconds
Total inference time: 1.357 seconds
AUC ROC: 0.5


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 04:15:39
{'CLL': -0.196856, 'AUC ROC': 0.5, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.357, 'Learning time': 0.792, 'AUC PR': 0.007467}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7589111597349626;  // std dev = 0,097, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7983489072589708;  // std dev = 0,097, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.16221334521702105;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1803221146449018;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.1667945087684516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(C, F), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5358141009024384;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5456078506543631;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.14135702677192458;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1397437228918123;  // std dev = 1,193, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.08043953410959218;  // std dev = 0,839, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.49944071607453006;  // std dev = 0,218, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5804006492763766;  // std dev = 0,217, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.15430722185247894;  // std dev = 0,032, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06885942346960626;  // std dev = 0,838, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(C, D) )
%   | | then return 0.2968989741748942;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4386957685218552;  // std dev = 0,281, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.13524496623719087;  // std dev = 0,028, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13274819041200794;  // std dev = 0,796, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.16437723371622107;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.09322985435763692;  // std dev = 0,543, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.34654556220879545;  // std dev = 0,184, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12413167424343277;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7588067160814219;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.18990794612360382;  // std dev = 0,070, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), interaction(C, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.14704678169804064;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then return 0.059232394752972574;  // std dev = 0,748, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07632591035093668;  // std dev = 0,637, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12128702520240209;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then return 0.05664920552913398;  // std dev = 0,741, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1689532729316255;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1780564547768799;  // std dev = 0,564, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.10894281565767512;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, A), enzyme(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then return 0.04847877671264885;  // std dev = 0,732, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.044487908370113016;  // std dev = 0,603, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0988090200036902;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(A, D), interaction(D, A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, D), enzyme(D, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11814356978787921;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), interaction(A, G) )
%   | then return 0.08249152067074578;  // std dev = 0,250, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.33074989574130875;  // std dev = 0,283, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14998179747199358;  // std dev = 0,132, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1285720015798443;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.986151
   AUC PR    = 0.345641
   CLL	      = -0.201458
   Precision = 0.17801 at threshold = 0.5
   Recall    = 0.781609
   F1        = 0.289979


Total learning time: 1.451 seconds
Total inference time: 7.001 seconds
AUC ROC: 0.986151


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.187934
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.828 seconds
Parameter learned model CLL: -0.187934


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'true': 'interaction(D, A), interaction(C, D)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(I, A), enzyme(A, J)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.0, 1, 0], 'false,true,true': [0.0, 0, 1], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.816, 2, 1], 'false,false,true,false': [1.449, 7, 3], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.097, 0, 3], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.0, 1, 0], 'false,true,false': [5.27e-09, 7, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.8, 2, 1], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.097, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(C, F), enzyme(A, F)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false': 'interaction(G, A), interaction(A, G)', 'true,true': 'interaction(D, A), interaction(A, E)', 'false,false,false': 'interaction(A, J)'}, {'false,false,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.193, 6, 3], 'false,true,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.839, 3, 1], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'true': 'enzyme(A, D), interaction(E, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.218, 0, 3], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.838, 3, 1], 'false,true,false': [0.032, 7, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.217, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(C, D)', 'false,false,false': 'interaction(I, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.028, 7, 0], 'false,false,false,true': [0.0, 1, 0], 'true,true,false,false': [0.281, 0, 5], 'true,true,true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 3], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.796, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false': 'interaction(A, E)'}, {'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.543, 3, 3], 'false,true,false,true': [0.184, 0, 3], 'false,false,true,false': [0.07, 3, 0], 'true,true': [0.0, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I)', 'true,false': 'interaction(F, A), interaction(C, F)', 'true': 'interaction(A, D), interaction(D, E)', 'false,true': 'enzyme(G, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'false,false,true': [0.748, 7, 5], 'false,false,false,true': [0.637, 2, 1], 'false,true,false': [0.0, 0, 2], 'false,false,false,false': [0.0, 1, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(F, A), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.564, 1, 1], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.741, 7, 6], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'true,false': 'interaction(C, A), enzyme(A, E)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, G)', 'false,false,false': 'enzyme(A, J)', 'true,false,false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.732, 7, 6], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'false,false,true,false': [0.603, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true,false': 'interaction(A, D), enzyme(D, F)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false': 'interaction(G, A), interaction(A, G)', 'true,true': 'interaction(A, D), interaction(D, A)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'false,false,true,true': [0.283, 0, 5], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 1], 'false,true': [0.25, 1, 2], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,false,true,false': [0.132, 8, 0]}]]
[{'': [1.4802973661668753e-16, 0.24221453287197234], 'false,false,true': [0.0, 0.20999999999999988], 'false,false': [0.24305555555555536, 0.18750000000000003], 'true': [0.0, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.23437500000000006], 'true,true': [0.0, nan], 'false,false,false': [0.0, 0.22222222222222224]}, {'': [0.0, 0.21816912834476684], 'false,false,true': [nan, 0.21341332033973548], 'false,false': [0.21341332033973548, 0.0], 'false,true,true': [0.0031106718595348415, 0.0031106718595348415], 'true': [nan, 0.0], 'false,true': [0.003499505841976669, 3.96508223080413e-18], 'false': [0.22160227522492404, 0.18265185592665556], 'false,false,false': [0.0, nan]}, {'': [9.557345923766336e-05, 0.15693035184988757], 'true,true,false': [nan, 0.0], 'false,false': [0.0, 0.1643641362007229], 'true': [9.557345923766336e-05, nan], 'false,true': [0.0, 0.0], 'false': [0.10487127618162541, 0.16420147862513218], 'true,true': [0.0, 0.0], 'false,false,false': [0.15804027867922865, 0.17615797860377297]}, {'': [-3.700743415417188e-17, 0.14082021331083722], 'false,false': [nan, 0.1755818205589612], 'false,true,true': [0.015887183913822784, 0.01570696940616778], 'true': [nan, -3.700743415417188e-17], 'false,true': [0.017435704356007126, 0.0001426304041890996], 'false': [0.1278991976947337, 0.1755818205589612], 'false,false,false': [0.1755818205589612, nan]}, {'': [0.07339613905790507, 0.17508468579381126], 'false,false,true': [nan, 0.21137536830923667], 'false,false': [0.21137536830923667, 0.0], 'true,true,false': [0.0, 0.015791151096499645], 'true': [0.012612811086858904, 0.00011372447198632856], 'false': [nan, 0.17508468579381126], 'true,true': [0.0, 0.013132017646222877], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.08196500055786225], 'false,false,true': [0.0, 0.001615863387568935], 'false,false': [0.16997305571870097, nan], 'false,true,false': [0.011330174284636563, 0.0], 'true': [0.0, nan], 'false,true': [0.049107354860055415, 0.05910976308059285], 'false': [0.054554078622072684, 0.16997305571870097]}, {'': [0.0009831653087341435, 0.057874625795403825], 'false,false': [0.04656967860032307, 0.10876391632257282], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.06231397263638609], 'false,false,false': [0.13525583702226177, 0.0]}, {'': [0.0, 0.05728901065764811], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.12447896015172337], 'true': [nan, 0.0], 'false': [0.04222208828279739, 0.10520424322280791], 'false,false,false': [0.15926224648426276, 0.0]}, {'': [-4.625929269271485e-18, 0.05410458276991413], 'false,false,true': [nan, 0.12131109434685255], 'false,false': [0.12131109434685255, 0.0], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false': [0.04119962619817392, 0.09483344757539572], 'false,false,false': [nan, 0.0], 'true,false,false': [0.0, 0.0]}, {'': [6.291234253892955e-05, 0.05079594261557781], 'false,false,true': [0.016014692830571643, 0.002183063391862968], 'false,false': [0.062201846515562424, 0.017236936957404], 'true,true,false': [nan, 0.0], 'true': [6.291234253892955e-05, nan], 'false': [0.0209020210627968, 0.05632631921049935], 'true,true': [0.0, 0.0], 'false,false,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
0;false,false;interaction(A, G).;true;true
0;true;interaction(D, A), interaction(C, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
0;false,false,false;interaction(I, A), enzyme(A, J).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;false;interaction(A, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, E).;true;true
2;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
2;false;interaction(G, A), interaction(A, G).;true;true
2;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
3;false;interaction(A, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(G, A), interaction(H, G).;true;true
4;true,true,false;recursion_proteinclass(C, B).;true;true
4;true,true;enzyme(C, E), interaction(C, D).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;false;interaction(A, E).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(D, E).;true;true
6;false,false;interaction(A, I).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,false,false;interaction(J, A), interaction(K, J).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(F, A), enzyme(A, G).;true;true
7;false;interaction(A, E).;true;true
7;false,false,false;interaction(I, A), interaction(J, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(A, G).;true;true
8;true,false;interaction(F, A).;true;true
8;false,false;interaction(H, A), interaction(I, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;false,false;interaction(H, A).;true;true
9;true;interaction(A, D), interaction(D, A).;true;true
9;false;interaction(G, A), interaction(A, G).;true;true
9;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.7786300334969667;  // std dev = 0,145, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.16221334521702105;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then return 0.1803221146449018;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1667945087684516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, E) )
%   | then return 0.5480406719318222;  // std dev = 0,010, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5407149071173598;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.14135702677192458;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.2928029510234688;  // std dev = 1,237, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.15176161816033598;  // std dev = 0,047, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4181078061200519;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.5225011459899737;  // std dev = 0,285, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.140319316125868;  // std dev = 0,026, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.053461536532421354;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(C, D) )
%   | | then return 0.2890515204174672;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32111497719367493;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4225061493056773;  // std dev = 0,245, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, F) )
%   | | then return -0.14409377487359415;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10947203821974302;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then return 0.12431574400473684;  // std dev = 0,763, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.19324709874174684;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2554474482212192;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then return 0.09261117259887897;  // std dev = 0,492, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.3413510462584058;  // std dev = 0,162, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12081279722182604;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.2625868490842993;  // std dev = 0,651, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.19029044943061307;  // std dev = 0,036, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.21076285457588784;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15826718644206283;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.20954685512946902;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.006127675157359934;  // std dev = 0,369, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.12261423011111883;  // std dev = 0,553, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.079816405386472;  // std dev = 0,720, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14032595892948568;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17723900711553087;  // std dev = 0,000728, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.28918756631543263;  // std dev = 0,116, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1250409819743856;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.009450361098344648;  // std dev = 0,330, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(G, A), enzyme(A, H) )
%   | | then return -0.19759043754539898;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.19588835545690783;  // std dev = 0,641, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.12423626175400268;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15337978404025376;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then return 0.15258808306800964;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.15258808306800964;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.23431119994819757;  // std dev = 0,100, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11201564071518677;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.008411052659596817;  // std dev = 0,331, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then return 0.046224748434066563;  // std dev = 0,688, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11133788320024542;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.1345032919929665;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.14044682356610683;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then return 0.0877241595719387;  // std dev = 0,222, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2762320576111975;  // std dev = 0,362, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13876044987671357;  // std dev = 0,191, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.13388540710931984;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09782067407318101;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.942837
   AUC PR    = 0.251666
   CLL	      = -0.196399
   Precision = 0.258427 at threshold = 0.5
   Recall    = 0.528736
   F1        = 0.34717


Total learning time: 1.977 seconds
Total inference time: 11.79 seconds
AUC ROC: 0.942837


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.172059
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.821 seconds
Refined model CLL: -0.172059


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.942837
   AUC PR    = 0.251666
   CLL	      = -0.196399
   Precision = 0.258427 at threshold = 0.5
   Recall    = 0.528736
   F1        = 0.34717


Total learning time: 5.077 seconds
Total inference time: 11.79 seconds
AUC ROC: 0.942837
Total revision time: 5.077
Best scored revision CLL: -0.172059


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 04:16:03
{'CLL': -0.196399, 'AUC ROC': 0.942837, 'F1': 0.34717, 'Recall': 0.528736, 'Precision': [0.258427, 0.5], 'Inference time': 11.79, 'Learning time': 5.077, 'AUC PR': 0.251666, 'parameter_10': {'CLL': -0.201458, 'AUC ROC': 0.986151, 'F1': 0.289979, 'Recall': 0.781609, 'Precision': [0.17801, 0.5], 'Inference time': 7.001, 'Learning time': 1.451, 'AUC PR': 0.345641}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.4709616933105613;  // std dev = 1,148, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then return 0.38973663913567536;  // std dev = 1,087, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.14238520752422565;  // std dev = 0,059, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then return 0.17402913532472045;  // std dev = 0,904, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, A), interaction(G, C) )
%   | | then return 0.7026651470407733;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3115118249567018;  // std dev = 0,871, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( enzyme(A, H) )
%   | then return -0.16532671550413194;  // std dev = 0,134, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.19092266386392037;  // std dev = 0,985, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.48918239084604664;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.31826479928260437;  // std dev = 1,046, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then return 0.25085449145285066;  // std dev = 1,034, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.14281143674996535;  // std dev = 0,109, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then return 0.06303741314283592;  // std dev = 0,872, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, A), interaction(G, C) )
%   | | then return 0.46675188737281764;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2003415577821172;  // std dev = 0,732, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( phenotype(A, H) )
%   | then return 0.1442838059049631;  // std dev = 0,873, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.19526669708921066;  // std dev = 0,235, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33528322060943266;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.198791780340841;  // std dev = 0,960, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then return 0.15247185127123833;  // std dev = 0,995, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.13611527064979181;  // std dev = 0,138, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.26532884885732505;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.15248505722133013;  // std dev = 0,958, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then return 0.11623922625952696;  // std dev = 0,994, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.12125904408642622;  // std dev = 0,125, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then return -0.03269005501559455;  // std dev = 0,848, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, A), interaction(G, C) )
%   | | then return 0.2850076786141294;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1177377448764744;  // std dev = 0,593, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( phenotype(A, H) )
%   | then return 0.07661970104708495;  // std dev = 0,804, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.18525190259696603;  // std dev = 0,293, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20693553500613102;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then return -0.11849884974104256;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.42051810304317316;  // std dev = 0,214, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21055103391112415;  // std dev = 0,280, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( complex(A, H) )
%   | | then return 0.05515667381785893;  // std dev = 0,363, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.21115150162395513;  // std dev = 0,224, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1752228449713329;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, D) )
%   | then return -0.08350499649717599;  // std dev = 0,397, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.16923181729410303;  // std dev = 0,581, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.032120870991836886;  // std dev = 0,890, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1255620837306444;  // std dev = 0,113, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.560467
   AUC PR    = 0.01471
   CLL	      = -0.352218
   Precision = 0.015785 at threshold = 0.5
   Recall    = 0.229885
   F1        = 0.029542


Total learning time: 3.245 seconds
Total inference time: 3.426 seconds
AUC ROC: 0.560467


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 04:16:10
{'CLL': -0.352218, 'AUC ROC': 0.560467, 'F1': 0.029542, 'Recall': 0.229885, 'Precision': [0.015785, 0.5], 'Inference time': 3.426, 'Learning time': 3.245, 'AUC PR': 0.01471}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.537277
   AUC PR    = 0.033051
   CLL	      = -0.194421
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.07 seconds
Total inference time: 1.933 seconds
AUC ROC: 0.537277


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 04:16:14
{'CLL': -0.194421, 'AUC ROC': 0.537277, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.933, 'Learning time': 1.07, 'AUC PR': 0.033051}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10814893509951232;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7611380874192215;  // std dev = 0,144, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.8028027626274885;  // std dev = 0,102, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.15553256216424446;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1803221146449018;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.1667945087684516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(C, F), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.545036305824341;  // std dev = 0,015, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.547117843397667;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.13618038191976814;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10643024824363059;  // std dev = 1,435, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.08043953410959218;  // std dev = 0,839, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.4180154289754;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.5046549075525087;  // std dev = 0,330, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5907875639128516;  // std dev = 0,234, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1444831359800223;  // std dev = 0,036, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(I, J) )
%   | | | then return 0.42002795070817256;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(K, A) )
%   | | | then return 0.06885942346960626;  // std dev = 0,838, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(C, D) )
%   | | then return 0.29503383304609976;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.3210523603471466;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4448189724083165;  // std dev = 0,365, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.12753814696079654;  // std dev = 0,033, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.322416937052027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13274819041200794;  // std dev = 0,796, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.16437723371622107;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25501217755869054;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2565824175437922;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.09787434555345736;  // std dev = 0,775, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.35515822810074144;  // std dev = 0,201, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11784738211448907;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.507571043040127;  // std dev = 0,355, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.18990794612360382;  // std dev = 0,070, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.20964464154065832;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), interaction(C, F) )
%   | | then if ( interaction(F, C) )
%   | | | then return 0.17183544284743502;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.14224680821169855;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.21001421063633283;  // std dev = 0,000905, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 0.05340384737932613;  // std dev = 0,957, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.09592230970594735;  // std dev = 0,685, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12128702520240209;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17721687658730625;  // std dev = 0,000830, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then return 0.049675980579314494;  // std dev = 0,947, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.17172264261058204;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.18558606275354683;  // std dev = 0,608, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10894281565767512;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15306355555353068;  // std dev = 0,000578, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, A), enzyme(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0.15260683836240763;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15260683836240763;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then return 0.0427042801315017;  // std dev = 0,937, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1267399448457197;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06044104809533315;  // std dev = 0,651, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0988090200036902;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(A, D), interaction(D, A) )
%   | | then return 0.13388994542208443;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, D), enzyme(D, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1146554335937795;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), interaction(A, G) )
%   | then return 0.0912404249920272;  // std dev = 0,354, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3512535750673814;  // std dev = 0,319, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14161073644646763;  // std dev = 0,147, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.1339000517364144;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.047469608804966666;  // std dev = 0,443, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.975132
   AUC PR    = 0.250829
   CLL	      = -0.206006
   Precision = 0.167464 at threshold = 0.5
   Recall    = 0.804598
   F1        = 0.277228


Total learning time: 1.646 seconds
Total inference time: 6.894 seconds
AUC ROC: 0.975132


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188777
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.782 seconds
Parameter learned model CLL: -0.188777


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'true': 'interaction(D, A), interaction(C, D)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(I, A), enzyme(A, J)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 4], 'true,false': [2.11e-08, 0, 3], 'false,false,false,true': [0.0, 1, 0], 'false,true,true': [0.0, 0, 2], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.816, 2, 1], 'false,false,true,false': [1.732, 12, 4], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.144, 0, 6], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 4], 'false,false,false,true': [0.0, 1, 0], 'false,true,false': [0.0, 12, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.8, 2, 1], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.102, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(C, F), enzyme(A, F)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false': 'interaction(G, A), interaction(A, G)', 'true,true': 'interaction(D, A), interaction(A, E)', 'false,false,false': 'interaction(A, J)'}, {'false,false,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.435, 10, 4], 'false,true,true': [0.009, 0, 5], 'true,true,false,false': [0.015, 0, 2], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.839, 3, 1], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, A), interaction(I, J)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'true': 'enzyme(A, D), interaction(E, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(K, A)'}, {'false,true,true,true': [0.33, 0, 6], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.002, 0, 4], 'false,false,false,true': [0.838, 3, 1], 'false,true,false': [0.036, 12, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.234, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(C, D)', 'false,false,false': 'interaction(I, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.033, 12, 0], 'false,false,false,true': [0.0, 1, 0], 'true,true,false,false': [0.365, 0, 7], 'true,true,true': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'true,true,false,true': [0.002, 0, 4], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.796, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false': 'interaction(A, E)'}, {'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.355, 0, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.775, 6, 6], 'false,true,false,true': [0.201, 0, 3], 'false,false,true,false': [0.07, 3, 0], 'true,true': [0.0, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I)', 'true,false': 'interaction(F, A), interaction(C, F)', 'true': 'interaction(A, D), interaction(D, E)', 'false,true': 'enzyme(G, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'true,false,true': 'interaction(F, C)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'false,false,true': [0.957, 12, 8], 'false,false,false,true': [0.685, 2, 1], 'false,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 1], 'false,true,false': [0.000905, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(F, A), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.00083, 0, 4], 'false,false,false,true': [0.608, 1, 2], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.947, 12, 9], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'true,false': 'interaction(C, A), enzyme(A, E)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, G)', 'false,false,false': 'enzyme(A, J)', 'true,false,false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.937, 12, 9], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 1], 'true,true': [0.000578, 0, 2], 'false,false,true,false': [0.651, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true,false': 'interaction(A, D), enzyme(D, F)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false': 'interaction(G, A), interaction(A, G)', 'true,true': 'interaction(A, D), interaction(D, A)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'false,false,true,true': [0.319, 0, 5], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'true,true,false,false': [0.002, 0, 2], 'true,true,true': [0.0, 0, 1], 'false,true': [0.354, 2, 5], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.443, 2, 1], 'false,false,true,false': [0.147, 11, 0]}]]
[{'': [0.0, 0.24408284023668642], 'false,false,true': [0.0, 0.18749999999999983], 'false,false': [0.24000000000000005, 0.18750000000000003], 'true': [0.0, 1.4802973661668753e-16], 'false,true': [0.0, nan], 'false': [0.0, 0.23437500000000008], 'true,true': [0.0, nan], 'false,false,false': [0.0, 0.22222222222222224]}, {'': [0.0, 0.21286908139583718], 'false,false,true': [0.0, 0.21341332033973548], 'false,false': [0.21456326306739382, 0.0], 'false,true,true': [0.003471890320420871, 0.003471890320420723], 'true': [nan, 0.0], 'false,true': [0.003857655911578581, 0.0], 'false': [0.21372017560175788, 0.20880771394417322], 'false,false,false': [0.0, nan]}, {'': [9.485475987958125e-05, 0.1490996795421838], 'true,true,false': [nan, 0.00010671160486452891], 'false,false': [0.0, 0.1537168524769388], 'true': [9.485475987958125e-05, nan], 'false,true': [1.700982305763432e-05, 0.0], 'false': [0.09529714267401189, 0.15695382953485387], 'true,true': [0.0, 0.00010671160486452891], 'false,false,false': [0.14715498721694237, 0.17615797860377297]}, {'': [7.555446613349837e-07, 0.12861196990670792], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.1755818205589612], 'false,true,true': [0.01814317816015698, 0.018223896760588925], 'true': [nan, 7.555446613349837e-07], 'false,true': [0.01981871424734289, 0.00011086126588856031], 'false': [0.12108259512180278, 0.16019654997083355], 'false,false,false': [0.1755818205589612, nan]}, {'': [0.07289785119117681, 0.15121489370714494], 'false,false,true': [nan, 0.21137536830923667], 'false,false': [0.21137536830923667, 0.0], 'true,true,false': [6.070495394278064e-07, 0.018990090944331652], 'true': [0.014654157772526459, 8.935980907665934e-05], 'false': [0.0, 0.17508468579381126], 'true,true': [0.0, 0.015629525555405574], 'false,false,false': [0.0, nan]}, {'': [4.623100520323442e-07, 0.07005228236021444], 'false,false,true': [0.06311936340851243, 0.001615863387568935], 'false,false': [0.14297172907391267, nan], 'false,true,false': [0.013424997648620651, -2.3129646346357427e-18], 'true': [0.0, 0.0], 'false,true': [0.050031613253208825, 0.05419373417066969], 'false': [0.05264072784488015, 0.14297172907391267]}, {'': [0.0007608323047632176, 0.05508170210458002], 'false,false': [0.04575848878968539, 0.12612924277463744], 'true,false': [0.0, 0.0], 'true': [0.0, 0.00021887182490177431], 'false,true': [nan, 2.7316263295773524e-07], 'false': [2.7316263295773524e-07, 0.059172900512897225], 'true,false,true': [0.0, nan], 'false,false,false': [0.1563773499066847, 0.0]}, {'': [1.7214147064043006e-07, 0.05370362572474821], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.10854657839709497], 'true': [nan, 1.7214147064043006e-07], 'false': [0.0427431435585993, 0.09971283848949906], 'false,false,false': [0.12304195614158354, 0.0]}, {'': [1.3575507233284934e-07, 0.05114066058625166], 'false,false,true': [0.0, 0.14133937025439622], 'false,false': [0.10682869213648186, 0.0], 'true,false': [nan, 0.0], 'true': [1.672148483324032e-07, 0.0], 'false': [0.04179085614266673, 0.09040925092240679], 'false,false,false': [nan, 0.0], 'true,false,false': [0.0, 0.0]}, {'': [8.332756564109987e-05, 0.04886308257870181], 'false,false,true': [0.020392034414689265, 0.0019614042969396924], 'false,false': [0.05990979506038146, 0.05044284885509289], 'true,true,false': [nan, 1.6692000372464655e-06], 'true': [8.332756564109987e-05, nan], 'false': [0.017867982957702984, 0.05853020521171006], 'true,true': [0.0, 1.6692000372464655e-06], 'false,false,false': [0.0, 0.06538957644045897]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
0;false,false;interaction(A, G).;true;true
0;true;interaction(D, A), interaction(C, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
0;false,false,false;interaction(I, A), enzyme(A, J).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;false;interaction(A, E).;true;true
1;false,false,true;recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, E).;true;true
2;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
2;false;interaction(G, A), interaction(A, G).;true;true
2;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
3;false;interaction(A, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C).;true;true
4;true,true,false;recursion_proteinclass(C, B).;true;true
4;false,false;interaction(G, A), interaction(H, G).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;true,true;enzyme(C, E), interaction(C, D).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false;interaction(A, E).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false;interaction(A, I).;true;true
6;true,false;interaction(F, A), interaction(C, F).;true;true
6;true;interaction(A, D), interaction(D, E).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,false,false;interaction(J, A), interaction(K, J).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(F, A), enzyme(A, G).;true;true
7;false;interaction(A, E).;true;true
7;false,false,false;interaction(I, A), interaction(J, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false,false,true;recursion_proteinclass(I, B).;true;true
8;false,false;interaction(H, A), interaction(I, H).;true;true
8;true,false;interaction(F, A).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(A, G).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;false,false;interaction(H, A).;true;true
9;true;interaction(A, D), interaction(D, A).;true;true
9;false;interaction(G, A), interaction(A, G).;true;true
9;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10814893509951232;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8194686327107952;  // std dev = 0,112, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.15553256216424446;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1803221146449018;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1667945087684516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, E) )
%   | then return 0.5429619574305382;  // std dev = 0,018, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.13618038191976814;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.19377081470969357;  // std dev = 1,518, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.14762030227861084;  // std dev = 0,051, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.418268526846789;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.5814570309866363;  // std dev = 0,284, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.41046841715721033;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1403766955250788;  // std dev = 0,020, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.06502242547131265;  // std dev = 0,819, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(C, D) )
%   | | then return 0.3041697801347532;  // std dev = 0,026, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.3212243128170748;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.42983447605859987;  // std dev = 0,290, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.1336361195019598;  // std dev = 0,031, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14258429432095845;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10592253666269118;  // std dev = 0,000972, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then return 0.1333992971815572;  // std dev = 0,771, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.17997468639727085;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25571919385447633;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2549314344930501;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( complex(A, G), interaction(H, A) )
%   | | | then return -0.006361231906270034;  // std dev = 0,404, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2347186716305154;  // std dev = 0,444, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.3519998140488774;  // std dev = 0,161, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11638021478367842;  // std dev = 0,035, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then return 0.26394082498575744;  // std dev = 0,664, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.17882542243313354;  // std dev = 0,034, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.21151852343039867;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), interaction(C, F) )
%   | | then return 0.20830793951768323;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16618883794970163;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2095006171001751;  // std dev = 0,000107, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.02985234540479942;  // std dev = 0,427, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1114092127014959;  // std dev = 0,699, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.08712909432709275;  // std dev = 0,733, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1329274561065698;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17727765272129062;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E), interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20797724836221157;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10257061912777468;  // std dev = 0,031, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.15306274299537911;  // std dev = 0,509, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.008941264399189505;  // std dev = 0,370, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then return -0.1883094209878092;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1923579733251636;  // std dev = 0,657, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11833980090884103;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15324363943737307;  // std dev = 0,000881, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A) )
%   | | then return 0.1525190199413755;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1525190199413755;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.09154840194123104;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.060836221886979985;  // std dev = 0,200, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.06141397260556821;  // std dev = 0,644, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.1498445294281513;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.052235981589813026;  // std dev = 0,703, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1065394953402138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.13495546525485336;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.12945495777688343;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.16229489644030645;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0323616934088268;  // std dev = 0,249, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3198415335633336;  // std dev = 0,349, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12743193223827104;  // std dev = 0,212, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.13383147786509708;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.009043087801860314;  // std dev = 0,372, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.949251
   AUC PR    = 0.207538
   CLL	      = -0.213568
   Precision = 0.214286 at threshold = 0.5
   Recall    = 0.551724
   F1        = 0.308682


Total learning time: 2.742 seconds
Total inference time: 13.848 seconds
AUC ROC: 0.949251


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.172389
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.957 seconds
Refined model CLL: -0.172389


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.949251
   AUC PR    = 0.207538
   CLL	      = -0.213568
   Precision = 0.214286 at threshold = 0.5
   Recall    = 0.551724
   F1        = 0.308682


Total learning time: 6.127 seconds
Total inference time: 13.848 seconds
AUC ROC: 0.949251
Total revision time: 6.127
Best scored revision CLL: -0.172389


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 04:16:41
{'CLL': -0.213568, 'AUC ROC': 0.949251, 'F1': 0.308682, 'Recall': 0.551724, 'Precision': [0.214286, 0.5], 'parameter_15': {'CLL': -0.206006, 'AUC ROC': 0.975132, 'F1': 0.277228, 'Recall': 0.804598, 'Precision': [0.167464, 0.5], 'Inference time': 6.894, 'Learning time': 1.646, 'AUC PR': 0.250829}, 'Inference time': 13.848, 'Learning time': 6.127, 'AUC PR': 0.207538}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(A, F) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03996711691769402;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return 0.4585099022712102;  // std dev = 1,128, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.010053737177738803;  // std dev = 0,924, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.5216035333475302;  // std dev = 0,810, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13444954646081125;  // std dev = 1,410, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6486623094183536;  // std dev = 0,173, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then if ( interaction(A, G), phenotype(D, H) )
%   | | | then return 0.40736107822661394;  // std dev = 0,794, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.05697252403981037;  // std dev = 0,679, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, I), interaction(D, I) )
%   | | | then return 0.7178800780215456;  // std dev = 0,208, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1798213482574573;  // std dev = 0,823, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, J) )
%   | | then return -0.19052087507925383;  // std dev = 0,061, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.14894230181635587;  // std dev = 0,958, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4990447576041073;  // std dev = 0,199, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.13633484552804936;  // std dev = 1,123, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.4951352596562419;  // std dev = 0,799, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.020412581370175275;  // std dev = 0,820, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.06601723815935798;  // std dev = 0,699, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(A, A) )
%   | then return -0.11883594004243532;  // std dev = 0,504, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.4766527016430658;  // std dev = 0,162, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), complex(A, G) )
%   | | | then return 0.032249346885027536;  // std dev = 0,706, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2774756462554459;  // std dev = 0,927, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( enzyme(A, H) )
%   | then return -0.15891898990201497;  // std dev = 0,056, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.19826161552988086;  // std dev = 1,023, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), phenotype(C, F) )
%   | then return 0.02573462775697266;  // std dev = 0,634, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.5067180349267218;  // std dev = 0,248, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.34158538517882464;  // std dev = 0,227, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(I, I), phenotype(I, J) )
%   | | | then return 0.20573654519939388;  // std dev = 0,698, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.17270251139797774;  // std dev = 0,082, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return 0.4658409475480232;  // std dev = 0,286, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08316673874865364;  // std dev = 0,695, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(A, A) )
%   | then return -0.12334375932219599;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.31993406697395455;  // std dev = 0,188, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.19820183152934168;  // std dev = 0,655, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.0024421518346304607;  // std dev = 0,753, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( enzyme(A, G) )
%   | then return -0.13022525491329923;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.11148636615705283;  // std dev = 0,880, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(C, E), complex(E, D) )
%   | | then return 0.02010316715194607;  // std dev = 0,656, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.37582968620188356;  // std dev = 0,254, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18020177619276975;  // std dev = 0,425, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.03382077362474498;  // std dev = 0,677, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( complex(A, G) )
%   | then return 0.14166829817734128;  // std dev = 0,513, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.08427963510419441;  // std dev = 0,691, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.27641784937133385;  // std dev = 0,134, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.22758699190691253;  // std dev = 0,155, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then if ( interaction(F, A), complex(A, G) )
%   | | | then return -0.03689452065279183;  // std dev = 0,691, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1387150545189361;  // std dev = 0,922, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.07319085763435552;  // std dev = 0,315, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.21980241496306538;  // std dev = 0,145, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1963435605278493;  // std dev = 0,139, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), phenotype(D, G) )
%   | | then return -0.023099258746479574;  // std dev = 0,459, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.33834298414887903;  // std dev = 0,251, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( interaction(H, H), phenotype(H, J) )
%   | | | then return 0.10108167900959882;  // std dev = 0,589, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14818271283353296;  // std dev = 0,068, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.18522118339752958;  // std dev = 0,642, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.18586243311021347;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.551624
   AUC PR    = 0.011078
   CLL	      = -0.490004
   Precision = 0.01148 at threshold = 0.5
   Recall    = 0.321839
   F1        = 0.022169


Total learning time: 4.882 seconds
Total inference time: 3.755 seconds
AUC ROC: 0.551624


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 04:16:50
{'CLL': -0.490004, 'AUC ROC': 0.551624, 'F1': 0.022169, 'Recall': 0.321839, 'Precision': [0.01148, 0.5], 'Inference time': 3.755, 'Learning time': 4.882, 'AUC PR': 0.011078}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(A, F) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */


Results
   AUC ROC   = 0.53683
   AUC PR    = 0.009943
   CLL	      = -0.205497
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.337 seconds
Total inference time: 2.016 seconds
AUC ROC: 0.53683


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 04:16:54
{'CLL': -0.205497, 'AUC ROC': 0.53683, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.016, 'Learning time': 1.337, 'AUC PR': 0.009943}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13814893509951232;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8135945705115667;  // std dev = 0,151, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.15951366997397237;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14207446911896834;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.543693339341327;  // std dev = 0,017, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(C, F), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.543693339341327;  // std dev = 0,017, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.13927019616876418;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.12783436269159565;  // std dev = 1,834, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.25264661014710416;  // std dev = 0,938, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41846076891853984;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6115686822276454;  // std dev = 0,343, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.14999316318544856;  // std dev = 0,050, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.42035513843899974;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K) )
%   | | | then return 0.2036637589359125;  // std dev = 0,933, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.3211939852456649;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4417326790582871;  // std dev = 0,379, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.13187393749222032;  // std dev = 0,045, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.3226388884187701;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03252807415226019;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.5440851151011898;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25601236366241203;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25499064998653076;  // std dev = 0,000127, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.006584763642352699;  // std dev = 0,583, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3663389495085849;  // std dev = 0,287, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12181032568430925;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4526643990510692;  // std dev = 0,313, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.30769061711573464;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.16219660447941184;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, F), interaction(F, C) )
%   | | then if ( interaction(C, F) )
%   | | | then return 0.17990752896204543;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( enzyme(G, H) )
%   | | then return 0.20962943461148303;  // std dev = 0,000111, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.20938178171452226;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.04479773324508894;  // std dev = 1,083, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.03203035059151804;  // std dev = 0,682, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3057742833464049;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, C), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(A, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17707139446547882;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17976851043106326;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then return 0.04373300139562426;  // std dev = 1,076, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.05779983004652317;  // std dev = 0,689, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2449510406513541;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15607855776829693;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, C), enzyme(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1527248144689901;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15215395557834077;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.03766699777565067;  // std dev = 1,065, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.14745770001711256;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.013358862160397353;  // std dev = 0,678, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20251076700093185;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(D, A), interaction(A, D) )
%   | | then return 0.1400317271428535;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, A), enzyme(D, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11741349403067498;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.0795760365586293;  // std dev = 0,431, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.27374433217456884;  // std dev = 0,369, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.15365497550091373;  // std dev = 0,177, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.13354633362297463;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04703163894544082;  // std dev = 0,665, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */


Results
   AUC ROC   = 0.975697
   AUC PR    = 0.185125
   CLL	      = -0.218995
   Precision = 0.091603 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.167331


Total learning time: 1.723 seconds
Total inference time: 9.545 seconds
AUC ROC: 0.975697


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.191354
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.932 seconds
Parameter learned model CLL: -0.191354


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(A, D), interaction(D, C)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'true,true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, I), enzyme(A, J)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 4], 'true,false': [2.11e-08, 0, 3], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [2.11e-08, 0, 3], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [1.0, 2, 2], 'false,false,true,false': [2.245, 18, 7], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, J)'}, {'false,true,true,true': [0.0, 0, 4], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.0, 0, 1], 'false,true,false': [1.05e-08, 18, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.816, 2, 1], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.151, 0, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(C, F), enzyme(A, F)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false,false,false': 'interaction(J, A)'}, {'false,false,true': [1.05e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.834, 15, 7], 'false,true,true': [0.0, 0, 4], 'true,true,false,false': [0.017, 0, 2], 'true,true,true': [0.017, 0, 2], 'false,false,false,false': [0.938, 2, 2], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, J), interaction(J, I)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, K)'}, {'false,true,true,true': [0.0, 0, 4], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.002, 0, 3], 'false,false,false,true': [0.933, 2, 2], 'false,true,false': [0.05, 18, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.343, 0, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(D, C)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.045, 18, 0], 'false,false,false,true': [0.0, 0, 1], 'true,true,false,false': [0.379, 0, 11], 'true,true,true': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'true,true,false,true': [0.002, 0, 4], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false': 'interaction(E, A)'}, {'false,true,false,false': [0.0, 10, 0], 'false,false,true,true': [0.313, 0, 3], 'false,false,false': [0.0, 0, 0], 'true,false': [0.000127, 0, 2], 'false,true,true': [0.583, 8, 4], 'false,true,false,true': [0.287, 0, 9], 'false,false,true,false': [0.0, 2, 0], 'true,true': [0.002, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(A, F), interaction(F, C)', 'true': 'interaction(D, A), interaction(E, D)', 'false,true': 'enzyme(G, H)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,false,true': 'interaction(C, F)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'false,false,true': [1.083, 18, 11], 'false,false,false,true': [0.682, 2, 1], 'false,true,true': [0.000111, 0, 2], 'false,false,false,false': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.06, 0, 3], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(A, G), enzyme(A, H)', 'true,true,true': 'interaction(E, A), interaction(A, C)', 'false': 'interaction(F, A)', 'true,true': 'interaction(E, C), interaction(C, E)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.007, 0, 3], 'false,false,false,true': [0.689, 2, 2], 'true,true,true,true': [0.0, 0, 0], 'false,true': [1.076, 18, 13], 'false,false,false,false': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true,false': 'interaction(A, C), enzyme(A, E)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(G, A)', 'false,false,false': 'enzyme(A, J)', 'true,false,false': 'interaction(A, F)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true': [1.065, 18, 13], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 1], 'true,true': [0.005, 0, 2], 'false,false,true,false': [0.678, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'interaction(D, A), enzyme(D, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'false,false,true,true': [0.369, 0, 7], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'true,true,false,false': [0.015, 0, 3], 'true,true,true': [0.0, 0, 1], 'false,true': [0.431, 3, 4], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.665, 6, 4], 'false,false,true,false': [0.177, 11, 0]}]]
[{'': [0.0, 0.2469135802469132], 'false,false,true': [0.0, 0.2016000000000001], 'false,false': [0.23543400713436335, 0.25], 'true': [0.0, 1.4802973661668753e-16], 'false,true': [1.4802973661668753e-16, nan], 'false': [1.4802973661668753e-16, 0.2387511478420569], 'true,true': [0.0, nan], 'false,false,false': [nan, 0.25]}, {'': [0.0, 0.22260422999966137], 'false,false,true': [0.0, 0.22222222222222224], 'false,false': [0.22917720531986835, 0.0], 'false,true,true': [0.0, 0.00253108355424282], 'true': [0.0, 0.0], 'false,true': [0.0036393686608336886, 6.1679056923619804e-18], 'false': [0.21858254806832617, 0.2269921604636039], 'false,false,false': [0.0, nan]}, {'': [0.00013626120302567823, 0.15551988045097526], 'true,true,false': [nan, 0.00013626120302567823], 'false,false': [3.700743415417188e-17, 0.1652580890948149], 'true': [0.00013626120302567823, nan], 'false,true': [0.0, 0.0], 'false': [0.11816817594797294, 0.1636264157001358], 'true,true': [0.00013626120302567823, 0.00013626120302567823], 'false,false,false': [0.15288181149425883, 0.22014614910834665]}, {'': [1.5139557618670807e-06, 0.13598911641935424], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.21745018340183864], 'false,true,true': [0.0, 0.013079618739357072], 'true': [0.0, 1.794317940007062e-06], 'false,true': [0.017076811311396326, 0.0001414568188463978], 'false': [0.1271889673668529, 0.1814729713536231], 'false,false,false': [0.21745018340183864, nan]}, {'': [0.07621821345510395, 0.17679745746966483], 'false,false,true': [nan, 0.22222222222222224], 'false,false': [0.22222222222222224, 0.0], 'true,true,false': [1.1591084834033927e-06, 0.01307497780277825], 'true': [0.011787597999283025, 0.00011334348228161002], 'false': [0.0, 0.21573365531874633], 'true,true': [0.0, 0.01242996559570561], 'false,false,false': [0.0, nan]}, {'': [8.82940552199285e-07, 0.06798518364381863], 'false,false,true': [0.03260160173454304, 0.0], 'false,false': [0.15831450118713075, nan], 'false,true,false': [0.00917549807601893, -1.3877787807814457e-17], 'true': [1.2358373484705476e-06, 8.09433813031557e-09], 'false,true': [0.028332350599964456, 0.06375369670199596], 'false': [0.05255109325620739, 0.15831450118713075]}, {'': [0.0009637562161902563, 0.04924156231375919], 'false,false': [0.0404226372472911, 0.1302235068085165], 'true,false': [0.0, nan], 'true': [0.0012065890767462794, 0.0], 'false,true': [6.157088866531879e-09, 0.0], 'false': [1.7734049765720055e-08, 0.05163769508016957], 'true,false,true': [0.0, nan], 'false,false,false': [0.1548974072313273, 0.0]}, {'': [1.390620921895569e-05, 0.04644760174860021], 'true,true,true': [nan, 0.0], 'false,false': [nan, 0.10065867406852569], 'true': [0.0, 1.672300365898142e-05], 'false': [0.037335554254165286, 0.10065867406852569], 'true,true': [0.0, nan], 'false,false,false': [0.11881822745948635, 0.0]}, {'': [1.0665867411014524e-05, 0.04535048876349088], 'false,false,true': [0.0, 0.153099163935243], 'false,false': [0.11819609138540506, 0.0], 'true,false': [nan, 8.146996826122188e-08], 'true': [1.4628475721135265e-05, 8.146996826122188e-08], 'false': [0.03656290883283433, 0.0984320449388377], 'false,false,false': [nan, 0.0], 'true,false,false': [0.0, 0.0]}, {'': [0.00015407660034014864, 0.044744654699731684], 'false,false,true': [0.01949486945431175, 0.00284284744944302], 'false,false': [0.052730988573293495, 0.04084612096640524], 'true,true,false': [nan, 7.753934984098404e-05], 'true': [0.00015407660034014864, nan], 'false': [0.026494096945223106, 0.04864500699228718], 'true,true': [0.0, 7.753934984098404e-05], 'false,false,false': [0.0, 0.04425029739075968]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D), interaction(D, C).;true;true
0;false,false;interaction(G, A).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false,true;recursion_proteinclass(I, B).;true;true
1;false,false;interaction(A, H), interaction(H, I).;true;true
1;false,true,true;interaction(E, G), interaction(G, A).;true;true
1;true;enzyme(A, D), enzyme(C, D).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(E, A).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), interaction(E, A).;true;true
2;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
2;false;interaction(A, G), interaction(G, A).;true;true
2;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
3;false,true,true;interaction(F, H), interaction(H, A).;true;true
3;true;enzyme(A, D), interaction(A, E).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;false;interaction(F, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A).;true;true
4;true,true,false;recursion_proteinclass(C, B).;true;true
4;false,false;interaction(A, G), interaction(G, H).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
4;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;true,true;enzyme(C, E), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false,false;interaction(I, A).;true;true
6;true;interaction(D, A), interaction(E, D).;true;true
6;false,true;enzyme(G, H).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,false,false;interaction(A, J), interaction(J, K).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;enzyme(A, D), enzyme(C, D).;true;true
7;false,false;interaction(A, I), interaction(I, J).;true;true
7;false;interaction(F, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false,true;recursion_proteinclass(I, B).;true;true
8;false,false;interaction(A, H), interaction(H, I).;true;true
8;true,false;interaction(A, F).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;false;interaction(G, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, A), interaction(A, D).;true;true
9;false,false;interaction(A, H).;true;true
9;false;interaction(A, G), interaction(G, A).;true;true
9;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13814893509951232;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8135945705115667;  // std dev = 0,151, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.1595136699739724;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.15951366997397243;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14207446911896834;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then return 0.5398023068730079;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.13927019616876418;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return -0.007117684990726276;  // std dev = 0,856, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.2038298007757162;  // std dev = 1,826, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41877689185821637;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5985952314666494;  // std dev = 0,321, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return -0.134663957036341;  // std dev = 0,018, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.16133043716772427;  // std dev = 0,040, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2229236307979302;  // std dev = 0,955, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.3213551368377444;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.43231992862954344;  // std dev = 0,351, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( enzyme(A, H), interaction(G, G) )
%   | | | then return -0.13733784307836608;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11771550447761991;  // std dev = 0,020, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14444329430242384;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.05266446274302498;  // std dev = 0,851, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5514068322760276;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2562933488145631;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2549300218249935;  // std dev = 0,000170, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.07003964720222619;  // std dev = 0,495, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.1198787435501103;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3571410550936633;  // std dev = 0,266, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12077133526603283;  // std dev = 0,027, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then return 0.15910989207589044;  // std dev = 0,917, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.16521411369429426;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2261247043805793;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G) )
%   | | then return 0.20958660261230322;  // std dev = 0,000148, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.20925628627006598;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.09390629717816272;  // std dev = 0,705, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.005559140510134913;  // std dev = 0,745, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.008094738805678717;  // std dev = 0,854, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3765634992907918;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.17706298799311515;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17972547875818734;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then return -0.10730509291413677;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10167796009081514;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07647190058259655;  // std dev = 0,960, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.051992422752696346;  // std dev = 0,868, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.29302782752873746;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15606784553739506;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E) )
%   | | then return 0.1527184371071335;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1520778938369718;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( enzyme(A, G), complex(A, H) )
%   | | then return -0.09745548060475724;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.06606381905628544;  // std dev = 0,888, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return -0.03278150602273876;  // std dev = 0,357, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( recursion_proteinclass(L, B) )
%   | | | then return 0.18116991700371055;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.005199059469919239;  // std dev = 0,855, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.236177542886017;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.12421819542361867;  // std dev = 0,022, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.13210564721171159;  // std dev = 0,034, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.10391352273912287;  // std dev = 0,239, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.04991268685668386;  // std dev = 0,296, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.06144495400407043;  // std dev = 0,981, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.11121956535005643;  // std dev = 0,346, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.1334869070807626;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.037181771857608466;  // std dev = 0,621, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */


Results
   AUC ROC   = 0.951068
   AUC PR    = 0.12249
   CLL	      = -0.247216
   Precision = 0.06971 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.130031


Total learning time: 2.61 seconds
Total inference time: 11.909 seconds
AUC ROC: 0.951068


Results scoring model
   AUC ROC   = 0.995
   AUC PR    = 0.995346
   CLL	      = -0.212161
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.919 seconds
Refined model CLL: -0.212161


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.975697
   AUC PR    = 0.185125
   CLL	      = -0.218995
   Precision = 0.091603 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.167331


Total learning time: 6.184000000000001 seconds
Total inference time: 9.545 seconds
AUC ROC: 0.975697
Total revision time: 6.184000000000001
Best scored revision CLL: -0.191354


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 04:17:22
{'CLL': -0.218995, 'AUC ROC': 0.975697, 'F1': 0.167331, 'Recall': 0.965517, 'Precision': [0.091603, 0.5], 'Inference time': 9.545, 'Learning time': 6.184000000000001, 'AUC PR': 0.185125, 'parameter_20': {'CLL': -0.218995, 'AUC ROC': 0.975697, 'F1': 0.167331, 'Recall': 0.965517, 'Precision': [0.091603, 0.5], 'Inference time': 9.545, 'Learning time': 1.723, 'AUC PR': 0.185125}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, E), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2043027812533585;  // std dev = 2,426, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, E), complex(A, F) )
%   | | | then return -0.16858384731153017;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2963135244695788;  // std dev = 2,514, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, E), complex(A, F) )
%   | | then return -0.1462549768666785;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.31686744203904055;  // std dev = 1,556, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.15122864078537274;  // std dev = 1,999, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, A), phenotype(D, F) )
%   | | then return 0.3580853154470755;  // std dev = 0,596, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return -0.1847701268887707;  // std dev = 0,137, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.31195370712551584;  // std dev = 0,719, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( enzyme(I, J), enzyme(A, K) )
%   | | | then return -0.04242399836963943;  // std dev = 0,563, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5576230068261723;  // std dev = 0,888, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.22310650681620967;  // std dev = 1,559, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.24082623139088122;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then return -0.12507397637905146;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, A) )
%   | then return -0.035156489315379846;  // std dev = 0,415, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.47155209427537964;  // std dev = 0,193, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.37881571901275146;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12067282367082964;  // std dev = 2,194, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.28650335885524014;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.14929382760709098;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, D), interaction(D, A) )
%   | | then return 0.394009443811622;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return -0.082828573791652;  // std dev = 0,960, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.14350347370806346;  // std dev = 1,931, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.27929021726713954;  // std dev = 0,093, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.1314290290565561;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(D, A), interaction(A, D) )
%   | | then return 0.28059618781426704;  // std dev = 0,136, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, E) )
%   | | | then return -0.09477474137612772;  // std dev = 0,764, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1029276651220987;  // std dev = 1,979, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( complex(A, E), interaction(F, A) )
%   | then if ( interaction(A, F) )
%   | | then return 0.12360748678733156;  // std dev = 0,309, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.21690726363426957;  // std dev = 0,158, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(D, G) )
%   | | then return 0.03546261436385112;  // std dev = 0,879, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.5722482356368742;  // std dev = 0,080, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then return 0.34911902899550934;  // std dev = 0,607, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, J) )
%   | | then return -0.3108287061087944;  // std dev = 0,113, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.12762879061674545;  // std dev = 1,074, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.1618628858891354;  // std dev = 0,479, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(C, E), complex(A, F) )
%   | then return 0.41173889500965893;  // std dev = 0,243, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.22348984803351216;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.10779948458587181;  // std dev = 0,977, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.09031392953735339;  // std dev = 1,092, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else if ( interaction(A, I), phenotype(I, J) )
%   | then if ( enzyme(I, K) )
%   | | then return -0.22081686317583585;  // std dev = 0,235, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3780069862882064;  // std dev = 0,164, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.22945277260815333;  // std dev = 0,195, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17983622442340827;  // std dev = 0,076, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then return -0.11430477444611253;  // std dev = 0,090, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.1619991579364368;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), complex(A, H) )
%   | | | then return -0.05778712424879792;  // std dev = 0,725, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06130652076284089;  // std dev = 1,605, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */


Results
   AUC ROC   = 0.590331
   AUC PR    = 0.014303
   CLL	      = -0.560505
   Precision = 0.011951 at threshold = 0.5
   Recall    = 0.356322
   F1        = 0.023126


Total learning time: 4.94 seconds
Total inference time: 3.554 seconds
AUC ROC: 0.590331


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 04:17:31
{'CLL': -0.560505, 'AUC ROC': 0.590331, 'F1': 0.023126, 'Recall': 0.356322, 'Precision': [0.011951, 0.5], 'Inference time': 3.554, 'Learning time': 4.94, 'AUC PR': 0.014303}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3396304165809938;  // std dev = 2,596, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */


Results
   AUC ROC   = 0.594472
   AUC PR    = 0.032228
   CLL	      = -0.203503
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.343 seconds
Total inference time: 1.852 seconds
AUC ROC: 0.594472


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 04:17:34
{'CLL': -0.203503, 'AUC ROC': 0.594472, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.852, 'Learning time': 1.343, 'AUC PR': 0.032228}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14847151574467363;  // std dev = 2,527, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.8173476842208088;  // std dev = 0,153, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.16090247755477896;  // std dev = 2,36e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07373365448410585;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.8237336544841058;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.5492962526469669;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(C, F), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5432260685476494;  // std dev = 0,017, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1403445786012742;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1388496848043683;  // std dev = 2,052, 27,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.18465532310238925;  // std dev = 1,023, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.41849823711739603;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41800591063785303;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6178690133745598;  // std dev = 0,347, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.15182069344136645;  // std dev = 0,061, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.42046899633196855;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K) )
%   | | | then return 0.1524888644289503;  // std dev = 1,018, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.32126630762996267;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.320908700626546;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4399130745130669;  // std dev = 0,404, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.13330765965269448;  // std dev = 0,055, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.3227161291878665;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.006018459208258935;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.5941078109988298;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25582657971461564;  // std dev = 0,000916, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.25499451536682005;  // std dev = 6,61e-05, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.014718713348389664;  // std dev = 0,635, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3694811085074292;  // std dev = 0,288, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.12360676304772905;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4861210531579576;  // std dev = 0,356, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2450933827787418;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.1806641857534654;  // std dev = 0,082, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), interaction(F, C) )
%   | | then if ( interaction(C, F) )
%   | | | then return 0.175063941031821;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( enzyme(G, H) )
%   | | then return 0.20963216417908093;  // std dev = 5,77e-05, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.20953510186435997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.04615637590555191;  // std dev = 1,198, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.011663392109492271;  // std dev = 0,742, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.33197728240013247;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, C), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(A, C) )
%   | | | then return 0.18195262342316465;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.17696854698236553;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1786842122251402;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then return 0.04367243235787296;  // std dev = 1,189, 38,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.037907785083410056;  // std dev = 0,752, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2628451460258482;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15557157088895424;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C), enzyme(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15264678766157536;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15239365688015372;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.037578335335116245;  // std dev = 1,177, 38,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.14639922243294334;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0027447678021018385;  // std dev = 0,740, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.21516335509421025;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(D, A), interaction(A, D) )
%   | | then return 0.13713126684496088;  // std dev = 0,000398, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, A), enzyme(D, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11503724788462777;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.07180132302276128;  // std dev = 0,487, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.28334733169201687;  // std dev = 0,430, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14900607430058754;  // std dev = 0,125, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.13373357394126784;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.055491923787675104;  // std dev = 0,784, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */


Results
   AUC ROC   = 0.975256
   AUC PR    = 0.168828
   CLL	      = -0.222843
   Precision = 0.091603 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.167331


Total learning time: 1.784 seconds
Total inference time: 9.221 seconds
AUC ROC: 0.975256


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.190856
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.979592


Total scoring time: 0.856 seconds
Parameter learned model CLL: -0.190856


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(A, D), interaction(D, C)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'true,true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, I), enzyme(A, J)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 5], 'true,false': [2.11e-08, 0, 3], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [2.11e-08, 0, 3], 'true,true,true': [0.0, 0, 2], 'false,false,false,false': [1.095, 3, 2], 'false,false,true,false': [2.527, 22, 9], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, J)'}, {'false,true,true,true': [0.0, 0, 5], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.0, 0, 1], 'false,true,false': [2.36e-08, 22, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.866, 3, 1], 'true,true': [0.0, 0, 3], 'false,true,true,false': [0.153, 0, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(C, F), enzyme(A, F)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false,false,false': 'interaction(J, A)'}, {'false,false,true': [1.05e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,false,false,true': [2.052, 18, 9], 'false,true,true': [0.0, 0, 5], 'true,true,false,false': [0.017, 0, 2], 'true,true,true': [0.021, 0, 4], 'false,false,false,false': [1.023, 3, 2], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, J), interaction(J, I)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, K)'}, {'false,true,true,true': [1.49e-08, 0, 5], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.001, 0, 3], 'false,false,false,true': [1.018, 3, 2], 'false,true,false': [0.061, 22, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.001, 0, 3], 'false,true,true,false': [0.347, 0, 11]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(D, C)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.055, 22, 0], 'false,false,false,true': [0.0, 0, 1], 'true,true,false,false': [0.404, 0, 14], 'true,true,true': [0.001, 0, 4], 'false,true': [0.0, 0, 1], 'true,true,false,true': [0.001, 0, 4], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false': 'interaction(E, A)'}, {'false,true,false,false': [0.0, 13, 0], 'false,false,true,true': [0.356, 0, 3], 'false,false,false': [0.0, 0, 0], 'true,false': [6.61e-05, 0, 2], 'false,true,true': [0.635, 9, 5], 'false,true,false,true': [0.288, 0, 11], 'false,false,true,false': [0.0, 3, 0], 'true,true': [0.000916, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A)', 'true,false': 'interaction(A, F), interaction(F, C)', 'true': 'interaction(D, A), interaction(E, D)', 'false,true': 'enzyme(G, H)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,false,true': 'interaction(C, F)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'false,false,true': [1.198, 22, 14], 'false,false,false,true': [0.742, 3, 1], 'false,true,true': [5.77e-05, 0, 2], 'false,false,false,false': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.082, 0, 5], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(A, G), enzyme(A, H)', 'true,true,true': 'interaction(E, A), interaction(A, C)', 'false': 'interaction(F, A)', 'true,true': 'interaction(E, C), interaction(C, E)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.004, 0, 3], 'false,false,false,true': [0.752, 3, 2], 'true,true,true,true': [0.0, 0, 2], 'false,true': [1.189, 22, 16], 'false,false,false,false': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true,false': 'interaction(A, C), enzyme(A, E)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(G, A)', 'false,false,false': 'enzyme(A, J)', 'true,false,false': 'interaction(A, F)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true': [1.177, 22, 16], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 1], 'true,true': [0.004, 0, 4], 'false,false,true,false': [0.74, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'interaction(D, A), enzyme(D, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'false,false,true,true': [0.43, 0, 7], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'true,true,false,false': [0.017, 0, 3], 'true,true,true': [0.000398, 0, 3], 'false,true': [0.487, 4, 5], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.784, 8, 6], 'false,false,true,false': [0.125, 13, 0]}]]
[{'': [-1.4802973661668753e-16, 0.24535123966942105], 'false,false,true': [0.0, 0.20603537981269518], 'false,false': [0.23765432098765382, 0.24000000000000005], 'true': [1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [1.4802973661668753e-16, nan], 'false': [1.4802973661668753e-16, 0.23795359904818564], 'true,true': [0.0, 0.0], 'false,false,false': [nan, 0.24000000000000005]}, {'': [7.401486830834377e-17, 0.22282319606009454], 'false,false,true': [0.0, 0.18750000000000006], 'false,false': [0.2167167735534607, 0.0], 'false,true,true': [0.0, 0.0021287495825464864], 'true': [0.0, 0.0], 'false,true': [0.0035215837820645746, 2.5232341468753557e-17], 'false': [0.22040237421707304, 0.2341330426932048], 'false,false,false': [0.0, nan]}, {'': [0.00013101203555417515, 0.15524471082583582], 'true,true,false': [nan, 0.0001473885399984609], 'false,false': [3.700743415417188e-17, 0.16453864340103133], 'true': [0.00013101203555417515, nan], 'false,true': [-4.4408920985006264e-17, 0.0], 'false': [0.11950958441381015, 0.16356776272583476], 'true,true': [0.00011054140499888732, 0.0001473885399984609], 'false,false,false': [0.1558988734372384, 0.20942308165873183]}, {'': [5.453670655815775e-07, 0.13640834536872892], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.2070735353389031], 'false,true,true': [4.4408920985006264e-17, 0.010929668452740965], 'true': [4.847707249326186e-07, 4.847707248956112e-07], 'false,true': [0.016138468900726288, 0.0001689080882598216], 'false': [0.12876688737105105, 0.1825353559900247], 'false,false,false': [0.2070735353389031, nan]}, {'': [0.07564041333676509, 0.17661776234433468], 'false,false,true': [nan, 0.1875], 'false,false': [0.1875, 0.0], 'true,true,false': [3.4839555938803723e-07, 0.01166346865938712], 'true': [0.01068966425231724, 0.00013510135849783606], 'false': [0.0, 0.20533585371031263], 'true,true': [3.074264125768611e-07, 0.011519424329866388], 'false,false,false': [0.0, nan]}, {'': [2.9453740609438245e-07, 0.06692827855447546], 'false,false,true': [0.04216345453939933, 0.0], 'false,false': [0.15475036510025603, nan], 'false,true,false': [0.00752226423758033, -8.540177112501205e-18], 'true': [2.0993563762394807e-07, 2.1868903632427106e-09], 'false,true': [0.028840994388678157, 0.06380950620905747], 'false': [0.05271493689417089, 0.15475036510025603]}, {'': [0.0011132541558832542, 0.048724987173273664], 'false,false': [0.03987761195656524, 0.12660969261381613], 'true,false': [0.0, nan], 'true': [0.0013306778635695238, 0.0], 'false,true': [1.6634920940727937e-09, 0.0], 'false': [3.202570939923414e-09, 0.050548322025942165], 'true,false,true': [0.0, nan], 'false,false,false': [0.13774191810464528, 0.0]}, {'': [6.288151627046694e-06, 0.04605461182829338], 'true,true,true': [0.0, 0.0], 'false,false': [nan, 0.10136835459067246], 'true': [5.520226215041668e-06, 5.764768355888868e-06], 'false': [0.037183617048701656, 0.10136835459067246], 'true,true': [5.520226215041668e-06, nan], 'false,false,false': [0.11320922278418215, 0.0]}, {'': [4.219423703039997e-06, 0.04497295132403516], 'false,false,true': [0.0, 0.13672589223347195], 'false,false': [0.11268257016042309, 0.0], 'true,false': [nan, 1.6018798124767253e-08], 'true': [3.217550025795546e-06, 1.6018798124767253e-08], 'false': [0.03642541966632424, 0.09858841538316172], 'false,false,false': [nan, 0.0], 'true,false,false': [0.0, 0.0]}, {'': [0.0001710697623542474, 0.04437372106312235], 'false,false,true': [0.026413640033306724, 0.0012065050704060643], 'false,false': [0.05255545620312112, 0.0413854041135194], 'true,true,false': [nan, 9.801386428867631e-05], 'true': [0.0001710697623542474, nan], 'false': [0.02635321465623315, 0.04860325608654416], 'true,true': [5.2823510036011566e-08, 9.801386428867631e-05], 'false,false,false': [0.0, 0.0439333873527584]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
0;false,false;interaction(G, A).;true;true
0;true;interaction(A, D), interaction(D, C).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;true,true;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false,true;recursion_proteinclass(I, B).;true;true
1;false,false;interaction(A, H), interaction(H, I).;true;true
1;false,true,true;interaction(E, G), interaction(G, A).;true;true
1;true;enzyme(A, D), enzyme(C, D).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(E, A).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), interaction(E, A).;true;true
2;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
2;false;interaction(A, G), interaction(G, A).;true;true
2;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
3;false,true,true;interaction(F, H), interaction(H, A).;true;true
3;true;enzyme(A, D), interaction(A, E).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;false;interaction(F, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A).;true;true
4;true,true,false;recursion_proteinclass(C, B).;true;true
4;false,false;interaction(A, G), interaction(G, H).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
4;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;true,true;enzyme(C, E), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false,false;interaction(I, A).;true;true
6;true;interaction(D, A), interaction(E, D).;true;true
6;false,true;enzyme(G, H).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,false,false;interaction(A, J), interaction(J, K).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;enzyme(A, D), enzyme(C, D).;true;true
7;false,false;interaction(A, I), interaction(I, J).;true;true
7;false;interaction(F, A).;true;true
7;true,true;interaction(E, A), interaction(A, C).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false,true;recursion_proteinclass(I, B).;true;true
8;false,false;interaction(A, H), interaction(H, I).;true;true
8;true,false;interaction(A, F).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;false;interaction(G, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
9;false,false;interaction(A, H).;true;true
9;true;interaction(D, A), interaction(A, D).;true;true
9;false;interaction(A, G), interaction(G, A).;true;true
9;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14847151574467363;  // std dev = 2,527, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.8173476842208088;  // std dev = 0,153, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.16090247755477896;  // std dev = 2,36e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07373365448410585;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.8237336544841058;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then return 0.5456541421873764;  // std dev = 0,027, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1403445786012742;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return -0.0041851997962053045;  // std dev = 0,882, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.18806058015213306;  // std dev = 2,070, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.41908949501846116;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41830153958838556;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6088821375544805;  // std dev = 0,332, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.14075812294254653;  // std dev = 0,053, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.16460302271993713;  // std dev = 1,18e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.15805636718302532;  // std dev = 1,037, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.32159941603122155;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32102705330035464;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4337190712997384;  // std dev = 0,385, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( enzyme(F, H), interaction(G, G) )
%   | | | then return -0.14614919362961423;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11814165689511102;  // std dev = 0,022, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1431986332250533;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.012825404560074603;  // std dev = 0,895, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5919422722552977;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2562198375090708;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2548878087595169;  // std dev = 0,000106, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.0908957238785775;  // std dev = 0,509, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.12097138759753193;  // std dev = 0,017, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3632010272827225;  // std dev = 0,274, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.12224961275093545;  // std dev = 0,026, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.19808639220732885;  // std dev = 0,899, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.24802471513792682;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.18195842631052941;  // std dev = 0,079, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21937700004395866;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G) )
%   | | then return 0.20955677650173948;  // std dev = 9,23e-05, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.20940143003395206;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.05734699249715814;  // std dev = 0,976, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.018763629698867433;  // std dev = 0,631, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.006841414678277549;  // std dev = 0,878, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.39698868036996804;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(A, C) )
%   | | then return 0.18210602150249067;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.17689172696803823;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17871677930513674;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11016806013798114;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.15726866290311428;  // std dev = 0,307, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.03009678984961112;  // std dev = 1,038, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.03238764348258626;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.30682246021029946;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1556708098629185;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15244548455652568;  // std dev = 0,000143, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), enzyme(H, I) )
%   | | | then return 0.10117499270743337;  // std dev = 0,632, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.014478626686772276;  // std dev = 0,775, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.11106734745708374;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.020887301181921974;  // std dev = 0,342, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( recursion_proteinclass(L, B) )
%   | | | then return 0.17930470932567233;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.011717980125284896;  // std dev = 0,878, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.24567026391468383;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.12640193470576983;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12983454363162944;  // std dev = 0,035, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.09238914459101366;  // std dev = 0,236, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.03386004201396634;  // std dev = 0,337, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.298645876505477;  // std dev = 0,516, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14993984693646498;  // std dev = 0,235, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.13364578920815195;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.054953296435789334;  // std dev = 0,774, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */


Results
   AUC ROC   = 0.965857
   AUC PR    = 0.160629
   CLL	      = -0.237936
   Precision = 0.071672 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.133439


Total learning time: 2.935 seconds
Total inference time: 13.592 seconds
AUC ROC: 0.965857


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.191512
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.979592


Total scoring time: 0.934 seconds
Refined model CLL: -0.191512


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.975256
   AUC PR    = 0.168828
   CLL	      = -0.222843
   Precision = 0.091603 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.167331


Total learning time: 6.509 seconds
Total inference time: 9.221 seconds
AUC ROC: 0.975256
Total revision time: 6.509
Best scored revision CLL: -0.190856


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 04:18:05
{'CLL': -0.222843, 'AUC ROC': 0.975256, 'F1': 0.167331, 'Recall': 0.965517, 'parameter_25': {'CLL': -0.222843, 'AUC ROC': 0.975256, 'F1': 0.167331, 'Recall': 0.965517, 'Precision': [0.091603, 0.5], 'Inference time': 9.221, 'Learning time': 1.784, 'AUC PR': 0.168828}, 'Precision': [0.091603, 0.5], 'Inference time': 9.221, 'Learning time': 6.509, 'AUC PR': 0.168828}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(D, A), interaction(A, D) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, F), interaction(A, G) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2867203636709409;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7319045176838225;  // std dev = 0,079, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, F), interaction(F, C) )
%   | | then return -0.15781248511267087;  // std dev = 0,047, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.6066429701129293;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.21185778054708765;  // std dev = 2,012, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else if ( interaction(A, I), phenotype(I, J) )
%   | then if ( interaction(K, A), complex(A, L) )
%   | | then return -0.18124103420766038;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.6195467402759844;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.16945153548489073;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6185717478277453;  // std dev = 0,175, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.6033748452599866;  // std dev = 0,090, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12257369252906607;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(E, A), interaction(A, E) )
%   | | | then return 0.44212319776674963;  // std dev = 0,695, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1367702779656973;  // std dev = 2,548, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.42759788860127274;  // std dev = 0,118, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( complex(E, F) )
%   | | then return 0.19346507793020806;  // std dev = 0,824, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.18080461484695307;  // std dev = 0,044, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.5403559217290791;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.36927660700232157;  // std dev = 1,258, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.08187562198521069;  // std dev = 2,022, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3548518828890191;  // std dev = 0,146, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(A, F), enzyme(D, G) )
%   | | then return 0.603779085843399;  // std dev = 0,209, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.3797953097135177;  // std dev = 0,100, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06410015287383501;  // std dev = 2,028, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.2337331007387347;  // std dev = 0,187, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.31412076587246074;  // std dev = 0,895, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.1878432886111323;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.27941052946332684;  // std dev = 0,130, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( enzyme(D, F), complex(D, G) )
%   | | then return -0.266462203054104;  // std dev = 0,103, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(D, E) )
%   | | | then return 0.22338238550007708;  // std dev = 0,606, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1001152706365788;  // std dev = 0,488, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then return 0.39123378097530354;  // std dev = 0,773, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.19512472741750056;  // std dev = 1,287, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.011264438213505519;  // std dev = 1,454, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), interaction(A, F) )
%   | then if ( complex(F, G), enzyme(E, H) )
%   | | then return 0.2321790196230528;  // std dev = 0,192, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( phenotype(F, D) )
%   | | | then return -0.20501566846395286;  // std dev = 0,188, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.022528338258138925;  // std dev = 0,594, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( location(A, I), location(C, I) )
%   | | then return 0.4296286722218127;  // std dev = 0,871, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(C, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5211775886100318;  // std dev = 0,397, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2836075605807496;  // std dev = 0,072, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, K), phenotype(K, L) )
%   | then if ( interaction(K, M), phenotype(M, L) )
%   | | then return -0.23319935862140112;  // std dev = 0,121, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.4586292429857228;  // std dev = 0,204, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14930727527080498;  // std dev = 0,052, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20966433861755915;  // std dev = 0,206, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.13214900431368456;  // std dev = 0,076, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, D), enzyme(A, E) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.10570528054394557;  // std dev = 0,595, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.17288581027700967;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.22725233023613925;  // std dev = 0,096, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.060075571236570875;  // std dev = 1,822, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17827861947132653;  // std dev = 0,185, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.19448853744154557;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(E, G), interaction(E, H) )
%   | | | then return -0.2420049822363367;  // std dev = 0,169, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0683273438674314;  // std dev = 0,623, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11793804324427463;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0725630471636931;  // std dev = 1,752, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15449925798237;  // std dev = 0,166, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.10637641304726454;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, D) )
%   | | then if ( interaction(E, A), enzyme(E, F) )
%   | | | then return -0.15335659259879836;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.05065650464268207;  // std dev = 0,854, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.10296989117431157;  // std dev = 1,469, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return -0.02479975697737111;  // std dev = 0,756, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */


Results
   AUC ROC   = 0.630276
   AUC PR    = 0.061885
   CLL	      = -0.468429
   Precision = 0.015354 at threshold = 0.5
   Recall    = 0.356322
   F1        = 0.02944


Total learning time: 6.159 seconds
Total inference time: 8.49 seconds
AUC ROC: 0.630276


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 04:18:19
{'CLL': -0.468429, 'AUC ROC': 0.630276, 'F1': 0.02944, 'Recall': 0.356322, 'Precision': [0.015354, 0.5], 'Inference time': 8.49, 'Learning time': 6.159, 'AUC PR': 0.061885}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(D, A), interaction(A, D) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, F), interaction(A, G) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2867203636709409;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */


Results
   AUC ROC   = 0.586863
   AUC PR    = 0.034212
   CLL	      = -0.212697
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.467 seconds
Total inference time: 1.938 seconds
AUC ROC: 0.586863


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 04:18:23
{'CLL': -0.212697, 'AUC ROC': 0.586863, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.938, 'Learning time': 1.467, 'AUC PR': 0.034212}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.23314893509951218;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8003690324663196;  // std dev = 0,093, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.17266576078189197;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14937431704722362;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.24826156798735563;  // std dev = 1,132, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5883812808707981;  // std dev = 0,133, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1732609063547882;  // std dev = 0,047, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4450717429060631;  // std dev = 0,130, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14989139569538845;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return -0.11939023028302065;  // std dev = 0,029, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.34104518745355034;  // std dev = 0,114, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14010627554320498;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.05472418240192323;  // std dev = 0,586, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then return 0.046837699975924005;  // std dev = 0,579, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then return 0.040074943990140104;  // std dev = 0,573, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.10067048456607822;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.1494051685326827;  // std dev = 0,022, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1402907725520193;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16631173218772316;  // std dev = 0,357, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.850797
   AUC PR    = 0.052439
   CLL	      = -0.255067
   Precision = 0.036364 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.067797


Total learning time: 1.288 seconds
Total inference time: 8.982 seconds
AUC ROC: 0.850797


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.177099
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.722 seconds
Parameter learned model CLL: -0.177099


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,false': 'interaction(E, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), enzyme(A, H)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.369, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,true,true': 'interaction(D, F), interaction(F, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(D, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0], 'true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,true,true,false': [0.093, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(A, D), interaction(D, A)', 'false,false,false': 'interaction(G, A)'}, {'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.132, 4, 4], 'false,true,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(D, F), interaction(F, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(D, A)', 'false,false,false': 'interaction(A, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,true,false': [0.047, 5, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true,true,false': [0.133, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(D, C)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.041, 5, 0], 'true,true,false,false': [0.13, 0, 4], 'true,true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false': 'interaction(D, A)'}, {'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'false,true,true': [0.029, 2, 0], 'false,true,false,true': [0.114, 0, 4], 'true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, F), interaction(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,true': [0.586, 5, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, E), enzyme(A, F)', 'false': 'interaction(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.579, 5, 4], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, E), interaction(E, F)', 'false': 'interaction(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.573, 5, 4], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, E)', 'false': 'interaction(A, D), interaction(D, A)', 'false,false,false': 'interaction(G, A), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.022, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.357, 1, 3], 'true': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 3, 0]}]]
[{'': [nan, 0.24999999999999986], 'false,false,true': [0.0, 0.23437500000000006], 'false,false': [0.2469135802469134, 0.0], 'false': [nan, 0.25000000000000006], 'false,false,false': [0.0, nan]}, {'': [nan, 0.23028926787899612], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [nan, 0.0021813671255001], 'false,true': [0.0021813671255001, 0.0], 'false': [0.23474646165370133, 0.0]}, {'': [nan, 0.1532828121480427], 'false,true': [nan, 0.0], 'false,false': [nan, 0.15167268268790637], 'false': [0.0, 0.15167268268790637], 'false,false,false': [0.16015250131106815, 0.0]}, {'': [nan, 0.13662255847101598], 'false,false': [nan, 0.0], 'false,true,true': [nan, 0.004412231111214082], 'false,true': [0.004412231111214082, 0.0004386920618630441], 'false': [0.14543898629658086, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0894580568406237, 0.0], 'true,true,false': [nan, 0.0041952129660514925], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0], 'true': [0.0041952129660514925, 0.0003433824760636639], 'false': [nan, 0.0], 'true,true': [nan, 0.0041952129660514925]}, {'': [nan, 0.053941380155055986], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,false': [0.003251674472042082, 0.0], 'false,true': [0.00042915453122200665, 0.0585536254968203], 'false': [0.05680798697678845, 0.0]}, {'': [nan, 0.03655886236488172], 'false,false': [0.03821741854060518, 0.0], 'false': [nan, 0.03655886236488172], 'false,false,false': [0.0, nan]}, {'': [nan, 0.03506713958277741], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false': [0.0372667529856765, 0.0]}, {'': [nan, 0.034027607412564366], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false': [0.03653902426010019, 0.0]}, {'': [nan, 0.03327601951521875], 'false,false,true': [0.00023710267002497246, -2.3129646346357427e-18], 'false,false': [0.020236538255438263, 0.03185166699673955], 'false': [0.0, 0.034380470317752605], 'false,false,false': [nan, 0.03185166699673955]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(E, A).;true;true
0;true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(A, D), interaction(D, A).;true;true
2;false;interaction(G, A).;true;true
3;;proteinclass(A, B) :- interaction(D, A).;true;true
3;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;;proteinclass(A, B) :- interaction(D, A).;true;true
5;true;interaction(D, E), interaction(E, A).;true;true
5;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(D, A).;true;true
8;;proteinclass(A, B) :- interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, D), interaction(D, A).;true;true
9;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
9;false;interaction(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.75517232473028;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14694131837536878;  // std dev = 0,096, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.1101909241086935;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then return 0.0539904627263156;  // std dev = 0,569, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.403673337608551;  // std dev = 0,706, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.514468822611979;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14570408655332154;  // std dev = 0,153, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.38785434539592767;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12907670999558213;  // std dev = 0,139, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return -0.15371838799418663;  // std dev = 0,107, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.30068673350071606;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.0903324280128593;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D) )
%   | then return -0.01231721566143729;  // std dev = 0,300, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.1267274097172005;  // std dev = 0,381, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D) )
%   | then return -0.011132694676130681;  // std dev = 0,301, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.10479224709801939;  // std dev = 0,381, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then return 0.10458015532614044;  // std dev = 0,228, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.0025202457138982274;  // std dev = 0,428, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.06577652601189858;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.19715913915366717;  // std dev = 0,089, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.08400636301880761;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.0794245513287534;  // std dev = 0,373, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.925788
   AUC PR    = 0.044799
   CLL	      = -0.348701
   Precision = 0.059286 at threshold = 0.5
   Recall    = 0.942308
   F1        = 0.111554


Total learning time: 1.564 seconds
Total inference time: 5.195 seconds
AUC ROC: 0.925788


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.155696
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.774 seconds
Refined model CLL: -0.155696


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.925788
   AUC PR    = 0.044799
   CLL	      = -0.348701
   Precision = 0.059286 at threshold = 0.5
   Recall    = 0.942308
   F1        = 0.111554


Total learning time: 4.348 seconds
Total inference time: 5.195 seconds
AUC ROC: 0.925788
Total revision time: 4.348
Best scored revision CLL: -0.155696


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 04:18:42
{'CLL': -0.348701, 'AUC ROC': 0.925788, 'F1': 0.111554, 'Recall': 0.942308, 'Precision': [0.059286, 0.5], 'parameter_5': {'CLL': -0.255067, 'AUC ROC': 0.850797, 'F1': 0.067797, 'Recall': 0.5, 'Precision': [0.036364, 0.5], 'Inference time': 8.982, 'Learning time': 1.288, 'AUC PR': 0.052439}, 'Inference time': 5.195, 'Learning time': 4.348, 'AUC PR': 0.044799}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.038428662236904595;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.5471150163392379;  // std dev = 0,330, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.16684505407811426;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08776943592935682;  // std dev = 0,714, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.4278698823616731;  // std dev = 0,364, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14492173971610967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06927620509575368;  // std dev = 0,715, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then return 0.20931441067002995;  // std dev = 0,441, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.003444863553837533;  // std dev = 0,892, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then return 0.18121971982550353;  // std dev = 0,426, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.008932884006015615;  // std dev = 0,883, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3097665113587857;  // std dev = 0,401, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14369206148860034;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08526317695604894;  // std dev = 0,641, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then return -0.038297023451170614;  // std dev = 0,566, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0.1282543316100123;  // std dev = 0,688, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.730514
   AUC PR    = 0.035686
   CLL	      = -0.476463
   Precision = 0.014888 at threshold = 0.5
   Recall    = 0.567308
   F1        = 0.029014


Total learning time: 1.961 seconds
Total inference time: 4.151 seconds
AUC ROC: 0.730514


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 04:18:49
{'CLL': -0.476463, 'AUC ROC': 0.730514, 'F1': 0.029014, 'Recall': 0.567308, 'Precision': [0.014888, 0.5], 'Inference time': 4.151, 'Learning time': 1.961, 'AUC PR': 0.035686}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.499988
   AUC PR    = 0.006332
   CLL	      = -0.233749
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.916 seconds
Total inference time: 1.582 seconds
AUC ROC: 0.499988


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 04:18:51
{'CLL': -0.233749, 'AUC ROC': 0.499988, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.582, 'Learning time': 0.916, 'AUC PR': 0.006332}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29564893509951234;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8058788864242193;  // std dev = 0,092, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.18177747440245698;  // std dev = 1,29e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.29701438684128156;  // std dev = 0,597, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1562856536324035;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.2743255883299522;  // std dev = 1,565, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.2470189847363179;  // std dev = 0,578, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5870990216927843;  // std dev = 0,130, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.18279787961064062;  // std dev = 0,074, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0.20000029290470922;  // std dev = 0,563, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4427070050544622;  // std dev = 0,125, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.15714725423425466;  // std dev = 0,065, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15871499641082915;  // std dev = 0,552, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return -0.12458634970005292;  // std dev = 0,046, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3385672065410337;  // std dev = 0,108, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.14782684907239244;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5097743556193916;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.2613232227950942;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.06142667040431526;  // std dev = 0,809, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08518191031578114;  // std dev = 0,423, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.05231657290410899;  // std dev = 0,798, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3645073377424545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.22877455105552846;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then return 0.04455548679112753;  // std dev = 0,790, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04698021757252603;  // std dev = 0,336, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return -0.10445772857062098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.23325832842914676;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15897803415835896;  // std dev = 0,044, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09911693336767559;  // std dev = 0,548, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */


Results
   AUC ROC   = 0.960006
   AUC PR    = 0.132695
   CLL	      = -0.221674
   Precision = 0.084615 at threshold = 0.5
   Recall    = 0.634615
   F1        = 0.149321


Total learning time: 1.507 seconds
Total inference time: 8.914 seconds
AUC ROC: 0.960006


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.18991
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.803 seconds
Parameter learned model CLL: -0.18991


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(F, A)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, H), enzyme(A, I)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.984, 9, 7], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [1.29e-08, 9, 0], 'false,false,true,false': [0.597, 1, 1], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.092, 0, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, A)', 'false,false,false': 'interaction(I, A)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [1.565, 7, 8], 'false,true,true': [0.0, 0, 0], 'false,false,false,false': [0.578, 1, 1], 'true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, J)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.563, 1, 1], 'false,true,false': [0.074, 9, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.13, 0, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(D, C)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.065, 9, 0], 'true,true,false,false': [0.125, 0, 8], 'true,true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'false,false,true,false': [0.552, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false': 'interaction(E, A)'}, {'false,true,false,false': [3.73e-09, 5, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.046, 4, 0], 'false,true,false,true': [0.108, 0, 8], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'false,false': 'interaction(G, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'false,false,true': [0.809, 9, 8], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.423, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.798, 9, 8], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false,false': 'interaction(A, F), interaction(F, G)', 'false': 'interaction(E, A)', 'false,false,true': 'recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.79, 9, 8], 'false,false,true,false': [0.336, 1, 1], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'true': 'interaction(C, D), interaction(D, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,false,false': 'interaction(I, A), recursion_proteinclass(I, B)'}, {'false,false,true,true': [0.088, 0, 4], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.548, 3, 5], 'false,true': [0.0, 2, 0], 'false,false,true,false': [0.044, 5, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.2493074792243767], 'false,false,true': [0.0, 0.24609375000000003], 'false,false': [0.24913494809688583, 0.25], 'true': [nan, 0.0], 'false': [nan, 0.24930747922437652], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.2366951907251149], 'false,false,true': [nan, 0.178471628116294], 'false,false': [0.178471628116294, nan], 'false,true,true': [nan, 0.0010665579962887417], 'true': [nan, 0.0], 'false,true': [0.0010665579962887417, 1.850371707708594e-17], 'false': [0.24352435348565957, 0.178471628116294]}, {'': [0.0, 0.16378337780300675], 'false,false': [nan, 0.16382362637286385], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.16382362637286382], 'false,false,false': [0.16329378485409565, 0.16713951076378458]}, {'': [0.0, 0.1500320567508061], 'false,false': [nan, 0.15853372029163282], 'false,true,true': [nan, 0.0021134882778900965], 'true': [nan, 0.0], 'false,true': [0.0021134882778900965, 0.0006054091623052568], 'false': [0.14898765117460924, 0.15853372029163282], 'false,false,false': [0.15853372029163282, nan]}, {'': [0.08776867213740573, 0.15255173087857024], 'false,false,true': [nan, 0.15255173087857024], 'false,false': [0.15255173087857024, nan], 'true,true,false': [0.0, 0.0019393439992748396], 'true': [0.0031937693375932628, 0.0004701745018933316], 'false': [nan, 0.15255173087857024], 'true,true': [nan, 0.0031937693375932628]}, {'': [0.0, 0.06709593564124913], 'false,false,true': [0.0, 0.0], 'false,false': [0.148647868859171, nan], 'false,true,false': [0.001468253828027774, 2.7755575615628915e-18], 'true': [nan, 0.0], 'false,true': [0.0005401208110757134, 0.0568986123760826], 'false': [0.057352038679965404, 0.148647868859171]}, {'': [0.0, 0.043909266424290785], 'true': [0.0, nan], 'false,false': [0.03847851922456142, 0.08956570740118659], 'false': [nan, 0.043909266424290785], 'false,false,false': [0.08956570740118659, nan]}, {'': [0.0, 0.042818548751391024], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.0], 'true': [nan, 0.0], 'false': [0.03747811983947158, 0.08799584989392555], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.038827322395162976], 'false,false,true': [nan, 0.05659835390751521], 'false,false': [0.05659835390751521, nan], 'false': [0.03673599392975213, 0.05659835390751521], 'true': [0.0, nan]}, {'': [0.0, 0.03827916517297341], 'false,false,true': [0.0019476341682231196, 0.00038628983282136266], 'false,false': [0.03906771796605604, 0.037575814956137064], 'true': [nan, 0.0], 'false': [0.0, 0.04011383256152586], 'false,false,false': [nan, 0.037575814956137064]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), enzyme(A, I).;true;true
0;false;interaction(F, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(E, A).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, F), interaction(F, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;false;interaction(F, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
4;true,true;recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;false;interaction(E, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(A, F), enzyme(A, G).;true;true
7;false;interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;false,false;interaction(A, G).;true;true
9;false;interaction(A, F), interaction(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.5581489350995122;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.7688344742549222;  // std dev = 0,053, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.15833440750328842;  // std dev = 0,140, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.29701438684128156;  // std dev = 0,597, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.10907879556702056;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then if ( enzyme(F, G), phenotype(E, H) )
%   | | | then return 0.36330458413114347;  // std dev = 0,584, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12226109891190687;  // std dev = 0,046, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.6160974939720585;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20915540627523987;  // std dev = 0,997, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.46429067393371704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5373316714191373;  // std dev = 0,098, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10680187579897753;  // std dev = 0,047, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.233074759884251;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.21200908848966057;  // std dev = 0,506, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.35265900957217255;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.40547079422705534;  // std dev = 0,092, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then return -0.09706778691902283;  // std dev = 0,043, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.19401888281259516;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.17151061789137334;  // std dev = 0,489, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return -0.12382021610117505;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.29507155226639026;  // std dev = 0,096, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.10691854752004812;  // std dev = 0,076, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.4745251743691834;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.20043496066119054;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( enzyme(E, F) )
%   | | then return 0.020331495283384602;  // std dev = 0,466, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.07356089292559258;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.12601616772991164;  // std dev = 0,182, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then if ( complex(E, F) )
%   | | | then return -0.08361671179598468;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10067855175404887;  // std dev = 0,312, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.20082945482569248;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -3.66703709594407E-5;  // std dev = 0,456, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0.3550660037062674;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1731190051260894;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(E, F), phenotype(D, F) )
%   | | then return 0.0788651643433286;  // std dev = 0,305, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.09443176856887199;  // std dev = 0,070, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.13787929234247473;  // std dev = 0,347, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.04770283243377591;  // std dev = 0,395, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.07437328734660408;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.20381454546269503;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0867428570481508;  // std dev = 0,065, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.10394749364054401;  // std dev = 0,340, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.004899457930142001;  // std dev = 0,338, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.965548
   AUC PR    = 0.110788
   CLL	      = -0.275507
   Precision = 0.068353 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.127632


Total learning time: 2.596 seconds
Total inference time: 8.804 seconds
AUC ROC: 0.965548


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.151691
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.81 seconds
Refined model CLL: -0.151691


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.965548
   AUC PR    = 0.110788
   CLL	      = -0.275507
   Precision = 0.068353 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.127632


Total learning time: 5.716000000000001 seconds
Total inference time: 8.804 seconds
AUC ROC: 0.965548
Total revision time: 5.716000000000001
Best scored revision CLL: -0.151691


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 04:19:16
{'CLL': -0.275507, 'AUC ROC': 0.965548, 'F1': 0.127632, 'Recall': 0.961538, 'Precision': [0.068353, 0.5], 'Inference time': 8.804, 'Learning time': 5.716000000000001, 'AUC PR': 0.110788, 'parameter_10': {'CLL': -0.221674, 'AUC ROC': 0.960006, 'F1': 0.149321, 'Recall': 0.634615, 'Precision': [0.084615, 0.5], 'Inference time': 8.914, 'Learning time': 1.507, 'AUC PR': 0.132695}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), phenotype(C, E) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( enzyme(A, F) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), phenotype(C, E) )
%   | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F) )
%   | then return 0.7732502885597415;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19352537383465235;  // std dev = 1,049, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then return -0.17795200471750997;  // std dev = 0,131, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.23517512058727075;  // std dev = 0,952, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(A, G) )
%   | then return 0.6142221862140497;  // std dev = 0,111, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16025842753214942;  // std dev = 1,043, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), phenotype(C, E) )
%   | then return 0.24910786095114162;  // std dev = 0,923, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.12109557784129572;  // std dev = 0,046, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F) )
%   | then return 0.4655632423452209;  // std dev = 0,118, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.37792189850843627;  // std dev = 0,818, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.09781591773400322;  // std dev = 0,639, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then return -0.17135583184525507;  // std dev = 0,171, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.18817657261653775;  // std dev = 0,855, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( enzyme(A, G) )
%   | then return 0.35100587774900427;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.29490488167039186;  // std dev = 0,818, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.013094077414610439;  // std dev = 0,554, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.2293526930455471;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(G, A) )
%   | | | then return 0.2828449939832129;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5023827524699676;  // std dev = 0,225, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.20176602525822143;  // std dev = 0,315, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.04367189557462396;  // std dev = 0,658, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.14204836661955192;  // std dev = 0,490, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.19134592710568635;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.22666205286757732;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.38679939046477874;  // std dev = 0,197, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1768777733597747;  // std dev = 0,285, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.036918690159883874;  // std dev = 0,653, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.1137891731911837;  // std dev = 0,485, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then return 0.14337155566897544;  // std dev = 0,383, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return -0.16347325728680973;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then return 0.16759660557976655;  // std dev = 0,661, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.03137737527454078;  // std dev = 0,671, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then return 0.12477390790026306;  // std dev = 0,360, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return -0.1423309604526568;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then return 0.13899641932478707;  // std dev = 0,645, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.025057527121721303;  // std dev = 0,671, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), phenotype(C, E) )
%   | then return 0.1509832862779064;  // std dev = 0,564, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.13682164155253335;  // std dev = 0,136, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F) )
%   | then return 0.19223839569108755;  // std dev = 0,146, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.1517508407738729;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.016284490201980906;  // std dev = 0,668, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.563794
   AUC PR    = 0.080423
   CLL	      = -0.533209
   Precision = 0.006992 at threshold = 0.5
   Recall    = 0.403846
   F1        = 0.013746


Total learning time: 4.053 seconds
Total inference time: 3.375 seconds
AUC ROC: 0.563794


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 04:19:23
{'CLL': -0.533209, 'AUC ROC': 0.563794, 'F1': 0.013746, 'Recall': 0.403846, 'Precision': [0.006992, 0.5], 'Inference time': 3.375, 'Learning time': 4.053, 'AUC PR': 0.080423}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), phenotype(C, E) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( enzyme(A, F) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.500012
   AUC PR    = 0.006332
   CLL	      = -0.234873
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.355 seconds
Total inference time: 2.141 seconds
AUC ROC: 0.500012


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 04:19:27
{'CLL': -0.234873, 'AUC ROC': 0.500012, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.141, 'Learning time': 1.355, 'AUC PR': 0.006332}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.31648226843284566;  // std dev = 2,441, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7672883688133834;  // std dev = 0,068, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8064096969426433;  // std dev = 0,091, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.18489667458418776;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16401254434762622;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.543530191963286;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.15863569417696446;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.30518061608799546;  // std dev = 1,845, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.13986433403309048;  // std dev = 0,788, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.5050649282248567;  // std dev = 0,136, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5797193694477111;  // std dev = 0,128, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.1836767173201508;  // std dev = 0,108, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11729136742626663;  // std dev = 0,786, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42878843855535415;  // std dev = 0,189, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.1578554987435027;  // std dev = 0,096, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09695005772742542;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return -0.01652879162831695;  // std dev = 0,521, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.33596064383715435;  // std dev = 0,106, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.15384382187511944;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.715802070651478;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.2391375003004318;  // std dev = 0,064, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.07172154045336389;  // std dev = 1,027, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05142432645409762;  // std dev = 0,615, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.06074896881399686;  // std dev = 1,012, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5390469215212546;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.24760141982640113;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.16638796125670904;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then return 0.05146723312270854;  // std dev = 1,001, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.01884943539234792;  // std dev = 0,475, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return -0.05788228775948843;  // std dev = 0,274, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.25215280929527895;  // std dev = 0,180, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.16426735597822137;  // std dev = 0,048, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07854877923907096;  // std dev = 0,720, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */


Results
   AUC ROC   = 0.969471
   AUC PR    = 0.137925
   CLL	      = -0.249099
   Precision = 0.078802 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.145666


Total learning time: 1.571 seconds
Total inference time: 8.881 seconds
AUC ROC: 0.969471


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.202114
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.849 seconds
Parameter learned model CLL: -0.202114


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(F, A)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, H), enzyme(A, I)'}, {'false,false,true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [2.441, 13, 11], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.068, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.0, 13, 0], 'false,false,true,false': [0.791, 2, 1], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.091, 0, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, A)', 'false,false,false': 'interaction(I, A)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [1.845, 9, 12], 'false,true,true': [0.0, 0, 1], 'false,false,false,false': [0.788, 2, 1], 'true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, J)'}, {'false,true,true,true': [0.136, 0, 2], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.786, 2, 1], 'false,true,false': [0.108, 13, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.128, 0, 11]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(D, C)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.096, 13, 0], 'true,true,false,false': [0.189, 0, 13], 'true,true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'false,false,true,false': [0.784, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false': 'interaction(E, A)'}, {'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.521, 6, 2], 'false,true,false,true': [0.106, 0, 11], 'false,false,true,false': [0.064, 2, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'false,false': 'interaction(G, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'false,false,true': [1.027, 13, 13], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.615, 2, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true': [1.012, 13, 13], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false,false': 'interaction(A, F), interaction(F, G)', 'false': 'interaction(E, A)', 'false,false,true': 'recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.001, 13, 13], 'false,false,true,false': [0.475, 2, 1], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'true': 'interaction(C, D), interaction(D, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,false,false': 'interaction(I, A), recursion_proteinclass(I, B)'}, {'false,false,true,true': [0.18, 0, 6], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.72, 5, 7], 'false,true': [0.274, 4, 1], 'false,false,true,false': [0.048, 6, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.24970273483947644], 'false,false,true': [0.0, 0.24826388888888892], 'false,false': [0.24999999999999956, 0.22222222222222224], 'true': [nan, 0.0], 'false': [nan, 0.24970273483947686], 'false,false,false': [0.25, 0.0]}, {'': [0.0, 0.2416161693387057], 'false,false,true': [nan, 0.20855939702592685], 'false,false': [0.20855939702592685, nan], 'false,true,true': [0.002286270074892127, 0.0007557917602951456], 'true': [nan, 0.0], 'false,true': [0.0011904838259796636, -1.708035422500241e-17], 'false': [0.2432932076445663, 0.20855939702592685]}, {'': [0.0, 0.16794908409080397], 'false,false': [nan, 0.17070416231730504], 'true': [nan, 0.0], 'false,true': [0.0, 0.0], 'false': [0.07888590906545973, 0.1707041623173051], 'false,false,false': [0.1620859757056426, 0.20711817962554244]}, {'': [0.0, 0.15047434721111322], 'false,false': [nan, 0.20587570315271583], 'false,true,true': [0.00926875888621792, 0.0014896834789962005], 'true': [nan, 0.0], 'false,true': [0.003411980778773036, 0.0009034694171245856], 'false': [0.14350018342007884, 0.20587570315271583], 'false,false,false': [0.20587570315271583, nan]}, {'': [0.08573760957128575, 0.20484056499716755], 'false,false,true': [nan, 0.20484056499716755], 'false,false': [0.20484056499716755, nan], 'true,true,false': [0.0, 0.0027498440594460392], 'true': [0.0033281569577452113, 0.0007031064350658427], 'false': [nan, 0.20484056499716755], 'true,true': [nan, 0.003328156957745116]}, {'': [0.0, 0.07127453128855453], 'false,false,true': [0.0, 0.002030442265997974], 'false,false': [0.20400020243729147, nan], 'false,true,false': [0.0010118975239631041, -1.1895246692412391e-17], 'true': [nan, 0.0], 'false,true': [0.033932184420064605, 0.05763365319871764], 'false': [0.055932016191923485, 0.20400020243729147]}, {'': [0.0, 0.049443855307277566], 'true': [0.0, nan], 'false,false': [0.040542440175838156, 0.12622009451655342], 'false': [nan, 0.049443855307277546], 'false,false,false': [0.12622009451655342, nan]}, {'': [0.0, 0.04825755843023879], 'false,false,true': [0.0, 0.0], 'false,false': [0.15470390323625444, 0.0], 'true': [nan, 0.0], 'false': [0.03939007291768943, 0.12478329029309203], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.04246874828040978], 'false,false,true': [nan, 0.07535134811071537], 'false,false': [0.07535134811071537, nan], 'false': [0.038564541381097675, 0.07535134811071537], 'true': [0.0, nan]}, {'': [0.0, 0.0418652109932996], 'false,false,true': [0.005384102190301813, 0.0003892203843592947], 'false,false': [0.046238099798932876, 0.043201864723069444], 'true': [nan, 0.0], 'false': [0.014980532810087016, 0.04501937697980298], 'false,false,false': [nan, 0.043201864723069444]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), enzyme(A, I).;true;true
0;false;interaction(F, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true,true;interaction(E, G), interaction(G, A).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
2;false;interaction(A, F), interaction(F, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;false;interaction(F, A).;true;true
3;false,true,true;interaction(F, H), interaction(H, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
4;true,true;recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;false;interaction(E, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(A, F), enzyme(A, G).;true;true
7;false;interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;false,false;interaction(A, G).;true;true
9;false;interaction(A, F), interaction(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.058148935099512175;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.5010060779566551;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.752569512644536;  // std dev = 0,047, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7915129438057275;  // std dev = 0,112, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.17417659034622915;  // std dev = 0,114, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.16401254434762622;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.5471796114526035;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1283051895527369;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, F), location(A, G) )
%   | | then if ( location(H, G), interaction(A, H) )
%   | | | then return 0.29643899113476235;  // std dev = 0,849, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.650526746334091;  // std dev = 0,144, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.30176295854388047;  // std dev = 0,891, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.001861432735388851;  // std dev = 0,940, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.48616527520283875;  // std dev = 0,106, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.536581903380302;  // std dev = 0,252, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.13065282264329467;  // std dev = 0,059, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.20634765520279905;  // std dev = 0,055, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.09664605844189385;  // std dev = 0,682, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(E, A), complex(E, F) )
%   | | | then return 0.3909674829004971;  // std dev = 0,227, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.4351853038452392;  // std dev = 0,137, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.10201938220767554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13110826905584194;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.17469563008245553;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.07948110594368471;  // std dev = 0,676, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.040295888916740755;  // std dev = 0,452, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.10708397930807347;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.31705358768100483;  // std dev = 0,225, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.13038692149634454;  // std dev = 0,061, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.6109208486084947;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.2082769603112345;  // std dev = 0,058, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.38767313890324373;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19838831341479654;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.10678211609155452;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then return -0.06860727657071157;  // std dev = 0,332, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.10268958612450478;  // std dev = 0,499, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.004318330058907934;  // std dev = 0,478, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( phenotype(F, G), phenotype(E, H) )
%   | | | then return 0.0816493939800157;  // std dev = 0,491, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.09196308961993756;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.16871283870466175;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04223614804461884;  // std dev = 0,641, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.36646566176434336;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.20093560943675196;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1323363874380927;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then return 0.04167650768262008;  // std dev = 0,357, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.19550006788723845;  // std dev = 0,134, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), phenotype(J, I) )
%   | | | then return -0.029172137063936808;  // std dev = 0,275, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.062244687220260574;  // std dev = 0,596, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return -0.06074439059711517;  // std dev = 0,341, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.024714035883302586;  // std dev = 0,276, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.22893346729647077;  // std dev = 0,121, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10974350220477362;  // std dev = 0,067, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.06971320860329538;  // std dev = 0,539, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.04692965729617891;  // std dev = 0,210, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.977113
   AUC PR    = 0.177653
   CLL	      = -0.227359
   Precision = 0.084929 at threshold = 0.5
   Recall    = 0.980769
   F1        = 0.156322


Total learning time: 3.661 seconds
Total inference time: 10.453 seconds
AUC ROC: 0.977113


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.162615
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.893 seconds
Refined model CLL: -0.162615


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.977113
   AUC PR    = 0.177653
   CLL	      = -0.227359
   Precision = 0.084929 at threshold = 0.5
   Recall    = 0.980769
   F1        = 0.156322


Total learning time: 6.973999999999999 seconds
Total inference time: 10.453 seconds
AUC ROC: 0.977113
Total revision time: 6.973999999999999
Best scored revision CLL: -0.162615


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 04:19:54
{'CLL': -0.227359, 'AUC ROC': 0.977113, 'F1': 0.156322, 'Recall': 0.980769, 'Precision': [0.084929, 0.5], 'parameter_15': {'CLL': -0.249099, 'AUC ROC': 0.969471, 'F1': 0.145666, 'Recall': 0.961538, 'Precision': [0.078802, 0.5], 'Inference time': 8.881, 'Learning time': 1.571, 'AUC PR': 0.137925}, 'Inference time': 10.453, 'Learning time': 6.973999999999999, 'AUC PR': 0.177653}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( phenotype(A, F), complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), phenotype(C, F) )
%   | then if ( interaction(D, A), phenotype(C, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5960304441332555;  // std dev = 0,796, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.15085549202214277;  // std dev = 0,062, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( enzyme(A, G) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then return 0.43783406196450586;  // std dev = 0,976, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.11184993472473292;  // std dev = 0,822, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then return -0.1266843298232182;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, C), location(A, D) )
%   | then if ( location(E, D), interaction(A, E) )
%   | | then return 0.21371130788582324;  // std dev = 0,747, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5604059847541253;  // std dev = 0,028, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, F), phenotype(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.6158430460680163;  // std dev = 0,034, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15865690353018327;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.30408373014217693;  // std dev = 0,921, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1268659746860472;  // std dev = 0,031, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), phenotype(C, F) )
%   | then if ( interaction(D, A), phenotype(C, E) )
%   | | then return -0.09934293357708938;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.39279880821737523;  // std dev = 0,720, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.1445466477153261;  // std dev = 0,103, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, G) )
%   | then return 0.5478152557149368;  // std dev = 0,257, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.4162884981393481;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.2194821982830799;  // std dev = 0,692, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.12380649882646648;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.1043464888158958;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(E, F), phenotype(D, F) )
%   | | then return 0.3201644122601451;  // std dev = 0,490, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(E, G) )
%   | | | then return 0.008696419392594653;  // std dev = 0,549, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1394410325455756;  // std dev = 0,079, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H) )
%   | | then return 0.4244730318258146;  // std dev = 0,267, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.3198814135815802;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09281212796361984;  // std dev = 0,749, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), phenotype(C, F) )
%   | then if ( interaction(D, A), phenotype(C, E) )
%   | | then return -0.09512213599770876;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.25077617239852273;  // std dev = 0,657, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.115623279071789;  // std dev = 0,079, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, G) )
%   | then return 0.3344979967686769;  // std dev = 0,251, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.25460551446894786;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.15499539332824464;  // std dev = 0,659, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.11402345395613865;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), phenotype(C, E) )
%   | then if ( interaction(D, A) )
%   | | then return -0.08726744508383595;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2960913875015828;  // std dev = 0,155, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, F), complex(C, G) )
%   | | then return -0.025796676373327953;  // std dev = 0,536, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11172143317677015;  // std dev = 0,060, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, H) )
%   | then return 0.2705319550552316;  // std dev = 0,227, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.20935730646716344;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.12256270459499619;  // std dev = 0,648, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.10300990232674818;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), phenotype(C, E) )
%   | then if ( interaction(D, A) )
%   | | then return -0.08058082514606062;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.23977110142565006;  // std dev = 0,137, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, F), complex(C, G) )
%   | | then return -0.021216928673681783;  // std dev = 0,537, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10117634144918945;  // std dev = 0,055, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, H) )
%   | then return 0.22443251578011228;  // std dev = 0,203, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.17680276088512092;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.0969173624182428;  // std dev = 0,642, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.09387994287269706;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), phenotype(C, F) )
%   | then if ( interaction(D, A), enzyme(C, G) )
%   | | then return -0.07482398507306658;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.13527351853544148;  // std dev = 0,591, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.08782768098343267;  // std dev = 0,057, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, H) )
%   | then return 0.1903538790611915;  // std dev = 0,181, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.15252099264452101;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.0767134782203518;  // std dev = 0,640, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.08619757516852589;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), phenotype(C, E) )
%   | then if ( interaction(D, A) )
%   | | then return -0.06981848920063512;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.17944932644404823;  // std dev = 0,112, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(D, F), interaction(D, G) )
%   | | then return -0.03659567751175299;  // std dev = 0,535, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08552638157048637;  // std dev = 0,047, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, H) )
%   | then return 0.16447385472934495;  // std dev = 0,162, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.13383301835167005;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.060803708944097055;  // std dev = 0,639, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.07964966514094429;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.628242
   AUC PR    = 0.110796
   CLL	      = -0.429193
   Precision = 0.007027 at threshold = 0.5
   Recall    = 0.288462
   F1        = 0.013721


Total learning time: 6.85 seconds
Total inference time: 7.358 seconds
AUC ROC: 0.628242


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 04:20:09
{'CLL': -0.429193, 'AUC ROC': 0.628242, 'F1': 0.013721, 'Recall': 0.288462, 'Precision': [0.007027, 0.5], 'Inference time': 7.358, 'Learning time': 6.85, 'AUC PR': 0.110796}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( location(F, E), interaction(A, F) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.585342
   AUC PR    = 0.008265
   CLL	      = -0.187296
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.58 seconds
Total inference time: 2.353 seconds
AUC ROC: 0.585342


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 04:20:13
{'CLL': -0.187296, 'AUC ROC': 0.585342, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.353, 'Learning time': 1.58, 'AUC PR': 0.008265}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3268989350995123;  // std dev = 2,823, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7821766541344947;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8068100706044566;  // std dev = 0,091, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.18647172490373534;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09164824862862181;  // std dev = 0,830, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, F), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.5398340049247978;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1598193531652308;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.34063840680709867;  // std dev = 2,021, 26,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return 0.07915684919243993;  // std dev = 0,828, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.5264874234332018;  // std dev = 0,147, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5712783335543701;  // std dev = 0,127, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.18155906934761112;  // std dev = 0,145, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K) )
%   | | | then return 0.06775472335297616;  // std dev = 0,826, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4247360212384792;  // std dev = 0,188, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.1563082938663669;  // std dev = 0,128, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0575369307618137;  // std dev = 0,824, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return -0.0022839243745169683;  // std dev = 0,640, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.33075675237766544;  // std dev = 0,103, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1539099033205583;  // std dev = 0,053, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.506953406614232;  // std dev = 0,356, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.18821087128173844;  // std dev = 0,065, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), interaction(F, C) )
%   | | then if ( interaction(C, F) )
%   | | | then return 0.17105514799673893;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.07160571380953887;  // std dev = 1,172, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.042611237916373584;  // std dev = 0,709, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.06066843094627619;  // std dev = 1,155, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6447840793830117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.21562372952628955;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.045889451852857276;  // std dev = 0,238, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then return 0.05141535445729029;  // std dev = 1,143, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.1540304158309439;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.007927844827455628;  // std dev = 0,555, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(D, A), interaction(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, A), enzyme(D, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13501062623906723;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.08206220185681938;  // std dev = 0,281, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2619111956668502;  // std dev = 0,264, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1594516803954314;  // std dev = 0,039, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06599530843526254;  // std dev = 0,774, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */


Results
   AUC ROC   = 0.967896
   AUC PR    = 0.147109
   CLL	      = -0.256431
   Precision = 0.078599 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.145428


Total learning time: 1.706 seconds
Total inference time: 10.072 seconds
AUC ROC: 0.967896


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.197718
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.897 seconds
Parameter learned model CLL: -0.197718


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(A, D), interaction(D, C)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, I), enzyme(A, J)'}, {'false,false,true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.707, 1, 1], 'false,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 2, 0], 'false,false,true,false': [2.823, 17, 15], 'true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.077, 0, 3], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.0, 17, 0], 'false,false,true,false': [0.83, 3, 1], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.091, 0, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(C, F), enzyme(A, F)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false,false,false': 'interaction(J, A)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [2.021, 10, 16], 'false,true,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.828, 3, 1], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 7, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, J), interaction(J, I)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, K)'}, {'false,true,true,true': [0.147, 0, 3], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.826, 3, 1], 'false,true,false': [0.145, 17, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.127, 0, 14]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(D, C)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.128, 17, 0], 'true,true,false,false': [0.188, 0, 17], 'true,true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'false,false,true,false': [0.824, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false': 'interaction(E, A)'}, {'false,true,false,false': [0.053, 9, 0], 'false,false,true,true': [0.356, 0, 2], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.64, 8, 3], 'false,true,false,true': [0.103, 0, 14], 'false,false,true,false': [0.065, 3, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A)', 'true,false': 'interaction(A, F), interaction(F, C)', 'true': 'interaction(D, A), interaction(E, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'true,false,true': 'interaction(C, F)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,false,true': [1.172, 17, 17], 'false,false,false,true': [0.709, 3, 1], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.238, 2, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true': [1.155, 17, 17], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false,false': 'interaction(A, F), interaction(F, G)', 'false': 'interaction(E, A)', 'false,false,true': 'recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.143, 17, 17], 'false,false,true,false': [0.555, 3, 1], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'interaction(D, A), enzyme(D, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'false,false,true,true': [0.264, 0, 9], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'false,true': [0.281, 7, 1], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.774, 6, 8], 'false,false,true,false': [0.039, 7, 0]}]]
[{'': [0.0, 0.24983563445101864], 'false,false,true': [0.0, 0.2490234374999996], 'false,false': [0.24999999999999953, 0.18750000000000003], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.2493074792243767], 'false,false,false': [0.25, 0.0]}, {'': [0.0, 0.2402132104833916], 'false,false,true': [0.0, 0.1721293216541677], 'false,false': [0.2007697670876833, nan], 'false,true,true': [0.0019658482738610004, 0.0005867455307191349], 'true': [nan, 0.0], 'false,true': [0.0009183028268905706, 0.0], 'false': [0.24495712251442198, 0.2007697670876833]}, {'': [0.0, 0.16680582523753962], 'true,true,false': [nan, 0.0], 'false,false': [nan, 0.16690723102250338], 'true': [0.0, 0.0], 'false,true': [0.0, 0.0], 'false': [0.05354068360010277, 0.16690723102250318], 'true,true': [nan, 0.0], 'false,false,false': [0.15712621891348505, 0.17122755208821244]}, {'': [0.0, 0.14289058675006844], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.1704401802469765], 'false,true,true': [0.007247961763001354, 0.0011542777965777137], 'true': [nan, 0.0], 'false,true': [0.0025211959928610863, 0.0012378737622255314], 'false': [0.14061087492599741, 0.15592514591147638], 'false,false,false': [0.1704401802469765, nan]}, {'': [0.08443894958286101, 0.14689221549722825], 'false,false,true': [nan, 0.16976306204728106], 'false,false': [0.16976306204728106, nan], 'true,true,false': [0.0, 0.002082174787326007], 'true': [0.0025342684394977283, 0.0009689591925718747], 'false': [0.0, 0.16976306204728106], 'true,true': [nan, 0.0025342684394978024]}, {'': [0.0, 0.06601483310111639], 'false,false,true': [0.0633937545677255, 0.0014073930654331425], 'false,false': [0.14218274724938035, nan], 'false,true,false': [0.0007626010576735302, 0.00031569698114595264], 'true': [nan, 0.0], 'false,true': [0.03729076599619085, 0.05653786290364153], 'false': [0.05481064191996457, 0.14218274724938035]}, {'': [0.0003744721854008551, 0.04943081304607677], 'false,false': [0.040377781999701455, 0.12562938990082345], 'true,false': [0.0, nan], 'true': [0.0, 0.0], 'false': [nan, 0.04943081304607678], 'true,false,true': [0.0, nan], 'false,false,false': [0.12562938990082345, nan]}, {'': [0.0, 0.04723493659817007], 'false,false,true': [0.0, 0.0], 'false,false': [0.1850753994080262, 0.018824733978132183], 'true': [nan, 0.0], 'false': [0.03923822735945548, 0.10160766250422111], 'false,false,false': [0.018824733978132183, nan]}, {'': [0.0, 0.04186524178810506], 'false,false,true': [0.0, 0.07709910939591058], 'false,false': [0.06509464131734116, nan], 'false': [0.038423057832480026, 0.06509464131734116], 'true': [0.0, nan]}, {'': [2.5180134874749904e-07, 0.04207630621548949], 'false,false,true': [0.007717927837676121, 0.00021701479717637203], 'false,false': [0.048129405020657066, 0.04275692346464637], 'true,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false': [0.009875462021910017, 0.04565556231048274], 'true,true': [nan, 0.0], 'false,false,false': [nan, 0.04275692346464637]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
0;false,false;interaction(G, A).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,false,false;interaction(A, I), enzyme(A, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;recursion_proteinclass(I, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true,true;interaction(E, G), interaction(G, A).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, E).;true;true
2;false;interaction(A, G), interaction(G, A).;true;true
2;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
3;false;interaction(F, A).;true;true
3;false,true,true;interaction(F, H), interaction(H, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
4;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;true,true;recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;false;interaction(E, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(A, F), enzyme(A, G).;true;true
7;false;interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false;recursion_proteinclass(G, B).;true;true
8;false;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, E).;true;true
9;false,false;interaction(A, H).;true;true
9;false;interaction(A, G), interaction(G, A).;true;true
9;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3268989350995123;  // std dev = 2,823, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.7821766541344947;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8068100706044566;  // std dev = 0,091, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.18647172490373534;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( recursion_proteinclass(G, B) )
%   | | then return 0.7641072739982948;  // std dev = 0,063, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.14738271375704926;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then return 0.544319327941694;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.5398340049247978;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1598193531652308;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6609284334510755;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1598193531652308;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.029286116928175707;  // std dev = 0,619, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2887215381714254;  // std dev = 1,358, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.5348406742745953;  // std dev = 0,158, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5304430229536892;  // std dev = 0,153, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1424921246017728;  // std dev = 0,021, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.19198642844401637;  // std dev = 0,057, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4093687509830293;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.0310437742206863;  // std dev = 0,548, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.3716650211836399;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.43458240321303365;  // std dev = 0,167, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.12326327123428628;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.13313936077705946;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.16403543150097072;  // std dev = 0,050, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.3151946423989622;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.026515893444208665;  // std dev = 0,545, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.06519812246298248;  // std dev = 0,293, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.10544525748851637;  // std dev = 0,513, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3104449391870855;  // std dev = 0,112, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.12583936831855358;  // std dev = 0,056, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.37060960120784175;  // std dev = 0,169, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.13313602603037641;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.18820003752665238;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.10411512044124904;  // std dev = 0,000822, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.0045792276850469965;  // std dev = 0,260, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.24703744803664057;  // std dev = 0,160, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09618519736978953;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.08033040595124825;  // std dev = 0,818, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.11860056846517088;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.05075135945549349;  // std dev = 0,362, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.09478722563796772;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.08844731317770779;  // std dev = 0,601, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.10826006960941677;  // std dev = 0,624, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.34110106285558117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1403125061236385;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.006345940092758175;  // std dev = 0,205, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.033442332591955566;  // std dev = 0,654, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.011592813751152654;  // std dev = 0,331, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.053218455869531216;  // std dev = 0,600, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.20241784868401957;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then return 0.21550833852827195;  // std dev = 0,076, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1011139169456437;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then return 0.13480670957284457;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.09106515041153997;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -2.8248486812205525E-4;  // std dev = 0,248, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.20159993480479393;  // std dev = 0,122, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.10461968821202419;  // std dev = 0,059, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.11119008336034215;  // std dev = 0,229, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.01458875316058268;  // std dev = 0,642, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */


Results
   AUC ROC   = 0.98414
   AUC PR    = 0.219164
   CLL	      = -0.225718
   Precision = 0.08415 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.15512


Total learning time: 3.568 seconds
Total inference time: 10.141 seconds
AUC ROC: 0.98414


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160395
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.001 seconds
Refined model CLL: -0.160395


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98414
   AUC PR    = 0.219164
   CLL	      = -0.225718
   Precision = 0.08415 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.15512


Total learning time: 7.171999999999999 seconds
Total inference time: 10.141 seconds
AUC ROC: 0.98414
Total revision time: 7.171999999999999
Best scored revision CLL: -0.160395


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 04:20:41
{'CLL': -0.225718, 'AUC ROC': 0.98414, 'F1': 0.15512, 'Recall': 0.990385, 'Precision': [0.08415, 0.5], 'Inference time': 10.141, 'Learning time': 7.171999999999999, 'AUC PR': 0.219164, 'parameter_20': {'CLL': -0.256431, 'AUC ROC': 0.967896, 'F1': 0.145428, 'Recall': 0.971154, 'Precision': [0.078599, 0.5], 'Inference time': 10.072, 'Learning time': 1.706, 'AUC PR': 0.147109}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( enzyme(D, E), phenotype(C, F) )
%   | then if ( phenotype(A, F), interaction(C, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, C) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, G), phenotype(D, H) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, I) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1204733464093793;  // std dev = 0,734, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.755191761434842;  // std dev = 0,119, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1862280560403006;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.46758996982273276;  // std dev = 0,729, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13578210608840643;  // std dev = 0,036, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26020451880314066;  // std dev = 1,466, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( enzyme(D, E), phenotype(C, F) )
%   | then if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( enzyme(H, E) )
%   | | | then return -0.13688457573158921;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2708355058193082;  // std dev = 0,819, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.608854856197119;  // std dev = 0,147, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then return 0.1595615641078717;  // std dev = 0,663, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14154709188275785;  // std dev = 0,083, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, K) )
%   | then return 0.5518317845039581;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( interaction(L, N), recursion_proteinclass(N, B) )
%   | | | then return 0.6560091221317392;  // std dev = 0,166, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20823972339417254;  // std dev = 0,052, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.4740617186317601;  // std dev = 0,854, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.11697490590931676;  // std dev = 0,063, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(E, F), interaction(A, E) )
%   | | then return 0.4731616575214441;  // std dev = 0,195, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(E, G), interaction(H, A) )
%   | | | then return 0.21705459537756652;  // std dev = 0,989, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.12422787369260586;  // std dev = 0,059, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5197001274490882;  // std dev = 0,246, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22700849298121095;  // std dev = 0,150, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.4385011925280918;  // std dev = 0,050, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34922608570013103;  // std dev = 0,641, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( enzyme(D, E), phenotype(C, F) )
%   | then if ( complex(C, G), phenotype(D, H) )
%   | | then if ( interaction(A, D), interaction(D, I) )
%   | | | then return 0.16354168811065736;  // std dev = 0,310, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13289831005849903;  // std dev = 0,110, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3432341193276437;  // std dev = 0,674, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return 0.12910168705946648;  // std dev = 0,598, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12058878074686286;  // std dev = 0,100, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(L, A), enzyme(L, M) )
%   | then return 0.36840888284346196;  // std dev = 0,136, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(N, A), phenotype(N, P) )
%   | | then if ( interaction(N, Q), recursion_proteinclass(Q, B) )
%   | | | then return 0.34206121919801596;  // std dev = 0,149, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16462395083257972;  // std dev = 0,067, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.3095803652375428;  // std dev = 0,734, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( complex(C, D) )
%   | then return -0.12492607684928358;  // std dev = 0,092, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.024525809232181894;  // std dev = 0,480, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( enzyme(A, E), location(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.3912559383380034;  // std dev = 0,281, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2547213949399775;  // std dev = 0,061, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.170835550023825;  // std dev = 0,175, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(K, L), phenotype(J, M) )
%   | | | then return 0.2079889482193377;  // std dev = 0,404, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11757381798357422;  // std dev = 0,045, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.25256969560269266;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09295736590419798;  // std dev = 0,991, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( complex(C, D) )
%   | then return -0.11212922931598703;  // std dev = 0,084, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.021216852040721358;  // std dev = 0,477, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( enzyme(A, E), location(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.30989555282296544;  // std dev = 0,253, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2093418725913244;  // std dev = 0,052, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.14946119116626835;  // std dev = 0,157, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3416358327798137;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.18047480976234542;  // std dev = 0,243, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.02013890149089297;  // std dev = 0,302, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.02005237908970268;  // std dev = 0,469, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.10333836510320499;  // std dev = 0,095, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( enzyme(A, F), location(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2581339476193739;  // std dev = 0,212, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17271147731965986;  // std dev = 0,057, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.13249921771472908;  // std dev = 0,142, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(K, A) )
%   | | then if ( complex(K, L), complex(A, L) )
%   | | | then return -0.015963832862946628;  // std dev = 0,498, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10489533088010577;  // std dev = 0,730, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return -0.017802914273452465;  // std dev = 0,304, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(D, A), complex(C, E) )
%   | then return -0.1016509480898182;  // std dev = 0,082, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(D, D), complex(A, F) )
%   | | then return 0.17419651217024554;  // std dev = 0,344, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.07676122165924078;  // std dev = 0,560, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.10469761365471864;  // std dev = 0,088, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then return 0.18722347930201144;  // std dev = 0,131, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.16591493220174983;  // std dev = 0,118, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1335159583644828;  // std dev = 0,078, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.14931201757012746;  // std dev = 0,601, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( complex(C, D) )
%   | then return -0.09289031918445517;  // std dev = 0,076, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.02122900353901789;  // std dev = 0,416, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(F, G), phenotype(A, G) )
%   | | | then return 0.16293448601789506;  // std dev = 0,467, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.010197323939049367;  // std dev = 0,719, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.2163911249210768;  // std dev = 0,230, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.008740054635975433;  // std dev = 0,293, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.776551
   AUC PR    = 0.173981
   CLL	      = -0.342236
   Precision = 0.033631 at threshold = 0.5
   Recall    = 0.615385
   F1        = 0.063777


Total learning time: 8.256 seconds
Total inference time: 8.449 seconds
AUC ROC: 0.776551


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 04:20:58
{'CLL': -0.342236, 'AUC ROC': 0.776551, 'F1': 0.063777, 'Recall': 0.615385, 'Precision': [0.033631, 0.5], 'Inference time': 8.449, 'Learning time': 8.256, 'AUC PR': 0.173981}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */


Results
   AUC ROC   = 0.676596
   AUC PR    = 0.026587
   CLL	      = -0.185141
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.076 seconds
Total inference time: 2.319 seconds
AUC ROC: 0.676596


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 04:21:03
{'CLL': -0.185141, 'AUC ROC': 0.676596, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.319, 'Learning time': 2.076, 'AUC PR': 0.026587}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2581489350995123;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.274815601766179;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7716035333475302;  // std dev = 0,104, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8237336544841058;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.17626634551589418;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25305046419137184;  // std dev = 2,095, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.8049789850126337;  // std dev = 0,023, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(C, F), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5424593780584018;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.15211381203652688;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.33411122220259326;  // std dev = 1,677, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.25469983805687096;  // std dev = 2,175, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.5076723381466051;  // std dev = 0,199, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5948389822849659;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.16471228509592972;  // std dev = 0,129, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.20504414117139821;  // std dev = 2,169, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(C, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4275450188091272;  // std dev = 0,213, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.14343740118017184;  // std dev = 0,115, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11916061350823431;  // std dev = 2,091, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.5388893970224886;  // std dev = 0,037, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.03778208285290351;  // std dev = 0,668, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3456133290067837;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.14204658884026294;  // std dev = 0,066, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5953849050412335;  // std dev = 0,309, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.3476495547470409;  // std dev = 0,069, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), interaction(C, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.056697442219843706;  // std dev = 1,042, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0695114120637222;  // std dev = 1,630, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.2737808130930454;  // std dev = 0,029, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then return 0.04838715993235426;  // std dev = 1,029, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.40507743809510266;  // std dev = 0,224, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3179878820482043;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.009643182361246344;  // std dev = 1,247, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.24092888144060842;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, A), enzyme(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then return 0.041280150687323276;  // std dev = 1,019, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0418933248450709;  // std dev = 1,492, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.14666458383628078;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19964372606490743;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(A, D), interaction(D, A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, D), enzyme(D, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), interaction(A, G) )
%   | then return -0.05556951731952192;  // std dev = 0,379, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.31351462354366993;  // std dev = 0,479, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.2448797189305753;  // std dev = 0,199, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.03315999702702328;  // std dev = 0,426, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.972167
   AUC PR    = 0.251975
   CLL	      = -0.275905
   Precision = 0.06311 at threshold = 0.5
   Recall    = 0.932692
   F1        = 0.118221


Total learning time: 1.71 seconds
Total inference time: 7.376 seconds
AUC ROC: 0.972167


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.23155
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.899 seconds
Parameter learned model CLL: -0.23155


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), enzyme(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 2], 'false,false,false,true': [1.369, 3, 5], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [1.708, 7, 5], 'false,false,true,false': [2.449, 15, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.104, 0, 4], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.023, 0, 2], 'false,true,false': [0.0, 15, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [2.095, 10, 8], 'true,true': [0.0, 0, 0], 'false,true,true,false': [2.98e-08, 0, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(C, F), enzyme(A, F)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false': 'interaction(G, A), interaction(A, G)', 'true,true': 'interaction(D, A), interaction(A, E)', 'false,false,false': 'interaction(A, J)'}, {'false,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.677, 7, 10], 'false,true,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [2.175, 10, 10], 'true,true,false,true': [0.0, 0, 0], 'false,true,false': [5.27e-09, 8, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'true': 'enzyme(A, D), interaction(E, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.199, 0, 4], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [2.169, 10, 10], 'false,true,false': [0.129, 15, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(C, D)', 'false,false,false': 'interaction(I, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.115, 15, 0], 'false,false,false,true': [0.037, 0, 2], 'true,true,false,false': [0.213, 0, 12], 'true,true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 3], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [2.091, 10, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false': 'interaction(A, E)'}, {'false,true,false,false': [0.066, 8, 0], 'false,false,true,true': [0.309, 0, 10], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.668, 7, 4], 'false,true,false,true': [0.0, 0, 8], 'false,false,true,false': [0.069, 10, 0], 'true,true': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I)', 'true,false': 'interaction(F, A), interaction(C, F)', 'true': 'interaction(A, D), interaction(D, E)', 'false,true': 'enzyme(G, H)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'false,false,true': [1.042, 15, 12], 'false,false,false,true': [1.63, 10, 8], 'false,true,false': [0.0, 0, 1], 'false,false,false,false': [0.029, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(F, A), enzyme(A, G)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,false,true,true': [0.224, 0, 5], 'true,false': [0.0, 0, 3], 'false,false,false,true': [1.247, 7, 4], 'false,false,false,false': [0.0, 0, 1], 'false,true': [1.029, 15, 12], 'false,false,true,false': [0.0, 3, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'true,false': 'interaction(C, A), enzyme(A, E)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, G)', 'false,false,false': 'enzyme(A, J)', 'true,false,false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1], 'false,true': [1.019, 15, 12], 'true,false,false,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'false,false,true,false': [1.492, 10, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true,false': 'interaction(A, D), enzyme(D, F)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false': 'interaction(G, A), interaction(A, G)', 'true,true': 'interaction(A, D), interaction(D, A)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'false,false,true,true': [0.479, 0, 19], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 1], 'false,true': [0.379, 8, 2], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.426, 3, 1], 'false,false,true,false': [0.199, 14, 0]}]]
[{'': [1.4802973661668753e-16, 0.24898143956541396], 'false,false,true': [0.0, 0.24000000000000007], 'false,false': [0.2469135802469131, 0.25], 'true': [0.0, 0.0], 'false': [nan, 0.2489814395654142], 'true,true': [0.0, nan], 'false,false,false': [0.23437499999999983, 0.24305555555555536]}, {'': [0.0, 0.24300369818650483], 'false,false,true': [nan, 0.24394279045553846], 'false,false': [0.24394279045553846, 0.0002663964645163164], 'false,true,true': [0.002717549529714147, 1.1102230246251565e-16], 'true': [nan, 0.0], 'false,true': [0.0015097497387300447, -1.1102230246251566e-17], 'false': [0.23907804577442243, 0.24699140934507136], 'false,false,false': [0.0002663964645163164, nan]}, {'': [0.0, 0.19184897513670465], 'true,true,false': [nan, 0.0], 'false,false': [0.0, 0.20544688420636986], 'true': [0.0, nan], 'false,true': [0.0, 3.469446951953614e-18], 'false': [0.07718910662378335, 0.20182866654064213], 'true,true': [0.0, 0.0], 'false,false,false': [0.16550254192279756, 0.2365021466381368]}, {'': [-3.700743415417188e-17, 0.17793973411093494], 'false,false': [nan, 0.23528171555463487], 'false,true,true': [0.009933245449793071, 0.0], 'true': [nan, -3.700743415417188e-17], 'false,true': [0.00499953156111869, 0.0011123113622721595], 'false': [0.13459897613371774, 0.23528171555463487], 'false,false,false': [0.23528171555463487, nan]}, {'': [0.07838364440717402, 0.2345058986315042], 'false,false,true': [nan, 0.2428705781685598], 'false,false': [0.2428705781685598, 0.0006687562586831786], 'true,true,false': [0.0, 0.0037695881320901257], 'true': [0.00484180275600492, 0.0008867301352863695], 'false': [nan, 0.2345058986315042], 'true,true': [nan, 0.004841802756004861], 'false,false,false': [0.0006687562586831786, nan]}, {'': [0.0, 0.12771579316018897], 'false,false,true': [0.009573066757625304, 0.00047944701297726323], 'false,false': [0.22735475497234198, nan], 'false,true,false': [-4.163336342344337e-17, 0.0005423801631988905], 'true': [0.0, 0.0], 'false,true': [0.04060103484228904, 0.059724238950246505], 'false': [0.0529222271243943, 0.22735475497234198]}, {'': [0.0, 0.08022806719562577], 'false,false': [0.04019055657189186, 0.13671057651717639], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.08153301746794307], 'false,false,false': [0.14768052035469953, 0.0004276926022774852]}, {'': [0.0, 0.07982224820562839], 'false,false,true': [0.01001744474969779, 0.0], 'false,false': [0.1287976507483915, 0.1337009294282105], 'true': [nan, 0.0], 'false': [0.039188447220645406, 0.1343861699872167], 'false,false,false': [0.14139780315967718, 0.0]}, {'': [-4.625929269271485e-18, 0.07019304161812635], 'false,false,true': [nan, 0.1237202655396318], 'false,false': [0.1237202655396318, 0.0007016973778202658], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false': [0.03842677915377183, 0.11296905522024984], 'false,false,false': [0.0, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.0, 0.06818377717581244], 'false,false,true': [0.012057490967992947, 0.0028422284727849167], 'false,false': [0.0843095359829984, 0.04072200032788141], 'true,true,false': [nan, 0.0], 'true': [0.0, nan], 'false': [0.014357739389609048, 0.07924036834091652], 'true,true': [0.0, 0.0], 'false,false,false': [0.0, 0.04531353742430537]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, A), interaction(C, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;false;interaction(A, E).;true;true
1;false,true,true;interaction(G, E), interaction(A, G).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, E).;true;true
2;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
2;false;interaction(G, A), interaction(A, G).;true;true
2;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
3;false;interaction(A, F).;true;true
3;false,true,true;interaction(H, F), interaction(A, H).;true;true
4;;proteinclass(A, B) :- interaction(A, C).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(G, A), interaction(H, G).;true;true
4;true,true;recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false;interaction(A, E).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(D, E).;true;true
6;false,false;interaction(A, I).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,false,false;interaction(J, A), interaction(K, J).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(F, A), enzyme(A, G).;true;true
7;false;interaction(A, E).;true;true
7;false,false,false;interaction(I, A), interaction(J, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false,false;interaction(H, A), interaction(I, H).;true;true
8;false;interaction(A, G).;true;true
8;false,false,false;enzyme(A, J).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(A, D), interaction(D, A).;true;true
9;false,false;interaction(H, A).;true;true
9;false;interaction(G, A), interaction(A, G).;true;true
9;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.44638422921715937;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, D), interaction(A, F) )
%   | | | then return 0.7570967730166581;  // std dev = 0,075, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7947201338223618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.18132929788286417;  // std dev = 0,116, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.19952384252520317;  // std dev = 1,482, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.3816289395752953;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7505511758931249;  // std dev = 0,044, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, E) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5460576359283491;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10686414356199718;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.4093485390090841;  // std dev = 1,522, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.1549439743370293;  // std dev = 1,868, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, D), interaction(A, F) )
%   | | | then return 0.478650292520191;  // std dev = 0,136, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5606870520880998;  // std dev = 0,085, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return -0.13195431760936216;  // std dev = 0,181, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.18444007491181144;  // std dev = 0,091, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5797806181671977;  // std dev = 0,161, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18434538994426686;  // std dev = 0,053, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.31948221298921026;  // std dev = 1,116, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.37140222928595595;  // std dev = 0,130, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.42532053826480787;  // std dev = 0,082, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.08932670391046174;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.15661933008845302;  // std dev = 0,050, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5093387327061297;  // std dev = 0,184, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19603932760854376;  // std dev = 0,221, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.046369863390070216;  // std dev = 0,666, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.4115195868053196;  // std dev = 0,143, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return -0.05329966049428208;  // std dev = 0,323, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.2076136026512061;  // std dev = 0,343, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.32478428826471806;  // std dev = 0,074, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.13792208765485028;  // std dev = 0,111, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.2629562305814183;  // std dev = 0,696, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.09969685903811339;  // std dev = 0,749, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.1685262897546778;  // std dev = 0,202, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.01680164026436179;  // std dev = 0,852, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.2630440186630564;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.05305416227897641;  // std dev = 1,180, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.286669448005686;  // std dev = 0,142, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( phenotype(F, G), enzyme(A, H) )
%   | | | then return 0.10870142335141834;  // std dev = 0,556, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.05771465208370851;  // std dev = 0,505, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return 0.2154330127714404;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.25050017178854067;  // std dev = 0,138, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17828334116588926;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.019645118884405136;  // std dev = 0,999, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.32132727607180556;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.04396175622040117;  // std dev = 0,744, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.14288486283392884;  // std dev = 0,044, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.18132965161420023;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.0629637410234695;  // std dev = 0,885, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.06176171269442068;  // std dev = 0,657, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.1182117223408723;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2555921357739094;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.08510831357405868;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.06638187559440338;  // std dev = 0,280, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.04970221730054656;  // std dev = 1,260, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.19254890791566356;  // std dev = 0,111, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.030995423096256657;  // std dev = 0,338, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.966787
   AUC PR    = 0.130551
   CLL	      = -0.280169
   Precision = 0.058258 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.110043


Total learning time: 6.281 seconds
Total inference time: 27.509 seconds
AUC ROC: 0.966787


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.202871
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.238 seconds
Refined model CLL: -0.202871


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.966787
   AUC PR    = 0.130551
   CLL	      = -0.280169
   Precision = 0.058258 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.110043


Total learning time: 10.128 seconds
Total inference time: 27.509 seconds
AUC ROC: 0.966787
Total revision time: 10.128
Best scored revision CLL: -0.202871


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 04:21:48
{'CLL': -0.280169, 'AUC ROC': 0.966787, 'F1': 0.110043, 'Recall': 0.990385, 'parameter_25': {'CLL': -0.275905, 'AUC ROC': 0.972167, 'F1': 0.118221, 'Recall': 0.932692, 'Precision': [0.06311, 0.5], 'Inference time': 7.376, 'Learning time': 1.71, 'AUC PR': 0.251975}, 'Precision': [0.058258, 0.5], 'Inference time': 27.509, 'Learning time': 10.128, 'AUC PR': 0.130551}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( enzyme(A, E), location(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, A), phenotype(A, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.558741135785635;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12848540349142706;  // std dev = 1,995, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, A) )
%   then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, E), location(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.007800070911844742;  // std dev = 1,181, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.2816810399482731;  // std dev = 1,812, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, A), phenotype(A, C) )
%   then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return -0.010645898151617164;  // std dev = 0,495, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(E, A), interaction(A, F) )
%   | | then if ( interaction(F, G), interaction(H, E) )
%   | | | then return 0.17810621660718962;  // std dev = 1,282, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.5088799744281292;  // std dev = 0,323, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.23549916561923376;  // std dev = 1,399, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.07557785002504898;  // std dev = 1,215, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, A) )
%   | then return -0.15951864625908996;  // std dev = 0,199, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( complex(A, E), interaction(C, F) )
%   | | then return 0.3246287319927767;  // std dev = 0,566, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.006071555790019861;  // std dev = 0,201, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(H, G), interaction(G, I) )
%   | | then return -0.02305188778491755;  // std dev = 0,543, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4654928915544373;  // std dev = 0,162, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.45432936609032054;  // std dev = 0,329, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.21195050198143886;  // std dev = 0,216, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.022491255735393383;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.42333749891319067;  // std dev = 0,713, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( complex(A, D) )
%   | then return -0.11025923224468234;  // std dev = 0,059, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.08045565660985406;  // std dev = 0,423, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, F) )
%   | | then return 0.38857845891965687;  // std dev = 0,769, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(G, E) )
%   | | | then return 0.08841980921137013;  // std dev = 1,635, 29,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return 0.37736547220017086;  // std dev = 0,310, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.013651577470870795;  // std dev = 0,508, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, A) )
%   then return -0.08574979449366729;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3259830124934329;  // std dev = 0,098, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.11836894662566079;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.1175481739134628;  // std dev = 1,897, 36,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | | else return -0.05770166756509869;  // std dev = 0,402, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25963629350764444;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.08329239293533341;  // std dev = 0,031, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(D, A) )
%   | | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | | then return 0.46936863173044974;  // std dev = 0,200, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.051251075576865986;  // std dev = 1,762, 35,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else return -0.04867661426783132;  // std dev = 0,405, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( complex(A, D) )
%   | then return -0.08927258324463161;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.03524730503807667;  // std dev = 0,295, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( phenotype(F, G), interaction(A, F) )
%   | | then return 0.24699755714250174;  // std dev = 0,168, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), interaction(H, E) )
%   | | | then return -0.311773051664395;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.018525196373593945;  // std dev = 0,740, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return 0.2649212449347601;  // std dev = 0,255, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.00951424312103327;  // std dev = 1,028, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.17479972944085334;  // std dev = 0,978, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, A) )
%   | then return -0.1162688434521468;  // std dev = 0,194, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(C, E), phenotype(C, F) )
%   | | then return 0.22756034401484593;  // std dev = 0,131, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.047614014013305825;  // std dev = 0,412, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.07630066965626696;  // std dev = 0,255, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(A, I), interaction(J, A) )
%   | then if ( interaction(J, I), interaction(I, K) )
%   | | then return -0.06410995344964053;  // std dev = 0,408, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2630783271505574;  // std dev = 0,125, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( phenotype(A, N), phenotype(M, N) )
%   | | | then return 0.2784393961966929;  // std dev = 0,532, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.06787095892996205;  // std dev = 1,113, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.14107529615773381;  // std dev = 0,464, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.812337
   AUC PR    = 0.088966
   CLL	      = -0.383816
   Precision = 0.026144 at threshold = 0.5
   Recall    = 0.576923
   F1        = 0.050021


Total learning time: 5.46 seconds
Total inference time: 4.957 seconds
AUC ROC: 0.812337


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 04:21:59
{'CLL': -0.383816, 'AUC ROC': 0.812337, 'F1': 0.050021, 'Recall': 0.576923, 'Precision': [0.026144, 0.5], 'Inference time': 4.957, 'Learning time': 5.46, 'AUC PR': 0.088966}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15814893509951233;  // std dev = 2,049, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */


Results
   AUC ROC   = 0.772429
   AUC PR    = 0.120791
   CLL	      = -0.197397
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.752 seconds
Total inference time: 2.087 seconds
AUC ROC: 0.772429


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 04:22:03
{'CLL': -0.197397, 'AUC ROC': 0.772429, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.087, 'Learning time': 1.752, 'AUC PR': 0.120791}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.781970425023355;  // std dev = 0,088, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1555325621642444;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.5502060360135012;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.07610864789974872;  // std dev = 0,735, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.5503954385650579;  // std dev = 0,208, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.418769104571873;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.14538384447947555;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.3076765834080368;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.44596848929694183;  // std dev = 0,176, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.12823461436532158;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25765761318093783;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.1892832052738901;  // std dev = 0,408, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.24560276687186328;  // std dev = 0,018, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11456938878269128;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.21151181458797652;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.09553304654495551;  // std dev = 0,516, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17838198083837598;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.08163055452404966;  // std dev = 0,505, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15371832811315167;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then return 0.06984764922742522;  // std dev = 0,497, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(D, A), interaction(A, D) )
%   | | then return 0.1347673247555563;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return 0.1628073786498403;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10596814454873643;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1129464152209024;  // std dev = 0,342, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */


Results
   AUC ROC   = 0.806324
   AUC PR    = 0.491554
   CLL	      = -0.143459
   Precision = 0.580952 at threshold = 0.5
   Recall    = 0.663043
   F1        = 0.619289


Total learning time: 1.273 seconds
Total inference time: 3.708 seconds
AUC ROC: 0.806324


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.154896
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.738 seconds
Parameter learned model CLL: -0.154896


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(F, A)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'true,true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, H), enzyme(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 2, 0], 'false,false,true,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, J)'}, {'false,true,true,true': [0.088, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 1, 0], 'false,true,false': [0.0, 3, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, A)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false,false,false': 'interaction(I, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.735, 3, 1], 'false,true,true': [0.013, 0, 3], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, J)'}, {'false,true,true,true': [0.208, 0, 2], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 2, 0], 'false,true,false': [0.0, 3, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(D, C)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 3, 0], 'false,false,false,true': [0.0, 1, 0], 'true,true,false,false': [0.176, 0, 2], 'true,true,true': [0.033, 0, 3], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false': 'interaction(E, A)'}, {'false,true,false,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.408, 1, 2], 'false,true,false,true': [0.018, 0, 2], 'false,false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'false,false': 'interaction(G, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'false,false,true': [0.516, 3, 4], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 1, 0], 'false,true': [0.505, 3, 4], 'false,false,false,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F), interaction(F, G)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(E, A)', 'false,false,false': 'enzyme(A, H)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.497, 3, 4], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'true': 'interaction(C, D), interaction(D, E)', 'false': 'interaction(A, F), interaction(F, A)', 'true,true': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(I, A), recursion_proteinclass(I, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.016, 0, 3], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.342, 1, 1], 'false,false,true,false': [0.088, 4, 0]}]]
[{'': [0.0, 0.24691358024691348], 'false,false,true': [1.4802973661668753e-16, 0.18750000000000003], 'false,false': [0.24489795918367332, 0.0], 'true': [0.0, nan], 'false': [nan, 0.24691358024691348], 'true,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.19886171927769988], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0], 'false,true,true': [0.00390587661047348, 0.0], 'true': [nan, 0.0], 'false,true': [0.002929407457855193, -4.625929269271485e-18], 'false': [0.20280795134808796, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.12942594940711635], 'false,false': [nan, 0.09802304002081934], 'true': [0.0, nan], 'false,true': [5.325947144585452e-05, nan], 'false': [5.325947144585452e-05, 0.09802304002081934], 'true,true': [0.0, nan], 'false,false,false': [0.13519989654513517, 0.0]}, {'': [0.0, 0.09958318898535413], 'false,false': [nan, 0.0], 'false,true,true': [0.021537460871196734, 0.0], 'true': [nan, 0.0], 'false,true': [0.015100103385719738, -4.625929269271485e-18], 'false': [0.10581817516780583, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.06342965065012748, 0.0], 'true,true,false': [nan, 0.015476690253882153], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'true': [0.01099810023554637, -2.3129646346357427e-18], 'false': [nan, 0.0], 'true,true': [0.0003625130629015631, 0.015476690253882153], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.04303693065142595], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,false': [0.0001639024682474413, 0.0], 'true': [0.0, nan], 'false,true': [0.05548237584770788, 0.03251294666133589], 'false': [0.0461083715468109, 0.0]}, {'': [0.0, 0.03478619940116714], 'true': [0.0, nan], 'false,false': [0.03797313422225408, 0.0], 'false': [nan, 0.034786199401167145], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.03245560283658536], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false': [0.03639822842464745, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.030742853866843292], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0], 'true': [0.0, nan], 'false': [0.03527766584649425, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.02947966916317552], 'false,false,true': [nan, 0.0019264969639297864], 'false,false': [0.0019264969639297864, 0.0583957354743912], 'true': [0.0, nan], 'false': [8.101187597146786e-05, 0.03139926190722465], 'true,true': [0.0, nan], 'false,false,false': [nan, 0.0583957354743912]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false;interaction(F, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;interaction(A, H), interaction(H, I).;true;true
1;false;interaction(E, A).;true;true
1;false,true,true;interaction(E, G), interaction(G, A).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false;interaction(A, F), interaction(F, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;false;interaction(F, A).;true;true
3;false,true,true;interaction(F, H), interaction(H, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
4;false;interaction(A, G), interaction(G, H).;true;true
4;true,true;enzyme(C, E), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false;interaction(E, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false,false;interaction(A, H), interaction(H, I).;true;true
6;false;interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false;interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false;interaction(A, F), interaction(F, G).;true;true
8;false;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(A, G).;true;true
9;false;interaction(A, F), interaction(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.781970425023355;  // std dev = 0,088, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1555325621642444;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return 0.5502060360135012;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A) )
%   | | then return 0.07610864789974872;  // std dev = 0,735, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.5503954385650579;  // std dev = 0,208, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.418769104571873;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.14538384447947555;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.3076765834080368;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.44596848929694183;  // std dev = 0,176, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.12823461436532158;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25765761318093783;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.1892832052738901;  // std dev = 0,408, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.24560276687186328;  // std dev = 0,018, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11456938878269128;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21151181458797652;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.27300609937646897;  // std dev = 0,172, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.03757174307867963;  // std dev = 0,266, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17838198083837598;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.17420061795265426;  // std dev = 0,032, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.004438953263623965;  // std dev = 0,398, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15371832811315167;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.129909720481835;  // std dev = 0,343, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.01747311081401372;  // std dev = 0,203, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1347673247555563;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return 0.14071564415110935;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E) )
%   | | then return -0.0935425379317206;  // std dev = 0,068, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.10998176631810033;  // std dev = 0,295, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */


Results
   AUC ROC   = 0.803271
   AUC PR    = 0.433044
   CLL	      = -0.145336
   Precision = 0.507246 at threshold = 0.5
   Recall    = 0.76087
   F1        = 0.608696


Total learning time: 1.369 seconds
Total inference time: 3.076 seconds
AUC ROC: 0.803271


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.135497
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.705 seconds
Refined model CLL: -0.135497


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.803271
   AUC PR    = 0.433044
   CLL	      = -0.145336
   Precision = 0.507246 at threshold = 0.5
   Recall    = 0.76087
   F1        = 0.608696


Total learning time: 4.085 seconds
Total inference time: 3.076 seconds
AUC ROC: 0.803271
Total revision time: 4.085
Best scored revision CLL: -0.135497


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 04:22:15
{'CLL': -0.145336, 'AUC ROC': 0.803271, 'F1': 0.608696, 'Recall': 0.76087, 'Precision': [0.507246, 0.5], 'parameter_5': {'CLL': -0.143459, 'AUC ROC': 0.806324, 'F1': 0.619289, 'Recall': 0.663043, 'Precision': [0.580952, 0.5], 'Inference time': 3.708, 'Learning time': 1.273, 'AUC PR': 0.491554}, 'Inference time': 3.076, 'Learning time': 4.085, 'AUC PR': 0.433044}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.02481560176617888;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.7533803635396507;  // std dev = 0,117, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -8.367500267250175E-4;  // std dev = 0,789, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.5940649855955087;  // std dev = 0,163, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -7.222371709465955E-4;  // std dev = 0,789, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.47992373787903553;  // std dev = 0,277, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.019699164136598318;  // std dev = 0,685, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.33313148843096485;  // std dev = 0,620, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.05542060727784785;  // std dev = 0,388, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.323128877174618;  // std dev = 0,250, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.03367216342735475;  // std dev = 0,618, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.2823453596822245;  // std dev = 0,299, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.04298969784341278;  // std dev = 0,544, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.20608459335159096;  // std dev = 0,538, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06308473445560699;  // std dev = 0,285, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.21251333694740707;  // std dev = 0,245, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.046150603919147375;  // std dev = 0,508, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.19630755960619686;  // std dev = 0,269, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.04950096034863282;  // std dev = 0,461, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */


Results
   AUC ROC   = 0.499971
   AUC PR    = 0.007251
   CLL	      = -0.380334
   Precision = 0.007253 at threshold = 0.5
   Recall    = 0.163043
   F1        = 0.013889


Total learning time: 1.68 seconds
Total inference time: 2.217 seconds
AUC ROC: 0.499971


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 04:22:19
{'CLL': -0.380334, 'AUC ROC': 0.499971, 'F1': 0.013889, 'Recall': 0.163043, 'Precision': [0.007253, 0.5], 'Inference time': 2.217, 'Learning time': 1.68, 'AUC PR': 0.007251}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.02481560176617888;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */


Results
   AUC ROC   = 0.499953
   AUC PR    = 0.00725
   CLL	      = -0.189352
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.871 seconds
Total inference time: 1.58 seconds
AUC ROC: 0.499953


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 04:22:22
{'CLL': -0.189352, 'AUC ROC': 0.499953, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.58, 'Learning time': 0.871, 'AUC PR': 0.00725}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2867203636709409;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7861889642543077;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7861889642543077;  // std dev = 0,116, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.18045325972401557;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.5388371359310836;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.15528555853817805;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.227538475954434;  // std dev = 1,491, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.5500231752314902;  // std dev = 0,177, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5500231752314902;  // std dev = 0,251, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.18108003888966126;  // std dev = 0,048, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.29508816080864414;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.45808370222694117;  // std dev = 0,190, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.15580279971507152;  // std dev = 0,042, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.26007273883144555;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.06458456021285736;  // std dev = 0,612, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3213023815548685;  // std dev = 0,189, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14147688491400592;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.21321344116738106;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.08370113673457925;  // std dev = 0,867, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1796269892741873;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.07059535709444734;  // std dev = 0,853, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1546607917407138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then return 0.05956520834546278;  // std dev = 0,842, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(D, A), interaction(A, D) )
%   | | then return 0.13550177757814608;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return 0.08141492077083856;  // std dev = 0,246, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.26043309328404785;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1311571546867408;  // std dev = 0,119, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1158933250505272;  // std dev = 0,607, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */


Results
   AUC ROC   = 0.817665
   AUC PR    = 0.579512
   CLL	      = -0.153775
   Precision = 0.580952 at threshold = 0.5
   Recall    = 0.663043
   F1        = 0.619289


Total learning time: 1.551 seconds
Total inference time: 3.574 seconds
AUC ROC: 0.817665


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.190604
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.791 seconds
Parameter learned model CLL: -0.190604


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(F, A)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'true,true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, H), enzyme(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 2, 0], 'false,false,true,false': [1.852, 8, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, J)'}, {'false,true,true,true': [0.082, 0, 3], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 1, 0], 'false,true,false': [0.0, 8, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.116, 0, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, A)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false,false,false': 'interaction(I, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.491, 7, 6], 'false,true,true': [0.0, 0, 3], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 2, 0], 'false,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, J)'}, {'false,true,true,true': [0.177, 0, 3], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 2, 0], 'false,true,false': [0.048, 8, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.251, 0, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(D, C)', 'false,false,false': 'interaction(A, I)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.042, 8, 0], 'false,false,false,true': [0.0, 1, 0], 'true,true,false,false': [0.19, 0, 7], 'true,true,true': [0.031, 0, 3], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false': 'interaction(E, A)'}, {'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.612, 4, 3], 'false,true,false,true': [0.189, 0, 6], 'false,false,true,false': [0.0, 2, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'false,false': 'interaction(G, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'false,false,true': [0.867, 8, 9], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(A, F), enzyme(A, G)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 1, 0], 'false,true': [0.853, 8, 9], 'false,false,false,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F), interaction(F, G)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(E, A)', 'false,false,false': 'enzyme(A, H)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.842, 8, 9], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G)', 'true': 'interaction(C, D), interaction(D, E)', 'false': 'interaction(A, F), interaction(F, A)', 'true,true': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(I, A), recursion_proteinclass(I, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.246, 1, 3], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.607, 3, 5], 'false,false,true,false': [0.119, 6, 0]}]]
[{'': [0.0, 0.24930747922437665], 'false,false,true': [1.4802973661668753e-16, 0.24489795918367352], 'false,false': [0.24913494809688577, 0.0], 'true': [0.0, nan], 'false': [nan, 0.24930747922437652], 'true,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.22898874004409606], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0], 'false,true,true': [0.0022254824422247577, 0.0022254824422247577], 'true': [nan, 0.0], 'false,true': [0.0022254824422247824, -1.3877787807814457e-17], 'false': [0.23396919181473694, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.15211293945969526], 'false,false': [nan, 0.16152944126320348], 'true': [0.0, nan], 'false,true': [0.0, 0.0], 'false': [0.09033868405823775, 0.16152944126320348], 'true,true': [0.0, nan], 'false,false,false': [0.1709799482827341, 0.0]}, {'': [0.0, 0.13313655717105938], 'false,false': [nan, 0.0], 'false,true,true': [0.01046352242151601, 0.010463522421515973], 'true': [nan, 0.0], 'false,true': [0.010463522421516035, 0.00029046792553225065], 'false': [0.138841799538548, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.08407535807769932, 0.0], 'true,true,false': [nan, 0.005151372746300017], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'true': [0.009283631687417282, 0.00022542784246905312], 'false': [nan, 0.0], 'true,true': [0.00032828665112015026, 0.005151372746299986], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.05321372091271886], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,false': [0.005943799290558309, 0.0], 'true': [0.0, nan], 'false,true': [0.05348539981814233, 0.05496579544796766], 'false': [0.055598160212558735, 0.0]}, {'': [0.0, 0.042027953885413014], 'true': [0.0, nan], 'false,false': [0.04419357007838906, 0.0], 'false': [nan, 0.042027953885413014], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.0402036030894452], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false': [0.0427555018039709, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.038896136441571055], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0], 'true': [0.0, nan], 'false': [0.041747731469772176, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.03795692558299686], 'false,false,true': [0.0, 0.0023754844841282832], 'false,false': [0.020812813921802658, 0.04612405412905822], 'true': [0.0, nan], 'false': [0.015174374182761944, 0.043402225277979364], 'true,true': [0.0, nan], 'false,false,false': [nan, 0.04612405412905822]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false;interaction(F, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;interaction(A, H), interaction(H, I).;true;true
1;false;interaction(E, A).;true;true
1;false,true,true;interaction(E, G), interaction(G, A).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false;interaction(A, F), interaction(F, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;false;interaction(F, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
4;false;interaction(A, G), interaction(G, H).;true;true
4;true,true;enzyme(C, E), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false;interaction(E, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false,false;interaction(A, H), interaction(H, I).;true;true
6;false;interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false;interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false;interaction(A, F), interaction(F, G).;true;true
8;false;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;false,false;interaction(A, G).;true;true
9;false;interaction(A, F), interaction(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.7655960232091932;  // std dev = 0,056, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7766700046787643;  // std dev = 0,115, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.16981524078079588;  // std dev = 0,091, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.5421177643008219;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1250996210435539;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.04607358125144269;  // std dev = 0,766, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3263936472809312;  // std dev = 1,119, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.48209159922709377;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.557640871796276;  // std dev = 0,223, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.1527787629930566;  // std dev = 0,100, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.18442390847527967;  // std dev = 0,108, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.30603880309038206;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.42802074335671986;  // std dev = 0,085, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F) )
%   | | then return -0.10938531782811416;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.20848474015422627;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2579709960094275;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.18267644123044227;  // std dev = 0,425, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.09836160004411217;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3135805224283647;  // std dev = 0,223, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13751601299340627;  // std dev = 0,074, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2117327747962443;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then return -0.02808486690791635;  // std dev = 0,215, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.1827804072959738;  // std dev = 0,434, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.05194288506786752;  // std dev = 0,561, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17854376004399697;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then return -0.025439530170240424;  // std dev = 0,216, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.2530213083600921;  // std dev = 0,182, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.044957536789104205;  // std dev = 0,630, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15384086742243708;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then return -0.023061423048295327;  // std dev = 0,217, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.13709759155393134;  // std dev = 0,430, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.027112455334911228;  // std dev = 0,514, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13486286675324433;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return 0.09056604719957673;  // std dev = 0,194, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.3365117731543801;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08385517110923286;  // std dev = 0,036, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.11144622073731716;  // std dev = 0,433, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.03852795420651106;  // std dev = 0,329, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.868897
   AUC PR    = 0.530215
   CLL	      = -0.158156
   Precision = 0.518519 at threshold = 0.5
   Recall    = 0.76087
   F1        = 0.61674


Total learning time: 2.085 seconds
Total inference time: 3.482 seconds
AUC ROC: 0.868897


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.163796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.841 seconds
Refined model CLL: -0.163796


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.868897
   AUC PR    = 0.530215
   CLL	      = -0.158156
   Precision = 0.518519 at threshold = 0.5
   Recall    = 0.76087
   F1        = 0.61674


Total learning time: 5.268 seconds
Total inference time: 3.482 seconds
AUC ROC: 0.868897
Total revision time: 5.268
Best scored revision CLL: -0.163796


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 04:22:35
{'CLL': -0.158156, 'AUC ROC': 0.868897, 'F1': 0.61674, 'Recall': 0.76087, 'Precision': [0.518519, 0.5], 'Inference time': 3.482, 'Learning time': 5.268, 'AUC PR': 0.530215, 'parameter_10': {'CLL': -0.153775, 'AUC ROC': 0.817665, 'F1': 0.619289, 'Recall': 0.663043, 'Precision': [0.580952, 0.5], 'Inference time': 3.574, 'Learning time': 1.551, 'AUC PR': 0.579512}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(A, E), complex(C, E) )
%   | then return -0.14489878247426094;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.4887463734164046;  // std dev = 0,844, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7768347906174853;  // std dev = 0,137, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.07769635804062927;  // std dev = 0,786, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.14629184414498922;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), phenotype(C, E) )
%   | then if ( phenotype(A, E), complex(C, F) )
%   | | then return 0.18815294042058772;  // std dev = 0,860, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6390396385553936;  // std dev = 0,174, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(C, G) )
%   | | then return -0.14875414033065146;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.24939676687477008;  // std dev = 0,799, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.12895014396067753;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then return -0.009996920246208019;  // std dev = 0,658, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return 0.49857202369439;  // std dev = 0,150, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return 0.3349332290744476;  // std dev = 0,834, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.0025396709185855682;  // std dev = 0,655, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.3200609835951997;  // std dev = 0,570, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.03002579736280908;  // std dev = 0,403, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14026832029323974;  // std dev = 0,067, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.10174011614514818;  // std dev = 0,699, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2588528349160988;  // std dev = 0,736, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), complex(C, E) )
%   | then return 0.41411016423942987;  // std dev = 0,120, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(D, A), complex(D, F) )
%   | | then return -0.11332004458843811;  // std dev = 0,642, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(C, D) )
%   | | | then return 0.3418695387548592;  // std dev = 0,222, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.020739014567287724;  // std dev = 0,618, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.1153564956980579;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(C, E), complex(A, E) )
%   | then return -0.14224410340813787;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(C, D) )
%   | | then if ( enzyme(C, F), phenotype(C, G) )
%   | | | then return 0.13117878313159648;  // std dev = 0,692, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.32502757793304743;  // std dev = 0,180, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.017388894624810664;  // std dev = 0,616, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.10414613227501106;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(C, E), complex(A, E) )
%   | then return -0.12586780979784687;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( complex(C, F) )
%   | | then if ( interaction(D, D), enzyme(D, G) )
%   | | | then return -0.0043609039652704835;  // std dev = 0,604, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3327906090441227;  // std dev = 0,294, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.03854389359913591;  // std dev = 0,516, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.09486003428876733;  // std dev = 0,032, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(C, E), complex(A, E) )
%   | then return -0.11274011218723268;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(C, D) )
%   | | then if ( complex(C, F), complex(D, F) )
%   | | | then return 0.051013202561172866;  // std dev = 0,645, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22711976449012547;  // std dev = 0,165, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.01016162582773994;  // std dev = 0,548, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.08705182702681691;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(C, C) )
%   | | then return 0.1392811284703949;  // std dev = 0,331, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.13780481391979515;  // std dev = 0,467, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( complex(C, F) )
%   | | then return 0.25316469020583765;  // std dev = 0,254, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.014901215222727776;  // std dev = 0,465, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.0804010615724312;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.510892
   AUC PR    = 0.007405
   CLL	      = -0.500336
   Precision = 0.00726 at threshold = 0.5
   Recall    = 0.25
   F1        = 0.01411


Total learning time: 6.487 seconds
Total inference time: 2.807 seconds
AUC ROC: 0.510892


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 04:22:44
{'CLL': -0.500336, 'AUC ROC': 0.510892, 'F1': 0.01411, 'Recall': 0.25, 'Precision': [0.00726, 0.5], 'Inference time': 2.807, 'Learning time': 6.487, 'AUC PR': 0.007405}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.50011
   AUC PR    = 0.007254
   CLL	      = -0.238628
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.078 seconds
Total inference time: 1.426 seconds
AUC ROC: 0.50011


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 04:22:47
{'CLL': -0.238628, 'AUC ROC': 0.50011, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.426, 'Learning time': 1.078, 'AUC PR': 0.007254}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.039967116917694015;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.4581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7863435953677549;  // std dev = 0,134, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1467862214754447;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3455962395142304;  // std dev = 1,625, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.3129998374042986;  // std dev = 0,736, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5443212863525787;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12933863112229216;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04169994310780032;  // std dev = 1,082, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.2810557231947568;  // std dev = 1,782, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.5607407943890936;  // std dev = 0,313, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4202021426017285;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1320353834659084;  // std dev = 0,018, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.22396059694286302;  // std dev = 1,780, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(C, E), interaction(C, D) )
%   | | then return 0.3043815196750601;  // std dev = 0,046, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5917606376973346;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.11762881610346954;  // std dev = 0,016, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17685280403625245;  // std dev = 1,613, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1579915379442963;  // std dev = 0,749, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25828836367801133;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.0901389603160703;  // std dev = 0,690, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.25989251269493063;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10766823838715278;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5886843968751069;  // std dev = 0,070, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.39884342578556015;  // std dev = 0,070, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.211956495803032;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return 0.03678378070647091;  // std dev = 0,757, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.09623912727771135;  // std dev = 1,221, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.0966625391129255;  // std dev = 0,586, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, A) )
%   | | | then return 0.17870752647791488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17790201211159612;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then return 0.031937095767917874;  // std dev = 0,749, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.22013258796725874;  // std dev = 0,922, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.35046633815650335;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.2924206012728309;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.48679384722348606;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15401736722166792;  // std dev = 7,42e-05, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, A), phenotype(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0.15263964308114641;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.027704459864451452;  // std dev = 0,743, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06495696090064286;  // std dev = 1,068, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.3898621576167859;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.36827348407234695;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(A, D), interaction(D, A) )
%   | | then return 0.1350004558684897;  // std dev = 6,65e-05, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.11778293880203486;  // std dev = 0,262, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3270916534232311;  // std dev = 0,225, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.21507808667186276;  // std dev = 0,335, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12016283009244684;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.985742
   AUC PR    = 0.602049
   CLL	      = -0.199269
   Precision = 0.488764 at threshold = 0.5
   Recall    = 0.945652
   F1        = 0.644444


Total learning time: 1.654 seconds
Total inference time: 3.513 seconds
AUC ROC: 0.985742


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.221681
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.81 seconds
Parameter learned model CLL: -0.221681


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), phenotype(A, I)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 1], 'false,false,false,true': [1.549, 4, 6], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.816, 2, 1], 'false,false,true,false': [1.279, 9, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'true': 'phenotype(A, D), phenotype(C, D)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.134, 0, 4], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.736, 1, 1], 'false,true,false': [0.0, 9, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [1.625, 5, 6], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(D, A), interaction(A, E)', 'false,false,false': 'interaction(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.082, 8, 2], 'false,true,true': [0.014, 0, 3], 'true,true,true': [0.0, 0, 2], 'false,false,false,false': [1.782, 6, 7], 'false,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'true': 'phenotype(A, D), interaction(E, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.313, 0, 4], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [1.78, 6, 7], 'false,true,false': [0.018, 9, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'true,true': 'phenotype(C, E), interaction(C, D)', 'false,false,false': 'interaction(I, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.016, 9, 0], 'false,false,false,true': [0.749, 1, 1], 'true,true,false,false': [0.0, 0, 2], 'true,true,true': [0.046, 0, 5], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [1.613, 5, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false': 'interaction(A, E)'}, {'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.07, 0, 7], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.69, 5, 4], 'false,true,false,true': [0.0, 0, 1], 'false,false,true,false': [0.07, 6, 0], 'true,true': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H)', 'true': 'interaction(A, D), interaction(D, E)', 'false,true': 'phenotype(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,false,true': [0.757, 9, 5], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.221, 5, 6], 'false,true,true': [0.0, 0, 1], 'false,false,false,false': [0.586, 1, 1], 'true,true': [0.0, 0, 2], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'false,false': 'interaction(G, A), phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'true,true,true': 'interaction(A, E), interaction(C, A)', 'false': 'interaction(A, F)', 'true,true': 'interaction(C, E), interaction(E, C)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.922, 2, 6], 'true,false': [0.001, 0, 2], 'false,false,false,true': [0.0, 2, 0], 'true,true,true,true': [0.0, 0, 1], 'false,true': [0.749, 9, 5], 'false,false,false,false': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'true,true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'true,false': 'interaction(C, A), phenotype(A, E)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, G)', 'false,false,false': 'phenotype(A, J)', 'true,false,false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true': [0.743, 9, 5], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,true': [7.42e-05, 0, 2], 'false,false,true,false': [1.068, 5, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(D, C), interaction(E, D)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(A, D), interaction(D, A)', 'false,false,false': 'interaction(A, I), recursion_proteinclass(I, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.225, 0, 10], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.262, 1, 3], 'true,true,true': [6.65e-05, 0, 2], 'false,false,false,false': [0.017, 3, 0], 'false,false,true,false': [0.335, 11, 0]}]]
[{'': [1.4802973661668753e-16, 0.24691358024691343], 'false,false,true': [1.4802973661668753e-16, 0.1487603305785124], 'false,false': [0.2295918367346937, 0.24852071005917156], 'true': [0.0, 0.0], 'false': [nan, 0.24691358024691315], 'true,true': [0.0, 0.0], 'false,false,false': [0.23999999999999994, 0.22222222222222224]}, {'': [0.0, 0.22576128719373662], 'false,false,true': [nan, 0.24016135491277904], 'false,false': [0.24016135491277904, 0.27061392227383646], 'false,true,true': [0.004471621395424008, 0.0], 'true': [0.0, 0.0], 'false,true': [0.004292756539607012, 0.0], 'false': [0.19575650124113014, 0.24498468219596692], 'false,false,false': [0.27061392227383646, nan]}, {'': [0.0, 0.18789794237016028], 'false,false': [0.0, 0.20297305993887813], 'true': [0.0, nan], 'false,true': [6.0997673609823146e-05, 0.0], 'false': [0.0851365640825042, 0.2002327166059189], 'true,true': [0.0, nan], 'false,false,false': [0.11701677549865142, 0.2441840659299066]}, {'': [-3.700743415417188e-17, 0.17766868701899796], 'false,false': [nan, 0.24367838142981196], 'false,true,true': [0.024566772948799664, 0.0], 'true': [0.0, 0.0], 'false,true': [0.022813596382433278, 3.434890550005651e-05], 'false': [0.1095998277464706, 0.24367838142981196], 'false,false,false': [0.24367838142981196, nan]}, {'': [0.06856991154074635, 0.24335013308861386], 'false,false,true': [nan, 0.23647827570037083], 'false,false': [0.23647827570037083, 0.28084433172821927], 'true,true,false': [0.0, 0.0], 'true': [0.015490117277427023, 2.807055573195469e-05], 'false': [nan, 0.24335013308861386], 'true,true': [0.0004307909830133405, 0.01632609930037125], 'false,false,false': [0.28084433172821927, nan]}, {'': [2.157824613990833e-06, 0.1424436932537615], 'false,false,true': [0.0006906684383139223, 0.0008256570701621521], 'false,false': [0.2431131508968862, nan], 'false,true,false': [0.0, 0.0], 'true': [0.0, 0.0], 'false,true': [0.05295196831234295, 0.021616144917764046], 'false': [0.04530762658226473, 0.2431131508968862]}, {'': [0.0, 0.08750989495051477], 'false,false': [0.04089155263482532, 0.14106397822517172], 'true': [0.0, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.0900071776867785], 'false,false,false': [0.1355050451363592, 0.17163795851722483]}, {'': [5.767585727530408e-07, 0.08868718157333735], 'false,false,true': [0.10635466591259943, 0.0], 'false,false': [0.137177034249054, 0.1349278126100932], 'true,true,true': [0.0, nan], 'true': [0.0, 6.488533943471708e-07], 'false': [0.040119904311582535, 0.14007272398185264], 'true,true': [0.0, nan], 'false,false,false': [0.0, 0.0]}, {'': [4.2364122673776983e-07, 0.0738831798430146], 'false,false,true': [nan, 0.10368709893430132], 'false,false': [0.10368709893430132, 0.1436924127998483], 'true,false': [nan, 0.0], 'true': [2.753904312924327e-09, 0.0], 'false': [0.039483925938510356, 0.11058875491468546], 'false,false,false': [0.0, 0.0], 'true,false,false': [0.0, nan]}, {'': [2.212018661990056e-09, 0.06688443278511633], 'false,false,true': [0.005068940640872955, 0.010218284855432101], 'false,false': [0.08108658574697077, 9.207255120347035e-05], 'true': [2.212018661990056e-09, nan], 'false': [0.017174856262746296, 0.07387756292368608], 'true,true': [2.212018661990056e-09, nan], 'false,false,false': [nan, 9.207255120347035e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, A), interaction(C, D).;true;true
0;false;interaction(A, F).;true;true
0;true,true;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;phenotype(A, D), phenotype(C, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true,true;interaction(G, E), interaction(A, G).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false;interaction(F, A), interaction(A, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D), interaction(E, A).;true;true
3;false;interaction(A, F).;true;true
3;false,true,true;interaction(H, F), interaction(A, H).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;true,true,false;recursion_proteinclass(C, B).;true;true
4;true,true;phenotype(C, E), interaction(C, D).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false;interaction(A, E).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
7;false,false;interaction(G, A), phenotype(A, H).;true;true
7;true;phenotype(A, D), phenotype(C, D).;true;true
7;false;interaction(A, F).;true;true
7;false,false,false;interaction(J, A), interaction(K, J).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false,false;interaction(H, A), interaction(I, H).;true;true
8;false;interaction(A, G).;true;true
8;false,false,false;phenotype(A, J).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(G, A).;true;true
9;false;interaction(F, A), interaction(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), interaction(J, J) )
%   | | | then return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7795960709729262;  // std dev = 0,120, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.1428629543967468;  // std dev = 0,043, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1486690596861986;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.49622264414583434;  // std dev = 1,211, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.14660105069821516;  // std dev = 0,768, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.5454388054050471;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14197287029748643;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.2198127979526047;  // std dev = 2,016, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return -0.1308519181007117;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.531942103418591;  // std dev = 0,253, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41992990316795153;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.14496012672934958;  // std dev = 0,046, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11669965639022802;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.35148463963375604;  // std dev = 1,218, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.08492040212838214;  // std dev = 0,757, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.10577785305542749;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(C, E), interaction(C, D) )
%   | | then return 0.30713564973126256;  // std dev = 0,039, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5311560333573988;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then return -0.12794357209012833;  // std dev = 0,041, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10521578932823676;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), interaction(H, H) )
%   | | then return 0.2749177199406592;  // std dev = 0,467, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.051228529987463516;  // std dev = 0,711, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.08665149395466017;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2577610912184608;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.030988545322906864;  // std dev = 0,505, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16389795799156512;  // std dev = 0,387, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.2592007706042996;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09908994126491573;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.32943652789953803;  // std dev = 0,949, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.21559530747231506;  // std dev = 0,932, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.3516522859439821;  // std dev = 0,217, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.21158478026990346;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3799020352987477;  // std dev = 0,398, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.30218573216992;  // std dev = 0,383, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.06808577547489959;  // std dev = 1,196, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.1442637949021605;  // std dev = 0,172, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.1784354074231589;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17776595258421812;  // std dev = 0,000947, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.1337729799138993;  // std dev = 0,271, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.07137809838357036;  // std dev = 0,312, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.05975528648644308;  // std dev = 0,351, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.20482318457032614;  // std dev = 1,033, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.381603704446287;  // std dev = 0,108, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.18427865059532633;  // std dev = 0,039, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.606885546917739;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15380236223027377;  // std dev = 6,16e-05, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15265724195860164;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.11627732450731253;  // std dev = 0,258, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.06347850781368711;  // std dev = 0,316, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.0521945374844461;  // std dev = 0,344, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.05987339154018087;  // std dev = 0,353, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.303687307145841;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.45694535801245684;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13483284665815304;  // std dev = 5,52e-05, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then return 0.09543972894671626;  // std dev = 0,239, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.08633997095483086;  // std dev = 0,434, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.020759599305630656;  // std dev = 1,263, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else return -0.07875416273387066;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.948587
   AUC PR    = 0.288372
   CLL	      = -0.216968
   Precision = 0.114407 at threshold = 0.5
   Recall    = 0.586957
   F1        = 0.191489


Total learning time: 4.554 seconds
Total inference time: 7.359 seconds
AUC ROC: 0.948587


Results scoring model
   AUC ROC   = 0.991111
   AUC PR    = 0.991091
   CLL	      = -0.261102
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.096 seconds
Refined model CLL: -0.261102


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985742
   AUC PR    = 0.602049
   CLL	      = -0.199269
   Precision = 0.488764 at threshold = 0.5
   Recall    = 0.945652
   F1        = 0.644444


Total learning time: 8.114 seconds
Total inference time: 3.513 seconds
AUC ROC: 0.985742
Total revision time: 8.114
Best scored revision CLL: -0.221681


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 04:23:07
{'CLL': -0.199269, 'AUC ROC': 0.985742, 'F1': 0.644444, 'Recall': 0.945652, 'Precision': [0.488764, 0.5], 'parameter_15': {'CLL': -0.199269, 'AUC ROC': 0.985742, 'F1': 0.644444, 'Recall': 0.945652, 'Precision': [0.488764, 0.5], 'Inference time': 3.513, 'Learning time': 1.654, 'AUC PR': 0.602049}, 'Inference time': 3.513, 'Learning time': 8.114, 'AUC PR': 0.602049}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), enzyme(E, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( complex(A, F), interaction(A, G) )
%   | then if ( interaction(G, H), interaction(H, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return 0.032437466839818324;  // std dev = 0,793, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( enzyme(C, F) )
%   | | then if ( interaction(C, G), interaction(G, G) )
%   | | | then return 0.4456518945940749;  // std dev = 0,783, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7551805016408267;  // std dev = 0,098, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8027590512784345;  // std dev = 0,062, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1637322936457029;  // std dev = 0,090, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.13922792860841146;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.4955755470242728;  // std dev = 0,719, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then return -0.2017460381907442;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, G), interaction(H, D) )
%   | | | then return 0.10307462276789553;  // std dev = 0,832, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.37987544200792406;  // std dev = 1,381, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else return -0.1234102475603011;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(C, E), phenotype(C, F) )
%   | then return 0.028320704928755342;  // std dev = 0,715, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(C, G) )
%   | | then return 0.5450251028037751;  // std dev = 0,172, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25928039658918395;  // std dev = 0,526, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), complex(A, I) )
%   | then if ( interaction(J, A), complex(J, I) )
%   | | then return -0.15199879247592207;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.061206443792684084;  // std dev = 0,596, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then return 0.23868795013905403;  // std dev = 0,826, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.30207613196319366;  // std dev = 0,627, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.026184643227397823;  // std dev = 0,692, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.3318752101075296;  // std dev = 0,633, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then return -0.1982638461760264;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, G), interaction(H, D) )
%   | | | then return 0.05862821121446606;  // std dev = 0,754, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.23974955416669733;  // std dev = 1,235, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else return -0.11685513831115503;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), enzyme(E, D) )
%   | then return 0.354418734123259;  // std dev = 0,235, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.08173443619265454;  // std dev = 0,828, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, F), complex(A, G) )
%   | then if ( interaction(H, A), complex(H, G) )
%   | | then return -0.1564454242551331;  // std dev = 0,115, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.040806352698023504;  // std dev = 0,507, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.2059456404606236;  // std dev = 0,593, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.14643222465589129;  // std dev = 0,760, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.014422855583153128;  // std dev = 0,666, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33108041673024424;  // std dev = 0,142, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(F, D) )
%   | | then return 0.2553320482314699;  // std dev = 0,569, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.11240819526900307;  // std dev = 0,365, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1424137772927087;  // std dev = 1,105, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return -0.08267250787775461;  // std dev = 0,542, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2640415700465386;  // std dev = 0,123, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.3656577288702121;  // std dev = 0,086, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1470519669404068;  // std dev = 0,150, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, G) )
%   | | then return -0.18314792172591354;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.08134209327898154;  // std dev = 0,340, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.07410044674858182;  // std dev = 1,186, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21709068662549938;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(F, D) )
%   | | then return 0.1749870665580578;  // std dev = 0,487, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.09038875968019956;  // std dev = 0,341, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.08643571610754518;  // std dev = 1,053, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return -0.07140233346701859;  // std dev = 0,537, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(C, E), phenotype(C, F) )
%   | then return -0.1257356689396573;  // std dev = 0,535, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then return 0.10863092469649649;  // std dev = 0,281, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3265480310522499;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, H), interaction(I, A) )
%   | then if ( complex(A, J), complex(I, J) )
%   | | then return -0.13762751161147216;  // std dev = 0,168, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.33266438111255653;  // std dev = 0,181, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.23726436137737966;  // std dev = 0,121, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08974357846515359;  // std dev = 0,387, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.703218
   AUC PR    = 0.103149
   CLL	      = -0.296571
   Precision = 0.029565 at threshold = 0.5
   Recall    = 0.369565
   F1        = 0.05475


Total learning time: 4.571 seconds
Total inference time: 3.138 seconds
AUC ROC: 0.703218


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 04:23:15
{'CLL': -0.296571, 'AUC ROC': 0.703218, 'F1': 0.05475, 'Recall': 0.369565, 'Precision': [0.029565, 0.5], 'Inference time': 3.138, 'Learning time': 4.571, 'AUC PR': 0.103149}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), enzyme(E, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( complex(A, F), interaction(A, G) )
%   | then if ( interaction(G, H), interaction(H, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.499934
   AUC PR    = 0.00725
   CLL	      = -0.211794
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.504 seconds
Total inference time: 1.849 seconds
AUC ROC: 0.499934


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 04:23:18
{'CLL': -0.211794, 'AUC ROC': 0.499934, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.849, 'Learning time': 1.504, 'AUC PR': 0.00725}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15226658215833583;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(H, A), complex(A, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.31968739663797385;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7988807907493336;  // std dev = 0,138, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7790289461147388;  // std dev = 0,084, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.16141551998147677;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3010346984638888;  // std dev = 1,847, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.48128645962142214;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5373264860335171;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14074101575624062;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.15993660785780803;  // std dev = 1,509, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.27511853454325624;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.5780401885417469;  // std dev = 0,304, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5387909516524663;  // std dev = 0,186, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.15205291491883582;  // std dev = 0,055, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.21972903644773317;  // std dev = 2,026, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(C, E), interaction(C, D) )
%   | | then return 0.2975574768531125;  // std dev = 0,046, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.48991342998988213;  // std dev = 0,223, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.13349986995062926;  // std dev = 0,049, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14558162709765046;  // std dev = 1,838, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.2901074743216702;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2595978378216508;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.0816434500266493;  // std dev = 0,878, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.30899932208103864;  // std dev = 0,158, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12622409140005014;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5910691409558761;  // std dev = 0,109, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.3868933168431369;  // std dev = 0,091, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.21287906249123234;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return 0.05089471568234729;  // std dev = 0,975, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08186608447434802;  // std dev = 1,406, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.1531930635812282;  // std dev = 0,621, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17862049559503582;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then return 0.043495300257073946;  // std dev = 0,963, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( interaction(F, A), complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.39590718351615983;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3646091413615125;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.006179944880126065;  // std dev = 1,189, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11701795190525748;  // std dev = 0,621, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15457536631060242;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, A), complex(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0.1525467370560295;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.037131261953051456;  // std dev = 0,954, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04865453068898175;  // std dev = 1,320, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( complex(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0897267231314064;  // std dev = 0,622, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(A, D), interaction(D, A) )
%   | | then return 0.13543524150932884;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.02597892655978841;  // std dev = 0,352, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3503520084388931;  // std dev = 0,315, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.24604813441796286;  // std dev = 0,369, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.027898182991638605;  // std dev = 0,401, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.993725
   AUC PR    = 0.69379
   CLL	      = -0.226105
   Precision = 0.464088 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.615385


Total learning time: 1.803 seconds
Total inference time: 3.47 seconds
AUC ROC: 0.993725


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.248589
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.941 seconds
Parameter learned model CLL: -0.248589


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), complex(A, I)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.866, 1, 3], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [1.797, 7, 6], 'false,false,true,false': [1.879, 12, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'true': 'complex(A, D), complex(C, D)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.138, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.816, 1, 2], 'false,true,false': [0.0, 12, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [1.847, 7, 7], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.084, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(D, A), interaction(A, E)', 'false,false,false': 'interaction(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.509, 9, 5], 'false,true,true': [0.004, 0, 3], 'true,true,true': [0.0, 0, 2], 'false,false,false,false': [2.029, 8, 9], 'false,true,false': [2.63e-09, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'true': 'complex(A, D), interaction(E, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.304, 0, 6], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [2.026, 8, 9], 'false,true,false': [0.055, 12, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.186, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'true,true': 'complex(C, E), interaction(C, D)', 'false,false,false': 'interaction(I, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.049, 12, 0], 'false,false,false,true': [0.816, 1, 2], 'true,true,false,false': [0.223, 0, 6], 'true,true,true': [0.046, 0, 4], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [1.838, 7, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false': 'interaction(A, E)'}, {'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.109, 0, 9], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.878, 8, 6], 'false,true,false,true': [0.158, 0, 2], 'false,false,true,false': [0.091, 8, 0], 'true,true': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H)', 'true': 'interaction(A, D), interaction(D, E)', 'false,true': 'complex(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,false,true': [0.975, 12, 8], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.406, 7, 7], 'false,true,true': [0.0, 0, 1], 'false,false,false,false': [0.621, 1, 2], 'true,true': [0.0, 0, 2], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(F, A), complex(A, G)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,false,true,true': [7.45e-09, 0, 3], 'true,false': [0.002, 0, 3], 'false,false,false,true': [1.189, 6, 4], 'false,false,false,false': [0.621, 1, 2], 'false,true': [0.963, 12, 8], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'true,false': 'interaction(C, A), complex(A, E)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, G)', 'false,false,false': 'complex(A, J)', 'true,false,false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.622, 1, 2], 'false,true': [0.954, 12, 8], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 2], 'false,false,true,false': [1.32, 7, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(D, C), interaction(E, D)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(A, D), interaction(D, A)', 'false,false,false': 'interaction(A, I), recursion_proteinclass(I, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.315, 0, 14], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.352, 3, 3], 'true,true,true': [0.0, 0, 2], 'false,false,false,false': [0.401, 3, 1], 'false,false,true,false': [0.369, 14, 0]}]]
[{'': [1.4802973661668753e-16, 0.2483564645726808], 'false,false,true': [1.4802973661668753e-16, 0.20761245674740472], 'false,false': [0.24000000000000005, 0.24913494809688577], 'true': [0.0, 0.0], 'false': [nan, 0.24835646457268037], 'true,true': [0.0, 0.0], 'false,false,false': [0.18750000000000006, 0.24852071005917165]}, {'': [0.0, 0.2346272545819616], 'false,false,true': [nan, 0.24366883973538103], 'false,false': [0.24366883973538103, 0.22222222222222224], 'false,true,true': [0.0031527658831687067, 0.0035468616185648782], 'true': [nan, 0.0], 'false,true': [0.0033251827674043444, -4.625929269271485e-18], 'false': [0.22036890722010552, 0.24460597398328895], 'false,false,false': [0.22222222222222224, nan]}, {'': [0.0, 0.1921482841331158], 'false,false': [0.0, 0.2096370163799516], 'true': [0.0, nan], 'false,true': [5.409920265468197e-06, 2.3129646346357427e-18], 'false': [0.11494658920598348, 0.20642805902762756], 'true,true': [0.0, nan], 'false,false,false': [0.16273364399498016, 0.24227183055671495]}, {'': [-3.700743415417188e-17, 0.1835735709202886], 'false,false': [nan, 0.2415019765608788], 'false,true,true': [0.015377514137411211, 0.017249642393159403], 'true': [nan, -3.700743415417188e-17], 'false,true': [0.01613439043817161, 0.0002518552594980526], 'false': [0.131117930742608, 0.2415019765608788], 'false,false,false': [0.2415019765608788, nan]}, {'': [0.07881250663770535, 0.24100496018303694], 'false,false,true': [nan, 0.24134376427689025], 'false,false': [0.24134376427689025, 0.22222222222222218], 'true,true,false': [0.0, 0.00831838774567284], 'true': [0.013508612755915599, 0.00020158459019306574], 'false': [nan, 0.24100496018303694], 'true,true': [0.0005361248643154098, 0.010635659981852674], 'false,false,false': [0.22222222222222218, nan]}, {'': [4.3524207413344245e-06, 0.13995674358272608], 'false,false,true': [0.0013213055976375701, 0.0010248803337110646], 'false,false': [0.23945710878910678, nan], 'false,true,false': [0.012475079845014045, 0.0], 'true': [0.0, 0.0], 'false,true': [0.05507217898656912, 0.046251564313255965], 'false': [0.053254018216004576, 0.23945710878910678]}, {'': [0.0, 0.08845906319802123], 'false,false': [0.0475425847728161, 0.13966975302505813], 'true': [0.0, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.09034250070659586], 'false,false,false': [0.14112586307347738, 0.12868483566503158]}, {'': [1.1612847230317118e-06, 0.08889317392326196], 'false,false,true': [1.850371707708594e-17, 0.0], 'false,false': [0.10844720257602022, 0.14050693434727862], 'true': [nan, 1.1612847230317118e-06], 'false': [0.04640992065972653, 0.13841231496995637], 'false,false,false': [0.14128053091718012, 0.12847823003634812]}, {'': [9.145192561103391e-07, 0.08231846284380785], 'false,false,true': [nan, 0.12437828315436229], 'false,false': [0.12437828315436229, 0.12892231757707834], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false': [0.04551572960005087, 0.12542533023126087], 'false,false,false': [nan, 0.12892231757707834], 'true,false,false': [0.0, nan]}, {'': [0.0, 0.07982285482789264], 'false,false,true': [0.007100745434166579, 0.009699766037564663], 'false,false': [0.09732353833578519, 0.040111062283220665], 'true': [0.0, nan], 'false': [0.020669418442917913, 0.09087285620400302], 'true,true': [0.0, nan], 'false,false,false': [nan, 0.040111062283220665]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, A), interaction(C, D).;true;true
0;false;interaction(A, F).;true;true
0;true,true;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false;interaction(A, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false;interaction(F, A), interaction(A, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
3;false;interaction(A, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;true,true,false;recursion_proteinclass(C, B).;true;true
4;true,true;complex(C, E), interaction(C, D).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false;interaction(A, E).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(F, A), complex(A, G).;true;true
7;false;interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.04185106490048778;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( complex(A, H) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8105922206472924;  // std dev = 0,059, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.20255159483086574;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.136832517440075;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5983142038281286;  // std dev = 1,261, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.1904317685777402;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.14303208284783567;  // std dev = 0,782, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1382371008835307;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), complex(A, H) )
%   | | | then return 0.09507576311940971;  // std dev = 0,906, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.24957737329486793;  // std dev = 2,157, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6136438632410192;  // std dev = 0,089, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.1314778367391908;  // std dev = 0,032, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.16587487905129225;  // std dev = 0,088, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4300145867278391;  // std dev = 1,261, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.1996798833048274;  // std dev = 0,051, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.07536675363596337;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(C, E), interaction(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.43962878472091754;  // std dev = 0,162, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, F) )
%   | | then return -0.11719453979861019;  // std dev = 0,011, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1443950382359785;  // std dev = 0,079, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, G) )
%   | then return 0.3066833502778989;  // std dev = 0,595, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(I, J) )
%   | | | then return -0.12120883077716736;  // std dev = 0,781, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.5656057873967913;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.23005112845240847;  // std dev = 0,905, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.11452452709381929;  // std dev = 0,703, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.013245491429165035;  // std dev = 0,390, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.2777898205836104;  // std dev = 0,063, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12261410024745147;  // std dev = 0,048, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.22695280062068318;  // std dev = 1,059, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.1748497403278407;  // std dev = 0,908, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1868825335851127;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.018281216309636056;  // std dev = 0,554, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3318300057350514;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.029599324867113537;  // std dev = 0,424, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.08482271249258476;  // std dev = 1,514, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.21780976973485758;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0431092445940517;  // std dev = 0,740, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return -0.11394723176841778;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3357764600916642;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.32873181284498776;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.02259354052850259;  // std dev = 1,012, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09371754445391285;  // std dev = 0,893, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(G, E), enzyme(G, H) )
%   | | then if ( interaction(E, A) )
%   | | | then return -0.03236304077269293;  // std dev = 0,274, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08020171302300581;  // std dev = 0,504, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.1026911041117552;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then return 0.1678246888868586;  // std dev = 0,480, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.018455649696697676;  // std dev = 1,288, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.1660716825888039;  // std dev = 0,482, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.12276680345725723;  // std dev = 0,322, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, G), interaction(G, G) )
%   | | | then return -3.1936944699057873E-4;  // std dev = 0,232, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10135928715460334;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(H, J), enzyme(H, K) )
%   | | | then return -0.33076362329695447;  // std dev = 0,194, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.08264650795634282;  // std dev = 1,269, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else return 0.14104001664531743;  // std dev = 0,479, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.981404
   AUC PR    = 0.471016
   CLL	      = -0.292816
   Precision = 0.165289 at threshold = 0.5
   Recall    = 0.869565
   F1        = 0.277778


Total learning time: 5.916 seconds
Total inference time: 7.196 seconds
AUC ROC: 0.981404


Results scoring model
   AUC ROC   = 0.995
   AUC PR    = 0.994994
   CLL	      = -0.257868
   Precision = 0.95 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.95


Total scoring time: 1.168 seconds
Refined model CLL: -0.257868


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.993725
   AUC PR    = 0.69379
   CLL	      = -0.226105
   Precision = 0.464088 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.615385


Total learning time: 9.828 seconds
Total inference time: 3.47 seconds
AUC ROC: 0.993725
Total revision time: 9.828
Best scored revision CLL: -0.248589


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 04:23:40
{'CLL': -0.226105, 'AUC ROC': 0.993725, 'F1': 0.615385, 'Recall': 0.913043, 'Precision': [0.464088, 0.5], 'Inference time': 3.47, 'Learning time': 9.828, 'AUC PR': 0.69379, 'parameter_20': {'CLL': -0.226105, 'AUC ROC': 0.993725, 'F1': 0.615385, 'Recall': 0.913043, 'Precision': [0.464088, 0.5], 'Inference time': 3.47, 'Learning time': 1.803, 'AUC PR': 0.69379}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(E, A), interaction(D, F) )
%   | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.26991364098186527;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( enzyme(A, E) )
%   | then return 0.47540780245230163;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.16401254434762622;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1418981949498848;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then return 0.6040795140474692;  // std dev = 0,864, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.7670719622367216;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14091848084740508;  // std dev = 1,823, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.47522227933664324;  // std dev = 1,132, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5836491046408492;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.3304073943010228;  // std dev = 1,078, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.2491730396648645;  // std dev = 1,002, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.15890005732795054;  // std dev = 0,122, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.7274607659644322;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.18950638723629273;  // std dev = 0,105, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2766995233004635;  // std dev = 1,919, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(E, A), interaction(C, F) )
%   | then return 0.19858565994845567;  // std dev = 1,122, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.10283492071249102;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( complex(G, I), interaction(H, H) )
%   | | then return 0.11554522138923988;  // std dev = 1,022, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.5695499986442277;  // std dev = 0,169, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.006465179539857127;  // std dev = 1,384, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.4461595406063091;  // std dev = 0,854, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3631728644395185;  // std dev = 0,720, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3759885054835455;  // std dev = 0,085, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, D) )
%   | | then return -0.090160901007043;  // std dev = 0,867, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.277236314579256;  // std dev = 1,055, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1169320244335469;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.45271789980404575;  // std dev = 0,074, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.18328184655853583;  // std dev = 0,148, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.18160293606437664;  // std dev = 1,817, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2933822465907597;  // std dev = 0,074, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(D, F) )
%   | | then return -0.13690894705210077;  // std dev = 0,792, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.27691519082824684;  // std dev = 0,897, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.04863284719842403;  // std dev = 0,538, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.34542723144728527;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.22428573384359723;  // std dev = 0,678, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06486600744767845;  // std dev = 1,726, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2368547800022817;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then return 0.19938657420242603;  // std dev = 0,750, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, F), interaction(A, G) )
%   | | then if ( interaction(H, A), complex(H, F) )
%   | | | then return -0.17070883710952037;  // std dev = 0,113, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07887657257072979;  // std dev = 0,566, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.04881829606369282;  // std dev = 1,776, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.20415566586521172;  // std dev = 1,090, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then return 0.12560775166087282;  // std dev = 0,758, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.09400402477512479;  // std dev = 0,533, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), interaction(F, H) )
%   | | then if ( interaction(H, A), phenotype(H, G) )
%   | | | then return -0.07132402371197889;  // std dev = 0,843, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.36048964288980606;  // std dev = 0,863, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4052209322343698;  // std dev = 0,316, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3369048018765403;  // std dev = 0,266, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.1658507541178809;  // std dev = 0,819, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1902572066516498;  // std dev = 0,103, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.3290021695636938;  // std dev = 0,248, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.3364120117392828;  // std dev = 0,148, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.014255702056251004;  // std dev = 1,055, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.27888737144100884;  // std dev = 1,086, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.294918208557157;  // std dev = 0,134, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07984902304215515;  // std dev = 0,586, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(D, D) )
%   | then return 0.1533559257543694;  // std dev = 0,612, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.0811257954640729;  // std dev = 0,689, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.24982679539449287;  // std dev = 0,228, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, G), complex(E, H) )
%   | | | then return -0.20507495671658527;  // std dev = 0,189, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.04334410020105337;  // std dev = 0,408, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.21612363852401537;  // std dev = 1,082, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.23858034729919605;  // std dev = 0,119, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0624249707670699;  // std dev = 0,587, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.712881
   AUC PR    = 0.018829
   CLL	      = -0.614569
   Precision = 0.015036 at threshold = 0.5
   Recall    = 0.597826
   F1        = 0.029333


Total learning time: 5.635 seconds
Total inference time: 3.132 seconds
AUC ROC: 0.712881


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 04:23:49
{'CLL': -0.614569, 'AUC ROC': 0.712881, 'F1': 0.029333, 'Recall': 0.597826, 'Precision': [0.015036, 0.5], 'Inference time': 3.132, 'Learning time': 5.635, 'AUC PR': 0.018829}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), interaction(E, G) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, H) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.26991364098186527;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.599548
   AUC PR    = 0.070219
   CLL	      = -0.228532
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.571 seconds
Total inference time: 1.765 seconds
AUC ROC: 0.599548


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 04:23:52
{'CLL': -0.228532, 'AUC ROC': 0.599548, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.765, 'Learning time': 1.571, 'AUC PR': 0.070219}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1763307532813305;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(H, A), complex(A, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7966914989602863;  // std dev = 0,134, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.8063437598039528;  // std dev = 0,100, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1646994576650478;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.26952485965647877;  // std dev = 2,037, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.608741135785635;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5354258961752325;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14327284155999384;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.16550488993439677;  // std dev = 1,762, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.28515781487010905;  // std dev = 2,286, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.5742785081758507;  // std dev = 0,296, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5933984343680303;  // std dev = 0,222, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.15716203443613938;  // std dev = 0,059, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.22694205963433528;  // std dev = 2,280, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(C, E), interaction(C, D) )
%   | | then return 0.2983405065182108;  // std dev = 0,045, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4876500890470577;  // std dev = 0,233, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.1374779190949624;  // std dev = 0,053, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11621262133675773;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.379570390455399;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2594473625285505;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.06564534366030593;  // std dev = 0,896, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3420533797020727;  // std dev = 0,181, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12814018728433718;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5686766561421853;  // std dev = 0,220, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.3879692520370679;  // std dev = 0,145, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.2127730899395197;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return 0.04950910314013039;  // std dev = 1,078, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.06873302540676712;  // std dev = 1,565, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.19483295414981502;  // std dev = 0,686, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17856882754015083;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then return 0.042283765717497236;  // std dev = 1,065, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( interaction(F, A), complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.41498479140591393;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3513182004964451;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 7.733473602199106E-4;  // std dev = 1,357, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.15097821681776902;  // std dev = 0,690, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1545133138949114;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, A), complex(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0.15255341662729183;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.03607644851124402;  // std dev = 1,055, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.040519242278917164;  // std dev = 1,481, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( complex(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11859859026410018;  // std dev = 0,696, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(A, D), interaction(D, A) )
%   | | then return 0.13538690580243795;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.025846255847630704;  // std dev = 0,351, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3370060636631429;  // std dev = 0,403, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.2371895343149902;  // std dev = 0,465, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.035400240595350255;  // std dev = 0,375, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.989831
   AUC PR    = 0.624851
   CLL	      = -0.238061
   Precision = 0.464088 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.615385


Total learning time: 1.66 seconds
Total inference time: 3.202 seconds
AUC ROC: 0.989831


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.248219
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.934 seconds
Parameter learned model CLL: -0.248219


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, F)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), complex(A, I)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.866, 1, 3], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 1], 'false,false,false,false': [2.121, 9, 9], 'false,false,true,false': [2.185, 15, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'true': 'complex(A, D), complex(C, D)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.134, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [0.894, 1, 4], 'false,true,false': [0.0, 15, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [2.037, 9, 8], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.1, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(D, A), interaction(A, E)', 'false,false,false': 'interaction(A, I)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.762, 12, 7], 'false,true,true': [0.002, 0, 3], 'true,true,true': [0.0, 0, 2], 'false,false,false,false': [2.286, 10, 12], 'false,true,false': [0.0, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'true': 'complex(A, D), interaction(E, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(J, A)'}, {'false,true,true,true': [0.296, 0, 6], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,false,false,true': [2.28, 10, 12], 'false,true,false': [0.059, 15, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 0], 'false,true,true,false': [0.222, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'true,true': 'complex(C, E), interaction(C, D)', 'false,false,false': 'interaction(I, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.053, 15, 0], 'false,false,false,true': [0.894, 1, 4], 'true,true,false,false': [0.233, 0, 8], 'true,true,true': [0.045, 0, 4], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [2.029, 9, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false': 'interaction(A, E)'}, {'false,true,false,false': [3.73e-09, 6, 0], 'false,false,true,true': [0.22, 0, 12], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.896, 9, 6], 'false,true,false,true': [0.181, 0, 4], 'false,false,true,false': [0.145, 10, 0], 'true,true': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, H)', 'true': 'interaction(A, D), interaction(D, E)', 'false,true': 'complex(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,false,true': [1.078, 15, 10], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.565, 9, 8], 'false,true,true': [0.0, 0, 1], 'false,false,false,false': [0.686, 1, 4], 'true,true': [0.0, 0, 2], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(F, A), complex(A, G)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'false,false,true,true': [0.0, 0, 3], 'true,false': [0.002, 0, 3], 'false,false,false,true': [1.357, 8, 5], 'false,false,false,false': [0.69, 1, 4], 'false,true': [1.065, 15, 10], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'true,false': 'interaction(C, A), complex(A, E)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, G)', 'false,false,false': 'complex(A, J)', 'true,false,false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.696, 1, 4], 'false,true': [1.055, 15, 10], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 2], 'false,false,true,false': [1.481, 9, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(D, C), interaction(E, D)', 'false': 'interaction(F, A), interaction(A, F)', 'true,true': 'interaction(A, D), interaction(D, A)', 'false,false,false': 'interaction(A, I), recursion_proteinclass(I, B)'}, {'true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.403, 0, 19], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true': [0.351, 3, 3], 'true,true,true': [0.0, 0, 2], 'false,false,false,false': [0.375, 3, 1], 'false,false,true,false': [0.465, 19, 0]}]]
[{'': [1.4802973661668753e-16, 0.24898143956541405], 'false,false,true': [1.4802973661668753e-16, 0.21694214876033066], 'false,false': [0.24000000000000005, 0.24793388429752028], 'true': [0.0, 0.0], 'false': [nan, 0.2489814395654142], 'true,true': [0.0, 0.0], 'false,false,false': [0.18750000000000006, 0.25]}, {'': [0.0, 0.23816951074135728], 'false,false,true': [nan, 0.2439683738629837], 'false,false': [0.2439683738629837, 0.15999999999999998], 'false,true,true': [0.0029813164606136886, 0.0025154857636427996], 'true': [nan, 0.0], 'false,true': [0.0028173440552799354, -3.7007434154171884e-18], 'false': [0.22473761484422802, 0.2450928198222834], 'false,false,false': [0.15999999999999998, nan]}, {'': [0.0, 0.19333931305501087], 'false,false': [0.0, 0.2067515901157971], 'true': [0.0, nan], 'false,true': [1.2813006993554292e-06, 0.0], 'false': [0.11515863480119708, 0.20429387998978513], 'true,true': [0.0, nan], 'false,false,false': [0.16344669950623542, 0.2375166433337106]}, {'': [-3.700743415417188e-17, 0.18531186736823993], 'false,false': [nan, 0.23634752017152358], 'false,true,true': [0.014556499811937148, 0.012296517949900165], 'true': [nan, -3.700743415417188e-17], 'false,true': [0.013740244245745003, 0.00023398348306240176], 'false': [0.13673692703131257, 0.23634752017152358], 'false,false,false': [0.23634752017152358, nan]}, {'': [0.0822198034124083, 0.235617750862949], 'false,false,true': [nan, 0.2420952397873793], 'false,false': [0.2420952397873793, 0.15999999999999998], 'true,true,false': [0.0, 0.006762426086719675], 'true': [0.01243246040499201, 0.00018616000277976347], 'false': [nan, 0.235617750862949], 'true,true': [0.0005004768821176703, 0.0087634776676315], 'false,false,false': [0.15999999999999998, nan]}, {'': [4.061477925421109e-06, 0.1380063567636297], 'false,false,true': [0.00402863355448931, 0.0021002365864759565], 'false,false': [0.23005408790029502, nan], 'false,true,false': [0.008192485919345877, 2.3129646346357427e-18], 'true': [0.0, 0.0], 'false,true': [0.05356163522818383, 0.056336672072235174], 'false': [0.05467946975452158, 0.23005408790029502]}, {'': [0.0, 0.08724849221007978], 'false,false': [0.046455158395248046, 0.1355052491179595], 'true': [0.0, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.08870903959815306], 'false,false,false': [0.14409615153289296, 0.09400889615750245]}, {'': [1.0838775124366595e-06, 0.08708328468734476], 'false,false,true': [0.0, 0.0], 'false,false': [0.11010380163722006, 0.13322456711039982], 'true': [nan, 1.0838775124366595e-06], 'false': [0.04538069637353363, 0.1338895975275314], 'false,false,false': [0.14154730418058367, 0.09529103203270646]}, {'': [8.535993999136959e-07, 0.0812946542304536], 'false,false,true': [nan, 0.1290290758447792], 'false,false': [0.1290290758447792, 0.09693853046259897], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'false': [0.04453385994468013, 0.12280641612868924], 'false,false,false': [nan, 0.09693853046259897], 'true,false,false': [0.0, nan]}, {'': [0.0, 0.07921995013033276], 'false,false,true': [0.00854974944336712, 0.011381398949413696], 'false,false': [0.09239072038075694, 0.03521727790390775], 'true': [0.0, nan], 'false': [0.0205283084176474, 0.08757272032788137], 'true,true': [0.0, nan], 'false,false,false': [nan, 0.03521727790390775]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, A), interaction(C, D).;true;true
0;false;interaction(A, F).;true;true
0;true,true;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false;interaction(A, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false;interaction(F, A), interaction(A, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
3;false;interaction(A, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;true,true,false;recursion_proteinclass(C, B).;true;true
4;true,true;complex(C, E), interaction(C, D).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false;interaction(A, E).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(F, A), complex(A, G).;true;true
7;false;interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07243464938522651;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(A, K), interaction(J, J) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21529179224236947;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8260381076997624;  // std dev = 0,053, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, G), location(A, H) )
%   | | | then return -0.191258864214365;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.15089926308140125;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(J, K) )
%   | | | then return 0.1356043977870345;  // std dev = 1,501, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.6298702818679501;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14284514628849843;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.2426710946851882;  // std dev = 2,666, 37,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return 0.06289242022663685;  // std dev = 0,677, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.5159966721070554;  // std dev = 0,247, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6362594097543289;  // std dev = 0,055, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.129684149059973;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.16874315322911024;  // std dev = 0,068, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(J, L), interaction(J, K) )
%   | | | then return 0.34298303966926874;  // std dev = 1,442, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.09659530847870068;  // std dev = 0,845, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.38447242761961203;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(C, E), interaction(C, D) )
%   | | then return 0.31017878585294795;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.46113331456051815;  // std dev = 0,191, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, F) )
%   | | then return -0.15841268893598504;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1281766011945969;  // std dev = 0,015, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( complex(A, G) )
%   | then return 0.3420394106702175;  // std dev = 0,737, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(I, J) )
%   | | | then return -0.13013748019618548;  // std dev = 0,898, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.4314953078123957;  // std dev = 0,832, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2891737443651793;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2571793067896856;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( location(A, G), interaction(H, A) )
%   | | | then return 0.10238398948520866;  // std dev = 0,779, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.11424758002413898;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.3409485701127928;  // std dev = 0,150, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13193379519323745;  // std dev = 0,039, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.19369140060848397;  // std dev = 1,610, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.4398997044873167;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.22364521659522857;  // std dev = 0,085, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2111744772765407;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, E), interaction(A, F) )
%   | | then if ( interaction(F, G), phenotype(F, H) )
%   | | | then return 0.05589472294749372;  // std dev = 0,532, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.10427998199211944;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.0713971365221885;  // std dev = 1,924, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.30748331390700706;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17778878573863968;  // std dev = 0,000848, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.11768101451389872;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.06861455146512165;  // std dev = 0,878, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return -0.01226516237404655;  // std dev = 0,283, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.404551606472058;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.436268122977706;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.12546415631161748;  // std dev = 1,079, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.0011408123789164893;  // std dev = 1,155, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15357614737167125;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15265428844480933;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, H) )
%   | | | then return 0.09904535211182602;  // std dev = 0,829, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.3531805663264546;  // std dev = 0,405, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.2197454458720635;  // std dev = 0,580, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.09289572067197222;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.1340083106676486;  // std dev = 0,276, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1346564505114004;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then return 0.11614681135704943;  // std dev = 0,444, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return -0.2066945714179612;  // std dev = 0,252, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.14666924879715215;  // std dev = 0,366, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.05450098249354098;  // std dev = 1,444, 31,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return -0.08536422428998351;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.972077
   AUC PR    = 0.332146
   CLL	      = -0.318052
   Precision = 0.048193 at threshold = 0.5
   Recall    = 0.956522
   F1        = 0.091762


Total learning time: 7.528 seconds
Total inference time: 9.933 seconds
AUC ROC: 0.972077


Results scoring model
   AUC ROC   = 0.9968
   AUC PR    = 0.996797
   CLL	      = -0.246665
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 1.139 seconds
Refined model CLL: -0.246665


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.972077
   AUC PR    = 0.332146
   CLL	      = -0.318052
   Precision = 0.048193 at threshold = 0.5
   Recall    = 0.956522
   F1        = 0.091762


Total learning time: 11.261 seconds
Total inference time: 9.933 seconds
AUC ROC: 0.972077
Total revision time: 11.261
Best scored revision CLL: -0.246665


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 04:24:17
{'CLL': -0.318052, 'AUC ROC': 0.972077, 'F1': 0.091762, 'Recall': 0.956522, 'parameter_25': {'CLL': -0.238061, 'AUC ROC': 0.989831, 'F1': 0.615385, 'Recall': 0.913043, 'Precision': [0.464088, 0.5], 'Inference time': 3.202, 'Learning time': 1.66, 'AUC PR': 0.624851}, 'Precision': [0.048193, 0.5], 'Inference time': 9.933, 'Learning time': 11.261, 'AUC PR': 0.332146}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), interaction(D, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(L, L), complex(A, M) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19148226843284566;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, G), phenotype(D, G) )
%   | | then return 0.1803221146449018;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.13371461257640344;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( location(A, H), interaction(I, A) )
%   | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.12115719193667115;  // std dev = 1,741, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.43066261996183347;  // std dev = 1,898, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else return 0.7646321784544329;  // std dev = 0,056, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, G), interaction(C, H) )
%   | | then return 0.16724851422624365;  // std dev = 0,785, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12602240598415052;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( enzyme(A, I), interaction(J, A) )
%   | then if ( interaction(K, J), interaction(K, A) )
%   | | then return -0.04660526297269694;  // std dev = 0,674, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.3021034316212849;  // std dev = 1,031, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, L), interaction(M, A) )
%   | | then if ( interaction(N, M), enzyme(N, P) )
%   | | | then return 0.18577727063117022;  // std dev = 1,650, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.47152402098334933;  // std dev = 1,465, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return 0.6031840899888751;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(E, A), location(A, F) )
%   | then if ( location(E, F), complex(E, D) )
%   | | then return 0.04112457317381573;  // std dev = 0,668, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.33578782573604693;  // std dev = 0,892, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.11612091118164417;  // std dev = 0,033, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, G) )
%   | then return 0.430031582045608;  // std dev = 0,744, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5560584708741195;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.14373304541759413;  // std dev = 2,401, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.45515261847165417;  // std dev = 0,074, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.47881157208956343;  // std dev = 0,275, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, A) )
%   | | then return -0.33354444898967256;  // std dev = 0,173, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(C, F), phenotype(F, D) )
%   | | | then return 0.36747907712845984;  // std dev = 0,870, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1641389587609388;  // std dev = 0,567, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   else if ( interaction(A, G), complex(A, H) )
%   | then return 0.057988271030815594;  // std dev = 0,548, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.07726956660987769;  // std dev = 0,808, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.32411686975113324;  // std dev = 1,454, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.15301455473195658;  // std dev = 1,206, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.36977805894351395;  // std dev = 0,276, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( enzyme(F, G), interaction(F, F) )
%   | | | then return -0.3171251664433392;  // std dev = 0,105, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.21082631593807588;  // std dev = 0,968, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.18299072543765238;  // std dev = 0,227, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( enzyme(A, H), complex(A, I) )
%   | then return 0.29778375849958605;  // std dev = 0,521, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, J) )
%   | | then return -0.04880608173008588;  // std dev = 0,632, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.25271586557504183;  // std dev = 1,443, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.07988540369146899;  // std dev = 1,229, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2811787684247547;  // std dev = 0,145, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then return -0.1735875203124976;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, E), interaction(G, A) )
%   | | | then return 0.201671227357136;  // std dev = 0,579, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0214315822919127;  // std dev = 0,968, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.38791252401489534;  // std dev = 0,204, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.049352460011252146;  // std dev = 1,864, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.19983033396624306;  // std dev = 0,900, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.2542211618966682;  // std dev = 0,259, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( enzyme(F, G), interaction(F, F) )
%   | | | then return -0.24969189804245684;  // std dev = 0,090, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1457021295689253;  // std dev = 0,905, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.16700233036552634;  // std dev = 0,200, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then return 0.1751133313645986;  // std dev = 0,816, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.308898388248163;  // std dev = 1,216, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.3015196184247237;  // std dev = 0,168, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.0980484051198844;  // std dev = 0,681, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11396800823750254;  // std dev = 0,431, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then return 0.14334601209605471;  // std dev = 0,495, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), complex(G, D) )
%   | | then return -0.13653821592080828;  // std dev = 0,099, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.023992524712880936;  // std dev = 0,442, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( location(A, H), interaction(I, A) )
%   | then if ( interaction(J, I), enzyme(J, K) )
%   | | then if ( phenotype(J, L), phenotype(A, L) )
%   | | | then return 0.14178003102035464;  // std dev = 0,822, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.12839409415300201;  // std dev = 0,986, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( complex(I, M), interaction(N, I) )
%   | | | then return 0.44149853019418533;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.053902888957844654;  // std dev = 1,397, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else return 0.24672477735725085;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.19807588105556992;  // std dev = 0,238, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, A) )
%   | | then return -0.21210494881545164;  // std dev = 0,093, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(C, F), interaction(F, C) )
%   | | | then return 0.09110300492914443;  // std dev = 0,894, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14418417420161145;  // std dev = 0,200, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return 0.13935908417047357;  // std dev = 0,791, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then return 0.1565189599400487;  // std dev = 0,574, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.0442041915675152;  // std dev = 0,483, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0386113453059221;  // std dev = 1,422, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */


Results
   AUC ROC   = 0.590956
   AUC PR    = 0.015822
   CLL	      = -0.809519
   Precision = 0.009074 at threshold = 0.5
   Recall    = 0.630435
   F1        = 0.01789


Total learning time: 7.073 seconds
Total inference time: 3.39 seconds
AUC ROC: 0.590956


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 04:24:28
{'CLL': -0.809519, 'AUC ROC': 0.590956, 'F1': 0.01789, 'Recall': 0.630435, 'Precision': [0.009074, 0.5], 'Inference time': 3.39, 'Learning time': 7.073, 'AUC PR': 0.015822}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), interaction(D, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(L, L), phenotype(A, M) )
%   | | | then return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.12481560176617898;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.502618
   AUC PR    = 0.00738
   CLL	      = -0.232603
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.882 seconds
Total inference time: 1.779 seconds
AUC ROC: 0.502618


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 04:24:32
{'CLL': -0.232603, 'AUC ROC': 0.502618, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.779, 'Learning time': 1.882, 'AUC PR': 0.00738}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8171873642307679;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8171873642307679;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.18281263576923218;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, F), enzyme(A, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1570664379301048;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2533605967175242;  // std dev = 1,161, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.605123296382692;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.605123296382692;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.18234541573665292;  // std dev = 0,050, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.45555148659723077;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.15679074532603024;  // std dev = 0,044, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.10766118629963772;  // std dev = 0,586, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3466457476829484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1460411195368424;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.06124411861162059;  // std dev = 0,671, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, C), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(A, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then return 0.05137761349306475;  // std dev = 0,663, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, C), enzyme(A, E) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then return 0.04306843717074193;  // std dev = 0,657, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(D, A), interaction(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, A), enzyme(D, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.12863629030317536;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14724859715798122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08580207976119135;  // std dev = 0,589, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */


Results
   AUC ROC   = 0.918162
   AUC PR    = 0.207265
   CLL	      = -0.178481
   Precision = 0.240664 at threshold = 0.5
   Recall    = 0.674419
   F1        = 0.35474


Total learning time: 1.445 seconds
Total inference time: 4.048 seconds
AUC ROC: 0.918162


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.220636
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.766 seconds
Parameter learned model CLL: -0.220636


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false,false': 'interaction(F, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,false': [1.491, 5, 4], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)'}, {'false,true,true,true': [0.0, 0, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(C, F), enzyme(A, F)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false,false,false': 'interaction(J, A)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.161, 4, 4], 'false,true,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'false,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), interaction(A, E)', 'false': 'interaction(F, A)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.05, 5, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true,false': 'recursion_proteinclass(C, B)', 'true,true': 'enzyme(C, E), interaction(D, C)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,false': [0.044, 5, 0], 'false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(E, F), interaction(F, A)'}, {'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.586, 3, 3], 'false,true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'false,false': 'interaction(G, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)'}, {'false,false,true': [0.671, 5, 4], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'true,true,true': 'interaction(E, A), interaction(A, C)', 'false': 'interaction(F, A)', 'true,true': 'interaction(E, C), interaction(C, E)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [0.663, 5, 4], 'true,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(A, C), enzyme(A, E)', 'false': 'interaction(F, A)'}, {'false,true': [0.657, 5, 4], 'false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'interaction(D, A), enzyme(D, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.589, 3, 4], 'false,false,true,false': [0.0, 1, 0]}]]
[{'': [0.0, 0.2469135802469134], 'false,false,true': [nan, 0.2469135802469134], 'false,false': [0.2469135802469134, nan], 'false': [nan, 0.24691358024691348], 'true': [nan, 0.0]}, {'': [0.0, 0.24691358024691354], 'false,true': [0.0, 0.0], 'false': [0.24691358024691354, nan], 'true': [0.0, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.0, 0.16637071680952709], 'true,true,false': [0.0, nan], 'false,false': [nan, 0.16845035076964615], 'true': [0.0, nan], 'false,true': [nan, 0.0], 'false': [0.0, 0.16845035076964615], 'true,true': [nan, 0.0], 'false,false,false': [0.16845035076964615, nan]}, {'': [0.0, 0.15339374271830553], 'false,true': [0.0, 0.0005056379743278661], 'false': [0.15339374271830553, nan], 'true': [0.0, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.08731666005648736, nan], 'true': [0.002909076538163524, 0.00039270566208634005], 'true,true,false': [nan, 0.0], 'true,true': [0.0, 0.0]}, {'': [0.0, 0.05797991729597117], 'false,true': [0.05733023258136219, 0.05394229980685596], 'false': [0.05797991729597117, nan], 'true': [0.0, nan], 'false,true,false': [0.0, 0.0]}, {'': [0.0, 0.04999546720698075], 'true': [0.0, nan], 'false,false': [0.04999546720698074, nan], 'false': [nan, 0.04999546720698074]}, {'': [0.0, 0.048793457659718126], 'true': [0.0, nan], 'true,true,true': [nan, 0.0], 'false': [0.048793457659718126, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.04790465848840017], 'true': [nan, 0.0], 'true,false': [0.0, nan], 'false': [0.04790465848840017, nan]}, {'': [0.0, 0.047243343354607024], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.04959189469489339], 'true,true,false': [nan, 0.0], 'true': [0.0, nan], 'false': [0.0, 0.04933335045314722], 'true,true': [nan, 0.0], 'false,false,false': [nan, 0.04959189469489339]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, G), interaction(G, A).;true;true
1;false;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, G), interaction(G, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, H), interaction(H, A).;true;true
3;false;interaction(F, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, D), recursion_proteinclass(D, B).;true;true
4;true;enzyme(C, E), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;false;interaction(E, F), interaction(F, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(A, H).;true;true
9;false;interaction(A, G), interaction(G, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(D, F), interaction(F, A) )
%   | | then return 0.7580193346218546;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0954213547591701;  // std dev = 0,765, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.1837126519532684;  // std dev = 0,082, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.10663687929338013;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.136292635158786;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4629170799758186;  // std dev = 0,763, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(D, F), interaction(F, A) )
%   | | then return 0.48023896110807235;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06969711532374881;  // std dev = 0,661, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.19684129322434346;  // std dev = 0,141, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, D), recursion_proteinclass(D, B) )
%   then if ( enzyme(C, E), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then return -0.12864136461992492;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4292029850274074;  // std dev = 0,227, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.16919603561236957;  // std dev = 0,125, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then return -0.10348583085024388;  // std dev = 0,040, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.22166757262512546;  // std dev = 0,546, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, D) )
%   | then return -0.09430673963282274;  // std dev = 0,036, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17744506781576014;  // std dev = 0,538, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( complex(A, D) )
%   | then return 0.1813309256183401;  // std dev = 0,368, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.0708030291243058;  // std dev = 0,359, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, D) )
%   | then return -0.08690113121144204;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1291237306675755;  // std dev = 0,497, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.04956029782414176;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, E) )
%   | | then return -0.10479662399201203;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.2193613265689598;  // std dev = 0,158, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07309078826803683;  // std dev = 0,359, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.732979
   AUC PR    = 0.10279
   CLL	      = -0.37186
   Precision = 0.025222 at threshold = 0.5
   Recall    = 0.627907
   F1        = 0.048496


Total learning time: 7.485 seconds
Total inference time: 36.753 seconds
AUC ROC: 0.732979


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.165318
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.4 seconds
Refined model CLL: -0.165318


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.732979
   AUC PR    = 0.10279
   CLL	      = -0.37186
   Precision = 0.025222 at threshold = 0.5
   Recall    = 0.627907
   F1        = 0.048496


Total learning time: 11.096000000000002 seconds
Total inference time: 36.753 seconds
AUC ROC: 0.732979
Total revision time: 11.096000000000002
Best scored revision CLL: -0.165318


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 04:25:25
{'CLL': -0.37186, 'AUC ROC': 0.732979, 'F1': 0.048496, 'Recall': 0.627907, 'Precision': [0.025222, 0.5], 'parameter_5': {'CLL': -0.178481, 'AUC ROC': 0.918162, 'F1': 0.35474, 'Recall': 0.674419, 'Precision': [0.240664, 0.5], 'Inference time': 4.048, 'Learning time': 1.445, 'AUC PR': 0.207265}, 'Inference time': 36.753, 'Learning time': 11.096000000000002, 'AUC PR': 0.10279}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.5951804137785344;  // std dev = 0,836, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.013760953356874338;  // std dev = 0,836, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.4835785963248941;  // std dev = 0,817, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.011695282413476882;  // std dev = 0,836, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return -0.027419815982615153;  // std dev = 0,786, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.4107884230017723;  // std dev = 0,763, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return -0.02286511685802058;  // std dev = 0,787, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.31613653836415845;  // std dev = 0,756, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(A, E) )
%   | then return 0.17269607662494396;  // std dev = 0,579, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.2319187879671999;  // std dev = 0,211, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.3737820919830251;  // std dev = 0,639, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return -0.13840952168287649;  // std dev = 0,540, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( complex(A, D) )
%   | then return 0.39620825393758513;  // std dev = 0,230, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.016569003150965184;  // std dev = 0,566, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(A, E) )
%   | then return -0.19288988177640196;  // std dev = 0,176, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.11623615554109486;  // std dev = 0,510, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.26134361778956167;  // std dev = 0,567, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.16907419201319537;  // std dev = 0,548, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07212370083813172;  // std dev = 0,603, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return -0.07511222014207057;  // std dev = 0,547, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.1511967539624653;  // std dev = 0,581, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.499839
   AUC PR    = 0.007755
   CLL	      = -0.730486
   Precision = 0.007756 at threshold = 0.5
   Recall    = 0.372093
   F1        = 0.015195


Total learning time: 2.022 seconds
Total inference time: 1.981 seconds
AUC ROC: 0.499839


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 04:25:29
{'CLL': -0.730486, 'AUC ROC': 0.499839, 'F1': 0.015195, 'Recall': 0.372093, 'Precision': [0.007756, 0.5], 'Inference time': 1.981, 'Learning time': 2.022, 'AUC PR': 0.007755}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.499875
   AUC PR    = 0.007757
   CLL	      = -0.249809
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.855 seconds
Total inference time: 1.296 seconds
AUC ROC: 0.499875


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 04:25:32
{'CLL': -0.249809, 'AUC ROC': 0.499875, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.296, 'Learning time': 0.855, 'AUC PR': 0.007757}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3025933795439568;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8171873642307679;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7927588762258145;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.18281263576923215;  // std dev = 1,05e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, F), enzyme(A, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.5372041566967942;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1570664379301048;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.25437868399250446;  // std dev = 1,646, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.6048799993344145;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5590703747618935;  // std dev = 0,179, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1824726039656483;  // std dev = 0,071, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.3000818378248501;  // std dev = 0,029, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.46190950605366476;  // std dev = 0,024, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.15688714801930798;  // std dev = 0,063, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2591129330038964;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.10830047659578693;  // std dev = 0,750, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.32659813755075556;  // std dev = 0,119, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14614023151558195;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.21253752813259297;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.06822585787570863;  // std dev = 0,945, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, C), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(A, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1791326889850241;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then return 0.057393971106412645;  // std dev = 0,932, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, C), enzyme(A, E) )
%   | | then return 0.15428676487433834;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then return 0.048263556032277666;  // std dev = 0,923, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(D, A), interaction(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, A), enzyme(D, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1352104041612091;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.03771381376223996;  // std dev = 0,228, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14963620920258705;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08452170380583766;  // std dev = 0,818, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */


Results
   AUC ROC   = 0.914794
   AUC PR    = 0.227016
   CLL	      = -0.18352
   Precision = 0.240664 at threshold = 0.5
   Recall    = 0.674419
   F1        = 0.35474


Total learning time: 1.809 seconds
Total inference time: 4.312 seconds
AUC ROC: 0.914794


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.220593
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.808 seconds
Parameter learned model CLL: -0.220593


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false,false': 'interaction(F, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,false': [2.108, 10, 8], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)'}, {'false,true,true,true': [0.0, 0, 5], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [1.05e-08, 10, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.085, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(C, F), enzyme(A, F)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false,false,false': 'interaction(J, A)'}, {'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.646, 8, 8], 'false,true,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'false,true,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), interaction(A, E)', 'false': 'interaction(F, A)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [0.0, 0, 5], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.071, 10, 0], 'true,true': [0.0, 0, 1], 'false,true,true,false': [0.179, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true,false': 'recursion_proteinclass(C, B)', 'true,true': 'enzyme(C, E), interaction(D, C)'}, {'true,true,true': [0.029, 0, 2], 'true,true,false,false': [0.024, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,false': [0.063, 10, 0], 'false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(E, F), interaction(F, A)'}, {'false,true,false,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.75, 5, 5], 'false,true,false,true': [0.119, 0, 4], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'false,false': 'interaction(G, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)'}, {'false,false,true': [0.945, 10, 9], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'true,true,true': 'interaction(E, A), interaction(A, C)', 'false': 'interaction(F, A)', 'true,true': 'interaction(E, C), interaction(C, E)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [0.932, 10, 9], 'true,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(A, C), enzyme(A, E)', 'false': 'interaction(F, A)'}, {'false,true': [0.923, 10, 9], 'false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'interaction(D, A), enzyme(D, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'false,true': [0.228, 2, 1], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.818, 6, 8], 'false,false,true,false': [0.0, 2, 0]}]]
[{'': [0.0, 0.2493074792243767], 'false,false,true': [0.0, 0.2469135802469136], 'false,false': [0.2493074792243767, nan], 'false': [nan, 0.2493074792243767], 'true': [nan, 0.0]}, {'': [0.0, 0.24437004225803807], 'false,true': [0.0009430139673411256, 1.1102230246251566e-17], 'false': [0.24437004225803807, nan], 'true': [0.0, nan], 'false,true,true': [-8.881784197001253e-17, 0.0017902530786244597]}, {'': [0.0, 0.16378221411060906], 'true,true,false': [0.0, nan], 'false,false': [nan, 0.16929054335957588], 'true': [0.0, nan], 'false,true': [0.0, 0.0], 'false': [0.10711370190301954, 0.16929054335957588], 'true,true': [nan, 0.0], 'false,false,false': [0.16929054335957588, nan]}, {'': [0.0, 0.14885891373990728], 'false,true': [0.004072752182055951, 0.0005085020233360493], 'false': [0.14885891373990728, nan], 'true': [0.0, nan], 'false,true,true': [-4.4408920985006264e-17, 0.007997847018806237]}, {'': [0.08833902312103294, nan], 'true': [0.004332437001098555, 0.00039487973821087654], 'true,true,false': [nan, 7.150808920453056e-05], 'true,true': [0.00042559728517453654, 7.15080892045028e-05]}, {'': [0.0, 0.056998362577588176], 'false,true': [0.0562770538655494, 0.056765305384581057], 'false': [0.056998362577588176, nan], 'true': [0.0, nan], 'false,true,false': [0.0035655117889181326, -2.7755575615628915e-18]}, {'': [0.0, 0.046996691788754215], 'true': [0.0, nan], 'false,false': [0.046996691788754215, nan], 'false': [nan, 0.046996691788754215]}, {'': [0.0, 0.04573946923217523], 'true': [0.0, nan], 'true,true,true': [nan, 0.0], 'false': [0.04573946923217523, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.044826303017390205], 'true': [nan, 0.0], 'true,false': [0.0, nan], 'false': [0.044826303017390205, nan]}, {'': [0.0, 0.04416012773510967], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.04780975668718708], 'true,true,false': [nan, 0.0], 'true': [0.0, nan], 'false': [0.017306477087290887, 0.04783056050083912], 'true,true': [nan, 0.0], 'false,false,false': [nan, 0.04780975668718708]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, G), interaction(G, A).;true;true
1;false;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;false;interaction(A, G), interaction(G, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, H), interaction(H, A).;true;true
3;false;interaction(F, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, D), recursion_proteinclass(D, B).;true;true
4;true;enzyme(C, E), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;false;interaction(E, F), interaction(F, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false;interaction(A, H).;true;true
9;false;interaction(A, G), interaction(G, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), recursion_proteinclass(D, B) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( complex(A, G) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(D, F), interaction(F, A) )
%   | | then return 0.765542958304925;  // std dev = 0,121, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.5519630867330502;  // std dev = 0,858, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.16380549825712204;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.15619822491143295;  // std dev = 0,076, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.7088670546513742;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.10928656452297787;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.639153106291949;  // std dev = 0,176, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19682772599782744;  // std dev = 0,116, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -4.3955937615828276E-4;  // std dev = 0,610, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(D, F), interaction(F, A) )
%   | | then return 0.4774914887997923;  // std dev = 0,176, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.344064217466322;  // std dev = 0,689, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1375006849803274;  // std dev = 0,042, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11920851117064474;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, D), recursion_proteinclass(D, B) )
%   then if ( enzyme(C, E), interaction(D, C) )
%   | then return 0.3843895108849853;  // std dev = 0,170, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, F) )
%   | | then return -0.18931699111259156;  // std dev = 0,163, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.3826319995663433;  // std dev = 0,138, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.015184732312277828;  // std dev = 0,475, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.1073229870026374;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2432594521869097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(E, A) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.22034966453483862;  // std dev = 0,388, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.14994108221302666;  // std dev = 0,158, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08201419304320041;  // std dev = 0,660, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | then return 0.38279092854476515;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20130606816188024;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D) )
%   | then return -0.039592099161327964;  // std dev = 0,424, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.1995300754527646;  // std dev = 0,370, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.18364900561329267;  // std dev = 0,356, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.04677819801161116;  // std dev = 0,377, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17087234121912753;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.16391382338282057;  // std dev = 0,349, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then return -0.12455584631054425;  // std dev = 0,142, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.07452700567534223;  // std dev = 0,204, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14800561292318637;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), interaction(G, D) )
%   | | then return -0.025850154606553263;  // std dev = 0,439, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, H), interaction(H, A) )
%   | | | then return 0.07849711931414953;  // std dev = 0,313, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.26698632186971666;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.032891986233872024;  // std dev = 0,418, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13029699551134544;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return 0.05230701272493019;  // std dev = 0,299, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then return -0.15325982616111627;  // std dev = 0,093, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.1479970026910971;  // std dev = 0,334, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.014535439960660099;  // std dev = 0,513, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */


Results
   AUC ROC   = 0.844968
   AUC PR    = 0.118832
   CLL	      = -0.221448
   Precision = 0.076225 at threshold = 0.5
   Recall    = 0.488372
   F1        = 0.131868


Total learning time: 22.821 seconds
Total inference time: 62.952 seconds
AUC ROC: 0.844968


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.177732
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.771 seconds
Refined model CLL: -0.177732


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.844968
   AUC PR    = 0.118832
   CLL	      = -0.221448
   Precision = 0.076225 at threshold = 0.5
   Recall    = 0.488372
   F1        = 0.131868


Total learning time: 27.209000000000003 seconds
Total inference time: 62.952 seconds
AUC ROC: 0.844968
Total revision time: 27.209000000000003
Best scored revision CLL: -0.177732


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 04:27:07
{'CLL': -0.221448, 'AUC ROC': 0.844968, 'F1': 0.131868, 'Recall': 0.488372, 'Precision': [0.076225, 0.5], 'Inference time': 62.952, 'Learning time': 27.209000000000003, 'AUC PR': 0.118832, 'parameter_10': {'CLL': -0.18352, 'AUC ROC': 0.914794, 'F1': 0.35474, 'Recall': 0.674419, 'Precision': [0.240664, 0.5], 'Inference time': 4.312, 'Learning time': 1.809, 'AUC PR': 0.227016}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, F) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.4557831385683306;  // std dev = 1,138, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.08320549123154841;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.5149254481262141;  // std dev = 0,792, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( complex(A, D) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.06391518328326834;  // std dev = 0,707, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6520309640217057;  // std dev = 0,048, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.01533723132022525;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.15655919045978958;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.4050912403500065;  // std dev = 0,775, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( complex(A, D) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.052004112257191815;  // std dev = 0,704, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4944332069159867;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.012899450254393114;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.1371081035116995;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.04210542215512627;  // std dev = 0,702, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.38998299918301926;  // std dev = 0,087, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then return 0.27448799138223257;  // std dev = 0,752, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.01086388522590882;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.12177034744958497;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.23942488863545666;  // std dev = 0,712, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( enzyme(A, E) )
%   | then return -0.1410044368905515;  // std dev = 0,574, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.21918720774111256;  // std dev = 0,800, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.06343683120462379;  // std dev = 0,600, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), complex(D, C) )
%   | then return 0.3648566037835356;  // std dev = 0,221, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.07144892741227044;  // std dev = 0,558, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return 0.18900372121833353;  // std dev = 0,700, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then return -0.0391571941964889;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.11570288028221633;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2800304545717094;  // std dev = 0,200, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.2794836644208559;  // std dev = 0,322, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return 0.35526071821338306;  // std dev = 0,204, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.16023513801523648;  // std dev = 0,777, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.1044390131084635;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.22950039893139826;  // std dev = 0,177, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.23147991677324145;  // std dev = 0,278, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return 0.2828121618262868;  // std dev = 0,184, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.13260851723176414;  // std dev = 0,773, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.09511060861676977;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.19295176469242747;  // std dev = 0,158, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.19578541613005956;  // std dev = 0,242, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return 0.23175202485634058;  // std dev = 0,163, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.10948805160259716;  // std dev = 0,771, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.08726846889990438;  // std dev = 0,032, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.594634
   AUC PR    = 0.009991
   CLL	      = -0.541795
   Precision = 0.010547 at threshold = 0.5
   Recall    = 0.430233
   F1        = 0.02059


Total learning time: 2.714 seconds
Total inference time: 2.363 seconds
AUC ROC: 0.594634


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 04:27:12
{'CLL': -0.541795, 'AUC ROC': 0.594634, 'F1': 0.02059, 'Recall': 0.430233, 'Precision': [0.010547, 0.5], 'Inference time': 2.363, 'Learning time': 2.714, 'AUC PR': 0.009991}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, F) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.499967
   AUC PR    = 0.007757
   CLL	      = -0.19767
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.103 seconds
Total inference time: 1.393 seconds
AUC ROC: 0.499967


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 04:27:15
{'CLL': -0.19767, 'AUC ROC': 0.499967, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.393, 'Learning time': 1.103, 'AUC PR': 0.007757}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30259337954395676;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8171873642307679;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.8049731202282913;  // std dev = 0,091, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.18281263576923215;  // std dev = 1,05e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, F), enzyme(A, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.5341661592736461;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1570664379301048;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2720332045580893;  // std dev = 1,970, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.6006528484150141;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5783771601770579;  // std dev = 0,189, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.18074760231043824;  // std dev = 0,101, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.29723228069326363;  // std dev = 0,033, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4570225374295252;  // std dev = 0,015, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.15561091808516692;  // std dev = 0,089, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2596603476213756;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.054769794072454116;  // std dev = 0,825, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.33439986358089846;  // std dev = 0,124, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1487366089261943;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.21292308194924414;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.0644973563732801;  // std dev = 1,125, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, C), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(A, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17941468551009143;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then return 0.054443298608528694;  // std dev = 1,111, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, C), enzyme(A, E) )
%   | | then return 0.15450017086533152;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then return 0.045938318120648906;  // std dev = 1,100, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(D, A), interaction(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, A), enzyme(D, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13537666757037947;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.07024030483294867;  // std dev = 0,241, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2188073724505887;  // std dev = 0,098, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16010861875092774;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06913408808343557;  // std dev = 0,899, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */


Results
   AUC ROC   = 0.958622
   AUC PR    = 0.326132
   CLL	      = -0.180826
   Precision = 0.224638 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.342541


Total learning time: 1.623 seconds
Total inference time: 4.015 seconds
AUC ROC: 0.958622


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.209423
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.875 seconds
Parameter learned model CLL: -0.209423


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false,false': 'interaction(F, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,false': [2.582, 15, 12], 'true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false': 'interaction(E, A)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)'}, {'false,true,true,true': [0.0, 0, 5], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [1.05e-08, 15, 0], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.091, 0, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(C, F), enzyme(A, F)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false,false,false': 'interaction(J, A)'}, {'false,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [1.97, 11, 12], 'false,true,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'false,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), interaction(A, E)', 'false': 'interaction(F, A)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)'}, {'false,true,true,true': [1.49e-08, 0, 5], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.101, 15, 0], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.189, 0, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true,false': 'recursion_proteinclass(C, B)', 'true,true': 'enzyme(C, E), interaction(D, C)'}, {'true,true,true': [0.033, 0, 2], 'true,true,false,false': [0.015, 0, 12], 'true,true,false,true': [0.0, 0, 1], 'true,false': [0.089, 15, 0], 'false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(E, F), interaction(F, A)'}, {'false,true,false,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.825, 8, 5], 'false,true,false,true': [0.124, 0, 8], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'false,false': 'interaction(H, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'enzyme(F, G)'}, {'false,false,true': [1.125, 15, 13], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'true,true,true': 'interaction(E, A), interaction(A, C)', 'false': 'interaction(F, A)', 'true,true': 'interaction(E, C), interaction(C, E)'}, {'true,true,false': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [1.111, 15, 13], 'true,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(A, C), enzyme(A, E)', 'false': 'interaction(F, A)'}, {'false,true': [1.1, 15, 13], 'false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'interaction(D, A), enzyme(D, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'false,false,true,true': [0.098, 0, 4], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'false,true': [0.241, 4, 1], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.899, 8, 9], 'false,false,true,false': [0.023, 3, 0]}]]
[{'': [0.0, 0.2487244897959179], 'false,false,true': [0.0, 0.24691358024691357], 'false,false': [0.2487244897959179, nan], 'false': [nan, 0.24872448979591827], 'true': [nan, 0.0]}, {'': [0.0, 0.24531425750347882], 'false,true': [0.0006779656629107331, 7.401486830834377e-18], 'false': [0.24531425750347882, nan], 'true': [0.0, nan], 'false,true,true': [-8.881784197001253e-17, 0.0010443142958641571]}, {'': [0.0, 0.16276692188576322], 'true,true,false': [0.0, nan], 'false,false': [0.0, 0.16878356641142553], 'true': [0.0, nan], 'false,true': [0.0, 0.0], 'false': [0.07644840054992687, 0.16495645178773902], 'true,true': [nan, 0.0], 'false,false,false': [0.16878356641142553, nan]}, {'': [0.0, 0.14827745762847822], 'false,true': [0.002853408846384161, 0.0006841413264295474], 'false': [0.14827745762847822, nan], 'true': [0.0, nan], 'false,true,true': [4.4408920985006264e-17, 0.004445940803653292]}, {'': [0.08692116617517026, nan], 'true': [0.0038071191407553625, 0.0005330918349054155], 'true,true,false': [0.0, 1.7794702300492442e-05], 'true,true': [0.0005512900414729183, 0.0013357587274522682]}, {'': [5.0357717391869006e-06, 0.056677982873472955], 'false,true': [0.05229461279784421, 0.059114690724138795], 'false': [0.056677982873472955, nan], 'true': [0.0, 0.0], 'false,true,false': [0.0019103146100150903, 0.0]}, {'': [0.0, 0.04438192119784411], 'true': [0.0, nan], 'false,false': [0.04523938388197942, nan], 'false': [0.0, 0.04523938388197942], 'false,true': [0.0, nan]}, {'': [1.3434986282367944e-06, 0.04405968238744667], 'true': [1.3434986282367944e-06, nan], 'true,true,true': [nan, 0.0], 'false': [0.04405968238744667, nan], 'true,true': [0.0, 0.0]}, {'': [7.711586379709201e-07, 0.04319134919125671], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'false': [0.04319134919125671, nan]}, {'': [0.0, 0.0413838503824102], 'false,false,true': [0.0023970326927928026, 0.00017359619888287584], 'false,false': [0.036605926045581036, 0.04758076502743674], 'true,true,false': [nan, 0.0], 'true': [0.0, nan], 'false': [0.011611374338166211, 0.04441319365759666], 'true,true': [nan, 0.0], 'false,false,false': [nan, 0.04758076502743674]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, G), interaction(G, A).;true;true
1;false;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
2;false;interaction(A, G), interaction(G, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, H), interaction(H, A).;true;true
3;false;interaction(F, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, D), recursion_proteinclass(D, B).;true;true
4;true;enzyme(C, E), interaction(D, C).;true;true
4;true,false;recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;false;interaction(E, F), interaction(F, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(E, C), interaction(C, E).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
9;false,false;interaction(A, H).;true;true
9;false;interaction(A, G), interaction(G, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), recursion_proteinclass(D, B) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(D, F), interaction(F, A) )
%   | | then return 0.7524373009908087;  // std dev = 0,125, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.6048306753132783;  // std dev = 0,840, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.10180564237378671;  // std dev = 1,034, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return -0.1422545111654938;  // std dev = 0,085, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.7478202264017848;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.11065130057345345;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.44383404841896706;  // std dev = 0,692, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18932344159931908;  // std dev = 1,658, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(D, F), interaction(F, A) )
%   | | then return 0.5056065772746309;  // std dev = 0,196, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.420505854231219;  // std dev = 0,781, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.049550708081110874;  // std dev = 1,018, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return -0.1345096921765325;  // std dev = 0,118, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, D), recursion_proteinclass(D, B) )
%   then if ( enzyme(C, E), interaction(D, C) )
%   | then return 0.43943578421164686;  // std dev = 0,270, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.1336026305269676;  // std dev = 0,758, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.4681348118758503;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10564855222845335;  // std dev = 0,955, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.11978660650762915;  // std dev = 0,108, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.23326999734323273;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2923278451034693;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, F), interaction(F, A) )
%   | then if ( enzyme(A, G), interaction(A, H) )
%   | | then return 0.14827535326005434;  // std dev = 0,777, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.10109796361502431;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.11700473691944531;  // std dev = 0,458, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(E, K), recursion_proteinclass(K, B) )
%   | | then return 0.4752548069926005;  // std dev = 0,207, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.12106197690502965;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19415913953083186;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.23569418647678053;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( interaction(F, F), complex(F, G) )
%   | | | then return 0.20523955443271266;  // std dev = 0,761, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.044906431534212476;  // std dev = 0,947, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.21000453398614216;  // std dev = 0,435, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(C, D) )
%   | then return 0.16556827327092027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.19589878459823373;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then return -0.028519881874354048;  // std dev = 0,610, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.29547123334085323;  // std dev = 0,156, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13616409406662036;  // std dev = 0,071, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.1162823352230263;  // std dev = 0,709, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.01212168953637563;  // std dev = 0,731, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16686288364789703;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.14394102994710645;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, F), phenotype(F, G) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.03376068963820844;  // std dev = 0,327, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2076402219004114;  // std dev = 0,558, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, I), location(E, I) )
%   | | | then return 0.07408096518754477;  // std dev = 0,646, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.2316147031557745;  // std dev = 0,255, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.1490791853554627;  // std dev = 0,393, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.12709669730040052;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.018716010077767072;  // std dev = 0,349, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.24152604494881372;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.203152704965912;  // std dev = 0,214, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.09014651104909614;  // std dev = 0,709, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.01177180182715736;  // std dev = 0,629, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.901117
   AUC PR    = 0.121146
   CLL	      = -0.345033
   Precision = 0.033316 at threshold = 0.5
   Recall    = 0.732558
   F1        = 0.063733


Total learning time: 36.994 seconds
Total inference time: 66.819 seconds
AUC ROC: 0.901117


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.224831
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.08 seconds
Refined model CLL: -0.224831


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.958622
   AUC PR    = 0.326132
   CLL	      = -0.180826
   Precision = 0.224638 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.342541


Total learning time: 41.571999999999996 seconds
Total inference time: 4.015 seconds
AUC ROC: 0.958622
Total revision time: 41.571999999999996
Best scored revision CLL: -0.209423


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 04:29:08
{'CLL': -0.180826, 'AUC ROC': 0.958622, 'F1': 0.342541, 'Recall': 0.72093, 'Precision': [0.224638, 0.5], 'parameter_15': {'CLL': -0.180826, 'AUC ROC': 0.958622, 'F1': 0.342541, 'Recall': 0.72093, 'Precision': [0.224638, 0.5], 'Inference time': 4.015, 'Learning time': 1.623, 'AUC PR': 0.326132}, 'Inference time': 4.015, 'Learning time': 41.571999999999996, 'AUC PR': 0.326132}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 8.835646163369372E-4;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 7.758973011973702E-4;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.3151786576185065;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 6.8129367991872E-4;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(D, E), interaction(E, A) )
%   | then return 0.04510976492720925;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3769873940080134;  // std dev = 0,195, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then return -0.03205203648138379;  // std dev = 0,389, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.44487265929683917;  // std dev = 0,485, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.20784879105511836;  // std dev = 0,287, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.015426223067677158;  // std dev = 0,926, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(D, E), interaction(E, A) )
%   | then return 0.039284748623196745;  // std dev = 0,333, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.2964299317831877;  // std dev = 0,179, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.2513860603312554;  // std dev = 0,085, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.516838397995859;  // std dev = 0,340, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.09003067475149766;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1793545694452133;  // std dev = 0,261, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then return -0.2684654298380259;  // std dev = 0,305, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.18558751101280296;  // std dev = 0,655, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, E), interaction(E, A) )
%   | then return 0.034178904155224954;  // std dev = 0,329, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.24053013274629959;  // std dev = 0,161, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then return -0.03646941234495676;  // std dev = 0,348, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.012704996666289844;  // std dev = 0,830, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.2978025409693014;  // std dev = 0,178, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05990274257082681;  // std dev = 0,778, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(A, F) )
%   | | then return 0.2456181131999495;  // std dev = 0,106, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16974696741850415;  // std dev = 0,036, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.0822939279402846;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.08784585542977752;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3867573353449337;  // std dev = 0,367, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2329184875289799;  // std dev = 0,327, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.12367052270487922;  // std dev = 0,676, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return -0.010791726755339834;  // std dev = 0,183, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.1678201135248223;  // std dev = 0,094, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09169120251229086;  // std dev = 0,287, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.31533809125593754;  // std dev = 0,345, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, J), complex(J, H) )
%   | | | then return -0.2172073983751113;  // std dev = 0,281, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08980162651402113;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.22166318232958315;  // std dev = 0,405, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03800983153318377;  // std dev = 0,437, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(A, F) )
%   | | then return 0.18250957503122742;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13511270887827528;  // std dev = 0,031, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07888695683183503;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.26218734995974946;  // std dev = 0,314, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, J), complex(J, H) )
%   | | | then return -0.18607851413039095;  // std dev = 0,247, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08273694290197947;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.18180401071462118;  // std dev = 0,381, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.032059822435100666;  // std dev = 0,440, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.872825
   AUC PR    = 0.244203
   CLL	      = -0.288854
   Precision = 0.033557 at threshold = 0.5
   Recall    = 0.581395
   F1        = 0.063452


Total learning time: 5.339 seconds
Total inference time: 3.237 seconds
AUC ROC: 0.872825


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 04:29:17
{'CLL': -0.288854, 'AUC ROC': 0.872825, 'F1': 0.063452, 'Recall': 0.581395, 'Precision': [0.033557, 0.5], 'Inference time': 3.237, 'Learning time': 5.339, 'AUC PR': 0.244203}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */


Results
   AUC ROC   = 0.756616
   AUC PR    = 0.236437
   CLL	      = -0.179526
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.298 seconds
Total inference time: 1.7 seconds
AUC ROC: 0.756616


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 04:29:20
{'CLL': -0.179526, 'AUC ROC': 0.756616, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.7, 'Learning time': 1.298, 'AUC PR': 0.236437}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.26991364098186527;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8073695867878368;  // std dev = 0,095, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.8015098418160447;  // std dev = 0,130, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.17798105078268278;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, F), enzyme(A, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5350278332797525;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.5342988124141357;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.15341454964222712;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.24599842257928067;  // std dev = 2,226, 29,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.5861703142746907;  // std dev = 0,200, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5752206314903372;  // std dev = 0,273, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1747459149735315;  // std dev = 0,104, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.29787808884550837;  // std dev = 0,032, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4498398375857651;  // std dev = 0,267, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.15103704208236668;  // std dev = 0,092, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25953621876628286;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.053750365465964275;  // std dev = 0,981, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.33553452794693805;  // std dev = 0,204, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.13862113490256198;  // std dev = 0,040, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.18010896951256333;  // std dev = 0,046, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.06190007965161204;  // std dev = 1,302, 36,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, C), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(A, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.18421825219580046;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then return 0.054321404698769844;  // std dev = 1,286, 37,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, C), enzyme(A, E) )
%   | | then return 0.15812523830725522;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then return 0.045956797292569;  // std dev = 1,273, 37,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(D, A), interaction(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, A), enzyme(D, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12685140246400706;  // std dev = 0,016, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.04071044934213052;  // std dev = 0,326, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2102702128704405;  // std dev = 0,139, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15909782282211984;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06638343606950249;  // std dev = 1,057, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */


Results
   AUC ROC   = 0.894188
   AUC PR    = 0.080358
   CLL	      = -0.376094
   Precision = 0.041667 at threshold = 0.5
   Recall    = 0.883721
   F1        = 0.079581


Total learning time: 1.78 seconds
Total inference time: 3.926 seconds
AUC ROC: 0.894188


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.209348
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.867 seconds
Parameter learned model CLL: -0.209348


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(A, D), interaction(D, C)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, I), enzyme(A, J)'}, {'false,false,true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1], 'false,false,true,false': [2.87, 20, 14], 'true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.095, 0, 7], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 20, 0], 'false,false,true,false': [0.0, 0, 1], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.13, 0, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(C, F), enzyme(A, F)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false,false,false': 'interaction(J, A)'}, {'false,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,false,true': [2.226, 15, 14], 'false,true,true': [0.001, 0, 2], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'false,true,false': [0.0, 5, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, J)'}, {'false,true,true,true': [0.2, 0, 7], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,true,false': [0.104, 20, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.273, 0, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(D, C)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.092, 20, 0], 'true,true,false,false': [0.267, 0, 16], 'true,true,true': [0.032, 0, 2], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false': 'interaction(E, A)'}, {'false,true,false,false': [0.04, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.981, 11, 7], 'false,true,false,true': [0.204, 0, 10], 'false,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A)', 'true': 'interaction(D, A), interaction(E, D)', 'false,true': 'enzyme(F, G)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,false,true': [1.302, 20, 16], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.046, 0, 2], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(A, G), enzyme(A, H)', 'true,true,true': 'interaction(E, A), interaction(A, C)', 'false': 'interaction(F, A)', 'true,true': 'interaction(E, C), interaction(C, E)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'true,true,true,true': [0.0, 0, 0], 'false,true': [1.286, 20, 17], 'false,false,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'true,false': 'interaction(A, C), enzyme(A, E)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(F, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [1.273, 20, 17], 'false,false,true,false': [0.0, 0, 1], 'true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'interaction(D, A), enzyme(D, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'false,false,true,true': [0.139, 0, 5], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,true,false,false': [0.016, 0, 2], 'true,true,true': [0.0, 0, 0], 'false,true': [0.326, 5, 2], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.057, 11, 11], 'false,false,true,false': [0.026, 4, 0]}]]
[{'': [0.0, 0.24930747922437624], 'false,false,true': [0.0, 0.24221453287197187], 'false,false': [0.2469135802469131, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.24835646457268057], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.2389354805628335], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,true': [0.0012876229175419038, 0.0016824939455878153], 'true': [0.0, nan], 'false,true': [0.0015282168190890095, -3.8857805861880476e-17], 'false': [0.24015129689521456, 0.0]}, {'': [0.00010341469774222123, 0.16040116390723125], 'true,true,false': [0.0, 0.0], 'false,false': [0.0, 0.16831238047537428], 'true': [0.00010341469774222123, nan], 'false,true': [5.314714224824435e-07, -2.7755575615628915e-18], 'false': [0.09652049232874639, 0.16567486372217932], 'true,true': [nan, 0.00010341469774222123], 'false,false,false': [0.17092597005785914, 0.0]}, {'': [0.0, 0.1425020382719867], 'false,false': [nan, 0.0], 'false,true,true': [0.005692707742937841, 0.007442803512564123], 'true': [0.0, nan], 'false,true': [0.006751216288100348, 0.0005390955864047087], 'false': [0.14476598049772083, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.08692066639138887, 0.0], 'true,true,false': [0.0, 0.004456305544290329], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0], 'true': [0.00659643393729405, 0.00042211283030451073], 'false': [nan, 0.0], 'true,true': [0.0005213805187714443, 0.005117300050618286]}, {'': [4.76107206155707e-06, 0.056059551612632146], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true,false': [0.004146823674131728, 0.00017786099922924756], 'true': [0.0, 0.0], 'false,true': [0.0535105506277985, 0.05831699186719009], 'false': [0.056795631657312814, 0.0]}, {'': [0.0010710368237291865, 0.04566978068708092], 'false,false': [0.04705636543483801, 0.0], 'true': [0.0010710368237291865, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.04635946417665993], 'false,false,false': [0.0, nan]}, {'': [1.2679846613385115e-05, 0.043937556973406754], 'true,true,true': [nan, 0.0], 'false,false': [nan, 0.0], 'true': [1.2679846613385115e-05, nan], 'false': [0.04472838157973964, 0.0], 'true,true': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [7.23981325078879e-06, 0.04294610290475352], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'true,false': [0.0, nan], 'true': [0.0, 0.0], 'false': [0.04380671690565162, 0.0]}, {'': [0.00012866142575147094, 0.04229432224692756], 'false,false,true': [0.0038773820402055624, 0.0001649827349721987], 'false,false': [0.035914524519701986, 0.050763076706987056], 'true,true,false': [nan, 0.00012866142575147094], 'true': [0.00012866142575147094, nan], 'false': [0.015149657618570997, 0.04653691783387928], 'true,true': [nan, 0.00012866142575147094], 'false,false,false': [nan, 0.050763076706987056]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
0;false,false;interaction(G, A).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true,true;interaction(E, G), interaction(G, A).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
2;true;enzyme(C, F), enzyme(A, F).;true;true
2;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;false;interaction(A, G), interaction(G, A).;true;true
2;false,false,false;interaction(J, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;false;interaction(F, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
4;true,true,false;recursion_proteinclass(C, B).;true;true
4;true,true;enzyme(C, E), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false,false;interaction(H, A).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(E, C), interaction(C, E).;true;true
7;false;interaction(F, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;false;interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
9;false,false;interaction(A, H).;true;true
9;false;interaction(A, G), interaction(G, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.26991364098186527;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.8073695867878368;  // std dev = 0,095, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.8015098418160447;  // std dev = 0,130, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.17798105078268278;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), enzyme(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5350278332797525;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.5342988124141357;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.15341454964222712;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.24599842257928067;  // std dev = 2,226, 29,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.6169726619745493;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.564211267079455;  // std dev = 0,324, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.1804909869686295;  // std dev = 0,050, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.17165241466847886;  // std dev = 0,089, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.2989784086198964;  // std dev = 0,031, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4495690721114558;  // std dev = 0,263, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.11558734419374617;  // std dev = 0,000807, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.16271911570907788;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.16288332161477126;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25932481838117327;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.1673123335695613;  // std dev = 0,530, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.007823540214361725;  // std dev = 0,757, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3379833554849722;  // std dev = 0,205, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.13770936532026237;  // std dev = 0,035, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18059112890139672;  // std dev = 0,045, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.12803182161611254;  // std dev = 0,596, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.04217404731095564;  // std dev = 1,119, 28,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(C, D) )
%   | then return 0.1840122930934246;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.26037131808755754;  // std dev = 0,204, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1270088375542552;  // std dev = 0,047, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.0829552036859799;  // std dev = 0,670, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.01867823791176024;  // std dev = 0,671, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15797019743089713;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(G, H), location(A, I) )
%   | | | then return 0.10361813663265891;  // std dev = 0,769, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return -0.02697488498633443;  // std dev = 0,723, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.13273669493000206;  // std dev = 0,323, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.12071695791270115;  // std dev = 0,025, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.05626725087676753;  // std dev = 0,217, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.11375926563840935;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.19949496303819791;  // std dev = 0,125, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14494919357549949;  // std dev = 0,076, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.15914822841526802;  // std dev = 0,349, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.03204561099013053;  // std dev = 0,843, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */


Results
   AUC ROC   = 0.890091
   AUC PR    = 0.196291
   CLL	      = -0.472749
   Precision = 0.038462 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.074074


Total learning time: 2.679 seconds
Total inference time: 4.267 seconds
AUC ROC: 0.890091


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.185753
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.912 seconds
Refined model CLL: -0.185753


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.890091
   AUC PR    = 0.196291
   CLL	      = -0.472749
   Precision = 0.038462 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.074074


Total learning time: 6.238 seconds
Total inference time: 4.267 seconds
AUC ROC: 0.890091
Total revision time: 6.238
Best scored revision CLL: -0.185753


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 04:29:35
{'CLL': -0.472749, 'AUC ROC': 0.890091, 'F1': 0.074074, 'Recall': 1.0, 'Precision': [0.038462, 0.5], 'Inference time': 4.267, 'Learning time': 6.238, 'AUC PR': 0.196291, 'parameter_20': {'CLL': -0.376094, 'AUC ROC': 0.894188, 'F1': 0.079581, 'Recall': 0.883721, 'Precision': [0.041667, 0.5], 'Inference time': 3.926, 'Learning time': 1.78, 'AUC PR': 0.080358}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, F), phenotype(F, G) )
%   | | then if ( enzyme(A, H), complex(E, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(E, J), interaction(F, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, F), phenotype(F, G) )
%   | | then if ( enzyme(A, H), complex(E, I) )
%   | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(E, J), interaction(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.12543301544918353;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( interaction(H, H), interaction(G, H) )
%   | | then if ( complex(G, I), enzyme(A, J) )
%   | | | then return -0.15177773435568745;  // std dev = 0,079, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.4885571864016709;  // std dev = 1,055, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( enzyme(H, K) )
%   | | | then return -0.23794429004952677;  // std dev = 0,147, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.04833900467065107;  // std dev = 0,868, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, A), complex(C, E) )
%   | then return 0.5189433203589209;  // std dev = 0,248, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15711081942661112;  // std dev = 0,731, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return -0.16988841553189135;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then return 0.3427544836586661;  // std dev = 0,582, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1242287019530193;  // std dev = 1,463, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.31494378631201664;  // std dev = 0,825, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.35693270343067435;  // std dev = 0,112, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.10526670329812819;  // std dev = 0,032, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(F, E), enzyme(A, G) )
%   | | then return 0.3083710391502816;  // std dev = 0,588, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.2240628856481931;  // std dev = 0,113, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then return 0.3108449299355942;  // std dev = 0,763, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.037062029088602184;  // std dev = 0,904, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.20399251131519783;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.280096361298698;  // std dev = 0,097, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09577148846107535;  // std dev = 0,029, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.4477503441326508;  // std dev = 0,234, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1423467585932412;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.199312682834087;  // std dev = 0,761, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.009804110870706095;  // std dev = 0,888, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.11052151710739391;  // std dev = 0,734, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( complex(C, D), enzyme(A, E) )
%   | then return 0.2832874137244801;  // std dev = 0,243, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1463732532992797;  // std dev = 0,173, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( phenotype(A, H), enzyme(A, I) )
%   | | then return 0.001851796011666379;  // std dev = 0,299, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3427206076224243;  // std dev = 0,219, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3277516908229538;  // std dev = 0,241, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11636933820895486;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.13611405544878835;  // std dev = 0,389, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.05089210035089566;  // std dev = 1,133, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(D, E) )
%   | then if ( complex(D, F), interaction(G, D) )
%   | | then if ( complex(G, F), location(G, H) )
%   | | | then return 0.14265264551472723;  // std dev = 1,030, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return -0.10941722686290138;  // std dev = 0,309, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.12569616000768885;  // std dev = 0,138, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.29811891048573863;  // std dev = 0,199, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.14987937191814754;  // std dev = 0,747, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1713824255200535;  // std dev = 0,070, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.08071687704633466;  // std dev = 0,035, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G), interaction(F, E) )
%   | | then return 0.14390997651159113;  // std dev = 0,435, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1725620382939152;  // std dev = 0,090, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then return 0.1284025561958241;  // std dev = 0,435, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.026502834261525093;  // std dev = 0,884, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.09819517171411463;  // std dev = 0,746, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.14845892290830118;  // std dev = 0,062, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07494168135449282;  // std dev = 0,033, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.22252265457818135;  // std dev = 0,156, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.11585444229923476;  // std dev = 0,033, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.10326526684965334;  // std dev = 0,590, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.0015919686309684572;  // std dev = 0,870, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.12085302567530454;  // std dev = 0,661, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.768316
   AUC PR    = 0.216913
   CLL	      = -0.375673
   Precision = 0.019051 at threshold = 0.5
   Recall    = 0.639535
   F1        = 0.037


Total learning time: 8.629 seconds
Total inference time: 3.053 seconds
AUC ROC: 0.768316


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 04:29:47
{'CLL': -0.375673, 'AUC ROC': 0.768316, 'F1': 0.037, 'Recall': 0.639535, 'Precision': [0.019051, 0.5], 'Inference time': 3.053, 'Learning time': 8.629, 'AUC PR': 0.216913}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(G, C), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( interaction(I, I), phenotype(I, J) )
%   | | then if ( enzyme(A, K), complex(H, L) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(H, M), interaction(I, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.649797
   AUC PR    = 0.014939
   CLL	      = -0.213897
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.041 seconds
Total inference time: 1.748 seconds
AUC ROC: 0.649797


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 04:29:51
{'CLL': -0.213897, 'AUC ROC': 0.649797, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 1.748, 'Learning time': 2.041, 'AUC PR': 0.014939}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
0;false,false;follows(G, A).;true;true
0;true;follows(A, D), follows(D, C).;true;false
0;false,true;follows(A, F), follows(E, F).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;true,true;follows(D, A), recursion_accounttype(D, B).;false;false
0;false,false,false;follows(A, I), tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true,true;follows(E, G), follows(G, A).;false;false
1;true;tweets(A, D), tweets(C, D).;false;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
2;true,true,false;tweets(C, F), tweets(A, F).;false;false
2;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
2;true;follows(C, D), follows(D, E).;true;false
2;false,true;follows(G, H), recursion_accounttype(H, B).;false;false
2;false;follows(A, G), follows(G, A).;true;true
2;true,true;follows(A, D), follows(E, A).;false;true
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J), follows(J, I).;false;false
3;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
3;false,true,true;follows(F, H), follows(H, A).;false;false
3;true;tweets(A, D), follows(A, E).;false;false
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false;follows(F, A).;true;true
3;false,false,false;follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A).;true;true
4;true,true,false;recursion_accounttype(C, B).;false;false
4;false,false;follows(A, G), follows(G, H).;true;true
4;false,false,true;recursion_accounttype(H, B).;false;false
4;true;follows(C, D), recursion_accounttype(D, B).;true;false
4;false;follows(A, F), recursion_accounttype(F, B).;false;true
4;true,true;tweets(C, E), follows(D, C).;false;true
4;false,false,false;follows(A, I).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;true;follows(D, C), recursion_accounttype(D, B).;false;false
5;false,true;follows(E, F), follows(F, A).;false;true
5;false;follows(E, A).;true;true
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false;follows(I, A).;false;true
6;true,false;follows(A, F), follows(F, C).;true;false
6;true;follows(D, A), follows(E, D).;false;true
6;false,true;tweets(G, H).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;true,false,true;follows(C, F).;false;false
6;false,false,false;follows(A, J), follows(J, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true,true;follows(E, A), follows(A, C).;false;false
7;false,false;follows(A, G), tweets(A, H).;true;true
7;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
7;true;tweets(A, D), tweets(C, D).;true;false
7;false;follows(F, A).;false;true
7;true,true;follows(E, C), follows(C, E).;true;false
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false;follows(A, H), follows(H, I).;true;true
8;true,false;follows(A, C), tweets(A, E).;false;true
8;true;follows(C, D), follows(A, D).;false;true
8;false;follows(G, A).;false;true
8;false,false,false;tweets(A, J).;false;false
8;true,false,false;follows(A, F).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true,false;follows(D, A), tweets(D, F).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;true;follows(C, D), follows(D, E).;true;false
9;false;follows(A, G), follows(G, A).;false;true
9;true,true;follows(D, A), follows(A, D).;false;true
9;false,false,false;follows(J, A), recursion_accounttype(J, B).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24276431971489698;  // std dev = 3,038, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7993356029405796;  // std dev = 0,130, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.7993356029405795;  // std dev = 0,160, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.17404366681621208;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.29701438684128156;  // std dev = 0,597, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, F), enzyme(A, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.535568683914537;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.535568683914537;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.15042401037026362;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.22744946903810384;  // std dev = 2,378, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.2470189847363179;  // std dev = 0,578, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.5729367813638029;  // std dev = 0,278, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.572936781363803;  // std dev = 0,340, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.16943959048189028;  // std dev = 0,105, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0.20000029290470922;  // std dev = 0,563, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.2906909495314636;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4537634619284664;  // std dev = 0,338, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.14697580627204745;  // std dev = 0,093, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15871499641082915;  // std dev = 0,552, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2609198080873445;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.051045106008493706;  // std dev = 1,047, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3347290041147353;  // std dev = 0,263, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.13581490892520748;  // std dev = 0,038, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5097743556193916;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.2613232227950942;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.18064615763472025;  // std dev = 0,047, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.06118146589739873;  // std dev = 1,411, 43,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.08518191031578114;  // std dev = 0,423, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, C), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(A, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.18501100753585986;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then return 0.053585822864474955;  // std dev = 1,394, 44,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.22877455105552846;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3645073377424545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, C), enzyme(A, E) )
%   | | then return 0.15872168339432213;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A) )
%   | then return 0.04547535956153555;  // std dev = 1,379, 44,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04698021757252603;  // std dev = 0,336, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(D, A), interaction(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, A), enzyme(D, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12715819832146447;  // std dev = 0,016, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.007787155465992448;  // std dev = 0,427, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2486835722102622;  // std dev = 0,126, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.15731388174522956;  // std dev = 0,052, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06433251093535529;  // std dev = 1,102, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */


Results
   AUC ROC   = 0.981801
   AUC PR    = 0.244614
   CLL	      = -0.245442
   Precision = 0.056055 at threshold = 0.5
   Recall    = 0.94186
   F1        = 0.105813


Total learning time: 1.9 seconds
Total inference time: 4.163 seconds
AUC ROC: 0.981801


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.205357
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.932 seconds
Parameter learned model CLL: -0.205357


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(A, D), interaction(D, C)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, I), enzyme(A, J)'}, {'false,false,true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 4], 'false,false,false,true': [0.0, 1, 0], 'false,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1], 'false,false,true,false': [3.038, 24, 15], 'true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)'}, {'false,true,true,true': [0.13, 0, 8], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,false': [0.0, 24, 0], 'false,false,true,false': [0.597, 1, 1], 'true,true': [0.0, 0, 3], 'false,true,true,false': [0.16, 0, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'enzyme(C, F), enzyme(A, F)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false,false,false': 'interaction(J, A)'}, {'false,false,true': [1.05e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,false,false,true': [2.378, 18, 15], 'false,true,true': [0.0, 0, 4], 'true,true,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.578, 1, 1], 'true,true,false,true': [0.0, 0, 1], 'false,true,false': [0.0, 6, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'true': 'enzyme(A, D), interaction(A, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, J)'}, {'false,true,true,true': [0.278, 0, 8], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.563, 1, 1], 'false,true,false': [0.105, 24, 0], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.34, 0, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true,false': 'recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true,true': 'enzyme(C, E), interaction(D, C)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.093, 24, 0], 'true,true,false,false': [0.338, 0, 18], 'true,true,true': [0.037, 0, 3], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 3], 'false,false,true,false': [0.552, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false': 'interaction(E, A)'}, {'false,true,false,false': [0.038, 11, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true': [1.047, 13, 8], 'false,true,false,true': [0.263, 0, 12], 'false,false,true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(H, A)', 'true': 'interaction(D, A), interaction(E, D)', 'false,true': 'enzyme(F, G)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'false,false,true': [1.411, 24, 19], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.423, 1, 1], 'false,true,true': [0.0, 0, 3], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.047, 0, 2], 'false,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'false,false': 'interaction(A, G), enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'true,true,true': 'interaction(E, A), interaction(A, C)', 'false': 'interaction(F, A)', 'true,true': 'interaction(E, C), interaction(C, E)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,false': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'true,true,true,true': [0.0, 0, 0], 'false,true': [1.394, 24, 20], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'true,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true,false': 'interaction(A, C), enzyme(A, E)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(G, A)', 'true,false,false': 'interaction(A, F)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 1], 'false,true': [1.379, 24, 20], 'true,false,false,false': [0.0, 0, 2], 'true,false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,false,true,false': [0.336, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true,false': 'interaction(D, A), enzyme(D, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false': 'interaction(A, G), interaction(G, A)', 'true,true': 'interaction(D, A), interaction(A, D)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'false,false,true,true': [0.126, 0, 6], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'true,true,false,false': [0.016, 0, 2], 'true,true,true': [0.0, 0, 0], 'false,true': [0.427, 6, 4], 'true,true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.102, 12, 11], 'false,false,true,false': [0.052, 7, 0]}]]
[{'': [0.0, 0.2481096408317578], 'false,false,true': [0.0, 0.2366863905325439], 'false,false': [0.24661979448350413, 0.25], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false': [0.0, 0.24691358024691334], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.23341380673810766], 'false,false,true': [nan, 0.178471628116294], 'false,false': [0.178471628116294, nan], 'false,true,true': [0.0021259898360449503, 0.0021259898360449134], 'true': [0.0, 0.0], 'false,true': [0.0021259898360450613, -1.3877787807814457e-17], 'false': [0.2358755828491775, 0.178471628116294]}, {'': [9.798775429670226e-05, 0.15726104044072733], 'true,true,false': [0.0, 0.0], 'false,false': [3.700743415417188e-17, 0.17112629991176373], 'true': [9.798775429670226e-05, nan], 'false,true': [0.0, 0.0], 'false': [0.1129406343869088, 0.16538206754150647], 'true,true': [nan, 9.798775429670226e-05], 'false,false,false': [0.17134603972822332, 0.16713951076378458]}, {'': [0.0, 0.14206379532468572], 'false,false': [nan, 0.15853372029163282], 'false,true,true': [0.009628150743130226, 0.009628150743130134], 'true': [0.0, 0.0], 'false,true': [0.009628150743130216, 0.0004624276038979284], 'false': [0.14127065154522866, 0.15853372029163282], 'false,false,false': [0.15853372029163282, nan]}, {'': [0.0841181115678305, 0.15255173087857024], 'false,false,true': [nan, 0.15255173087857024], 'false,false': [0.15255173087857024, nan], 'true,true,false': [0.0, 0.006342708214760339], 'true': [0.008980133198940865, 0.00036385548039086685], 'false': [nan, 0.15255173087857024], 'true,true': [0.0004506271472160169, 0.007604288534176992]}, {'': [6.193970509119073e-06, 0.060363532516204195], 'false,false,true': [0.0, 0.0], 'false,false': [0.148647868859171, nan], 'false,true,false': [0.005767382360763074, 0.00012884765871259973], 'true': [0.0, 0.0], 'false,true': [0.05223250525252933, 0.05831894852605883], 'false': [0.05627197523956158, 0.148647868859171]}, {'': [0.0010998136540382175, 0.04648628707412191], 'false,false': [0.04627702641955129, 0.08956570740118659], 'true': [0.0010998136540382175, nan], 'false,true': [0.0, nan], 'false': [0.0, 0.04822543092469856], 'false,false,false': [0.08956570740118659, nan]}, {'': [1.1744899729729252e-05, 0.04605350158025356], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.0], 'true,true,true': [nan, 0.0], 'true': [1.3919881161159053e-05, 0.0], 'false': [0.04413816447656784, 0.08799584989392555], 'true,true': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [6.70019912345568e-06, 0.04378441141662821], 'false,false,true': [nan, 0.05659835390751521], 'false,false': [0.05659835390751521, nan], 'true,false': [0.0, 0.0], 'true': [0.0, 7.940976738909922e-06], 'false': [0.04320186102445759, 0.05659835390751521], 'true,false,false': [nan, 0.0]}, {'': [0.00013221575773609065, 0.04171522299855412], 'false,false,true': [0.002633137310127348, 0.00039293913220202003], 'false,false': [0.04239152272893884, 0.04889695558249556], 'true,true,false': [nan, 0.00013221575773609065], 'true': [0.00013221575773609065, nan], 'false': [0.01827513862986472, 0.047028593100702676], 'true,true': [nan, 0.00013221575773609065], 'false,false,false': [0.0, 0.05276050167494166]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
0;false,false;interaction(G, A).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,false,false;interaction(A, I), enzyme(A, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;enzyme(A, D), enzyme(C, D).;true;true
1;false;interaction(E, A).;true;true
1;false,true,true;interaction(E, G), interaction(G, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;enzyme(C, F), enzyme(A, F).;true;true
2;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
2;false;interaction(A, G), interaction(G, A).;true;true
2;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;enzyme(A, D), interaction(A, E).;true;true
3;false;interaction(F, A).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
4;true,true,false;recursion_proteinclass(C, B).;true;true
4;true,true;enzyme(C, E), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false;interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;enzyme(A, D), enzyme(C, D).;true;true
7;false,false;interaction(A, G), enzyme(A, H).;true;true
7;false;interaction(F, A).;true;true
7;true,true;interaction(E, C), interaction(C, E).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(A, C), enzyme(A, E).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
9;false,false;interaction(A, H).;true;true
9;false;interaction(A, G), interaction(G, A).;true;true
9;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24276431971489698;  // std dev = 3,038, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( interaction(A, G), enzyme(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7993356029405796;  // std dev = 0,130, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.7993356029405795;  // std dev = 0,160, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.17404366681621208;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.29701438684128156;  // std dev = 0,597, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), enzyme(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.535568683914537;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.535568683914537;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.15042401037026362;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.4037904260953422;  // std dev = 1,358, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.1371471884602591;  // std dev = 1,894, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.4952981594333395;  // std dev = 0,226, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5926258842674546;  // std dev = 0,309, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.14892686111445222;  // std dev = 0,078, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.1769576662136613;  // std dev = 0,063, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0.2214916088842488;  // std dev = 0,570, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(C, E), interaction(D, C) )
%   | | then return 0.29464279603959537;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.44452389223365707;  // std dev = 0,325, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then return -0.1160242695449926;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.1828148017160848;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14590941491821283;  // std dev = 0,005, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return 0.17728400161632865;  // std dev = 0,557, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2601584517178508;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.04446192101688006;  // std dev = 0,404, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.12196367792521971;  // std dev = 0,886, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.32696895148415306;  // std dev = 0,233, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.13176218046977076;  // std dev = 0,047, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.5272015857933522;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.24807343051448008;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.186528344609747;  // std dev = 0,038, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.26189281306796697;  // std dev = 0,153, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1332057654281487;  // std dev = 0,069, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, G), interaction(H, A) )
%   | | | then return -0.011496345716315755;  // std dev = 0,538, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.05710217861263958;  // std dev = 1,029, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, C), interaction(C, E) )
%   | | then return 0.1836469193675061;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return 0.09618774187389954;  // std dev = 1,021, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return -0.07276043534091489;  // std dev = 0,481, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return 0.13625861155962757;  // std dev = 0,320, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then return -0.2141843498567515;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.38334132600590043;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15439426147735405;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.1723082336324122;  // std dev = 0,115, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.22785683609909313;  // std dev = 0,059, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11905262701782642;  // std dev = 0,052, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3090781266891968;  // std dev = 0,110, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12375734092949586;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.07424812813925914;  // std dev = 0,457, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.06981361326559622;  // std dev = 0,564, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1229567204264041;  // std dev = 0,022, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.03984626971530186;  // std dev = 0,242, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.041956902514261554;  // std dev = 0,245, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.21469520584822233;  // std dev = 0,157, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12323846035579349;  // std dev = 0,057, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.13381561776825557;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.047490956134432355;  // std dev = 0,888, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */


Results
   AUC ROC   = 0.987844
   AUC PR    = 0.340624
   CLL	      = -0.250047
   Precision = 0.111851 at threshold = 0.5
   Recall    = 0.976744
   F1        = 0.200717


Total learning time: 3.309 seconds
Total inference time: 4.814 seconds
AUC ROC: 0.987844


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.165975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.876 seconds
Refined model CLL: -0.165975


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987844
   AUC PR    = 0.340624
   CLL	      = -0.250047
   Precision = 0.111851 at threshold = 0.5
   Recall    = 0.976744
   F1        = 0.200717


Total learning time: 7.017 seconds
Total inference time: 4.814 seconds
AUC ROC: 0.987844
Total revision time: 7.017
Best scored revision CLL: -0.165975


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 04:30:08
{'CLL': -0.250047, 'AUC ROC': 0.987844, 'F1': 0.200717, 'Recall': 0.976744, 'parameter_25': {'CLL': -0.245442, 'AUC ROC': 0.981801, 'F1': 0.105813, 'Recall': 0.94186, 'Precision': [0.056055, 0.5], 'Inference time': 4.163, 'Learning time': 1.9, 'AUC PR': 0.244614}, 'Precision': [0.111851, 0.5], 'Inference time': 4.814, 'Learning time': 7.017, 'AUC PR': 0.340624}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.12543301544918353;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(A, E) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, F), location(C, F) )
%   | | then return 0.4620635660131665;  // std dev = 0,752, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, G) )
%   | then if ( phenotype(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3328054984329875;  // std dev = 0,771, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return 0.008105312415790936;  // std dev = 0,275, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.04833900467065107;  // std dev = 0,868, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2692166589149027;  // std dev = 0,874, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.43320143393637134;  // std dev = 0,093, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.11773559764967674;  // std dev = 0,056, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.4867765501890019;  // std dev = 0,124, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.08218665057783558;  // std dev = 1,170, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.11440852194456044;  // std dev = 0,033, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.12858881813602382;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E) )
%   | then if ( enzyme(E, F) )
%   | | then return 0.31947073442095597;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.03409368674962413;  // std dev = 0,432, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.32008884444203567;  // std dev = 0,219, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.3458980483451052;  // std dev = 0,066, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.10609916695496502;  // std dev = 0,051, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), interaction(K, K) )
%   | | | then return 0.06111062763971675;  // std dev = 0,648, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.12448026791398237;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.21705059242623684;  // std dev = 0,801, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05279961087868655;  // std dev = 0,698, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2675912265481474;  // std dev = 0,090, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.09648963593633592;  // std dev = 0,047, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.45335384319190686;  // std dev = 0,483, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.16083711883033572;  // std dev = 0,167, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.34804120982110365;  // std dev = 0,113, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10704610313916678;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return -0.08070867719832023;  // std dev = 0,541, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.03042275600732669;  // std dev = 0,401, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(A, E) )
%   | then return 0.21439077494953468;  // std dev = 0,059, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F) )
%   | | then return -0.05113669685243701;  // std dev = 0,299, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.20580201809513166;  // std dev = 0,471, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then return 0.12780548483002133;  // std dev = 0,388, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then return 0.11882410327822189;  // std dev = 0,741, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, I), enzyme(A, J) )
%   | | | then return 0.12606724638315053;  // std dev = 0,490, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.031005095960155837;  // std dev = 0,727, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1967400012687199;  // std dev = 0,093, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.09435359201301757;  // std dev = 0,044, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.25686835874153285;  // std dev = 0,260, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.02389499227090978;  // std dev = 0,930, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.10136649978208846;  // std dev = 0,060, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.11273181195483394;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.16758817184276134;  // std dev = 0,082, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.08662095626434525;  // std dev = 0,041, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.3172706657382528;  // std dev = 0,473, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1411482057677619;  // std dev = 0,168, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2034901047515485;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10678405593005885;  // std dev = 0,031, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return -0.11879257696587231;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.020560083874265698;  // std dev = 0,574, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1455594355024281;  // std dev = 0,073, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.08003021994916447;  // std dev = 0,038, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.2648913434786869;  // std dev = 0,429, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.12557116590620826;  // std dev = 0,152, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.17280487015108403;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09282561922479433;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.02003735602240588;  // std dev = 0,314, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06522910441107496;  // std dev = 0,492, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */


Results
   AUC ROC   = 0.947733
   AUC PR    = 0.340039
   CLL	      = -0.225826
   Precision = 0.054988 at threshold = 0.5
   Recall    = 0.813953
   F1        = 0.103017


Total learning time: 12.975 seconds
Total inference time: 8.423 seconds
AUC ROC: 0.947733


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 04:30:29
{'CLL': -0.225826, 'AUC ROC': 0.947733, 'F1': 0.103017, 'Recall': 0.813953, 'Precision': [0.054988, 0.5], 'Inference time': 8.423, 'Learning time': 12.975, 'AUC PR': 0.340039}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.921421
   AUC PR    = 0.053769
   CLL	      = -0.16636
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.561 seconds
Total inference time: 2.989 seconds
AUC ROC: 0.921421


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 04:30:36
{'CLL': -0.16636, 'AUC ROC': 0.921421, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 2.989, 'Learning time': 3.561, 'AUC PR': 0.053769}


