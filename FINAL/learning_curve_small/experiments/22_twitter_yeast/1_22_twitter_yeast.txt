Starting experiment #1 for 22_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.852231775336196;  // std dev = 0,077, 169,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=168 */
%   else if ( follows(D, A) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(A, D), tweets(A, F) )
%   | | | then return -0.10685106490048797;  // std dev = 2,599, 200,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=7 */
%   | | | else return -0.1418510649004877;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( follows(G, D), tweets(D, H) )
%   | | | then return 0.10814893509951139;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=41 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( recursion_accounttype(J, B) )
%   | | | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.13185106490048765;  // std dev = 0,995, 100,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=1 */
%   | | else if ( tweets(A, K), follows(A, L) )
%   | | | then return 0.17393840878372288;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.2411276585037677;  // std dev = 3,333, 47,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.7147489688007796;  // std dev = 0,077, 169,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=168 */
%   else if ( follows(D, A) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(D, F), recursion_accounttype(F, B) )
%   | | | then return 0.6488750116248894;  // std dev = 1,245, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.12822142502241102;  // std dev = 0,029, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
%   | | else if ( follows(D, G), recursion_accounttype(G, B) )
%   | | | then return 0.797955809928779;  // std dev = 1,381, 43,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.15223525546442468;  // std dev = 0,114, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.7525265950103166;  // std dev = 0,299, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.13875779886730777;  // std dev = 0,163, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.12155621537668658;  // std dev = 3,058, 62,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.10070128569555882;  // std dev = 3,187, 51,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.5404487845574262;  // std dev = 0,131, 171,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=168 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then if ( follows(A, E), tweets(A, F) )
%   | | | then return -0.0877484192933911;  // std dev = 2,329, 225,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=7 */
%   | | | else return -0.11345502768433917;  // std dev = 0,103, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( follows(D, G), recursion_accounttype(G, B) )
%   | | | then return 0.6858838380879186;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.13533685846764637;  // std dev = 0,064, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.6492127080876671;  // std dev = 0,729, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.1364443635948038;  // std dev = 0,269, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.10556505480120332;  // std dev = 1,408, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.061252783142304694;  // std dev = 2,291, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.42374228543316445;  // std dev = 3,72e-07, 130,000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return 0.521285013518349;  // std dev = 0,100, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( follows(A, E), follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( tweets(A, G), tweets(E, H) )
%   | | | then return 0.5852942295177378;  // std dev = 0,620, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.4211215328440061;  // std dev = 0,589, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.11062032481962548;  // std dev = 0,128, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.42374228543316506;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3802640245635999;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else if ( follows(K, A) )
%   | | | then return -0.09002217977771343;  // std dev = 0,924, 77,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=2 */
%   | | | else return 0.05962539798614345;  // std dev = 4,515, 198,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=55 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.3097861184141926;  // std dev = 0,122, 132,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=130 */
%   | else return 0.39783429330378905;  // std dev = 0,100, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( follows(E, A), follows(A, F) )
%   | then if ( follows(G, E), recursion_accounttype(G, B) )
%   | | then if ( recursion_accounttype(E, B) )
%   | | | then return 0.31515312192098843;  // std dev = 0,058, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.4401806336212085;  // std dev = 0,979, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.09958812286644848;  // std dev = 0,448, 358,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=1 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.4191506725066365;  // std dev = 1,003, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.11548755923286644;  // std dev = 0,128, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.0344768573549902;  // std dev = 1,994, 78,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | | else return 0.12937091246152793;  // std dev = 3,376, 66,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(E, C) )
%   | then if ( recursion_accounttype(D, B), follows(C, D) )
%   | | then if ( follows(D, A), tweets(A, F) )
%   | | | then return 0.2460398293460921;  // std dev = 0,993, 67,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=66 */
%   | | | else return 0.1575169266183512;  // std dev = 1,640, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else return 0.2578815325511498;  // std dev = 0,063, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return 0.3224486734357646;  // std dev = 0,093, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( follows(G, A) )
%   | then return -0.049062239528408054;  // std dev = 0,149, 471,000 (wgt'ed) examples reached here.  /* #neg=423 #pos=48 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.29588058115191396;  // std dev = 1,128, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.09826746026186078;  // std dev = 0,673, 95,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=1 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.13071604736356066;  // std dev = 1,225, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.0952737129617312;  // std dev = 3,124, 53,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.20360394789786684;  // std dev = 0,122, 132,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=130 */
%   | else if ( follows(E, A), follows(A, E) )
%   | | then return 0.35870983709063087;  // std dev = 0,069, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.18188969061004018;  // std dev = 0,253, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then if ( tweets(A, G), follows(H, F) )
%   | | then if ( follows(H, A), recursion_accounttype(H, B) )
%   | | | then return 0.19831238755710773;  // std dev = 0,969, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.22864704873104066;  // std dev = 0,098, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.23329072820846022;  // std dev = 0,030, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( follows(I, A) )
%   | | then return -0.058651520347611244;  // std dev = 0,123, 467,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=30 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.006523533814129774;  // std dev = 2,994, 163,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
%   | | | else return 0.05963154095816725;  // std dev = 2,570, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), tweets(A, E) )
%   | then return 0.1591221256878757;  // std dev = 0,156, 120,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=117 */
%   | else return 0.20257084476527795;  // std dev = 0,133, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(G, A), follows(F, G) )
%   | | then if ( tweets(A, H), tweets(F, H) )
%   | | | then return 0.15978395829219863;  // std dev = 0,681, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3089345735321036;  // std dev = 0,241, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( follows(I, F), follows(F, I) )
%   | | | then return -0.05839986051808525;  // std dev = 1,619, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.2517211200496356;  // std dev = 0,355, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( follows(J, A) )
%   | | then return -0.053720604451192505;  // std dev = 0,127, 465,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=30 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return -0.004919704484001614;  // std dev = 1,900, 127,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=31 */
%   | | | else return 0.025887332325463367;  // std dev = 3,485, 81,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.15857434621315508;  // std dev = 0,078, 169,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=168 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.21280270119076422;  // std dev = 0,783, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.12938295987107395;  // std dev = 0,046, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( follows(D, G), recursion_accounttype(G, B) )
%   | | | then return 0.22795281019460664;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.20716630072892225;  // std dev = 1,042, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.4195143772378784;  // std dev = 0,649, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.08000843651773042;  // std dev = 0,130, 444,000 (wgt'ed) examples reached here.  /* #neg=444 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return -0.0022468969604179144;  // std dev = 1,892, 126,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=31 */
%   | | | else return 0.08203526246830889;  // std dev = 3,299, 65,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(A, E), recursion_accounttype(E, B) )
%   | | then return 0.13222598288951617;  // std dev = 0,136, 151,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=148 */
%   | | else return 0.21927688800625494;  // std dev = 0,142, 69,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=68 */
%   | else return -0.07446287221014151;  // std dev = 0,116, 430,000 (wgt'ed) examples reached here.  /* #neg=430 */
%   else if ( follows(A, F) )
%   | then if ( follows(G, F), recursion_accounttype(G, B) )
%   | | then if ( follows(F, H) )
%   | | | then return 0.22511289704355095;  // std dev = 1,179, 44,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return 0.530339785998103;  // std dev = 0,276, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.12164034621907084;  // std dev = 0,049, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.5619196513346945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2422761293652776;  // std dev = 1,29e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.2201274951933476;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(G, D), enzyme(D, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.17626634551589415;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.17190784947654802;  // std dev = 0,066, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1776086421281296;  // std dev = 0,903, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6209436491414324;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1491080889089851;  // std dev = 0,058, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.17646132701334813;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.25157620129290603;  // std dev = 0,929, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1704247807552556;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.2703611470901958;  // std dev = 0,779, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then return 0.09308806054424179;  // std dev = 0,909, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.07589154166157372;  // std dev = 0,897, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.06167365206729374;  // std dev = 0,888, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0500003057968221;  // std dev = 0,882, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.35889044799199654;  // std dev = 0,152, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.21427616840144204;  // std dev = 0,131, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.874018
   AUC PR    = 0.082666
   CLL	      = -0.309338
   Precision = 0.104863 at threshold = 0.5
   Recall    = 0.793103
   F1        = 0.185235


Total learning time: 1.259 seconds
Total inference time: 11.069 seconds
AUC ROC: 0.874018


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.248307
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.701 seconds
Parameter learned model CLL: -0.248307


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,false': 'enzyme(A, K), interaction(A, L)', 'false,true,false': 'interaction(G, D), enzyme(D, H)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false': 'interaction(D, A)'}, {'false,true,false,false': [0.816, 1, 2], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [1.095, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,true,false,false': [0.066, 2, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [3.73e-09, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.058, 2, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.903, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, D), interaction(D, A)', 'false,false,false': 'interaction(G, A)'}, {'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.929, 3, 4], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 2, 0], 'false,true,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,true': 'interaction(F, D), recursion_proteinclass(F, B)', 'false': 'interaction(D, A), interaction(A, E)', 'false,false,false': 'interaction(I, A)'}, {'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.779, 2, 4], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.044, 3, 0], 'false,true,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, E), interaction(E, F)', 'false': 'interaction(D, A)', 'false,false,false': 'enzyme(A, G), interaction(A, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.909, 5, 4], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, F)'}, {'false,false,false,true': [0.0, 0, 1], 'false,false,true': [0.897, 5, 4], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, F), interaction(F, G)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.888, 5, 4], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.882, 5, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.152, 0, 4], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.131, 5, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1]}]]
[{'': [nan, 0.24999999999999986], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,true': [0.24000000000000005, 0.25], 'false,true,false': [0.0, 0.22222222222222224], 'false,true,true': [nan, 0.24000000000000005], 'false': [0.2469135802469134, 0.0]}, {'': [nan, 0.23183536983060193], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,true': [0.24000000000000005, 0.22838751700463134], 'false,true,false': [0.0, 0.0021588299716128953], 'false,true,true': [0.0, 4.625929269271485e-18], 'false': [0.23646397604472227, 0.0]}, {'': [nan, 0.15307439901244474], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true': [0.16307534517054595, 0.14909947493485062], 'false,true,false': [0.0, 0.00170911023246682], 'false,true,true': [nan, 0.16307534517054595], 'false': [0.15770334249120344, 0.0]}, {'': [nan, 0.12088097727674567], 'false,false': [nan, 0.11082057756048509], 'false,true': [nan, 0.0], 'false,false,false': [0.12321018676152694, 0.0], 'false': [0.0, 0.11082057756048509]}, {'': [nan, 0.10316653347342382], 'false,false': [nan, 0.08689247295108211], 'false,true': [nan, 0.0006597843758624489], 'false,false,false': [0.10101238134804325, 0.0], 'false': [0.0006597843758624489, 0.08689247295108211]}, {'': [nan, 0.08501982734587481], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false': [0.09183934662247044, 0.0]}, {'': [nan, 0.08207556074062843], 'false,false': [0.08940305223622476, 0.0], 'false,false,false': [0.0, nan], 'false': [nan, 0.08207556074062843]}, {'': [nan, 0.0801111231160111], 'false,false': [0.08768011568734974, 0.0], 'false,false,false': [nan, 0.0], 'false': [nan, 0.08011112311601108]}, {'': [nan, 0.07876313438195479], 'false,false': [0.08645897000387001, 0.0], 'false,false,true': [nan, 0.08645897000387001], 'false,false,false': [nan, 0.0], 'false': [nan, 0.0787631343819548]}, {'': [0.08558894751432931, 0.0], 'true,true': [nan, 0.005770148432911543], 'true': [0.005770148432911543, 0.0034351111581732486], 'false,true': [0.0, nan], 'false,true,true': [nan, 0.0], 'false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
0;true,false;interaction(G, D), enzyme(D, H).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;true;interaction(E, D), interaction(E, A).;true;true
1;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true;interaction(D, E), interaction(E, A).;true;true
2;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, D), interaction(D, A).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- interaction(D, A), interaction(A, E).;true;true
4;false;interaction(I, A).;true;true
5;;proteinclass(A, B) :- interaction(D, A).;true;true
6;;proteinclass(A, B) :- interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(E, C), enzyme(C, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.8237336544841058;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.17626634551589415;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.7816289395752953;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.17190784947654802;  // std dev = 0,066, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1776086421281296;  // std dev = 0,903, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.6209436491414324;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1491080889089851;  // std dev = 0,058, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.17646132701334813;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.4094530316714657;  // std dev = 0,597, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.04107376078815978;  // std dev = 0,523, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then return -0.1596235856199095;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(E, A) )
%   | then return 0.26239306820163155;  // std dev = 0,743, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.01960821133424637;  // std dev = 0,653, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.2361954501798841;  // std dev = 0,479, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D) )
%   | then return -0.1519184783546634;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.18603932870266415;  // std dev = 0,681, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D) )
%   | then return -0.13343600293472824;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.14756410749154866;  // std dev = 0,668, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D) )
%   | then return -0.1187999377899333;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.11739869096491566;  // std dev = 0,662, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D) )
%   | then return -0.10695459096972436;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.0937404737858879;  // std dev = 0,660, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.771816
   AUC PR    = 0.023903
   CLL	      = -0.443281
   Precision = 0.049289 at threshold = 0.5
   Recall    = 0.597701
   F1        = 0.091068


Total learning time: 1.416 seconds
Total inference time: 5.176 seconds
AUC ROC: 0.771816


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.238317
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.731 seconds
Refined model CLL: -0.238317


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.771816
   AUC PR    = 0.023903
   CLL	      = -0.443281
   Precision = 0.049289 at threshold = 0.5
   Recall    = 0.597701
   F1        = 0.091068


Total learning time: 4.107 seconds
Total inference time: 5.176 seconds
AUC ROC: 0.771816
Total revision time: 4.107
Best scored revision CLL: -0.238317


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:31:46
{'Inference time': 5.176, 'AUC ROC': 0.771816, 'parameter_5': {'Inference time': 11.069, 'AUC ROC': 0.874018, 'F1': 0.185235, 'Learning time': 1.259, 'Precision': [0.104863, 0.5], 'CLL': -0.309338, 'AUC PR': 0.082666, 'Recall': 0.793103}, 'F1': 0.091068, 'Learning time': 4.107, 'Precision': [0.049289, 0.5], 'CLL': -0.443281, 'AUC PR': 0.023903, 'Recall': 0.597701}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( phenotype(A, E) )
%   | then return 0.32639939340314744;  // std dev = 0,817, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.10101742326814867;  // std dev = 0,538, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.09856506329190752;  // std dev = 0,974, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.2841070215771487;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3360975806227285;  // std dev = 0,277, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.2452115555506605;  // std dev = 0,335, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.2418131965458258;  // std dev = 0,452, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.27297139465619924;  // std dev = 0,251, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.20834419528050785;  // std dev = 0,294, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.20138529071143585;  // std dev = 0,424, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.22707234757245862;  // std dev = 0,225, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.17977498701487074;  // std dev = 0,259, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.16805875731134776;  // std dev = 0,402, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then return -0.07432354237146932;  // std dev = 0,076, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( phenotype(A, E) )
%   | then return 0.14317645902247517;  // std dev = 0,556, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.007235413011630415;  // std dev = 0,314, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.620864
   AUC PR    = 0.027597
   CLL	      = -0.723526
   Precision = 0.013501 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.026466


Total learning time: 2.206 seconds
Total inference time: 6.382 seconds
AUC ROC: 0.620864


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:31:54
{'Inference time': 6.382, 'AUC ROC': 0.620864, 'F1': 0.026466, 'Learning time': 2.206, 'Precision': [0.013501, 0.5], 'CLL': -0.723526, 'AUC PR': 0.027597, 'Recall': 0.666667}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.500058
   AUC PR    = 0.007468
   CLL	      = -0.235929
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.912 seconds
Total inference time: 1.534 seconds
AUC ROC: 0.500058


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:31:57
{'Inference time': 1.534, 'AUC ROC': 0.500058, 'F1': nan, 'Learning time': 0.912, 'Precision': [nan, 0.5], 'CLL': -0.235929, 'AUC PR': 0.007468, 'Recall': 0.0}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(G, D), phenotype(D, H) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8195467402759845;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16945153548489067;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8051699719398716;  // std dev = 0,034, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18864213387871698;  // std dev = 0,034, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return -0.10800311218067424;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1962076882233316;  // std dev = 1,078, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6491318815992756;  // std dev = 0,050, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16148331760387555;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.15560861900796866;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A) )
%   | | | then return 0.24340485196868172;  // std dev = 1,299, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06517910168494666;  // std dev = 0,520, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.23967420779776216;  // std dev = 1,117, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then return 0.09278493213707086;  // std dev = 1,311, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.0752919416217521;  // std dev = 1,294, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then return 0.06090157472929757;  // std dev = 1,282, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04914714665453029;  // std dev = 1,274, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.36615471192090276;  // std dev = 0,161, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.22165452044202522;  // std dev = 0,217, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.864328
   AUC PR    = 0.090734
   CLL	      = -0.31684
   Precision = 0.083933 at threshold = 0.5
   Recall    = 0.804598
   F1        = 0.152009


Total learning time: 1.373 seconds
Total inference time: 11.044 seconds
AUC ROC: 0.864328


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.253676
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.808 seconds
Parameter learned model CLL: -0.253676


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(G, D), phenotype(D, H)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,false,false': 'phenotype(A, K), interaction(A, L)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true,false,true': [1.095, 2, 3], 'false,true,false,false': [1.095, 3, 2], 'true': [0.0, 0, 0], 'false,true,true,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'phenotype(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 3], 'false,false,false,false': [0.0, 0, 1], 'false,true,false,true': [0.034, 0, 5], 'false,true,false,false': [0.034, 5, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.049, 5, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false,true': [0.05, 0, 5], 'false,true,false,false': [0.03, 5, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [1.078, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(H, A)', 'false,false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,false,false,true': [1.299, 6, 8], 'true,false': [0.0, 0, 1], 'false,true,false': [0.071, 4, 0], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,false,false,true': [1.117, 4, 7], 'true,false': [0.0, 0, 1], 'false,true,false': [0.52, 6, 1], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, E), interaction(E, F)', 'false,false,true': 'recursion_proteinclass(F, B)', 'false': 'interaction(D, A)', 'false,false,false': 'phenotype(A, G), interaction(A, H)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true': [1.311, 10, 8], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H)', 'true,false': 'interaction(E, A), interaction(A, E)', 'false,false': 'interaction(G, A)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 0], 'false,false,true': [1.294, 10, 8], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)', 'false,true,false': 'interaction(F, D), interaction(D, F)', 'false,false': 'interaction(G, A)', 'false,true': 'interaction(E, A), interaction(D, E)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.282, 10, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false,false': 'interaction(G, A)', 'false,true': 'phenotype(A, E)', 'false,true,true': 'interaction(F, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.274, 10, 8], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.161, 0, 8], 'false,true,true,true': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.217, 10, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1]}]]
[{'': [nan, 0.25000000000000006], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [0.0, 0.0], 'false,true': [0.2343749999999999, 0.24999999999999992], 'false,true,false': [0.23999999999999994, 0.23999999999999994], 'false,true,true': [0.0, 0.24489795918367335], 'false': [0.2469135802469136, 0.0]}, {'': [nan, 0.236864968030806], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0], 'false,false': [0.0, 0.0], 'false,true': [0.22954890486979945, 0.24714536562429643], 'false,true,false': [0.00022974020640207372, 0.00022974020640206816], 'false,true,true': [-1.4802973661668753e-16, 0.00048415174493499633], 'false': [0.24214324007547283, 0.0]}, {'': [nan, 0.15711552975156257], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true': [0.15545129217034276, 0.16460980861521166], 'false,true,false': [0.0004909732831762881, 0.00018014335766466382], 'false,true,true': [0.0, 0.16609059323794315], 'false': [0.16235039731304515, 0.0]}, {'': [0.0, 0.11857983867533581], 'true': [nan, 0.0], 'false,false,false': [0.12052107797684251, 0.0], 'false,false': [nan, 0.1143725345950331], 'false,true': [nan, 0.001244564092042235], 'false': [0.001244564092042235, 0.1143725345950331]}, {'': [0.0, 0.10276329752490172], 'true': [nan, 0.0], 'false,false,false': [0.11334632135385819, 0.0], 'false,false': [nan, 0.10440244796970137], 'false,true': [nan, 0.03862790812409271], 'false': [0.03862790812409271, 0.10440244796970137]}, {'': [nan, 0.08824599570695778], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false': [0.09541414248211673, 0.0]}, {'': [0.0, 0.0890262188717135], 'false': [nan, 0.08902621887171351], 'false,false,false': [0.0, nan], 'true,false': [nan, 0.0], 'false,false': [0.09302048600538838, 0.0], 'true': [nan, 0.0]}, {'': [nan, 0.08342980559700901], 'false,true,false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [0.09134965798320772, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, 0.08721497427335584]}, {'': [nan, 0.08212855681412574], 'false,false,true': [nan, 0.0901807241535948], 'false,false,false': [nan, 0.0], 'false,false': [0.09018072415359481, 0.0], 'false,true': [0.0, nan], 'false,true,true': [nan, 0.0], 'false': [0.0, 0.08596949771664128]}, {'': [0.08935838047067485, 0.0], 'true,true': [nan, 0.003238793257639816], 'true': [0.003238793257639816, 0.004689741951727455], 'false,true': [0.0, nan], 'false,true,true': [0.0, 0.0], 'false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true,true;interaction(A, D), phenotype(A, F).;true;true
0;false;interaction(A, I), interaction(I, J).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;phenotype(A, H).;true;true
1;true;interaction(E, D), interaction(E, A).;true;true
1;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true,true;interaction(A, E), phenotype(A, F).;true;true
2;true;interaction(D, E), interaction(E, A).;true;true
2;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(H, A).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,false;interaction(J, A).;true;true
4;false;interaction(E, A), interaction(A, F).;true;true
5;;proteinclass(A, B) :- interaction(D, A).;true;true
5;false;interaction(A, E), interaction(E, F).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
7;false;interaction(G, A).;true;true
8;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(G, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;false;interaction(F, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, C), phenotype(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, J), interaction(J, K) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.8025751056621154;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.16208267708916585;  // std dev = 0,068, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.7422198280150732;  // std dev = 0,102, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14198458662441546;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( phenotype(A, G) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, D), phenotype(A, E) )
%   | | then return -0.10871506982021113;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1917912932605271;  // std dev = 0,396, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.5805891335774221;  // std dev = 0,138, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.12560026048439857;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.1451213967635523;  // std dev = 0,103, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.06936107126661369;  // std dev = 0,412, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2737393352496655;  // std dev = 1,085, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.12835898135420087;  // std dev = 0,093, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.05958674997922354;  // std dev = 0,404, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.24649261583054588;  // std dev = 0,531, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20230099250113828;  // std dev = 0,893, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(A, D) )
%   | then return -0.16650701945326313;  // std dev = 0,127, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.16277537587532614;  // std dev = 0,703, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.20756471483941352;  // std dev = 0,260, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then return 0.06920317252313837;  // std dev = 0,263, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then if ( complex(E, F) )
%   | | | then return -0.13412201667151946;  // std dev = 0,106, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.01495801251630639;  // std dev = 0,380, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.06071253680097938;  // std dev = 0,708, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.22647493745417183;  // std dev = 0,538, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.11124692912649553;  // std dev = 0,496, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.12117708427735192;  // std dev = 0,102, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.13377767916510008;  // std dev = 0,784, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D) )
%   | then if ( complex(A, E) )
%   | | then return -0.16087650523099425;  // std dev = 0,129, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.10446546381313988;  // std dev = 0,572, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, F) )
%   | | then return 0.023385460163560825;  // std dev = 0,325, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.05820607961175547;  // std dev = 0,662, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(G, H) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.814515
   AUC PR    = 0.029103
   CLL	      = -0.4729
   Precision = 0.05615 at threshold = 0.5
   Recall    = 0.724138
   F1        = 0.104218


Total learning time: 2.161 seconds
Total inference time: 7.024 seconds
AUC ROC: 0.814515


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.23639
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.727 seconds
Refined model CLL: -0.23639


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.814515
   AUC PR    = 0.029103
   CLL	      = -0.4729
   Precision = 0.05615 at threshold = 0.5
   Recall    = 0.724138
   F1        = 0.104218


Total learning time: 5.069000000000001 seconds
Total inference time: 7.024 seconds
AUC ROC: 0.814515
Total revision time: 5.069000000000001
Best scored revision CLL: -0.23639


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:32:21
{'Inference time': 7.024, 'AUC ROC': 0.814515, 'F1': 0.104218, 'Learning time': 5.069000000000001, 'parameter_10': {'Inference time': 11.044, 'AUC ROC': 0.864328, 'F1': 0.152009, 'Learning time': 1.373, 'Precision': [0.083933, 0.5], 'CLL': -0.31684, 'AUC PR': 0.090734, 'Recall': 0.804598}, 'Precision': [0.05615, 0.5], 'CLL': -0.4729, 'AUC PR': 0.029103, 'Recall': 0.724138}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(D, C) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( complex(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then return 0.02699902352345369;  // std dev = 0,775, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return 0.49327268722383805;  // std dev = 0,839, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7542949420563092;  // std dev = 0,101, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( complex(A, E) )
%   | then return 0.15893982054133785;  // std dev = 0,664, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.14950861730695525;  // std dev = 0,042, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, F) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.3877745273970317;  // std dev = 0,833, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5958084247413394;  // std dev = 0,147, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( phenotype(C, E) )
%   | then return -0.1356718634369028;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.11243871475195012;  // std dev = 0,572, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(F, A), complex(A, G) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.5265254032213034;  // std dev = 0,167, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.31076658828541587;  // std dev = 0,821, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then return -0.10701597153518742;  // std dev = 0,044, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return 0.010029961520695508;  // std dev = 0,596, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.20454038585433548;  // std dev = 0,818, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.36826806042862664;  // std dev = 0,201, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.12338089867776206;  // std dev = 0,571, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( enzyme(A, D) )
%   | then return 0.42757526739796636;  // std dev = 0,152, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return -0.12406887944944939;  // std dev = 0,028, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.08834233998188462;  // std dev = 0,345, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.32131033933773545;  // std dev = 0,169, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.10579045480353819;  // std dev = 0,565, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( enzyme(A, D) )
%   | then return 0.32969584782443906;  // std dev = 0,139, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return -0.1112235358456254;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.07648043005658892;  // std dev = 0,335, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2581536709844379;  // std dev = 0,151, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.09096730657936722;  // std dev = 0,561, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( enzyme(A, D) )
%   | then return 0.26260348761976804;  // std dev = 0,122, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return -0.1007108286020982;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.06629546468413383;  // std dev = 0,328, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.21349113137579157;  // std dev = 0,134, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then return -0.08908414021598232;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then return -0.017977847089406605;  // std dev = 0,332, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then return 0.023742708238987137;  // std dev = 0,574, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.21939300531558178;  // std dev = 0,175, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.08495408876715127;  // std dev = 0,531, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( enzyme(A, D) )
%   | then return 0.2021840716266216;  // std dev = 0,078, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return -0.0904733374919454;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.04393149509149729;  // std dev = 0,279, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1666146800992543;  // std dev = 0,141, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.50003
   AUC PR    = 0.007468
   CLL	      = -0.848368
   Precision = 0.007469 at threshold = 0.5
   Recall    = 0.436782
   F1        = 0.014686


Total learning time: 2.921 seconds
Total inference time: 2.541 seconds
AUC ROC: 0.50003


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:32:27
{'Inference time': 2.541, 'AUC ROC': 0.50003, 'F1': 0.014686, 'Learning time': 2.921, 'Precision': [0.007469, 0.5], 'CLL': -0.848368, 'AUC PR': 0.007468, 'Recall': 0.436782}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */


Results
   AUC ROC   = 0.500066
   AUC PR    = 0.007469
   CLL	      = -0.228437
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.078 seconds
Total inference time: 1.539 seconds
AUC ROC: 0.500066


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:32:29
{'Inference time': 1.539, 'AUC ROC': 0.500066, 'F1': nan, 'Learning time': 1.078, 'Precision': [nan, 0.5], 'CLL': -0.228437, 'AUC PR': 0.007469, 'Recall': 0.0}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(G, D), phenotype(D, H) )
%   | | | then return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.23314893509951218;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16356091876901846;  // std dev = 0,062, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7936204457265084;  // std dev = 0,074, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1880777806637661;  // std dev = 0,064, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return -0.10857191678927033;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.17662107936859256;  // std dev = 1,280, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6358417980632434;  // std dev = 0,106, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1611177208135963;  // std dev = 0,057, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14491990261573387;  // std dev = 0,085, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A) )
%   | | | then return 0.22066143285165812;  // std dev = 1,623, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06930867424684847;  // std dev = 0,504, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.20094891750715202;  // std dev = 1,479, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.09401158597386867;  // std dev = 1,619, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.07632783501038494;  // std dev = 1,599, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.06176276190383715;  // std dev = 1,584, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.049854766236163056;  // std dev = 1,574, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3685572183687879;  // std dev = 0,244, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.2225390733540927;  // std dev = 0,259, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.957636
   AUC PR    = 0.15839
   CLL	      = -0.313218
   Precision = 0.090705 at threshold = 0.5
   Recall    = 0.931034
   F1        = 0.165306


Total learning time: 1.541 seconds
Total inference time: 11.121 seconds
AUC ROC: 0.957636


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.255734
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.823 seconds
Parameter learned model CLL: -0.255734


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(G, D), phenotype(D, H)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,false,false': 'phenotype(A, K), interaction(A, L)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true,false,true': [1.195, 2, 5], 'false,true,false,false': [1.369, 5, 3], 'true': [0.0, 0, 1], 'false,true,true,false': [1.549, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'phenotype(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 4], 'false,false,false,false': [0.0, 0, 1], 'false,true,false,true': [0.074, 0, 8], 'false,true,false,false': [0.064, 7, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.062, 8, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,false,true': [0.106, 0, 8], 'false,true,false,false': [0.057, 7, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [1.28, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(H, A)', 'false,false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,false,false,true': [1.623, 10, 12], 'true,false': [0.0, 0, 1], 'false,true,false': [0.085, 5, 0], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,false,false,true': [1.479, 8, 11], 'true,false': [0.0, 0, 1], 'false,true,false': [0.504, 7, 1], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(D, A), phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false,false': 'phenotype(A, J), interaction(A, K)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true': 'interaction(A, D), interaction(E, C)'}, {'true,true,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true': [1.619, 15, 12], 'false,false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H)', 'true,false': 'interaction(E, A), interaction(A, E)', 'false,false': 'interaction(G, A)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.599, 15, 12], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'interaction(I, A)', 'false,true': 'interaction(G, A), interaction(F, G)', 'true': 'interaction(A, D), phenotype(A, E)'}, {'true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,false,true': [1.584, 15, 12], 'false,true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false,false': 'interaction(G, A)', 'false,true': 'phenotype(A, E)', 'false,true,true': 'interaction(F, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.574, 15, 12], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.244, 0, 12], 'false,true,true,true': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.259, 15, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1]}]]
[{'': [0.0, 0.2497027348394764], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [0.0, 0.0], 'false,true': [0.22222222222222207, 0.24888888888888888], 'false,true,false': [0.20408163265306106, 0.23437500000000006], 'false,true,true': [0.0, 0.23999999999999985], 'false': [0.2469135802469131, 0.0]}, {'': [0.0, 0.23436228646072108], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0], 'false,false': [0.0, 0.0], 'false,true': [0.2169340944876557, 0.24050287635778886], 'false,true,false': [0.0006819719229564924, 0.0005938258920981931], 'false,true,true': [0.0, 0.0004842836064606823], 'false': [0.23716008331087027, 0.0]}, {'': [0.0, 0.155505154307962], 'false,false,true': [0.0, nan], 'false,false': [0.0, nan], 'false,true': [0.14773589952808125, 0.1590480136730287], 'false,true,false': [0.001404231174372772, 0.0004686166734866405], 'false,true,true': [0.0, 0.16372723859078103], 'false': [0.15850964333625642, 0.0]}, {'': [0.0, 0.11616624046248071], 'true': [0.0, 0.0], 'false,false,false': [0.11970243009174872, 0.0], 'false,false': [nan, 0.11610953980123648], 'false,true': [nan, 0.0014428079270070253], 'false': [0.0014428079270070253, 0.11610953980123648]}, {'': [0.0, 0.10325597747391704], 'true': [0.0, 0.0], 'false,false,false': [0.1151195464016576, 0.0], 'false,false': [nan, 0.11004486914923048], 'false,true': [nan, 0.03177538550426777], 'false': [0.03177538550426776, 0.11004486914923048]}, {'': [0.0, 0.09204401637097584], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.0], 'true,true,true': [nan, 0.0], 'false': [0.09707086702086433, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [0.0, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.09189197396148338], 'false': [nan, 0.09189197396148338], 'false,false,false': [0.0, nan], 'true,false': [nan, 0.0], 'false,false': [0.09465953993868553, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 0.0874161376934612], 'false,true,false': [nan, 0.0], 'false': [0.0, 0.09011163558767388], 'false,false,false': [nan, 0.0], 'false,false': [0.09297403676443314, 0.0], 'false,true': [nan, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.08614303355566875], 'false,false,true': [nan, 0.09179391864401179], 'false,false,false': [nan, 0.0], 'false,false': [0.09179391864401179, 0.0], 'false,true': [0.0, nan], 'false,true,true': [nan, 0.0], 'false': [0.0, 0.08888013897436355]}, {'': [0.08801803106356722, 0.0], 'true,true': [0.0, 0.004979657307413658], 'true': [0.008502911421759919, 0.004463953464159494], 'false,true': [0.0, nan], 'false,true,true': [0.0, 0.0], 'false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false;interaction(A, I), interaction(I, J).;true;true
0;false,true;interaction(E, D), interaction(E, A).;true;true
0;false,true,true;interaction(A, D), phenotype(A, F).;true;true
0;false;interaction(D, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;phenotype(A, H).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true;interaction(D, E), interaction(E, A).;true;true
2;false,true,true;interaction(A, E), phenotype(A, F).;true;true
2;false;interaction(D, A).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(H, A).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,false;interaction(J, A).;true;true
4;false;interaction(E, A), interaction(A, F).;true;true
4;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(A, H), interaction(H, I).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(G, A).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(I, A).;true;true
7;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false;interaction(G, A).;true;true
8;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;false;interaction(F, H).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.524815601766179;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16356091876901846;  // std dev = 0,062, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1785454510405704;  // std dev = 0,122, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return -0.10857191678927033;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.17662107936859256;  // std dev = 1,280, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6209436491414325;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15415760263091702;  // std dev = 0,108, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then return -0.12931944356071556;  // std dev = 0,089, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(F, A) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.5775056057684705;  // std dev = 0,134, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15657771374343085;  // std dev = 1,457, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return -0.11562170118125334;  // std dev = 0,081, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07158601821186206;  // std dev = 0,438, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.25423233278776053;  // std dev = 0,765, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.14432141466146928;  // std dev = 1,195, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(F, E), interaction(F, F) )
%   | | | then return -0.09831516659798833;  // std dev = 0,061, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05084676599472659;  // std dev = 0,443, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.2569864643909155;  // std dev = 0,794, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.06501095804771177;  // std dev = 1,079, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.15069532582581985;  // std dev = 0,167, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.015661567357454664;  // std dev = 0,647, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.20643549484661783;  // std dev = 0,893, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.012198956426572023;  // std dev = 0,690, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.06857831103872664;  // std dev = 0,644, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.11393689744357009;  // std dev = 1,179, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.2793405529897284;  // std dev = 0,093, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.012576798785648559;  // std dev = 1,309, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.2572576142624692;  // std dev = 0,118, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.35161106450106633;  // std dev = 0,196, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.187740300475677;  // std dev = 0,079, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( interaction(G, H) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.89744
   AUC PR    = 0.052599
   CLL	      = -0.402227
   Precision = 0.059787 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.111621


Total learning time: 2.218 seconds
Total inference time: 9.009 seconds
AUC ROC: 0.89744


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.219628
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.749 seconds
Refined model CLL: -0.219628


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.89744
   AUC PR    = 0.052599
   CLL	      = -0.402227
   Precision = 0.059787 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.111621


Total learning time: 5.3309999999999995 seconds
Total inference time: 9.009 seconds
AUC ROC: 0.89744
Total revision time: 5.3309999999999995
Best scored revision CLL: -0.219628


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:32:56
{'parameter_15': {'Inference time': 11.121, 'AUC ROC': 0.957636, 'F1': 0.165306, 'Learning time': 1.541, 'Precision': [0.090705, 0.5], 'CLL': -0.313218, 'AUC PR': 0.15839, 'Recall': 0.931034}, 'Inference time': 9.009, 'AUC ROC': 0.89744, 'F1': 0.111621, 'Learning time': 5.3309999999999995, 'Precision': [0.059787, 0.5], 'CLL': -0.402227, 'AUC PR': 0.052599, 'Recall': 0.83908}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( complex(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.13489797011161314;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return 0.04974543932757249;  // std dev = 0,877, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.7797740866341314;  // std dev = 0,094, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.5256689316588745;  // std dev = 1,140, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23596491327405206;  // std dev = 1,270, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(A, D), phenotype(C, E) )
%   | then return 0.16692760848538035;  // std dev = 0,682, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.15741221380750248;  // std dev = 0,095, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then return 0.043304439104349834;  // std dev = 0,876, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( complex(A, G) )
%   | | then return 0.1943296611495893;  // std dev = 0,917, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.5936923749388432;  // std dev = 0,058, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.39401042227416144;  // std dev = 1,108, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then return 0.540474942694582;  // std dev = 0,215, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return -0.1353444268651521;  // std dev = 0,086, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( complex(A, G) )
%   | | then return -0.047344691305798256;  // std dev = 0,786, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.15982851679283738;  // std dev = 0,786, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3919025037876708;  // std dev = 1,128, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( enzyme(D, E) )
%   | then return 0.11542081174546265;  // std dev = 0,549, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.1251409072717463;  // std dev = 0,075, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then return 0.008651670695939534;  // std dev = 0,840, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), phenotype(I, H) )
%   | | | then return 0.22769807449351545;  // std dev = 0,642, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.46612476610043485;  // std dev = 0,216, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.03653299235763988;  // std dev = 0,744, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2640628152437527;  // std dev = 0,850, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then return 0.3524466765303183;  // std dev = 0,223, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return -0.11448314462589206;  // std dev = 0,070, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( complex(A, G) )
%   | | then return -0.07396353626255628;  // std dev = 0,716, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.36592756783911656;  // std dev = 0,135, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16577785316387908;  // std dev = 1,336, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then return 0.28047096820128814;  // std dev = 0,202, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return -0.10344863104240667;  // std dev = 0,064, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( complex(A, G) )
%   | | then return -0.060864954983399354;  // std dev = 0,719, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.04566227893125653;  // std dev = 0,699, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.21192505260001265;  // std dev = 1,136, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then return 0.22986792185839502;  // std dev = 0,180, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return -0.09429297128683403;  // std dev = 0,059, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( complex(A, G) )
%   | | then return -0.05036229105516844;  // std dev = 0,722, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.2472334356637765;  // std dev = 0,111, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09919220286659179;  // std dev = 1,330, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.07691317459113178;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( phenotype(A, D) )
%   | then if ( complex(A, E), interaction(F, A) )
%   | | then return 0.04667285523325852;  // std dev = 0,728, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20208721582204228;  // std dev = 0,482, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then return 0.12959173156305237;  // std dev = 0,279, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.04510581949568199;  // std dev = 0,563, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.011940512226378526;  // std dev = 1,105, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(C, D) )
%   | then return -0.1381984189621006;  // std dev = 0,141, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.004859175114956993;  // std dev = 0,758, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then return -0.01758030969390162;  // std dev = 0,294, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(H, I), enzyme(A, J) )
%   | | | then return 0.2918257911475546;  // std dev = 0,208, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.012208190570478223;  // std dev = 1,184, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0.22633045953877415;  // std dev = 0,112, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.499998
   AUC PR    = 0.007466
   CLL	      = -0.792136
   Precision = 0.007469 at threshold = 0.5
   Recall    = 0.402299
   F1        = 0.014666


Total learning time: 3.304 seconds
Total inference time: 2.95 seconds
AUC ROC: 0.499998


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:33:02
{'Inference time': 2.95, 'AUC ROC': 0.499998, 'F1': 0.014666, 'Learning time': 3.304, 'Precision': [0.007469, 0.5], 'CLL': -0.792136, 'AUC PR': 0.007466, 'Recall': 0.402299}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(D, C) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.500026
   AUC PR    = 0.007467
   CLL	      = -0.225995
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.359 seconds
Total inference time: 1.794 seconds
AUC ROC: 0.500026


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:33:06
{'Inference time': 1.794, 'AUC ROC': 0.500026, 'F1': nan, 'Learning time': 1.359, 'Precision': [nan, 0.5], 'CLL': -0.225995, 'AUC PR': 0.007467, 'Recall': 0.0}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), complex(A, F) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(G, D), complex(D, H) )
%   | | | then return 0.4581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.23314893509951218;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.821548267904638;  // std dev = 0,032, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17022707800486558;  // std dev = 0,055, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8043075354574017;  // std dev = 0,049, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.18801689662236273;  // std dev = 0,051, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.28162893957529533;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), complex(A, F) )
%   | | | then return 0.04002270887522728;  // std dev = 0,755, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.21292742204659384;  // std dev = 1,355, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6481290990682123;  // std dev = 0,072, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1610248119467258;  // std dev = 0,046, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6353665685377741;  // std dev = 0,125, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.27021038027439476;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.46460651738983527;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), complex(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7068802588711891;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.14400403376870344;  // std dev = 0,055, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(K, A) )
%   | | | then return 0.2131594067234738;  // std dev = 1,785, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.2554904305997571;  // std dev = 0,598, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3528768180168106;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.543241664171495;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.009572160779657946;  // std dev = 0,897, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12916729056762333;  // std dev = 0,561, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.19019555869561125;  // std dev = 1,551, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.3388374241455716;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), complex(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32280076650615086;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.09210885370403929;  // std dev = 1,834, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15901334218711385;  // std dev = 0,575, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.26750529129071976;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.24632530649206053;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), interaction(H, F) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25659710656741574;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.07457886131191653;  // std dev = 1,811, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11494091432359284;  // std dev = 0,567, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then return 0.21076371460928478;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20348833487498952;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.060176760312543986;  // std dev = 1,796, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.03614430026776602;  // std dev = 0,551, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.19944559904282533;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16528892869054873;  // std dev = 0,018, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17248436183275373;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3550975990838463;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0391406818154767;  // std dev = 1,757, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.02758907247082884;  // std dev = 0,550, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1694952739871084;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13255785802480202;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3586428045954051;  // std dev = 0,327, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.22451515287365273;  // std dev = 0,277, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.27959489099933327;  // std dev = 0,184, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1469527478580398;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.36785720234693364;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978497
   AUC PR    = 0.181276
   CLL	      = -0.291683
   Precision = 0.105455 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.190789


Total learning time: 1.563 seconds
Total inference time: 13.7 seconds
AUC ROC: 0.978497


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.264109
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.855 seconds
Parameter learned model CLL: -0.264109


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(G, D), complex(D, H)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K), interaction(A, L)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), complex(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.894, 4, 1], 'false,false,false,false': [0.0, 0, 1], 'false,true,false,true': [1.549, 4, 6], 'false,true,false,false': [1.369, 5, 3], 'true': [0.0, 0, 2], 'false,true,true,false': [1.651, 6, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'complex(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.707, 1, 1], 'false,true,true,true': [0.032, 0, 6], 'false,false,false,false': [0.0, 0, 1], 'false,true,false,true': [0.049, 0, 9], 'false,true,false,false': [0.051, 9, 0], 'true': [0.0, 0, 2], 'false,true,true,false': [0.055, 10, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), complex(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.125, 0, 3], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.755, 4, 1], 'false,true,false,true': [0.072, 0, 9], 'false,true,false,false': [0.046, 9, 0], 'true': [0.0, 0, 2], 'false,true,true,false': [1.355, 6, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, J)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(K, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'complex(A, G), complex(E, H)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.785, 12, 14], 'false,false,false,false': [0.598, 1, 2], 'false,true,false': [0.055, 7, 0], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.561, 1, 1], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.551, 9, 12], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.897, 10, 3], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(D, A), complex(A, F)', 'false': 'interaction(G, A)', 'false,false,false': 'complex(A, J), interaction(A, K)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true': 'interaction(A, D), interaction(E, C)'}, {'true,true,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true,false': [0.575, 1, 2], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true': [1.834, 19, 15], 'false,false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J)', 'true,false': 'interaction(E, A), interaction(A, E)', 'false,false': 'interaction(I, A)', 'false,true': 'complex(A, G), interaction(H, F)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.811, 19, 15], 'false,false,false,true': [0.567, 1, 2], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'interaction(I, A)', 'false,true': 'interaction(G, A), interaction(F, G)', 'true': 'interaction(A, D), complex(A, E)'}, {'true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.551, 1, 1], 'false,false,false,false': [0.0, 0, 1], 'false,false,true': [1.796, 19, 15], 'false,true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false,false': 'interaction(G, A)', 'false,true': 'complex(A, E)', 'false,true,true': 'interaction(F, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.757, 19, 14], 'false,false,false,true': [0.55, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'true': [0.018, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.327, 0, 16], 'false,true,true,true': [0.184, 0, 2], 'false,false': [0.0, 0, 0], 'true,false': [0.277, 19, 0], 'false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 1]}]]
[{'': [0.0, 0.24930747922437635], 'false,false,true': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.0], 'false,false': [0.22222222222222224, 0.0], 'false,true': [0.23437500000000006, 0.25], 'false,true,false': [0.23999999999999994, 0.23437500000000006], 'false,true,true': [0.16000000000000003, 0.24793388429752045], 'false': [0.24653979238754278, 0.18750000000000006]}, {'': [0.0, 0.24170873286459874], 'false,false,true': [0.0, nan], 'false,false,false': [0.25, 0.0], 'false,false': [0.0, 0.20926839604835526], 'false,true': [0.2307866277284631, 0.2464567877543732], 'false,true,false': [0.00026511454304185063, 0.00029457171449072855], 'false,true,true': [0.00017256360945990443, 0.00029818991714689047], 'false': [0.24190604534734864, 0.18045492962607107]}, {'': [0.0, 0.1659134369631747], 'false,false,true': [0.005174584762063006, 0.0], 'false,false': [0.1576439904877893, nan], 'false,true': [0.15682152431281515, 0.16408316721951077], 'false,true,false': [0.0005704296098508878, 0.00023087897378548352], 'false,true,true': [0.11393361944572686, 0.1669735140761053], 'false': [0.16245144449527693, 0.1576439904877893]}, {'': [0.000554436090087207, 0.12251589624921289], 'false,false,true': [0.0, nan], 'true': [0.0, 0.0], 'false,false,false': [0.12249322738328394, 0.11924320910154045], 'false,false': [0.0, 0.1223232129063715], 'false,true': [0.0, 0.0004332478043781253], 'false,true,true': [nan, 0.0], 'false': [0.07956703801990951, 0.11953434052900835]}, {'': [0.0002586463375524456, 0.10711735243652241], 'false,false,true': [nan, 0.1572001825930302], 'true': [0.0, 0.0], 'false,false,false': [0.11462526862317389, 0.0], 'false,false': [0.1572001825930302, 0.11037367064330508], 'false,true': [0.0, 0.061948911670306694], 'false,true,true': [nan, 0.0], 'false': [0.07779358443744099, 0.11462686917930048]}, {'': [0.0011434043124628895, 0.09822879276463806], 'true,true': [0.0, 0.0], 'false,false,true': [nan, 0.11012421969486347], 'true,true,true': [nan, 0.0], 'false': [0.09887798588852177, 0.08480013408745371], 'false,false,false': [nan, 0.0], 'false,false': [0.11012421969486347, 0.0], 'true': [0.0011434043124628895, nan]}, {'': [0.0003342971753174037, 0.09572620426755364], 'false': [0.0, 0.09747260934344526], 'false,false,false': [0.10705036594887862, nan], 'true,false': [nan, 0.0], 'false,false': [0.0964954243623789, 0.10705036594887862], 'false,true': [0.0, nan], 'false,true,true': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [0.00028337037284202615, 0.09386715694226463], 'false,true,false': [nan, 0.0], 'false': [0.0, 0.09588206066150608], 'false,false,false': [0.1515620883822245, 0.0], 'false,false': [0.09482899867624463, 0.10696746207295438], 'false,true': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [0.00015737879628064527, 0.09255287379773418], 'false,false,true': [0.0, 0.09356258351138949], 'false,false,false': [0.1513633785653902, 0.0], 'false,false': [0.09366052614842572, 0.10538389016109988], 'false,true': [0.0, nan], 'false,true,true': [nan, 0.0], 'false': [0.0, 0.09466322440546339]}, {'': [0.0873811367640615, 0.07965956889956048], 'true,true': [0.0, 0.006702328394758539], 'true': [0.009137936928815423, 0.004039190428913489], 'false,true': [0.01523872360811702, 0.0], 'false,true,true': [0.01699343936647041, 0.0], 'false': [0.07965956889956048, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false;interaction(A, I), interaction(I, J).;true;true
0;false;interaction(D, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;false,false;complex(A, H).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true;interaction(D, E), interaction(E, A).;true;true
2;false;interaction(D, A).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
4;false,false,false;interaction(J, A).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
4;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;false;interaction(E, A), interaction(A, F).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(A, H), interaction(H, I).;true;true
5;false;interaction(G, A).;true;true
5;true;recursion_proteinclass(D, B), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(I, A).;true;true
7;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;true;interaction(A, D), complex(A, E).;true;true
7;false,false,false;interaction(A, J), interaction(J, K).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false;interaction(G, A).;true;true
8;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
8;false,false,false;interaction(A, I), interaction(I, J).;true;true
8;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;false,true;interaction(F, H).;true;true
9;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7789852279274082;  // std dev = 0,103, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.16493317393997559;  // std dev = 0,102, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7988224998328926;  // std dev = 0,084, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16932078898570715;  // std dev = 0,093, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( complex(A, H) )
%   | | then return 0.7816289395752953;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.28162893957529533;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.35256664862943304;  // std dev = 0,842, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04746050494066379;  // std dev = 1,089, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6421331459275847;  // std dev = 0,113, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14695589000475076;  // std dev = 0,083, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.6353665685377741;  // std dev = 0,125, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.27021038027439476;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.46460651738983527;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.5769582879325306;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1263292054643262;  // std dev = 0,074, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.08924824698295744;  // std dev = 0,922, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2593922040328295;  // std dev = 1,519, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3528768180168106;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.43372746433809806;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.03747792418205142;  // std dev = 0,815, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.12877185734026045;  // std dev = 0,070, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.12829835939726417;  // std dev = 0,561, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.18369949507054656;  // std dev = 1,480, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.33796387342945466;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | then return 0.28388737340382175;  // std dev = 0,041, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( phenotype(G, F), interaction(G, A) )
%   | | | then return -0.11523083837742414;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10134569413630615;  // std dev = 0,047, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.3866520822873855;  // std dev = 0,133, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11014739626195509;  // std dev = 1,554, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.15855095318928233;  // std dev = 0,575, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2669123404426673;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.2050375759098645;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.24641115868504138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.2550480680639824;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.27341064524714337;  // std dev = 0,543, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.14425232821767164;  // std dev = 0,250, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.17039069637315557;  // std dev = 0,899, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.060749823300435886;  // std dev = 1,028, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then return 0.2096699966421901;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17362667869918047;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.20354937108758864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.04227507714358264;  // std dev = 0,650, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.0968819672015854;  // std dev = 1,369, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.07057499640308992;  // std dev = 0,520, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2078379718808272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16356933901068904;  // std dev = 0,019, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.17252939899204756;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2811732019395351;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.029415845900222854;  // std dev = 1,524, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.054458383620684336;  // std dev = 0,518, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.17568717096382913;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13041037651430676;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3011054233468692;  // std dev = 0,082, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( interaction(F, H), enzyme(H, I) )
%   | | | then return -0.07922307034052146;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09160642765866818;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.2776517088216756;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.24538233456036215;  // std dev = 0,139, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | then if ( interaction(L, M) )
%   | | then return 0.2784424113926991;  // std dev = 0,183, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1516738990228872;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.3237167109471602;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.9681
   AUC PR    = 0.177464
   CLL	      = -0.310015
   Precision = 0.077578 at threshold = 0.5
   Recall    = 0.942529
   F1        = 0.143357


Total learning time: 2.808 seconds
Total inference time: 12.598 seconds
AUC ROC: 0.9681


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.226057
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.943 seconds
Refined model CLL: -0.226057


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.9681
   AUC PR    = 0.177464
   CLL	      = -0.310015
   Precision = 0.077578 at threshold = 0.5
   Recall    = 0.942529
   F1        = 0.143357


Total learning time: 6.169 seconds
Total inference time: 12.598 seconds
AUC ROC: 0.9681
Total revision time: 6.169
Best scored revision CLL: -0.226057


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:33:39
{'Inference time': 12.598, 'AUC ROC': 0.9681, 'parameter_20': {'Inference time': 13.7, 'AUC ROC': 0.978497, 'F1': 0.190789, 'Learning time': 1.563, 'Precision': [0.105455, 0.5], 'CLL': -0.291683, 'AUC PR': 0.181276, 'Recall': 1.0}, 'F1': 0.143357, 'Learning time': 6.169, 'Precision': [0.077578, 0.5], 'CLL': -0.310015, 'AUC PR': 0.177464, 'Recall': 0.942529}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(C, C), phenotype(C, D) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.643863220813798;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, D) )
%   | then return -0.1501969662227404;  // std dev = 0,064, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.30287776131345834;  // std dev = 0,926, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.747906431966103;  // std dev = 0,098, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, G) )
%   | | then return 0.6180189206999176;  // std dev = 0,888, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.48790276622026046;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( complex(C, D) )
%   | then return -0.1370374437494309;  // std dev = 0,051, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.16101470794612735;  // std dev = 0,664, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( phenotype(A, E), enzyme(A, F) )
%   | then return 0.6570102642778786;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5837302763877208;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.11564182200782387;  // std dev = 1,004, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3581466269538769;  // std dev = 1,742, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, A) )
%   | then return -0.13176546925138619;  // std dev = 0,059, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.17923374620171056;  // std dev = 0,781, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.46547373902557176;  // std dev = 0,234, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.10122394880296642;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, G) )
%   | | then return 0.41295024700522515;  // std dev = 0,878, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.08055185478189852;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3064783391108096;  // std dev = 1,449, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( phenotype(D, C) )
%   | then return 0.10208185461330514;  // std dev = 0,732, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.1872417301232388;  // std dev = 0,139, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.35953686179843036;  // std dev = 0,230, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09237945988544037;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, G) )
%   | | then return 0.31093235514850487;  // std dev = 0,877, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.30741903275005245;  // std dev = 0,845, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13339141615537528;  // std dev = 1,422, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( complex(C, D) )
%   | then return -0.11642433686644263;  // std dev = 0,054, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.08331735998846683;  // std dev = 0,472, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), phenotype(F, G) )
%   | | then if ( phenotype(E, G), interaction(H, F) )
%   | | | then return 0.07708738298768311;  // std dev = 1,139, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.37307712359709716;  // std dev = 0,609, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(E, I), interaction(J, E) )
%   | | | then return 0.3500618776812268;  // std dev = 0,169, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10802677930105253;  // std dev = 1,128, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return 0.4510264559606063;  // std dev = 0,131, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, A) )
%   | then return -0.11607324062296291;  // std dev = 0,048, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.121154566377712;  // std dev = 0,625, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( phenotype(A, E), enzyme(A, F) )
%   | then return 0.2722472531772338;  // std dev = 0,155, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then return -0.03649133495925255;  // std dev = 0,803, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.2496780568902908;  // std dev = 0,737, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.008193391041604799;  // std dev = 1,332, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), interaction(A, C) )
%   | then return -0.10472361094842819;  // std dev = 0,044, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(E, C), enzyme(E, F) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.3838076755092638;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06973667694322475;  // std dev = 0,558, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(C, G), phenotype(A, H) )
%   | | | then return 0.22201457489438461;  // std dev = 0,436, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.057569414953069366;  // std dev = 1,431, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   else return 0.21525610530576028;  // std dev = 0,433, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(C, D), enzyme(D, E) )
%   | then return 0.045802612146545185;  // std dev = 0,313, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11136989602538969;  // std dev = 0,079, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), phenotype(G, H) )
%   | | then if ( phenotype(F, H), interaction(I, G) )
%   | | | then return 0.017435581069122786;  // std dev = 0,985, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.27963083957365625;  // std dev = 0,568, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.11755134111415876;  // std dev = 0,575, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.16066197800375542;  // std dev = 0,841, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0.2914021697203925;  // std dev = 0,090, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( complex(C, E) )
%   | then if ( complex(D, E), interaction(A, D) )
%   | | then return -0.10676773133496231;  // std dev = 0,082, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, F), interaction(D, C) )
%   | | | then return 0.03948724482851577;  // std dev = 0,368, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2717109348153762;  // std dev = 0,051, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.27803813951957673;  // std dev = 0,286, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, G) )
%   | then return 0.2641792639515535;  // std dev = 0,106, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then return 0.20452417399141506;  // std dev = 0,150, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.06429050443026402;  // std dev = 0,873, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.03473497729357193;  // std dev = 1,038, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */


Results
   AUC ROC   = 0.6941
   AUC PR    = 0.140223
   CLL	      = -0.670706
   Precision = 0.011895 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.023387


Total learning time: 5.217 seconds
Total inference time: 3.659 seconds
AUC ROC: 0.6941


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:33:48
{'Inference time': 3.659, 'AUC ROC': 0.6941, 'F1': 0.023387, 'Learning time': 5.217, 'Precision': [0.011895, 0.5], 'CLL': -0.670706, 'AUC PR': 0.140223, 'Recall': 0.689655}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(C, C), phenotype(C, D) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6581489350995123;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */


Results
   AUC ROC   = 0.500066
   AUC PR    = 0.007468
   CLL	      = -0.231731
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.622 seconds
Total inference time: 1.936 seconds
AUC ROC: 0.500066


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:33:52
{'Inference time': 1.936, 'AUC ROC': 0.500066, 'F1': nan, 'Learning time': 1.622, 'Precision': [nan, 0.5], 'CLL': -0.231731, 'AUC PR': 0.007468, 'Recall': 0.0}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2331489350995123;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(G, D), enzyme(D, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3819584589090361;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.827334239218108;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17266576078189197;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7302753838435885;  // std dev = 0,963, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.1898461948623252;  // std dev = 0,036, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.17626634551589415;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.17626634551589415;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16047487320201437;  // std dev = 1,600, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5916996629662756;  // std dev = 0,965, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.16236721832346881;  // std dev = 0,032, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6332503611655044;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.15211381203652685;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5226011037108457;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), enzyme(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6408469298327518;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1605078010021231;  // std dev = 0,046, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(K, A) )
%   | | | then return 0.20636242096550855;  // std dev = 2,089, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.10387240126871781;  // std dev = 0,656, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3936175843470247;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.48455367224355095;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.02336622981045174;  // std dev = 1,136, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.014315403949377123;  // std dev = 0,555, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.20583063995128625;  // std dev = 1,728, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.3740818214976629;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32582349647533904;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.09512575039760073;  // std dev = 2,111, 40,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07033219692848496;  // std dev = 0,612, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.29135196695253907;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.28592102193103797;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.28870459156280603;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(A, G), interaction(H, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25865717480698613;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then return 0.07119754542562896;  // std dev = 2,077, 39,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.04770458899163954;  // std dev = 0,585, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.19465645843484058;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.23222573441233924;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then return 0.057109018937047895;  // std dev = 2,062, 39,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.006903501864857789;  // std dev = 0,542, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.22655207964531698;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16598847512862075;  // std dev = 0,031, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19425209259887066;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19256563700403218;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3165243266057939;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03855752767164862;  // std dev = 2,033, 38,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.005768654606218684;  // std dev = 0,542, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.18931986644065235;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.14177500572224166;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3236411319200588;  // std dev = 1,025, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return -0.22542043908998805;  // std dev = 0,208, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.3155108119389455;  // std dev = 0,212, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16195470767237619;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.16155832626600158;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973905
   AUC PR    = 0.183898
   CLL	      = -0.27873
   Precision = 0.103943 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.188312


Total learning time: 1.71 seconds
Total inference time: 14.476 seconds
AUC ROC: 0.973905


Results scoring model
   AUC ROC   = 0.9896
   AUC PR    = 0.988502
   CLL	      = -0.282377
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 0.948 seconds
Parameter learned model CLL: -0.282377


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(G, D), enzyme(D, H)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,false,false': 'enzyme(A, K), interaction(A, L)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true,false,true': [0.816, 2, 1], 'false,true,false,false': [2.289, 10, 11], 'true': [0.0, 0, 4], 'false,true,true,false': [1.936, 10, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'enzyme(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 6], 'false,false,false,false': [0.0, 0, 1], 'false,true,false,true': [0.963, 1, 12], 'false,true,false,false': [0.036, 11, 0], 'true': [0.0, 0, 4], 'false,true,true,false': [0.0, 10, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.095, 0, 3], 'false,false,true,false': [0.0, 3, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,true': [0.965, 1, 12], 'false,true,false,false': [0.032, 11, 0], 'true': [0.0, 0, 4], 'false,true,true,false': [1.6, 10, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, J)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(K, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'enzyme(A, G), enzyme(E, H)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'true,false': [0.002, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [2.089, 15, 16], 'false,false,false,false': [0.656, 3, 2], 'false,true,false': [0.046, 7, 0], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.555, 3, 1], 'true,false': [0.002, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.728, 11, 14], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [1.136, 11, 4], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(D, A), enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false,false': 'enzyme(A, J), interaction(A, K)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true': 'interaction(A, D), interaction(E, C)'}, {'true,true,true,false': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,true,false': [0.612, 3, 2], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true': [2.111, 22, 18], 'false,false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J)', 'true,false': 'interaction(E, A), interaction(A, E)', 'false,false': 'interaction(I, A)', 'false,true': 'enzyme(A, G), interaction(H, F)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 2], 'false,false,true': [2.077, 22, 17], 'false,false,false,true': [0.585, 3, 2], 'false,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'interaction(I, A)', 'false,true': 'interaction(G, A), interaction(F, G)', 'true': 'interaction(A, D), enzyme(A, E)'}, {'true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,false': [0.035, 0, 4], 'false,false,false,true': [0.542, 3, 1], 'false,false,false,false': [0.0, 0, 1], 'false,false,true': [2.062, 22, 17], 'false,true,false,false': [0.001, 0, 2], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'interaction(H, A)', 'false,true': 'enzyme(A, E)', 'false,true,true': 'interaction(F, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.033, 22, 16], 'false,false,false,true': [0.542, 3, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'true': [0.031, 0, 4], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.028, 0, 3], 'true,true,false': [1.025, 1, 19], 'false,true,true,true': [0.212, 0, 2], 'false,false': [0.0, 0, 0], 'true,false': [0.208, 21, 0], 'false,true,false': [0.0, 3, 0], 'false,true,true,false': [0.0, 0, 1]}]]
[{'': [0.0, 0.2481096408317576], 'false,false,true': [nan, 0.24000000000000005], 'false,false,false': [nan, 0.0], 'false,true,false': [0.22222222222222224, 0.24943310657596363], 'false,false': [0.24000000000000005, 0.0], 'false,true': [0.23437500000000006, 0.24999999999999992], 'false,true,true': [nan, 0.2343749999999999], 'false': [0.24749999999999953, 0.24999999999999992]}, {'': [0.0, 0.24446714915483958], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.0, 0.0], 'false,false': [0.22222222222222224, 0.17829993634945637], 'false,true': [0.23437500000000008, 0.24891289234713096], 'false,true,false': [0.07139570443006192, 0.00011808449594900723], 'false,true,true': [0.0, -5.551115123125783e-18], 'false': [0.24580551711623624, 0.2341330426932048]}, {'': [0.0, 0.17150185719903518], 'false,false,true': [0.0030329528414694273, -4.625929269271485e-18], 'false,false': [0.15571569755806222, nan], 'false,true': [0.16001086783018062, 0.17999797377215898], 'false,true,false': [0.07161027416167204, 9.172790084103413e-05], 'false,true,true': [nan, 0.1600108678301807], 'false': [0.17376214167675993, 0.15571569755806222]}, {'': [0.0027618225889156356, 0.12956350004465406], 'false,false,true': [0.0, nan], 'true': [0.0, 1.9517949790270883e-06], 'false,false,false': [0.1407259377679393, 0.08602979970529348], 'false,false': [0.0, 0.1343855417725907], 'false,true': [0.0, 0.00030657659740434314], 'false,true,true': [nan, 0.0], 'false': [0.070505533154292, 0.1298455226055972]}, {'': [0.0013297048161585445, 0.11563678248818135], 'false,false,true': [nan, 0.07709897875094966], 'true': [0.0, 1.786374936252333e-06], 'false,false,false': [0.11950343546079982, 0.0], 'false,false': [0.07709897875094966, 0.11595405998789005], 'false,true': [0.0, 0.08596601158383489], 'false,true,true': [nan, 0.0], 'false': [0.0957093054049164, 0.11530300178986268]}, {'': [0.0012478999196171986, 0.10589153218006349], 'true,true': [0.0, 0.0], 'false,false,true': [nan, 0.07491182134960545], 'true,true,true': [nan, 0.0], 'false': [0.11137466375414881, 0.06921120372765534], 'false,false,false': [nan, 0.0], 'false,false': [0.07491182134960545, 0.0], 'true': [0.0012478999196171986, nan]}, {'': [0.001504666571927056, 0.10280245239247811], 'false': [0.0, 0.1059035892048764], 'false,false,false': [0.06849193324127478, nan], 'true,false': [0.0, 0.0], 'false,false': [0.11063723728564594, 0.06849193324127478], 'false,true': [nan, 0.0], 'true': [0.0, 1.9370649737143752e-06]}, {'': [0.00030835221941900165, 0.10111258849806778], 'false,true,false': [nan, 9.287921732131776e-07], 'false': [9.287921732131776e-07, 0.10434513314425103], 'false,false,false': [0.07336292163795272, 0.0], 'false,false': [0.10904623799705335, 0.06741057867648279], 'false,true': [nan, 9.287921732131776e-07], 'true': [nan, 0.00030835221941900165]}, {'': [0.00024035157745685293, 0.09948944426467805], 'false,true,false': [nan, 0.0], 'false,false,true': [0.0, 0.10877279399843882], 'false,false,false': [0.07354494101038508, 0.0], 'false,false': [0.1079141165519098, 0.06492547777538896], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'false': [7.110331183418639e-07, 0.10304462078875778]}, {'': [0.09570571163784897, 0.05545152430579466], 'true,true': [0.00025550159603135447, 0.052561359364757455], 'true': [0.04949030659623174, 0.002059258834403277], 'false,true': [0.020214555787441774, 0.0], 'false,true,true': [0.022462007961987482, 0.0], 'false': [0.05545152430579466, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false;interaction(A, I), interaction(I, J).;true;true
0;false;interaction(D, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
1;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;false,false;enzyme(A, H).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true;interaction(D, E), interaction(E, A).;true;true
2;false;interaction(D, A).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
4;false,false,false;interaction(J, A).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
4;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;false;interaction(E, A), interaction(A, F).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(A, H), interaction(H, I).;true;true
5;false;interaction(G, A).;true;true
5;true;recursion_proteinclass(D, B), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
6;true,false;interaction(E, A), interaction(A, E).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(I, A).;true;true
7;false,false,false;interaction(A, J), interaction(J, K).;true;true
7;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
8;false,false,false;interaction(A, J), interaction(J, K).;true;true
8;false,false;interaction(H, A).;true;true
8;false,true;enzyme(A, E).;true;true
8;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;false,true;interaction(F, H).;true;true
9;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( enzyme(E, G), phenotype(E, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.050941973991396876;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.524815601766179;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7931777883983385;  // std dev = 0,063, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14934946123928441;  // std dev = 0,075, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7174148971168696;  // std dev = 0,892, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.1883315244173471;  // std dev = 0,132, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.17626634551589415;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.17626634551589415;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.033731865279161416;  // std dev = 0,940, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.3134464925541682;  // std dev = 1,013, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5775598169943315;  // std dev = 0,862, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.16146127814343597;  // std dev = 0,116, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.6332503611655044;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.15211381203652685;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5783614833507384;  // std dev = 0,081, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.6102289607977919;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.13187381798704054;  // std dev = 0,086, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return -0.0055623129469759185;  // std dev = 0,872, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2390575898208349;  // std dev = 1,735, 27,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4367361962849311;  // std dev = 0,082, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.45959971285449575;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.11761703588334983;  // std dev = 0,079, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1246950086417643;  // std dev = 0,889, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.015727550601877943;  // std dev = 0,515, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.17297597912436544;  // std dev = 1,643, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.34300524461791315;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | then return 0.2746731152975527;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(F, H), enzyme(F, I) )
%   | | | then return 0.23311907957261505;  // std dev = 0,498, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08573860710358498;  // std dev = 0,569, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.06901998775230984;  // std dev = 0,955, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.19197699078342192;  // std dev = 1,301, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.0672828465986723;  // std dev = 0,567, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2703326430448032;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20654355627840992;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.40772169500146416;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.26943058225410677;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.24051273898281178;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( complex(G, I), interaction(G, G) )
%   | | | then return -0.13034046415975503;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10182171679913536;  // std dev = 0,059, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.004425408327290591;  // std dev = 1,094, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.1694830511274261;  // std dev = 1,371, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.18704101652790966;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.26693038841963784;  // std dev = 0,067, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.3829207425343486;  // std dev = 0,133, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0056509920525567355;  // std dev = 1,633, 35,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -4.5016273380943383E-4;  // std dev = 0,462, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.19267037154872624;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16027030288623995;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.17742751491896647;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2596009033387383;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2963480140292024;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.027933665004578254;  // std dev = 1,708, 38,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -3.8404191739953297E-4;  // std dev = 0,462, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.16445852065021827;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.15771884328881128;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1550990619561995;  // std dev = 0,635, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3241169666047214;  // std dev = 0,206, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, G) )
%   | | then return -0.10406181709430973;  // std dev = 0,033, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.2322890937696272;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.30958420760221195;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | then if ( interaction(J, K) )
%   | | then return 0.2764513013827524;  // std dev = 0,175, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1430874206083671;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.13373941552014623;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.969509
   AUC PR    = 0.162109
   CLL	      = -0.318798
   Precision = 0.100128 at threshold = 0.5
   Recall    = 0.896552
   F1        = 0.180139


Total learning time: 3.386 seconds
Total inference time: 16.929 seconds
AUC ROC: 0.969509


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.228543
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.963 seconds
Refined model CLL: -0.228543


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.969509
   AUC PR    = 0.162109
   CLL	      = -0.318798
   Precision = 0.100128 at threshold = 0.5
   Recall    = 0.896552
   F1        = 0.180139


Total learning time: 7.007000000000001 seconds
Total inference time: 16.929 seconds
AUC ROC: 0.969509
Total revision time: 7.007000000000001
Best scored revision CLL: -0.228543


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:34:31
{'Inference time': 16.929, 'AUC ROC': 0.969509, 'F1': 0.180139, 'Learning time': 7.007000000000001, 'Precision': [0.100128, 0.5], 'CLL': -0.318798, 'AUC PR': 0.162109, 'parameter_25': {'Inference time': 14.476, 'AUC ROC': 0.973905, 'F1': 0.188312, 'Learning time': 1.71, 'Precision': [0.103943, 0.5], 'CLL': -0.27873, 'AUC PR': 0.183898, 'Recall': 1.0}, 'Recall': 0.896552}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( enzyme(D, F), phenotype(D, G) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(D, H), interaction(D, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08037115732173443;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4692600462106234;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7699555076896395;  // std dev = 0,108, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( complex(D, F), interaction(D, D) )
%   | | then return -0.1571107542785794;  // std dev = 0,090, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, G), interaction(D, A) )
%   | | | then return -0.13426941809906087;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3055903310852969;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.40524733977233013;  // std dev = 2,080, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.6639883592486021;  // std dev = 0,153, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(D, F), complex(C, F) )
%   | | then return -0.14757257910886093;  // std dev = 0,114, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( complex(C, G) )
%   | | | then return 0.5135335483547682;  // std dev = 0,730, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.013660343027403798;  // std dev = 0,748, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, H) )
%   | then return 0.6650009314270525;  // std dev = 0,150, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.03849889969626545;  // std dev = 1,143, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3150570170482823;  // std dev = 1,812, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4771560475645429;  // std dev = 0,227, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then return 0.30798263109435625;  // std dev = 0,576, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1374536987704303;  // std dev = 0,114, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.568714780190813;  // std dev = 0,292, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2000901409041067;  // std dev = 0,205, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.4556634378100156;  // std dev = 0,732, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.27240316064854175;  // std dev = 1,821, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.37055033558148864;  // std dev = 0,195, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(D, A), phenotype(A, H) )
%   | | | then return -0.12264558421607935;  // std dev = 0,112, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.24882288860136753;  // std dev = 0,829, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return -0.17195972127953893;  // std dev = 0,128, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return -0.0036852037472759;  // std dev = 0,851, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.1539129427878321;  // std dev = 1,283, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.3135941052189363;  // std dev = 1,383, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3039821435355117;  // std dev = 0,224, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(D, F), phenotype(D, G) )
%   | | then if ( complex(D, H), complex(A, I) )
%   | | | then return -0.006351435187831729;  // std dev = 0,436, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.28273460131742034;  // std dev = 0,464, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(D, E), interaction(D, J) )
%   | | | then return -0.12722987942177855;  // std dev = 0,160, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.05890267576751789;  // std dev = 0,438, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then return -0.003099483530760455;  // std dev = 0,851, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.14217554804095117;  // std dev = 1,752, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.2751182762050963;  // std dev = 0,685, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24690841162874172;  // std dev = 0,200, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(D, F), phenotype(D, G) )
%   | | then if ( location(D, E), interaction(D, H) )
%   | | | then return 0.22822541245903358;  // std dev = 0,439, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.009880834828408402;  // std dev = 0,425, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(D, E), interaction(D, I) )
%   | | | then return -0.11407459997546157;  // std dev = 0,146, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.04999056163407545;  // std dev = 0,432, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.35303370717859095;  // std dev = 0,267, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.25428031908622684;  // std dev = 0,225, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.10077222794761734;  // std dev = 1,754, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.36319603680270013;  // std dev = 0,155, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), phenotype(A, F) )
%   | then return 0.07325031327665664;  // std dev = 0,205, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( complex(D, G) )
%   | | then return -0.0014353023580555753;  // std dev = 0,591, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.17860352045219932;  // std dev = 0,173, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( phenotype(A, H) )
%   | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.3477657232465859;  // std dev = 0,262, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.23010386593275328;  // std dev = 0,181, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), interaction(L, J) )
%   | | | then return -0.017420947445786344;  // std dev = 0,519, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4153070593514571;  // std dev = 0,087, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A) )
%   | | | then return -0.026094738920946582;  // std dev = 1,178, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.13751284691208407;  // std dev = 0,398, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25012109676723665;  // std dev = 0,096, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.1538871592605178;  // std dev = 0,080, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.2855795337250205;  // std dev = 0,227, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), interaction(H, A) )
%   | | | then return -0.08659990306655556;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.28213697979616686;  // std dev = 0,353, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), interaction(K, I) )
%   | | | then return -0.014252900422958348;  // std dev = 0,519, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3197476245314477;  // std dev = 0,077, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.11427785348724735;  // std dev = 0,387, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02353201746890754;  // std dev = 1,161, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17396142869806905;  // std dev = 0,130, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(D, H), complex(F, H) )
%   | | | then return -0.038752707130047484;  // std dev = 0,397, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.18279235013300488;  // std dev = 0,300, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.13021980177951836;  // std dev = 0,128, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then return 0.13264176837936387;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.03489208425940709;  // std dev = 0,864, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.06235119455045542;  // std dev = 1,417, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */


Results
   AUC ROC   = 0.774197
   AUC PR    = 0.153023
   CLL	      = -0.552821
   Precision = 0.015065 at threshold = 0.5
   Recall    = 0.701149
   F1        = 0.029497


Total learning time: 7.432 seconds
Total inference time: 7.213 seconds
AUC ROC: 0.774197


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN-B), Time: 01:34:46
{'Inference time': 7.213, 'AUC ROC': 0.774197, 'F1': 0.029497, 'Learning time': 7.432, 'Precision': [0.015065, 0.5], 'CLL': -0.552821, 'AUC PR': 0.153023, 'Recall': 0.701149}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(D, A), complex(D, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(E, D), interaction(G, A) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08037115732173443;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4692600462106234;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */


Results
   AUC ROC   = 0.558958
   AUC PR    = 0.01081
   CLL	      = -0.235584
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.737 seconds
Total inference time: 2.404 seconds
AUC ROC: 0.558958


Dataset: 22_twitter_yeast, Fold: 1, Type: Scratch (RDN), Time: 01:34:50
{'Inference time': 2.404, 'AUC ROC': 0.558958, 'F1': nan, 'Learning time': 1.737, 'Precision': [nan, 0.5], 'CLL': -0.235584, 'AUC PR': 0.01081, 'Recall': 0.0}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, D), phenotype(D, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.191258864214365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.798821123460713;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18398669265386927;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2448947584827767;  // std dev = 0,577, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6419407819331452;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.15804201124396353;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), phenotype(E, H) )
%   | | | then return 0.527276450461029;  // std dev = 0,097, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06437846953922438;  // std dev = 0,760, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.39934454675615744;  // std dev = 0,093, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.15782033641691207;  // std dev = 0,520, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0011804360776911868;  // std dev = 0,511, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.10907125609452356;  // std dev = 0,811, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.08889042545076122;  // std dev = 0,798, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.0722909517546853;  // std dev = 0,789, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2560093301981018;  // std dev = 0,074, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.007058667221853683;  // std dev = 0,710, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3054903669426573;  // std dev = 0,202, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.2086249286479172;  // std dev = 0,101, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.926385
   AUC PR    = 0.119028
   CLL	      = -0.265562
   Precision = 0.090995 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.16566


Total learning time: 1.298 seconds
Total inference time: 12.3 seconds
AUC ROC: 0.926385


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.213635
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.704 seconds
Parameter learned model CLL: -0.213635


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,true,false': 'interaction(G, D), phenotype(D, H)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.816, 2, 1], 'true': [0.0, 0, 1], 'false,true,true,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,false,true': [0.042, 0, 3], 'false,true,false,false': [0.042, 3, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,true': [0.061, 0, 3], 'false,true,false,false': [0.037, 3, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.577, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'phenotype(A, G), phenotype(E, H)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.097, 0, 2], 'false,false,false,true': [0.76, 4, 2], 'false,false,false,false': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [0.511, 3, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true,false': [0.52, 1, 1], 'false,true,true,false': [0.093, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(D, A), phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true': 'interaction(A, D), interaction(E, C)'}, {'true,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 1], 'false,true': [0.811, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(F, A)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [0.798, 4, 4], 'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(A, D), phenotype(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [0.789, 4, 4], 'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'false,false,true,true': [0.074, 0, 2], 'false,false,true,false': [0.71, 4, 2], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, F)'}, {'true,true,true': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,true,false': [0.202, 0, 4], 'true,false': [0.101, 4, 0], 'false,true,false': [0.0, 1, 0], 'false,true,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.2469135802469134], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true': [0.25, 0.25000000000000006], 'false,true,false': [0.22222222222222224, 0.22222222222222224], 'false,true,true': [nan, 0.25], 'false': [0.24999999999999986, 0.0]}, {'': [0.0, 0.23546907220043278], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true': [0.25000000000000006, 0.2420689432274787], 'false,true,false': [0.0005911423735001087, 0.0005911423735000207], 'false,true,true': [0.0, 0.0], 'false': [0.24405203606408005, 0.0]}, {'': [0.0, 0.15673089619659375], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true': [0.1667085109942189, 0.16085407984685174], 'false,true,false': [0.00125520879640099, 0.00046671620757826143], 'false,true,true': [nan, 0.1667085109942189], 'false': [0.16231931423799167, 0.0]}, {'': [0.0, 0.10875320077849604], 'true': [0.0, nan], 'false,false,false': [0.09623736547483042, 0.0], 'false,false': [nan, 0.08586235006970033], 'false,true': [0.0047027382403261875, nan], 'false,true,true': [0.0047027382403261875, nan], 'false': [0.0047027382403261875, 0.08586235006970032]}, {'': [0.0, 0.0890101055103421], 'false,false,true': [nan, 0.0], 'true': [0.0, nan], 'false,false,false': [0.06530648717225769, nan], 'false,false': [0.0, 0.06530648717225769], 'false,true': [0.004348881455948805, 0.13542474412467617], 'false,true,true': [nan, 0.004348881455948805], 'false': [0.08447029883531151, 0.053655093476034865]}, {'': [0.0, 0.07682597419540359], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.0], 'true,true,true': [0.0, nan], 'false': [0.08223639914280631, 0.0], 'false,false': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.07355570289510618], 'false,false': [0.07962657872253516, 0.0], 'true': [0.0, nan], 'false': [nan, 0.07355570289510621], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.07131190244180827], 'false,false': [0.07787243802037737, 0.0], 'true': [0.0, nan], 'false': [nan, 0.07131190244180827], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.06977357192506684], 'false,false': [0.07669933652202977, 0.0], 'false,false,true': [0.002721407701600592, 0.08405745331220309], 'false,false,false': [0.0, nan], 'false': [nan, 0.06977357192506684]}, {'': [0.06513309470022023, 0.0], 'true,true': [0.0, 0.010203592264779515], 'false,true': [nan, 0.0], 'false': [0.0, nan], 'true': [0.012867919387222237, 0.002561277190785513]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true;interaction(D, E), interaction(E, A).;true;true
2;false;interaction(D, A).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(J, A).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
4;false;interaction(E, A), interaction(A, F).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(G, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7670719622367217;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.23292803776327828;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7928704541030663;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1555325621642444;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.20535640775413577;  // std dev = 0,565, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6358751351185145;  // std dev = 0,092, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1361803819197681;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return 0.497844212204347;  // std dev = 0,080, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A) )
%   | | then return 0.06926583068154725;  // std dev = 0,762, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then return 0.23464707684985506;  // std dev = 0,555, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.04070312816142782;  // std dev = 0,586, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then return 0.18290086879244488;  // std dev = 0,547, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.03470765226290661;  // std dev = 0,581, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return -0.017353920428482036;  // std dev = 0,650, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.1905430239462801;  // std dev = 0,385, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return -0.0015481816010830356;  // std dev = 0,360, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.11421965069022133;  // std dev = 0,682, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then return 0.09956008948508167;  // std dev = 0,520, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.01506246603513877;  // std dev = 0,566, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.29806962025873607;  // std dev = 0,246, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.20498793317877434;  // std dev = 0,190, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.930471
   AUC PR    = 0.116472
   CLL	      = -0.340521
   Precision = 0.081967 at threshold = 0.5
   Recall    = 0.817308
   F1        = 0.148992


Total learning time: 1.462 seconds
Total inference time: 5.757 seconds
AUC ROC: 0.930471


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.214648
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.697 seconds
Refined model CLL: -0.214648


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.926385
   AUC PR    = 0.119028
   CLL	      = -0.265562
   Precision = 0.090995 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.16566


Total learning time: 4.161 seconds
Total inference time: 12.3 seconds
AUC ROC: 0.926385
Total revision time: 4.161
Best scored revision CLL: -0.213635


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:35:13
{'Inference time': 12.3, 'AUC ROC': 0.926385, 'parameter_5': {'Inference time': 12.3, 'AUC ROC': 0.926385, 'F1': 0.16566, 'Learning time': 1.298, 'Precision': [0.090995, 0.5], 'CLL': -0.265562, 'AUC PR': 0.119028, 'Recall': 0.923077}, 'F1': 0.16566, 'Learning time': 4.161, 'Precision': [0.090995, 0.5], 'CLL': -0.265562, 'AUC PR': 0.119028, 'Recall': 0.923077}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.2570785384897485;  // std dev = 0,728, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.00903666448010208;  // std dev = 0,760, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return -0.07469270344614616;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, E) )
%   | then return 0.378943162047045;  // std dev = 0,273, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.033074238727453756;  // std dev = 0,751, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return -0.061766647740895166;  // std dev = 0,470, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, E) )
%   | then return 0.30285341782949227;  // std dev = 0,252, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.02792185093582883;  // std dev = 0,749, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.2022454772352796;  // std dev = 0,114, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D) )
%   | then return 0.14942472525937353;  // std dev = 0,608, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09232430707782407;  // std dev = 0,648, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return -0.05525419520496622;  // std dev = 0,425, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( phenotype(A, E), enzyme(A, F) )
%   | then return -0.031560415871783994;  // std dev = 0,199, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.21616936278287666;  // std dev = 0,723, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.1694775578742486;  // std dev = 0,119, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D) )
%   | then return 0.11298913966785011;  // std dev = 0,546, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09605281674120368;  // std dev = 0,623, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.500003
   AUC PR    = 0.006332
   CLL	      = -0.638194
   Precision = 0.006332 at threshold = 0.5
   Recall    = 0.307692
   F1        = 0.012408


Total learning time: 2.101 seconds
Total inference time: 2.624 seconds
AUC ROC: 0.500003


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:35:18
{'Inference time': 2.624, 'AUC ROC': 0.500003, 'F1': 0.012408, 'Learning time': 2.101, 'Precision': [0.006332, 0.5], 'CLL': -0.638194, 'AUC PR': 0.006332, 'Recall': 0.307692}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.499982
   AUC PR    = 0.006332
   CLL	      = -0.221009
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.992 seconds
Total inference time: 1.765 seconds
AUC ROC: 0.499982


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:35:21
{'Inference time': 1.765, 'AUC ROC': 0.499982, 'F1': nan, 'Learning time': 0.992, 'Precision': [nan, 0.5], 'CLL': -0.221009, 'AUC PR': 0.006332, 'Recall': 0.0}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), complex(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, D), complex(D, H) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4295775065280836;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.808741135785635;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.16932078898570713;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8068522117024586;  // std dev = 0,042, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17904207849755502;  // std dev = 0,058, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( complex(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.308741135785635;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), complex(A, F) )
%   | | | then return -0.1080157087400169;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.24338415685939793;  // std dev = 0,820, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6513939920217288;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1543010131406389;  // std dev = 0,051, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7564123687585864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.24358763124141355;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), complex(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5371374282740119;  // std dev = 0,084, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.09804062358787222;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10545400335503749;  // std dev = 1,184, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.19576821930211952;  // std dev = 0,562, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4059338184445552;  // std dev = 0,081, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.11685090226047519;  // std dev = 0,731, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15511210341084916;  // std dev = 0,552, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05051645673162416;  // std dev = 0,914, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), complex(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.09284706937873488;  // std dev = 1,209, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12127906392049084;  // std dev = 0,545, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.07588584443693382;  // std dev = 1,192, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.09401692792723437;  // std dev = 0,540, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.06181048653940724;  // std dev = 1,180, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07249604748360261;  // std dev = 0,538, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2671043683617187;  // std dev = 0,066, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.019231987586899042;  // std dev = 1,122, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.05572109547234258;  // std dev = 0,536, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3564872661191692;  // std dev = 0,260, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.20439834462730808;  // std dev = 0,152, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.4212373777709809;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.3357472448811027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.972321
   AUC PR    = 0.143455
   CLL	      = -0.257653
   Precision = 0.091251 at threshold = 0.5
   Recall    = 0.932692
   F1        = 0.166238


Total learning time: 1.564 seconds
Total inference time: 12.493 seconds
AUC ROC: 0.972321


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.252578
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.858 seconds
Parameter learned model CLL: -0.252578


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,true,false': 'interaction(G, D), complex(D, H)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), complex(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false,true': [0.866, 3, 1], 'false,true,false,false': [1.309, 3, 4], 'true': [0.0, 0, 2], 'false,true,true,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,true,false,false': [0.058, 6, 0], 'false,false,false,true': [0.707, 1, 1], 'false,true,true,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.042, 0, 5], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,true,true,false': [0.054, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), complex(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false,true': [0.063, 0, 5], 'false,true,false,false': [0.051, 6, 0], 'true': [0.0, 0, 2], 'false,true,true,false': [0.82, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'complex(A, G), complex(E, H)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.184, 8, 5], 'false,false,false,false': [0.562, 1, 1], 'false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.084, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.552, 1, 1], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [0.914, 6, 3], 'false,false,false,false': [0.0, 0, 0], 'false,true,false': [0.731, 3, 2], 'false,true,true,false': [0.081, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(D, A), complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true': 'interaction(A, D), interaction(E, C)'}, {'true,true,true,false': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.545, 1, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [1.209, 9, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(F, A)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 2], 'false,false,true': [1.192, 9, 7], 'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [0.54, 1, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(A, D), complex(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'false,false,true': [1.18, 9, 7], 'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [0.538, 1, 1], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'false,false,true,true': [0.066, 0, 2], 'false,false,true,false': [1.122, 9, 5], 'false,false,false,true': [0.536, 1, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.26, 0, 7], 'false,true,true,true': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.152, 9, 0], 'false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2469135802469136], 'false,false,true': [nan, 0.25], 'false,true,false': [0.18750000000000003, 0.2448979591836735], 'false,false': [0.25, nan], 'false,true': [0.24000000000000005, 0.2479338842975206], 'false,true,true': [0.0, 0.25], 'false': [0.24609375000000003, 0.25]}, {'': [0.0, 0.2399826795410912], 'false,true,false': [0.0003537263092648679, 0.0005526973582262035], 'false,false,false': [0.25000000000000006, nan], 'false,false': [nan, 0.25000000000000006], 'false,true': [0.23016276585866727, 0.24145090509191872], 'false,true,true': [0.0, 0.0009625582894765006], 'false': [0.23840174983414614, 0.25000000000000006]}, {'': [0.0, 0.16991293289991885], 'false,false,true': [0.0, 0.0], 'false,true,false': [0.0007970187850136589, 0.000435248117102785], 'false,false': [0.24999999999999997, nan], 'false,true': [0.1541125775228563, 0.1615445921422494], 'false,true,true': [0.0, 0.167944348794913], 'false': [0.15954585222722267, 0.24999999999999997]}, {'': [0.0, 0.11756709192012761], 'true': [0.0, nan], 'false,false,false': [0.10787243413001593, 0.15785374942340044], 'false,false': [nan, 0.1154791566031585], 'false,true': [0.003490358316223463, 0.0], 'false,true,true': [nan, 0.003490358316223463], 'false': [0.0919827183368286, 0.1154791566031585]}, {'': [0.0, 0.10496447335468029], 'false,false,true': [nan, 0.15209784939021384], 'true': [0.0, nan], 'false,false,false': [0.09273417846723864, nan], 'false,false': [0.15209784939021384, 0.09273417846723864], 'false,true': [0.00328098212566999, 0.10690240805363944], 'false,true,true': [nan, 0.00328098212566999], 'false': [0.09435117052921793, 0.10515504828361774]}, {'': [0.0, 0.09776687238746402], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.14835969358710954], 'true,true,true': [nan, 0.0], 'false': [0.09135294992488362, 0.14835969358710954], 'false,false': [0.14835969358710954, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0952129929140013], 'false,false': [0.08882462695996297, 0.14602771060094605], 'true': [0.0, nan], 'false,false,false': [0.14602771060094605, nan], 'false': [nan, 0.0952129929140013]}, {'': [0.0, 0.09342886143884786], 'false,false': [0.08701860223243725, 0.144609440678851], 'true': [nan, 0.0], 'false,false,false': [0.144609440678851, nan], 'false': [nan, 0.09342886143884788]}, {'': [0.0, 0.09217742286680902], 'false,false': [0.08572620828259403, 0.14376020115050137], 'false,false,true': [0.0021509172114942826, 0.0899854459345933], 'false,false,false': [0.14376020115050137, nan], 'false': [nan, 0.09217742286680905]}, {'': [0.07471214500489239, 0.14325642973292935], 'true,true': [0.0, 0.009654245957702479], 'false': [0.14325642973292935, nan], 'false,true': [0.0, 0.0], 'false,true,true': [0.0, nan], 'true': [0.01606397372563368, 0.0025720367433456747]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(E, D), interaction(E, A).;true;true
0;false,true,true;interaction(A, D), complex(A, F).;true;true
0;false;interaction(D, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false,true;interaction(D, E), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true,true;interaction(A, E), complex(A, F).;true;true
2;false;interaction(D, A).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
8;false;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), complex(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5724346493852265;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.808741135785635;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.16932078898570713;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7733921696315487;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15916570247507802;  // std dev = 0,117, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.308741135785635;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), complex(A, F) )
%   | | | then return -0.1080157087400169;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.24338415685939793;  // std dev = 0,820, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6116309857707802;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1393087368541747;  // std dev = 0,105, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.7564123687585864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.24358763124141355;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.528466680290006;  // std dev = 0,096, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.09804062358787222;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.16166806612371923;  // std dev = 0,601, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13861582855570354;  // std dev = 0,116, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.28819583724170966;  // std dev = 0,841, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.43571596444859156;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.13296034571741505;  // std dev = 0,130, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( complex(A, F) )
%   | | then return 0.025292333911290103;  // std dev = 0,457, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3038446785366312;  // std dev = 0,645, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), phenotype(F, E) )
%   | | then return -0.16119818604446812;  // std dev = 0,097, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.03390606560890162;  // std dev = 0,405, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then return 0.21729066071086126;  // std dev = 0,610, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.11111859274718476;  // std dev = 0,628, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return -0.07096421219254785;  // std dev = 0,420, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.048525480748948135;  // std dev = 0,546, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.103723173214495;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2472353584274858;  // std dev = 0,507, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( complex(A, F) )
%   | | then return -0.09868283285566096;  // std dev = 0,064, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.021196274668393845;  // std dev = 0,349, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.07314342001595146;  // std dev = 0,514, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08401437386549027;  // std dev = 0,400, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.29937326807912557;  // std dev = 0,127, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.24464022993011536;  // std dev = 0,074, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return -0.0876760223418163;  // std dev = 0,060, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.049123804700370505;  // std dev = 0,745, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.06468356948565362;  // std dev = 0,325, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.23089303988957252;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24511206803132968;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, G) )
%   | | then return -0.10206041809655314;  // std dev = 0,127, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.22701288931231764;  // std dev = 0,198, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | then return 0.28135429902125386;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.17436550574372733;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.973151
   AUC PR    = 0.162655
   CLL	      = -0.342155
   Precision = 0.095382 at threshold = 0.5
   Recall    = 0.913462
   F1        = 0.172727


Total learning time: 2.601 seconds
Total inference time: 8.966 seconds
AUC ROC: 0.973151


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.174504
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.895 seconds
Refined model CLL: -0.174504


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.973151
   AUC PR    = 0.162655
   CLL	      = -0.342155
   Precision = 0.095382 at threshold = 0.5
   Recall    = 0.913462
   F1        = 0.172727


Total learning time: 5.917999999999999 seconds
Total inference time: 8.966 seconds
AUC ROC: 0.973151
Total revision time: 5.917999999999999
Best scored revision CLL: -0.174504


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:35:49
{'Inference time': 8.966, 'AUC ROC': 0.973151, 'F1': 0.172727, 'Learning time': 5.917999999999999, 'parameter_10': {'Inference time': 12.493, 'AUC ROC': 0.972321, 'F1': 0.166238, 'Learning time': 1.564, 'Precision': [0.091251, 0.5], 'CLL': -0.257653, 'AUC PR': 0.143455, 'Recall': 0.932692}, 'Precision': [0.095382, 0.5], 'CLL': -0.342155, 'AUC PR': 0.162655, 'Recall': 0.913462}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( enzyme(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( enzyme(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.11929252631918308;  // std dev = 0,794, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.47151309040164446;  // std dev = 1,123, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(E, A), phenotype(E, C) )
%   | then return -0.1649315197430478;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.11795294372535306;  // std dev = 0,798, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then return 0.1652833146577138;  // std dev = 0,781, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then return 0.3363033088152155;  // std dev = 1,037, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7208085984934915;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(A, E) )
%   | then return 0.26903203764931777;  // std dev = 0,601, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.151756313569139;  // std dev = 0,154, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(A, H) )
%   | | then return -0.015753430721706985;  // std dev = 0,717, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.3126278343875213;  // std dev = 0,783, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5639747317754098;  // std dev = 0,270, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then return 0.1752584437609545;  // std dev = 0,544, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.18678966504301764;  // std dev = 0,156, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(A, I) )
%   | | then return -0.012855668241018067;  // std dev = 0,717, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.23895467501253076;  // std dev = 0,781, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.43289731330429326;  // std dev = 0,292, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), interaction(E, F) )
%   | then return -0.15112098744905625;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.07445875905829732;  // std dev = 0,585, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.32605732811875093;  // std dev = 0,157, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return -0.06981599280248701;  // std dev = 0,510, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.19800128263362748;  // std dev = 0,978, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then return 0.11014843734336668;  // std dev = 0,437, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.1701915048854391;  // std dev = 0,146, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then return -0.08470287130626868;  // std dev = 0,357, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then return 0.16069906117403232;  // std dev = 0,927, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.33679762636827265;  // std dev = 0,289, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(A, E) )
%   | then return 0.13821457839764625;  // std dev = 0,409, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.1273927760934034;  // std dev = 0,119, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then return -0.07098373497353642;  // std dev = 0,355, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then return 0.12491438851956702;  // std dev = 0,921, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.2720813861839796;  // std dev = 0,261, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then return 0.08481448466886082;  // std dev = 0,383, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.1438143263258131;  // std dev = 0,138, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(A, I) )
%   | | then return -0.02405992964361068;  // std dev = 0,594, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.06184802761617695;  // std dev = 0,782, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.22387150368935918;  // std dev = 0,233, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), interaction(E, F) )
%   | then return -0.13990384557211646;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.028789910308649014;  // std dev = 0,383, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( complex(G, I), interaction(G, J) )
%   | | then return 0.029156111364212034;  // std dev = 0,380, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.26153626679497183;  // std dev = 0,281, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.006761411237196767;  // std dev = 0,854, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.499915
   AUC PR    = 0.006333
   CLL	      = -0.838475
   Precision = 0.00633 at threshold = 0.5
   Recall    = 0.596154
   F1        = 0.012528


Total learning time: 3.45 seconds
Total inference time: 3.49 seconds
AUC ROC: 0.499915


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:35:56
{'Inference time': 3.49, 'AUC ROC': 0.499915, 'F1': 0.012528, 'Learning time': 3.45, 'Precision': [0.00633, 0.5], 'CLL': -0.838475, 'AUC PR': 0.006333, 'Recall': 0.596154}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( enzyme(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.49988
   AUC PR    = 0.00633
   CLL	      = -0.244791
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.17 seconds
Total inference time: 2.131 seconds
AUC ROC: 0.49988


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:36:00
{'Inference time': 2.131, 'AUC ROC': 0.49988, 'F1': nan, 'Learning time': 1.17, 'Precision': [nan, 0.5], 'CLL': -0.244791, 'AUC PR': 0.00633, 'Recall': 0.0}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(G, D), enzyme(D, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.23314893509951226;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8195467402759845;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18045325972401552;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8119255496456574;  // std dev = 0,100, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17266576078189197;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.191258864214365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1970354578167423;  // std dev = 1,076, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6591345340333563;  // std dev = 0,137, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14937431704722365;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6531942943559135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1634047773903601;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), enzyme(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4961921471773392;  // std dev = 0,177, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.18291860587705597;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.12021319845612795;  // std dev = 1,546, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.17635161013528777;  // std dev = 0,451, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.38205148886295687;  // std dev = 0,167, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.09812166955601359;  // std dev = 0,944, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14293296759209528;  // std dev = 0,436, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09774796757474571;  // std dev = 1,232, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2998000182761068;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.08960258014736128;  // std dev = 1,550, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1150583099689829;  // std dev = 0,426, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( enzyme(A, F), interaction(G, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.24084537399718786;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07310666289372207;  // std dev = 1,530, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.09221055625888692;  // std dev = 0,419, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.18459236719399139;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.059385427017175196;  // std dev = 1,515, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07369046540017017;  // std dev = 0,414, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15700404910402585;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.25870177281150464;  // std dev = 0,134, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.02892888452351916;  // std dev = 1,465, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.05878375450137774;  // std dev = 0,411, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.1329368760701185;  // std dev = 0,000706, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.36718343190146085;  // std dev = 0,395, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.21047683584229143;  // std dev = 0,105, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.33645951730715684;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.24278204170356793;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97345
   AUC PR    = 0.16321
   CLL	      = -0.27838
   Precision = 0.092421 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.168634


Total learning time: 1.836 seconds
Total inference time: 12.203 seconds
AUC ROC: 0.97345


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.251496
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.893 seconds
Parameter learned model CLL: -0.251496


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,true,false': 'interaction(G, D), enzyme(D, H)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.936, 10, 6], 'true': [0.0, 0, 4], 'false,true,true,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'enzyme(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 3], 'false,false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.1, 0, 7], 'false,true,false,false': [0.0, 10, 0], 'true': [0.0, 0, 4], 'false,true,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,true': [0.137, 0, 7], 'false,true,false,false': [0.0, 10, 0], 'true': [0.0, 0, 4], 'false,true,true,false': [1.076, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, J)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(K, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'enzyme(A, G), enzyme(E, H)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 3], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.546, 13, 8], 'false,false,false,false': [0.451, 1, 1], 'false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.177, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 3], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.436, 1, 1], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.232, 9, 6], 'false,false,false,false': [0.0, 0, 0], 'false,true,false': [0.944, 5, 3], 'false,true,true,false': [0.167, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(D, A), enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true': 'interaction(A, D), interaction(E, C)'}, {'true,true,true,false': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.426, 1, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 1], 'false,true': [1.55, 14, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, I)', 'false,false': 'interaction(H, A)', 'false,true': 'enzyme(A, F), interaction(G, E)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 3], 'false,false,true': [1.53, 14, 10], 'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [0.419, 1, 1], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(A, D), enzyme(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.515, 14, 10], 'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [0.414, 1, 1], 'true,false': [0.018, 0, 3], 'false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'false,false,true,true': [0.134, 0, 2], 'false,false,true,false': [1.465, 14, 8], 'false,false,false,true': [0.411, 1, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true': [0.017, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.000706, 0, 3], 'true,true,false': [0.395, 0, 11], 'false,true,true,true': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.105, 14, 0], 'false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24408284023668642], 'false,false,true': [nan, 0.25], 'false,true,false': [0.0, 0.23437499999999994], 'false,false': [0.25, nan], 'false,true': [0.24489795918367335, 0.24221453287197225], 'false,true,true': [nan, 0.24489795918367335], 'false': [0.24305555555555558, 0.25]}, {'': [0.0, 0.23948450926789772], 'false,false,true': [nan, 0.0], 'false,false,false': [0.0, nan], 'false,true,false': [0.0014245662860410085, -5.551115123125783e-18], 'false,false': [0.0, 0.0], 'false,true': [0.2448979591836735, 0.23539421033875302], 'false,true,true': [-1.4802973661668753e-16, 0.0], 'false': [0.2382149047372546, 0.25000000000000006]}, {'': [0.0, 0.16189740301494826], 'false,false,true': [0.0, 0.0], 'false,true,false': [0.0026754297378131903, -1.1102230246251566e-17], 'false,false': [0.1667085109942189, nan], 'false,true': [0.16550679808715205, 0.1594340328653789], 'false,true,true': [nan, 0.16550679808715205], 'false': [0.161242876975959, 0.1667085109942189]}, {'': [-3.700743415417188e-17, 0.11355661964921161], 'false,false,true': [nan, 0.0], 'true': [-3.700743415417188e-17, nan], 'false,false,false': [0.11378462494114644, 0.10152346293862521], 'false,false': [0.0, 0.1129686522399179], 'false,true': [0.015747929953328937, 0.0], 'false,true,true': [nan, 0.015747929953328937], 'false': [0.1129856010609099, 0.1116760367814223]}, {'': [0.0, 0.10280088515147677], 'false,false,true': [nan, 0.09493506645812307], 'true': [0.0, nan], 'false,false,false': [0.10112135854378979, nan], 'false,false': [0.09493506645812307, 0.10112135854378979], 'false,true': [0.013941666400300895, 0.11144227617926075], 'false,true,true': [nan, 0.013941666400300895], 'false': [0.10484073699013648, 0.1006054990139779]}, {'': [0.00037343219334751154, 0.09943322489914365], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.09054349797948426], 'true,true,true': [0.0, 0.0], 'false': [0.10012418976957028, 0.09054349797948426], 'false,false': [0.09054349797948426, nan], 'true': [0.0, 0.0]}, {'': [0.0, 0.09416805916229443], 'false': [0.0, 0.09676600238795656], 'false,false,false': [0.08767408944604865, nan], 'false,false': [0.09749558805042009, 0.08767408944604865], 'false,true': [nan, 0.0], 'true': [0.0, nan]}, {'': [9.481734921177459e-05, 0.09484135940752297], 'false,false': [0.09557721073301308, 0.08582225046489811], 'true': [0.0, 0.00011237611758432853], 'false,false,false': [0.08582225046489811, nan], 'false': [nan, 0.09484135940752295]}, {'': [7.233952786942291e-05, 0.09344983022854379], 'false,false': [0.09417547950021089, 0.08463621501385603], 'false,false,true': [0.008988820469670603, 0.09752008954757643], 'false,false,false': [0.08463621501385603, nan], 'false': [nan, 0.09344983022854379]}, {'': [0.08014917035848003, 0.08388019592129374], 'true,true': [1.661950406808832e-07, 0.014214579093638123], 'false': [0.08388019592129374, nan], 'false,true': [0.0, 0.0], 'false,true,true': [0.0, nan], 'true': [0.02040719374966276, 0.0007817068624451085]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true,false;interaction(G, D), enzyme(D, H).;true;true
0;false,true;interaction(E, D), interaction(E, A).;true;true
0;false;interaction(D, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;enzyme(A, H).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true;interaction(D, E), interaction(E, A).;true;true
2;false;interaction(D, A).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true,true;interaction(D, A), enzyme(A, F).;true;true
5;true;interaction(A, D), interaction(E, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), enzyme(A, E).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, D), enzyme(D, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.23314893509951226;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8168959209342729;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1790266864914083;  // std dev = 0,024, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8119255496456574;  // std dev = 0,100, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17266576078189197;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( enzyme(A, H) )
%   | | then return -0.191258864214365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.24313041252320228;  // std dev = 0,816, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13381045358694288;  // std dev = 0,679, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6591345340333563;  // std dev = 0,137, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14937431704722365;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.6531942943559135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1634047773903601;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.4825072606031085;  // std dev = 0,158, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.2013710306827967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, G), interaction(H, A) )
%   | | | then return 0.10182192662461129;  // std dev = 1,489, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.29221089016534624;  // std dev = 0,533, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( complex(A, F) )
%   | | then return -0.15127688712664777;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0062941492948315955;  // std dev = 0,556, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.47329950038693613;  // std dev = 0,323, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15804672802223993;  // std dev = 0,070, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.3071666824874891;  // std dev = 0,523, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( interaction(D, A), enzyme(A, F) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2272680844481657;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then return -0.029825597904618008;  // std dev = 0,462, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12380137667812362;  // std dev = 0,800, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.16965106431130442;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.09270071527446709;  // std dev = 0,721, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.38297881308340354;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.1898369538169451;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, E), enzyme(A, F) )
%   | | then return -0.02569601902178807;  // std dev = 0,465, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.034301010804360724;  // std dev = 0,865, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.1429392270961231;  // std dev = 0,778, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1721782309584642;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( phenotype(H, F), interaction(H, H) )
%   | | then return -0.03085646968261504;  // std dev = 0,527, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.13378463091653553;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then return -0.07394139194757174;  // std dev = 0,273, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.0844695109396299;  // std dev = 0,559, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.188500124231731;  // std dev = 0,744, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14994309967674932;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( enzyme(F, D), interaction(F, F) )
%   | | | then return 0.035843958024267375;  // std dev = 0,502, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11922938777033873;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.11627823572873178;  // std dev = 0,530, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then return -0.0643882841832196;  // std dev = 0,274, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.16252862506233698;  // std dev = 0,663, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08106694987740794;  // std dev = 0,337, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13471436276359647;  // std dev = 0,000468, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.3092499982707615;  // std dev = 0,217, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.19787522233992563;  // std dev = 0,096, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.1225030107580255;  // std dev = 0,088, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.153329449796433;  // std dev = 0,065, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.21532711442766314;  // std dev = 0,075, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | then return 0.1954549487588736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.1488196716734772;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.968332
   AUC PR    = 0.138972
   CLL	      = -0.281063
   Precision = 0.077246 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.142085


Total learning time: 2.784 seconds
Total inference time: 11.783 seconds
AUC ROC: 0.968332


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.189176
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.955 seconds
Refined model CLL: -0.189176


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.968332
   AUC PR    = 0.138972
   CLL	      = -0.281063
   Precision = 0.077246 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.142085


Total learning time: 6.468 seconds
Total inference time: 11.783 seconds
AUC ROC: 0.968332
Total revision time: 6.468
Best scored revision CLL: -0.189176


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:36:31
{'parameter_15': {'Inference time': 12.203, 'AUC ROC': 0.97345, 'F1': 0.168634, 'Learning time': 1.836, 'Precision': [0.092421, 0.5], 'CLL': -0.27838, 'AUC PR': 0.16321, 'Recall': 0.961538}, 'Inference time': 11.783, 'AUC ROC': 0.968332, 'F1': 0.142085, 'Learning time': 6.468, 'Precision': [0.077246, 0.5], 'CLL': -0.281063, 'AUC PR': 0.138972, 'Recall': 0.884615}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), interaction(F, F) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.40360348055405776;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), interaction(F, F) )
%   | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.1555325621642444;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4101826458848703;  // std dev = 1,112, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37304001932572034;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.520235580369259;  // std dev = 0,766, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( phenotype(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.32485083052426694;  // std dev = 0,565, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1790698104003236;  // std dev = 0,118, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(G, I), complex(H, J) )
%   | | | then return 0.1297967323759755;  // std dev = 1,093, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3954961629467889;  // std dev = 0,776, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7356258891472933;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.4109456772731637;  // std dev = 0,743, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( phenotype(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2565731147617094;  // std dev = 0,534, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.15465624379730541;  // std dev = 0,105, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.018609080212813916;  // std dev = 0,838, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2798512930808225;  // std dev = 1,019, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5714404583721275;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then return 0.44897276040659206;  // std dev = 0,285, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.09561409023984825;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, F) )
%   | | then return -0.11162919159150778;  // std dev = 0,061, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.23679895480462307;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( phenotype(G, I), complex(H, J) )
%   | | then return 0.06506933544669782;  // std dev = 1,105, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.26821554697396854;  // std dev = 0,720, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.42954449318873555;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.269689698825085;  // std dev = 0,072, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then return -0.1548530515620533;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(E, F), interaction(F, E) )
%   | | | then return 0.4399099773401711;  // std dev = 0,139, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.127567705442966;  // std dev = 1,069, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.0906467140592574;  // std dev = 0,046, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10524986528738439;  // std dev = 0,960, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22024931545524057;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then return -0.13616219748986944;  // std dev = 0,097, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(E, F), interaction(F, E) )
%   | | | then return 0.3383537688289962;  // std dev = 0,124, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10017712611957068;  // std dev = 1,067, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.08347496887194977;  // std dev = 0,042, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.08254920530877792;  // std dev = 0,960, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.18493587235700326;  // std dev = 0,056, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return -0.08803297483096005;  // std dev = 0,484, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.289235498917855;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10521835245454761;  // std dev = 0,169, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.2476594824228834;  // std dev = 0,846, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.035308948528190665;  // std dev = 0,875, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.13987936446240032;  // std dev = 0,384, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( phenotype(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.06512269422164688;  // std dev = 0,000975, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07747023651912595;  // std dev = 0,341, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09967380883610262;  // std dev = 0,098, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return 0.12505773292162795;  // std dev = 0,930, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15083601872117738;  // std dev = 0,808, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.22151735435911554;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then return 0.1960678907352911;  // std dev = 0,144, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.060759716682418106;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, F) )
%   | | then return -0.07051822622411688;  // std dev = 0,035, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.19307180990355258;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( complex(G, I), complex(H, I) )
%   | | then return -0.09425186639701921;  // std dev = 0,782, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, J), location(G, J) )
%   | | | then return 0.2893767351443523;  // std dev = 0,184, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.049290571953719595;  // std dev = 0,838, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.18621697426969586;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.697317
   AUC PR    = 0.014601
   CLL	      = -0.517437
   Precision = 0.009991 at threshold = 0.5
   Recall    = 0.413462
   F1        = 0.01951


Total learning time: 8.51 seconds
Total inference time: 19.44 seconds
AUC ROC: 0.697317


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:36:59
{'Inference time': 19.44, 'AUC ROC': 0.697317, 'F1': 0.01951, 'Learning time': 8.51, 'Precision': [0.009991, 0.5], 'CLL': -0.517437, 'AUC PR': 0.014601, 'Recall': 0.413462}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), interaction(F, F) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */


Results
   AUC ROC   = 0.562288
   AUC PR    = 0.00867
   CLL	      = -0.212965
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.38 seconds
Total inference time: 2.331 seconds
AUC ROC: 0.562288


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:37:03
{'Inference time': 2.331, 'AUC ROC': 0.562288, 'F1': nan, 'Learning time': 1.38, 'Precision': [nan, 0.5], 'CLL': -0.212965, 'AUC PR': 0.00867, 'Recall': 0.0}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(G, D), function(D, H) )
%   | | | then return 0.44638422921715937;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.827334239218108;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16479557373964188;  // std dev = 0,043, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8030113511579273;  // std dev = 0,064, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.18231957201761032;  // std dev = 0,089, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.191258864214365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), function(A, F) )
%   | | | then return -0.10845247961046359;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.15984814774602765;  // std dev = 1,133, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.64667162004128;  // std dev = 0,096, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.15678829439600359;  // std dev = 0,079, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6531942943559135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1634047773903601;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4760016535998852;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( function(A, G), function(E, H) )
%   | | | then return 0.5584964095847536;  // std dev = 0,117, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12691037245891007;  // std dev = 0,040, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.12835307685716482;  // std dev = 1,777, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.17635161013528777;  // std dev = 0,451, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36075958476046255;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4236273728762616;  // std dev = 0,115, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.10903791636236818;  // std dev = 1,040, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14293296759209528;  // std dev = 0,436, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09376675568355486;  // std dev = 1,443, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3006364196856055;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.0947945871718591;  // std dev = 1,784, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1150583099689829;  // std dev = 0,426, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2635451896060039;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( function(A, G), interaction(H, F) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.24142083614579557;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.07157510970977238;  // std dev = 1,749, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09221055625888692;  // std dev = 0,419, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), function(A, E) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.19999487707158892;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0.21565514385687712;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.05810582993608824;  // std dev = 1,733, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.07369046540017017;  // std dev = 0,414, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1570334185712091;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( function(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.18141004835775365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2809617114871767;  // std dev = 0,095, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0319449613240547;  // std dev = 1,684, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.05878375450137774;  // std dev = 0,411, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13913458479826443;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3604189092404083;  // std dev = 0,390, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.210487876243296;  // std dev = 0,164, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.33645951730715684;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.24278204170356793;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.975154
   AUC PR    = 0.147543
   CLL	      = -0.265558
   Precision = 0.093948 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.171759


Total learning time: 1.905 seconds
Total inference time: 12.578 seconds
AUC ROC: 0.975154


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.248572
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.956 seconds
Parameter learned model CLL: -0.248572


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,true,false': 'interaction(G, D), function(D, H)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), function(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false,true': [2.029, 7, 10], 'false,true,false,false': [1.225, 6, 2], 'true': [0.0, 0, 4], 'false,true,true,false': [1.369, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'function(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 3], 'false,true,false,true': [0.064, 0, 12], 'false,true,false,false': [0.089, 13, 0], 'true': [0.0, 0, 4], 'false,true,true,false': [0.043, 6, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), function(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false,true': [0.096, 0, 12], 'false,true,false,false': [0.079, 13, 0], 'true': [0.0, 0, 4], 'false,true,true,false': [1.133, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, J)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(K, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'function(A, G), function(E, H)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 3], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.117, 0, 2], 'false,false,false,true': [1.777, 17, 12], 'false,false,false,false': [0.451, 1, 1], 'false,true,false': [0.04, 2, 0], 'false,true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 3], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.436, 1, 1], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.443, 13, 9], 'false,false,false,false': [0.0, 0, 0], 'false,true,false': [1.04, 6, 4], 'false,true,true,false': [0.115, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(D, A), function(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true': 'interaction(A, D), interaction(E, C)'}, {'true,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.426, 1, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 3], 'false,true': [1.784, 19, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J)', 'true,false': 'interaction(E, A), interaction(A, E)', 'false,false': 'interaction(I, A)', 'false,true': 'function(A, G), interaction(H, F)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 3], 'false,false,true': [1.749, 19, 14], 'false,false,false,true': [0.419, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'interaction(I, A)', 'false,true': 'interaction(G, A), interaction(F, G)', 'true': 'interaction(A, D), function(A, E)'}, {'true,true': [0.0, 0, 3], 'false,true,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.414, 1, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [1.733, 19, 14], 'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false,false': 'interaction(G, A)', 'false,true': 'function(A, E)', 'false,true,true': 'interaction(F, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'false,false,true,true': [0.095, 0, 2], 'false,false,true,false': [1.684, 19, 12], 'false,false,false,true': [0.411, 1, 1], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [0.015, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.019, 0, 4], 'true,true,false': [0.39, 0, 15], 'false,true,true,true': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.164, 19, 0], 'false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24691358024691315], 'false,false,true': [nan, 0.25], 'false,true,false': [0.24221453287197228, 0.18750000000000003], 'false,false': [0.25, nan], 'false,true': [0.2222222222222221, 0.24960000000000004], 'false,true,true': [0.0, 0.2343749999999999], 'false': [0.24653979238754278, 0.25]}, {'': [0.0, 0.2402437741755859], 'false,false,true': [0.0, 0.0], 'false,true,false': [0.0003437214245280244, 0.0006150376259008375], 'false,false': [0.25000000000000006, nan], 'false,true': [0.2189445918712845, 0.24281571207946462], 'false,true,true': [0.0, 0.000309699220400005], 'false': [0.239524713180723, 0.25000000000000006]}, {'': [0.0, 0.16089769481929447], 'false,false,true': [0.0, 0.0], 'false,true,false': [0.00076828058110238, 0.0004826036093688889], 'false,false': [0.1667085109942189, nan], 'false,true': [0.14968697134817266, 0.16174846794904965], 'false,true,true': [0.0, 0.16039948425115125], 'false': [0.1604570185953984, 0.1667085109942189]}, {'': [0.000641410175062973, 0.10971456731425215], 'false,false,true': [nan, 0.0], 'true': [-3.700743415417188e-17, 0.0], 'false,false,false': [0.10889163056323944, 0.10152346293862521], 'false,false': [0.0, 0.10855531156291819], 'false,true': [0.00680538476500292, 0.0008126843181443799], 'false,true,true': [0.00680538476500292, nan], 'false': [0.1212546487594362, 0.10764030956064644]}, {'': [0.00030071649129441436, 0.09913272718118499], 'false,false,true': [nan, 0.09493506645812307], 'true': [0.0, 0.0], 'false,false,false': [0.09464937906195908, nan], 'false,false': [0.09493506645812307, 0.09464937906195908], 'false,true': [0.006669253317905133, 0.10815419122283843], 'false,true,true': [nan, 0.006669253317905133], 'false': [0.10498538575947552, 0.09485784245836017]}, {'': [0.0003875608876585529, 0.09346898585170936], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.09054349797948426], 'true,true,true': [0.0, nan], 'false': [0.09361826123684948, 0.09054349797948426], 'false,false': [0.09054349797948426, nan], 'true': [0.0, 0.0]}, {'': [0.0005424548168337304, 0.0906575340328834], 'false': [0.0, 0.09245751574073213], 'false,false,false': [0.08767408944604865, nan], 'true,false': [nan, 0.0], 'false,false': [0.09272308769869342, 0.08767408944604865], 'false,true': [0.0, nan], 'false,true,true': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [9.831295795718203e-05, 0.0888371092628271], 'false,true,false': [0.0, nan], 'false': [0.0, 0.09069359104779326], 'false,false,false': [0.08582225046489811, nan], 'false,false': [0.0909749449039616, 0.08582225046489811], 'false,true': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [5.520098727136713e-05, 0.08742908619763257], 'false,false,true': [0.004521906391939626, 0.09145124555891984], 'false,false,false': [0.08463621501385603, nan], 'false,false': [0.08971317651430194, 0.08463621501385603], 'false,true': [0.0, nan], 'false,true,true': [0.0, nan], 'false': [0.0, 0.08943049893415372]}, {'': [0.07750805047128008, 0.08388019592129374], 'true,true': [9.490748332391385e-05, 0.010120595499134858], 'false': [0.08388019592129374, nan], 'false,true': [0.0, 0.0], 'false,true,true': [0.0, nan], 'true': [0.01614844271638503, 0.0014116061856993837]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(E, D), interaction(E, A).;true;true
0;false,true,true;interaction(A, D), function(A, F).;true;true
0;false;interaction(D, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false,true;interaction(D, E), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true,true;interaction(A, E), function(A, F).;true;true
2;false;interaction(D, A).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D), interaction(E, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;true;interaction(A, D), function(A, E).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.4581489350995123;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.827334239218108;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16479557373964188;  // std dev = 0,043, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7927941835770488;  // std dev = 2,98e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.17575920954042817;  // std dev = 0,143, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.191258864214365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), function(A, F) )
%   | | | then return -0.10845247961046359;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.15984814774602765;  // std dev = 1,133, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6339167526012679;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.15196109334573055;  // std dev = 0,127, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.6531942943559135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1634047773903601;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.47879775411751935;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.5598944598435706;  // std dev = 0,115, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.09603867524648024;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.03907079467005069;  // std dev = 0,929, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.262782610736271;  // std dev = 1,306, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36270157889419063;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), interaction(F, F) )
%   | | then if ( interaction(G, A), phenotype(G, E) )
%   | | | then return -0.14412014019057293;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1556824664048993;  // std dev = 0,944, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.12501470971113582;  // std dev = 0,064, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.44687641883767004;  // std dev = 0,147, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2031052565089336;  // std dev = 0,017, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.327936623303794;  // std dev = 0,201, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2538015366752149;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( complex(A, H) )
%   | | then return -0.10318945860221673;  // std dev = 0,055, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0015326908851403726;  // std dev = 0,524, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.1577258553882549;  // std dev = 0,963, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.027091514565773137;  // std dev = 0,568, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.1536268790656292;  // std dev = 0,405, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23875337783698405;  // std dev = 0,539, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2535086502672067;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.20878899707960308;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3239182723326021;  // std dev = 0,161, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13069407112141598;  // std dev = 0,142, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return -0.041779499273297244;  // std dev = 0,376, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1474324428634587;  // std dev = 1,017, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), function(A, E) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1763856619382218;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.20858188284253443;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3971157110416411;  // std dev = 0,182, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12133099573893331;  // std dev = 0,162, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.045674799119470755;  // std dev = 0,716, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.17225835255399552;  // std dev = 0,548, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15260899445578924;  // std dev = 0,000467, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.17623359860471788;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, E), interaction(F, A) )
%   | | then if ( interaction(G, F), location(G, E) )
%   | | | then return 0.05902782802784669;  // std dev = 0,947, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.03326726153740634;  // std dev = 0,682, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.12657288209340356;  // std dev = 0,276, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13853924786431263;  // std dev = 0,016, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.2312266105923988;  // std dev = 0,080, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.25249341478410386;  // std dev = 0,257, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.0847630831132045;  // std dev = 0,064, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1454600082560976;  // std dev = 0,091, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.21327789822508458;  // std dev = 0,184, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | then return 0.22957825111817198;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.11030935392736635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.976368
   AUC PR    = 0.172251
   CLL	      = -0.236133
   Precision = 0.102767 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.18638


Total learning time: 4.16 seconds
Total inference time: 11.067 seconds
AUC ROC: 0.976368


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.172812
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.933 seconds
Refined model CLL: -0.172812


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976368
   AUC PR    = 0.172251
   CLL	      = -0.236133
   Precision = 0.102767 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.18638


Total learning time: 7.954 seconds
Total inference time: 11.067 seconds
AUC ROC: 0.976368
Total revision time: 7.954
Best scored revision CLL: -0.172812


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:37:36
{'Inference time': 11.067, 'AUC ROC': 0.976368, 'parameter_20': {'Inference time': 12.578, 'AUC ROC': 0.975154, 'F1': 0.171759, 'Learning time': 1.905, 'Precision': [0.093948, 0.5], 'CLL': -0.265558, 'AUC PR': 0.147543, 'Recall': 1.0}, 'F1': 0.18638, 'Learning time': 7.954, 'Precision': [0.102767, 0.5], 'CLL': -0.236133, 'AUC PR': 0.172251, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.6189976143448207;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.48512875154616486;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, D) )
%   | | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.36568225360444984;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3406843762384408;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(A, F) )
%   | | then return 0.04510976492720925;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.010659504648091685;  // std dev = 0,358, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11401028548544435;  // std dev = 0,773, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.25730612447937923;  // std dev = 0,409, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2006019634733141;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F) )
%   | | then if ( complex(A, G), interaction(E, H) )
%   | | | then return 0.14453969079626403;  // std dev = 0,282, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.29031038766329065;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.10154528813177323;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09356463774570464;  // std dev = 0,023, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( complex(A, I) )
%   | then return 0.315441509014617;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( location(K, J), interaction(L, K) )
%   | | | then return 0.19188919676412516;  // std dev = 0,504, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 1.132280510796593E-4;  // std dev = 0,865, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.3109185456441335;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then return 0.23293586420782728;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.02710519725386603;  // std dev = 0,299, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.08593006429684118;  // std dev = 0,022, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( complex(A, G) )
%   | then return 0.2517607872132159;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( location(I, H), interaction(J, I) )
%   | | | then return 0.1581778759438516;  // std dev = 0,477, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 9.473349110174223E-5;  // std dev = 0,865, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.24892403038834146;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then return 0.20120059074560753;  // std dev = 0,058, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.09150828068939008;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07942001386511513;  // std dev = 0,020, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( complex(A, F) )
%   | then return 0.2074601806547595;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, G), interaction(H, A) )
%   | | then if ( location(H, G), interaction(I, H) )
%   | | | then return 0.13121469236294978;  // std dev = 0,460, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 7.925993889466259E-5;  // std dev = 0,865, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.2056017956244106;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then return 0.17087599853650506;  // std dev = 0,052, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.08418841127396991;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0738069024004637;  // std dev = 0,019, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( complex(A, F) )
%   | then return 0.17548312495480836;  // std dev = 0,032, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, G), interaction(H, A) )
%   | | then if ( phenotype(H, I), location(H, G) )
%   | | | then return -0.044556703319914306;  // std dev = 0,313, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09283096871539559;  // std dev = 0,916, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.17421093584023595;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, D) )
%   | | then return 0.1480632506728892;  // std dev = 0,046, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.07792736973642728;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06891992637770765;  // std dev = 0,018, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( location(A, F), interaction(G, A) )
%   | then if ( location(G, F), interaction(H, G) )
%   | | then if ( complex(G, I), complex(H, I) )
%   | | | then return -0.01881970720921622;  // std dev = 0,307, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19245724624915722;  // std dev = 0,098, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(J, F), recursion_proteinclass(J, B) )
%   | | | then return 0.19261623625499075;  // std dev = 0,345, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.2936293764915043;  // std dev = 0,458, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.1506628069841838;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.942418
   AUC PR    = 0.077768
   CLL	      = -0.343188
   Precision = 0.042887 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.082246


Total learning time: 29.249 seconds
Total inference time: 79.241 seconds
AUC ROC: 0.942418


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:39:24
{'Inference time': 79.241, 'AUC ROC': 0.942418, 'F1': 0.082246, 'Learning time': 29.249, 'Precision': [0.042887, 0.5], 'CLL': -0.343188, 'AUC PR': 0.077768, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */


Results
   AUC ROC   = 0.961901
   AUC PR    = 0.080794
   CLL	      = -0.166306
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.382 seconds
Total inference time: 10.267 seconds
AUC ROC: 0.961901


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:39:39
{'Inference time': 10.267, 'AUC ROC': 0.961901, 'F1': nan, 'Learning time': 4.382, 'Precision': [nan, 0.5], 'CLL': -0.166306, 'AUC PR': 0.080794, 'Recall': 0.0}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(G, D), function(D, H) )
%   | | | then return 0.40814893509951233;  // std dev = 2,225, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8156735149828546;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16469920285422746;  // std dev = 0,083, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8078128550976373;  // std dev = 0,050, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1861852490888928;  // std dev = 0,061, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.191258864214365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), function(A, F) )
%   | | | then return -0.10846179811496008;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2131194106331117;  // std dev = 1,359, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6523094622393805;  // std dev = 0,074, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.15964309725434767;  // std dev = 0,054, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6531942943559135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1634047773903601;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.48293881317414056;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( function(A, G), function(E, H) )
%   | | | then return 0.5478000487702317;  // std dev = 0,092, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12731147484490749;  // std dev = 0,085, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.15737863729839546;  // std dev = 2,013, 35,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return 0.17635161013528777;  // std dev = 0,451, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36558371011401125;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4141842379356242;  // std dev = 0,090, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.0622486885011276;  // std dev = 1,160, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14293296759209528;  // std dev = 0,436, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.13401980418402828;  // std dev = 1,678, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2922415509168911;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A) )
%   | then return 0.09398601855266074;  // std dev = 2,031, 43,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1150583099689829;  // std dev = 0,426, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.26682727149813035;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( function(A, G), interaction(H, F) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.235634586255419;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.07180589578634489;  // std dev = 1,995, 42,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09221055625888692;  // std dev = 0,419, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), function(A, E) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1958560555513159;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0.21795782922222295;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.05812486574100765;  // std dev = 1,977, 42,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.07369046540017017;  // std dev = 0,414, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1583787600942848;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( function(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.18308793588781413;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2738734082667857;  // std dev = 0,073, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.03557407528125553;  // std dev = 1,935, 40,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.05878375450137774;  // std dev = 0,411, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13933432367783796;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.35416242418259714;  // std dev = 0,446, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.2165728577210554;  // std dev = 0,247, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.33645951730715684;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.24278204170356793;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.975106
   AUC PR    = 0.14849
   CLL	      = -0.275893
   Precision = 0.102061 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.185218


Total learning time: 2.016 seconds
Total inference time: 12.917 seconds
AUC ROC: 0.975106


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.2532
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.996 seconds
Parameter learned model CLL: -0.2532


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,true,false': 'interaction(G, D), function(D, H)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), function(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,false,true': [2.225, 9, 11], 'false,true,false,false': [1.414, 6, 3], 'true': [0.0, 0, 5], 'false,true,true,false': [1.651, 6, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'function(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [2.11e-08, 0, 5], 'false,true,false,true': [0.05, 0, 14], 'false,true,false,false': [0.061, 15, 0], 'true': [0.0, 0, 5], 'false,true,true,false': [0.083, 9, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), function(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,false,true': [0.074, 0, 14], 'false,true,false,false': [0.054, 15, 0], 'true': [0.0, 0, 5], 'false,true,true,false': [1.359, 6, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, J)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(K, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'function(A, G), function(E, H)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 3], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.092, 0, 2], 'false,false,false,true': [2.013, 19, 16], 'false,false,false,false': [0.451, 1, 1], 'false,true,false': [0.085, 5, 0], 'false,true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 3], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.436, 1, 1], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.678, 14, 13], 'false,false,false,false': [0.0, 0, 0], 'false,true,false': [1.16, 10, 5], 'false,true,true,false': [0.09, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(D, A), function(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true': 'interaction(A, D), interaction(E, C)'}, {'true,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.426, 1, 1], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 3], 'false,true': [2.031, 24, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J)', 'true,false': 'interaction(E, A), interaction(A, E)', 'false,false': 'interaction(I, A)', 'false,true': 'function(A, G), interaction(H, F)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 3], 'false,false,true': [1.995, 24, 18], 'false,false,false,true': [0.419, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'interaction(I, A)', 'false,true': 'interaction(G, A), interaction(F, G)', 'true': 'interaction(A, D), function(A, E)'}, {'true,true': [0.0, 0, 3], 'false,true,false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,false,false,true': [0.414, 1, 1], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [1.977, 24, 18], 'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false,false': 'interaction(G, A)', 'false,true': 'function(A, E)', 'false,true,true': 'interaction(F, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'false,false,true,true': [0.073, 0, 2], 'false,false,true,false': [1.935, 24, 16], 'false,false,false,true': [0.411, 1, 1], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [0.015, 0, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.021, 0, 4], 'true,true,false': [0.446, 0, 20], 'false,true,true,true': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.247, 24, 0], 'false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24691358024691315], 'false,false,true': [nan, 0.25], 'false,true,false': [0.2474999999999996, 0.2222222222222221], 'false,false': [0.25, nan], 'false,true': [0.2295918367346937, 0.2497027348394765], 'false,true,true': [0.0, 0.24793388429752045], 'false': [0.24661979448350413, 0.25]}, {'': [0.0, 0.24161514057453964], 'false,false,true': [0.0, 0.0], 'false,true,false': [0.00017585071904413496, 0.00025066720678317277], 'false,false': [0.25000000000000006, nan], 'false,true': [0.22116305089924954, 0.24692889912417354], 'false,true,true': [8.881784197001253e-17, 0.0007704604102055923], 'false': [0.24111266821556787, 0.25000000000000006]}, {'': [-4.4408920985006264e-17, 0.16182453193599586], 'false,false,true': [0.0, 0.0], 'false,true,false': [0.00039000903042315675, 0.00019599033875223142], 'false,false': [0.1667085109942189, nan], 'false,true': [0.14926479666165013, 0.16491041715347973], 'false,true,true': [0.0, 0.16781313317940058], 'false': [0.16152173569829947, 0.1667085109942189]}, {'': [0.0008025863609575912, 0.1112748287473317], 'false,false,true': [nan, 0.0], 'true': [-3.700743415417188e-17, 0.0], 'false,false,false': [0.11582927258747977, 0.10152346293862521], 'false,false': [0.0, 0.11507439183135386], 'false,true': [0.004206979883051631, 0.0014302273423934502], 'false,true,true': [0.004206979883051631, nan], 'false': [0.0952390075209396, 0.11243953654260827]}, {'': [0.0003775282659281426, 0.09974982249085744], 'false,false,true': [nan, 0.09493506645812307], 'true': [0.0, 0.0], 'false,false,false': [0.10429347941296443, nan], 'false,false': [0.09493506645812307, 0.10429347941296443], 'false,true': [0.004033359906606859, 0.08970812259358098], 'false,true,true': [nan, 0.004033359906606859], 'false': [0.09248603607910245, 0.10365317269553743]}, {'': [0.00032979206912514547, 0.09569689187217512], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.09054349797948426], 'true,true,true': [0.0, nan], 'false': [0.09591684943512407, 0.09054349797948426], 'false,false': [0.09054349797948426, nan], 'true': [0.0, 0.0]}, {'': [0.0006106751637555488, 0.09144218378456417], 'false': [0.0, 0.09444487264541164], 'false,false,false': [0.08767408944604865, nan], 'true,false': [nan, 0.0], 'false,false': [0.09474836588531853, 0.08767408944604865], 'false,true': [0.0, nan], 'false,true,true': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [8.446104217874062e-05, 0.09121328338196769], 'false,true,false': [0.0, nan], 'false': [0.0, 0.09272362578410695], 'false,false,false': [0.08582225046489811, nan], 'false,false': [0.09304124961803525, 0.08582225046489811], 'false,true': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [4.7628180834785594e-05, 0.08986675765777143], 'false,false,true': [0.002693058036751725, 0.09357315217504683], 'false,false,false': [0.08463621501385603, nan], 'false,false': [0.09182088338847715, 0.08463621501385603], 'false,true': [0.0, nan], 'false,true,true': [0.0, nan], 'false': [0.0, 0.09150041270559482]}, {'': [0.080167027575483, 0.08388019592129374], 'true,true': [0.00010727659569281789, 0.009945736407079098], 'false': [0.08388019592129374, nan], 'false,true': [0.0, 0.0], 'false,true,true': [0.0, nan], 'true': [0.014715869878303941, 0.0025428126742638633]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(E, D), interaction(E, A).;true;true
0;false,true,true;interaction(A, D), function(A, F).;true;true
0;false;interaction(D, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false,true;interaction(D, E), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true,true;interaction(A, E), function(A, F).;true;true
2;false;interaction(D, A).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D), interaction(E, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;true;interaction(A, D), function(A, E).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.4233663264038601;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8156735149828546;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16469920285422746;  // std dev = 0,083, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8024963384405971;  // std dev = 0,055, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1826663879712861;  // std dev = 0,103, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.808741135785635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.191258864214365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), function(A, F) )
%   | | | then return -0.10846179811496008;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2131194106331117;  // std dev = 1,359, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6458556992468549;  // std dev = 0,083, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1570646810739928;  // std dev = 0,091, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.6531942943559135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1634047773903601;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4820780901328102;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.5473696872495666;  // std dev = 0,092, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.11892099773901392;  // std dev = 0,082, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.1953020200871079;  // std dev = 1,523, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.11890248360295629;  // std dev = 1,359, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3649840519621266;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.4718378360900088;  // std dev = 0,168, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, G), interaction(H, A) )
%   | | | then return -0.14227455877893563;  // std dev = 0,138, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.156506191199272;  // std dev = 0,117, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( complex(A, I) )
%   | | then return 0.4101194695537459;  // std dev = 0,104, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.15780126352904153;  // std dev = 1,133, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.28241275411584676;  // std dev = 0,746, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25053682485195594;  // std dev = 0,017, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( phenotype(A, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.09242223498384926;  // std dev = 0,547, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.13644136433843776;  // std dev = 0,101, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.058831759991834244;  // std dev = 0,759, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.006586190914566886;  // std dev = 0,357, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( complex(A, L) )
%   | | then return 0.34265808388504954;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.12343546458799129;  // std dev = 1,112, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.21826957663184146;  // std dev = 0,713, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.28655102242292485;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.20650728395131113;  // std dev = 0,015, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.01860599749253621;  // std dev = 0,987, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.12359584221878084;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.10197416434246866;  // std dev = 0,823, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.17454312493820784;  // std dev = 1,035, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), function(A, E) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1747274314765641;  // std dev = 0,013, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.23169848914303393;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.015863304163827238;  // std dev = 0,983, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.11088628300428569;  // std dev = 0,051, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.18497066371679974;  // std dev = 0,578, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10099271964641267;  // std dev = 1,174, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1520289968444925;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.193029540290644;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, E), interaction(F, A) )
%   | | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.18335147622444048;  // std dev = 1,148, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return -0.17501047136714754;  // std dev = 0,348, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.09416042289978305;  // std dev = 0,371, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.14174910988558806;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.3603276361509286;  // std dev = 0,075, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24139477969213818;  // std dev = 0,263, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.08953015461312541;  // std dev = 0,069, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.133779502465312;  // std dev = 0,158, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.2728821713666876;  // std dev = 0,067, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.29855024053321016;  // std dev = 0,100, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | then return 0.25098921902021576;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10804368888580286;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.978973
   AUC PR    = 0.164568
   CLL	      = -0.263309
   Precision = 0.098859 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.179931


Total learning time: 3.6 seconds
Total inference time: 16.421 seconds
AUC ROC: 0.978973


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.192921
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.088 seconds
Refined model CLL: -0.192921


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.978973
   AUC PR    = 0.164568
   CLL	      = -0.263309
   Precision = 0.098859 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.179931


Total learning time: 7.7 seconds
Total inference time: 16.421 seconds
AUC ROC: 0.978973
Total revision time: 7.7
Best scored revision CLL: -0.192921


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:40:17
{'Inference time': 16.421, 'AUC ROC': 0.978973, 'F1': 0.179931, 'Learning time': 7.7, 'Precision': [0.098859, 0.5], 'CLL': -0.263309, 'AUC PR': 0.164568, 'parameter_25': {'Inference time': 12.917, 'AUC ROC': 0.975106, 'F1': 0.185218, 'Learning time': 2.016, 'Precision': [0.102061, 0.5], 'CLL': -0.275893, 'AUC PR': 0.14849, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( complex(A, F) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), phenotype(E, C) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( complex(A, G) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8016713425548178;  // std dev = 0,032, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19832865744518227;  // std dev = 0,032, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.45184182501624415;  // std dev = 0,788, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5696782113782471;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( complex(A, E) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6448138228535942;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1687003376989339;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.3662017189682707;  // std dev = 0,780, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4547076692640812;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( complex(A, F) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(G, I), complex(H, I) )
%   | | | then return 0.03774106038840446;  // std dev = 0,819, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3137134549824183;  // std dev = 1,044, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.39000359121837536;  // std dev = 0,619, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), phenotype(E, C) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( complex(A, G) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(A, J), interaction(H, I) )
%   | | | then return 0.32275006459404415;  // std dev = 0,546, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08129689095846866;  // std dev = 1,189, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.3043805976921239;  // std dev = 0,582, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), phenotype(E, C) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(G, J), interaction(J, A) )
%   | | | then return 0.40794641963899836;  // std dev = 0,088, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2983844010026402;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1960851487655903;  // std dev = 0,084, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then return 0.14484805383499674;  // std dev = 0,622, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.26632043325965843;  // std dev = 0,894, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), phenotype(E, C) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( complex(A, G) )
%   | then return 0.2156574320338081;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3249688788041407;  // std dev = 0,129, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2097288938719734;  // std dev = 0,234, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.20480056222014606;  // std dev = 0,470, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12110821306094424;  // std dev = 0,849, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( complex(A, F) )
%   | then return 0.18144163058497847;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.017234885415695088;  // std dev = 0,944, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.14893738667611015;  // std dev = 0,568, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.1675115037439611;  // std dev = 0,410, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1781193725229551;  // std dev = 0,099, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), phenotype(E, D) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then return 0.1560052023080638;  // std dev = 0,328, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return -0.13273120816453612;  // std dev = 0,437, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08680493284506066;  // std dev = 0,991, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.13303451196144891;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.15949767401317808;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, G), interaction(H, A) )
%   | | then if ( location(H, G), interaction(I, H) )
%   | | | then return 0.0782646617313302;  // std dev = 0,615, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return -0.037514550677112624;  // std dev = 0,960, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return 0.15210999114819432;  // std dev = 0,265, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.896385
   AUC PR    = 0.054136
   CLL	      = -0.439929
   Precision = 0.02354 at threshold = 0.5
   Recall    = 0.759615
   F1        = 0.045665


Total learning time: 5.738 seconds
Total inference time: 7.085 seconds
AUC ROC: 0.896385


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN-B), Time: 01:40:30
{'Inference time': 7.085, 'AUC ROC': 0.896385, 'F1': 0.045665, 'Learning time': 5.738, 'Precision': [0.02354, 0.5], 'CLL': -0.439929, 'AUC PR': 0.054136, 'Recall': 0.759615}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( complex(A, F) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */


Results
   AUC ROC   = 0.888555
   AUC PR    = 0.047372
   CLL	      = -0.201527
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.417 seconds
Total inference time: 2.575 seconds
AUC ROC: 0.888555


Dataset: 22_twitter_yeast, Fold: 2, Type: Scratch (RDN), Time: 01:40:34
{'Inference time': 2.575, 'AUC ROC': 0.888555, 'F1': nan, 'Learning time': 1.417, 'Precision': [nan, 0.5], 'CLL': -0.201527, 'AUC PR': 0.047372, 'Recall': 0.0}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(G, D), phenotype(D, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5816289395752954;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.21837106042470464;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4667573889584369;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1833886721496299;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), phenotype(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5564577216045282;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.21366606918709125;  // std dev = 0,960, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41832343739628064;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.056302281095496544;  // std dev = 0,516, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08047059816889666;  // std dev = 0,873, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.0852020424068039;  // std dev = 1,039, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.06958652074221233;  // std dev = 1,031, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.05673382309843659;  // std dev = 1,025, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.27697721783377693;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.017353822578179936;  // std dev = 0,990, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18738055319117425;  // std dev = 0,869, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.14965822807133358;  // std dev = 0,104, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.781481
   AUC PR    = 0.421646
   CLL	      = -0.207628
   Precision = 0.508772 at threshold = 0.5
   Recall    = 0.630435
   F1        = 0.563107


Total learning time: 1.382 seconds
Total inference time: 3.729 seconds
AUC ROC: 0.781481


Results scoring model
   AUC ROC   = 0.92
   AUC PR    = 0.914762
   CLL	      = -0.332891
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.855 seconds
Parameter learned model CLL: -0.332891


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(G, D), phenotype(D, H)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,true,false,false': [0.816, 1, 2], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.816, 1, 2], 'true': [0.0, 0, 1], 'false,true,true,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,true,false,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.894, 1, 4], 'true': [0.0, 0, 1], 'false,true,true,false': [0.0, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, E), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,true,false,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.894, 1, 4], 'true': [0.0, 0, 1], 'false,true,true,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'phenotype(A, G), phenotype(E, H)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [0.96, 2, 3], 'false,false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [0.873, 2, 2], 'false,false,false,false': [0.0, 0, 0], 'false,true,false': [0.516, 3, 1], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'true,true,true': 'interaction(D, A), phenotype(A, F)', 'true': 'interaction(A, D), interaction(E, C)', 'false': 'interaction(G, A)'}, {'true,true,true,false': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.039, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(F, A)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.031, 5, 4], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(A, D), phenotype(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)'}, {'true,true': [0.0, 0, 0], 'false,false,true': [1.025, 5, 4], 'false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.99, 5, 3], 'true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,false': [0.869, 1, 4], 'true,true,true': [0.0, 0, 1], 'false': [0.0, 0, 0], 'true,false': [0.104, 4, 0]}]]
[{'': [0.0, 0.2469135802469134], 'false,true,false': [0.22222222222222224, 0.22222222222222224], 'false,true': [0.0, 0.22222222222222213], 'false,true,true': [0.0, 0.0], 'false': [0.2469135802469134, nan]}, {'': [0.0, 0.22129878558573596], 'false,true,false': [0.16000000000000006, 0.0], 'false,true': [0.0, 0.2222222222222222], 'false,true,true': [nan, 0.0], 'false': [0.22129878558573596, nan]}, {'': [0.0, 0.17726542881272922], 'false,true,false': [0.15999999999999998, 0.0], 'false,true': [2.3129646346357427e-18, 0.19204026399643526], 'false,true,true': [0.0, 0.0], 'false': [0.17726542881272922, nan]}, {'': [0.0, 0.1441647410381624], 'true': [0.0, nan], 'false,false,false': [0.18444116303343377, nan], 'false,false': [nan, 0.18444116303343377], 'false,true': [0.0, -1.1564823173178713e-18], 'false,true,true': [nan, 0.0], 'false': [0.08119408765482607, 0.18444116303343377]}, {'': [0.0, 0.12657238638797733], 'true': [0.0, nan], 'false,false,false': [0.19068615250429416, nan], 'false,false': [nan, 0.19068615250429416], 'false,true': [0.0, 0.06659724033709895], 'false,true,true': [nan, 0.0], 'false': [0.07424728308717624, 0.19068615250429416]}, {'': [0.0, 0.11999827853608311], 'true,true': [0.0, nan], 'true,true,true': [nan, 0.0], 'true': [0.0, nan], 'false': [0.11999827853608311, nan]}, {'': [0.0, 0.11808625175242822], 'false,false': [0.11808625175242822, nan], 'true': [0.0, nan], 'false': [nan, 0.11808625175242822]}, {'': [0.0, 0.11668883876333853], 'false,false': [0.11668883876333853, nan], 'true': [nan, 0.0], 'false': [nan, 0.11668883876333853]}, {'': [0.0, 0.11565960257103268], 'false,false': [0.11565960257103268, nan], 'false,false,true': [0.0, 0.12262768540751799], 'false': [nan, 0.11565960257103268]}, {'': [0.10263890689998964, nan], 'true,true': [0.0, 0.15095215339956647], 'true': [0.1261891185242198, 0.0027068159768125974]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(A, D), phenotype(A, F).;true;true
0;false;interaction(E, D), interaction(E, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false;interaction(E, D), interaction(E, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true;interaction(A, E), phenotype(A, F).;true;true
2;false;interaction(D, E), interaction(E, A).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;false;interaction(E, A), interaction(A, F).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, E), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true;interaction(A, E), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( phenotype(A, F) )
%   | | then return -0.16648165457326472;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4729312861285487;  // std dev = 1,144, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), interaction(E, A) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then return -0.12660563334893754;  // std dev = 0,026, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.3886367124066565;  // std dev = 1,141, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | then return -0.18118601549282196;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.6785136983375573;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.18268994026674035;  // std dev = 0,172, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.26308394330436347;  // std dev = 0,985, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.5171023343090562;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.019654634087764883;  // std dev = 0,636, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.11715178798378181;  // std dev = 0,892, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then return -0.0031694321460580635;  // std dev = 0,884, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.2791250450377151;  // std dev = 0,602, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.07024051875106499;  // std dev = 0,368, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, D) )
%   | then return -0.16164961810864362;  // std dev = 0,143, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.16495436428583124;  // std dev = 0,988, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), recursion_proteinclass(D, B) )
%   | then return 9.312038793352231E-4;  // std dev = 0,374, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.1607530630350621;  // std dev = 0,335, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, D), recursion_proteinclass(D, B) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.04565425319939663;  // std dev = 0,370, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.08852338955147145;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.599621
   AUC PR    = 0.15438
   CLL	      = -0.518803
   Precision = 0.009548 at threshold = 0.5
   Recall    = 0.445652
   F1        = 0.018696


Total learning time: 9.588 seconds
Total inference time: 42.725 seconds
AUC ROC: 0.599621


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.963333
   CLL	      = -0.379967
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 1.331 seconds
Refined model CLL: -0.379967


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.781481
   AUC PR    = 0.421646
   CLL	      = -0.207628
   Precision = 0.508772 at threshold = 0.5
   Recall    = 0.630435
   F1        = 0.563107


Total learning time: 13.155999999999999 seconds
Total inference time: 3.729 seconds
AUC ROC: 0.781481
Total revision time: 13.155999999999999
Best scored revision CLL: -0.332891


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:41:35
{'Inference time': 3.729, 'AUC ROC': 0.781481, 'parameter_5': {'Inference time': 3.729, 'AUC ROC': 0.781481, 'F1': 0.563107, 'Learning time': 1.382, 'Precision': [0.508772, 0.5], 'CLL': -0.207628, 'AUC PR': 0.421646, 'Recall': 0.630435}, 'F1': 0.563107, 'Learning time': 13.155999999999999, 'Precision': [0.508772, 0.5], 'CLL': -0.207628, 'AUC PR': 0.421646, 'Recall': 0.630435}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D) )
%   | then return 0.32639939340314744;  // std dev = 0,817, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.10101742326814867;  // std dev = 0,538, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.09856506329190752;  // std dev = 0,974, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.2841070215771487;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.10453606692715484;  // std dev = 0,456, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, D) )
%   | then return 0.3478025193896434;  // std dev = 0,522, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.005771687978888815;  // std dev = 0,522, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.08776184564514272;  // std dev = 0,449, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, D) )
%   | then return 0.2803119746598671;  // std dev = 0,476, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.004794798172840203;  // std dev = 0,522, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return -0.09452454061587001;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.007976948959161734;  // std dev = 0,795, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.2398194126472023;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return -0.08682121048282926;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.006066884129494743;  // std dev = 0,795, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.19885203605079457;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.50007
   AUC PR    = 0.007253
   CLL	      = -0.927156
   Precision = 0.007255 at threshold = 0.5
   Recall    = 0.413043
   F1        = 0.014259


Total learning time: 1.836 seconds
Total inference time: 2.305 seconds
AUC ROC: 0.50007


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:41:39
{'Inference time': 2.305, 'AUC ROC': 0.50007, 'F1': 0.014259, 'Learning time': 1.836, 'Precision': [0.007255, 0.5], 'CLL': -0.927156, 'AUC PR': 0.007253, 'Recall': 0.413043}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.500063
   AUC PR    = 0.007253
   CLL	      = -0.232972
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.953 seconds
Total inference time: 1.54 seconds
AUC ROC: 0.500063


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:41:42
{'Inference time': 1.54, 'AUC ROC': 0.500063, 'F1': nan, 'Learning time': 0.953, 'Precision': [nan, 0.5], 'CLL': -0.232972, 'AUC PR': 0.007253, 'Recall': 0.0}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), phenotype(D, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6511700730733302;  // std dev = 0,930, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.22564954909399149;  // std dev = 0,010, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7641072739982948;  // std dev = 0,063, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.191258864214365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.518945927778443;  // std dev = 0,928, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.18867744198724062;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.603777138483313;  // std dev = 0,084, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1634047773903601;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5262429616433814;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), phenotype(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5262429616433814;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.18560813190643982;  // std dev = 1,139, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.25709376933740163;  // std dev = 0,497, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.39623572141444874;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.39623572141444874;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.02363207512799653;  // std dev = 0,550, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13886313348834922;  // std dev = 0,446, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.14610217612115364;  // std dev = 1,018, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.3355637202511649;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.07927165421940734;  // std dev = 1,227, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11123158697892133;  // std dev = 0,437, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.265282488015413;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.28973283671903094;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.050663989032067334;  // std dev = 1,193, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.13142166896270427;  // std dev = 0,443, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.23390076323149778;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.04198352737818643;  // std dev = 1,186, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.06171273799111797;  // std dev = 0,425, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.19538451845847704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.19461212166447994;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3363513237712912;  // std dev = 0,092, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.011647698658506093;  // std dev = 1,084, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.048941546190958474;  // std dev = 0,423, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.16648041662838298;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.14995631306602103;  // std dev = 0,023, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21972058741361009;  // std dev = 0,899, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.14130481296016362;  // std dev = 0,148, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.3373115937487773;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1446418071856741;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.259753475176273;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.94687
   AUC PR    = 0.667442
   CLL	      = -0.228099
   Precision = 0.528302 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.669323


Total learning time: 1.507 seconds
Total inference time: 3.635 seconds
AUC ROC: 0.94687


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.990455
   CLL	      = -0.26657
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.851 seconds
Parameter learned model CLL: -0.26657


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(G, D), phenotype(D, H)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,false,false': 'phenotype(A, K), interaction(A, L)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 1], 'false,true,true,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true,false,true': [1.155, 2, 4], 'false,true,false,false': [0.866, 1, 3], 'true': [0.0, 0, 1], 'false,true,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.063, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,true': [0.93, 1, 7], 'false,true,false,false': [0.01, 2, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.0, 6, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.084, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,false,true': [0.928, 1, 7], 'false,true,false,false': [0.009, 2, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'phenotype(A, G), phenotype(E, H)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.139, 4, 5], 'false,false,false,false': [0.497, 1, 2], 'false,true,false': [0.0, 5, 0], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.446, 1, 1], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.018, 3, 4], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.55, 6, 1], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(D, A), phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false,false': 'phenotype(A, J), interaction(A, K)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true': 'interaction(A, D), interaction(E, C)'}, {'true,true,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,true,false': [0.437, 1, 1], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true': [1.227, 9, 7], 'false,false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H)', 'true,false': 'interaction(E, A), interaction(A, E)', 'false,false': 'interaction(G, A)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.193, 9, 6], 'false,false,false,true': [0.443, 1, 2], 'false,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'interaction(I, A)', 'false,true': 'interaction(G, A), interaction(F, G)', 'true': 'interaction(A, D), phenotype(A, E)'}, {'true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,false,false,true': [0.425, 1, 1], 'false,false,false,false': [0.0, 0, 1], 'false,false,true': [1.186, 9, 6], 'false,true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false,false': 'interaction(G, A)', 'false,true': 'phenotype(A, E)', 'false,true,true': 'interaction(F, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'false,false,true,true': [0.092, 0, 2], 'false,false,true,false': [1.084, 9, 4], 'false,false,false,true': [0.423, 1, 1], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.023, 0, 2], 'true,true,false': [0.899, 1, 6], 'false,true,true,true': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.148, 8, 0], 'false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 1]}]]
[{'': [0.0, 0.2493074792243767], 'false,false,true': [nan, 0.25], 'false,false,false': [0.0, nan], 'false,true,false': [0.22222222222222213, 0.18750000000000006], 'false,false': [0.25, 0.0], 'false,true': [-6.938893903907228e-18, 0.21000000000000002], 'false,true,true': [0.0, 0.0], 'false': [0.24609375000000003, 0.22222222222222224]}, {'': [0.0, 0.21890321511099992], 'false,false,true': [0.0019921816180513696, 0.0], 'false,false': [0.20415577842167218, nan], 'false,true': [-2.3129646346357427e-18, 0.20946857824787352], 'false,true,false': [0.10805994874698588, 5.297639730893894e-05], 'false,true,true': [nan, -2.3129646346357427e-18], 'false': [0.2156450119683075, 0.20415577842167218]}, {'': [0.0, 0.15902954846828052], 'false,false,true': [0.00353523123440308, 0.0], 'false,false': [0.13314973016595757, nan], 'false,true': [0.0, 0.16625688526115068], 'false,true,false': [0.10766477569821348, 4.065676206616714e-05], 'false,true,true': [0.0, 0.0], 'false': [0.16012374427622508, 0.13314973016595757]}, {'': [0.00295551938207278, 0.11359568817141567], 'true': [0.0, 0.0], 'false,false,false': [0.14413131998032844, 0.08228635887822577], 'false,false': [nan, 0.1296282415220986], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'false': [0.054747524373354166, 0.1296282415220986]}, {'': [0.001425963895594795, 0.1002964570588893], 'false,false,true': [nan, 0.09952927262538744], 'true': [0.0, 0.0], 'false,false,false': [0.14799854487628905, 0.0], 'false,false': [0.09952927262538744, 0.13342481640626694], 'false,true': [0.0, 0.043199604574013464], 'false,true,true': [nan, 0.0], 'false': [0.057081259721228295, 0.12679869224777907]}, {'': [0.0, 0.0910552366780476], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.09545578622681497], 'true,true,true': [nan, 0.0], 'false': [0.09411141686065912, 0.0689108975090222], 'false,false,false': [0.0, nan], 'false,false': [0.09545578622681497, 0.0], 'true': [0.0, nan]}, {'': [0.0015990049981999058, 0.09085240275730891], 'false': [nan, 0.09085240275730892], 'false,false,false': [0.06553041998140861, nan], 'true,false': [0.0, nan], 'false,false': [0.09482983216785912, 0.06553041998140861], 'true': [0.0, 0.0]}, {'': [0.0, 0.0863305655103323], 'false,true,false': [nan, 0.0], 'false': [0.0, 0.08939857838359017], 'false,false,false': [0.09045717083560004, 0.0], 'false,false': [0.09373440645520915, 0.06427547942224755], 'false,true': [nan, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.08476835172954031], 'false,false,true': [0.004264975623982564, 0.0903814566872209], 'false,false,false': [0.08963776156250218, 0.0], 'false,false': [0.09289342058952006, 0.06282859350026937], 'false,true': [0.0, nan], 'false,true,true': [0.0, nan], 'false': [0.0, 0.08827820635508622]}, {'': [0.07905340889438076, 0.06190487639792731], 'true,true': [0.0002543796300645204, 0.11547481004535738], 'true': [0.09071148915866807, 0.0027339219957042693], 'false,true': [0.009280411663567939, 0.0], 'false,true,true': [0.0, 0.0], 'false': [0.06190487639792731, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false;interaction(A, I), interaction(I, J).;true;true
0;false,true;interaction(E, D), interaction(E, A).;true;true
0;false,true,true;interaction(A, D), phenotype(A, F).;true;true
0;false;interaction(D, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false;interaction(D, A).;true;true
1;false,false;phenotype(I, H), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false,true;interaction(D, E), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true,true;interaction(A, E), phenotype(A, F).;true;true
2;false;interaction(D, A).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
4;false,false,false;interaction(J, A).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
4;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;false;interaction(E, A), interaction(A, F).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(A, H), interaction(H, I).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(I, A).;true;true
7;false,false,false;interaction(A, J), interaction(J, K).;true;true
7;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false;interaction(G, A).;true;true
8;false,false,false;interaction(A, I), interaction(I, J).;true;true
8;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;false,true;interaction(F, H).;true;true
9;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6410747845880607;  // std dev = 0,953, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.191258864214365;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( phenotype(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.7641072739982948;  // std dev = 0,063, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.191258864214365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5086188960896362;  // std dev = 0,960, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.1634047773903601;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.603777138483313;  // std dev = 0,084, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1634047773903601;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5725242140805906;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.4897074668950796;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return 0.04505004280006885;  // std dev = 0,872, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.359609765183676;  // std dev = 0,583, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24750184598373093;  // std dev = 0,482, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.4303638451292474;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.3703108688540656;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.10648409622889854;  // std dev = 0,048, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09769143187582012;  // std dev = 0,466, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.1185228722247975;  // std dev = 0,439, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.14121379977252352;  // std dev = 0,990, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.3377057043349111;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(E, G), complex(G, F) )
%   | | | then return -0.10659213670185583;  // std dev = 0,628, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.27555570360626286;  // std dev = 0,435, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2533288173513349;  // std dev = 0,523, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.09461211452681503;  // std dev = 0,432, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.2667370752749606;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3533974331964661;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.33756805590586697;  // std dev = 0,129, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.13390314598594885;  // std dev = 0,113, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return -0.08518964172468889;  // std dev = 0,649, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.10458800364115056;  // std dev = 0,430, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.2773718055626847;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.10887360839362503;  // std dev = 0,471, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.04857862684253643;  // std dev = 0,775, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.0488430694001893;  // std dev = 0,358, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2005972087839909;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.22532360445959343;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.00792948158735464;  // std dev = 0,499, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.037160966622467796;  // std dev = 0,791, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.03971045559934505;  // std dev = 0,357, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1703479641951856;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.1612194842875258;  // std dev = 0,038, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.23319116443492702;  // std dev = 0,093, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07546502864437943;  // std dev = 0,716, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return -0.08064788306897297;  // std dev = 0,021, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.162830842166936;  // std dev = 0,116, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, J) )
%   | | then return 0.28396060341898477;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.14760488647342596;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.21940800348588646;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.936324
   AUC PR    = 0.303395
   CLL	      = -0.267739
   Precision = 0.127986 at threshold = 0.5
   Recall    = 0.815217
   F1        = 0.221239


Total learning time: 2.388 seconds
Total inference time: 6.677 seconds
AUC ROC: 0.936324


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.212263
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.891 seconds
Refined model CLL: -0.212263


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.936324
   AUC PR    = 0.303395
   CLL	      = -0.267739
   Precision = 0.127986 at threshold = 0.5
   Recall    = 0.815217
   F1        = 0.221239


Total learning time: 5.637 seconds
Total inference time: 6.677 seconds
AUC ROC: 0.936324
Total revision time: 5.637
Best scored revision CLL: -0.212263


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:41:59
{'Inference time': 6.677, 'AUC ROC': 0.936324, 'F1': 0.221239, 'Learning time': 5.637, 'parameter_10': {'Inference time': 3.635, 'AUC ROC': 0.94687, 'F1': 0.669323, 'Learning time': 1.507, 'Precision': [0.528302, 0.5], 'CLL': -0.228099, 'AUC PR': 0.667442, 'Recall': 0.913043}, 'Precision': [0.127986, 0.5], 'CLL': -0.267739, 'AUC PR': 0.303395, 'Recall': 0.815217}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return -0.004381343256719507;  // std dev = 0,793, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( complex(A, E), enzyme(A, F) )
%   | then return 0.1432252824208109;  // std dev = 0,706, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then return 0.7891229377712475;  // std dev = 0,096, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.28738230430020195;  // std dev = 0,940, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.537382304300202;  // std dev = 0,864, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(D, E) )
%   | then return -0.14700706714452938;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.22842337165794716;  // std dev = 0,936, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then return 0.6699327175920784;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then return 0.03279957027113453;  // std dev = 0,822, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.49211398389770206;  // std dev = 0,751, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.023359155252522894;  // std dev = 0,779, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return 0.040367131793015036;  // std dev = 0,717, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then return 0.5496335277006157;  // std dev = 0,232, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.26008387826877016;  // std dev = 1,002, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return -0.029318791416613536;  // std dev = 0,585, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then return 0.063983866991627;  // std dev = 0,565, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then return 0.42472229285147634;  // std dev = 0,748, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.13721071805142032;  // std dev = 0,938, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.23341090930325525;  // std dev = 0,685, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.23037639098848067;  // std dev = 0,275, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then return 0.10117057822612996;  // std dev = 0,915, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.4560183503742064;  // std dev = 0,150, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(D, E) )
%   | then return -0.12862585861077444;  // std dev = 0,061, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.10291173471778144;  // std dev = 0,793, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A), enzyme(A, G) )
%   | then return 0.3632880611280678;  // std dev = 0,170, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then return -0.09233625584326907;  // std dev = 0,683, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.21386387130815585;  // std dev = 0,503, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17443284524386207;  // std dev = 0,611, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.20614316160582047;  // std dev = 0,278, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then return -0.02249984836487993;  // std dev = 0,506, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.22324875975627312;  // std dev = 0,675, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then return 0.1629734628487456;  // std dev = 0,533, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then return -0.14021840288071974;  // std dev = 0,079, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then return 0.18612118938561031;  // std dev = 0,579, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.12414772999551431;  // std dev = 0,426, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.08183350753051724;  // std dev = 0,618, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.04559466827210056;  // std dev = 0,529, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( complex(A, E) )
%   | then return 0.23553506312239247;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then return -0.04165898078078901;  // std dev = 0,757, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.11600099988311033;  // std dev = 0,558, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.605942
   AUC PR    = 0.00973
   CLL	      = -0.979993
   Precision = 0.009405 at threshold = 0.5
   Recall    = 0.73913
   F1        = 0.018574


Total learning time: 2.944 seconds
Total inference time: 2.66 seconds
AUC ROC: 0.605942


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:42:04
{'Inference time': 2.66, 'AUC ROC': 0.605942, 'F1': 0.018574, 'Learning time': 2.944, 'Precision': [0.009405, 0.5], 'CLL': -0.979993, 'AUC PR': 0.00973, 'Recall': 0.73913}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.500048
   AUC PR    = 0.007253
   CLL	      = -0.249612
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.084 seconds
Total inference time: 1.608 seconds
AUC ROC: 0.500048


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:42:07
{'Inference time': 1.608, 'AUC ROC': 0.500048, 'F1': nan, 'Learning time': 1.084, 'Precision': [nan, 0.5], 'CLL': -0.249612, 'AUC PR': 0.007253, 'Recall': 0.0}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, D), function(D, H) )
%   | | | then return 0.4735335504841277;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( function(A, K), interaction(A, L) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8444674378357556;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13833946294375696;  // std dev = 0,039, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6162464430186426;  // std dev = 1,259, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.2011544670210707;  // std dev = 0,038, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7505511758931249;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21837106042470464;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), function(A, F) )
%   | | | then return -0.1110371587126968;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07134281958617508;  // std dev = 0,726, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.49937459674060347;  // std dev = 1,252, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.170809182266377;  // std dev = 0,034, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5879550920336302;  // std dev = 0,081, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1833886721496299;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5525169396170369;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( function(A, G), function(E, H) )
%   | | | then return 0.5525169396170369;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10981975604145466;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.16236490063233547;  // std dev = 1,654, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.3230163110756693;  // std dev = 0,543, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.4154034997034327;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4154034997034327;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.04141312495577319;  // std dev = 0,599, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.32746532186739075;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20132309164143006;  // std dev = 0,498, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1461289357301651;  // std dev = 1,525, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.32746532186739075;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.08172937658851083;  // std dev = 1,699, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2597752858092348;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1581098843426824;  // std dev = 0,488, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.2597752858092348;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.3017866496141195;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.056438803166164966;  // std dev = 1,668, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.15989394810808194;  // std dev = 0,493, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), function(A, E) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2422118589744966;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.045954958756043725;  // std dev = 1,659, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.11513271622102846;  // std dev = 0,489, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1874285610863049;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( function(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.200559216594974;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.35533894432614305;  // std dev = 0,106, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.007047173969188324;  // std dev = 1,581, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.09318875531210713;  // std dev = 0,492, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16053744811023418;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.152163439569364;  // std dev = 0,026, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.24928093096082787;  // std dev = 1,262, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return -0.1717384339514314;  // std dev = 0,182, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.21733285691141682;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1400623652875903;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.34835464502432895;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.992152
   AUC PR    = 0.545441
   CLL	      = -0.249172
   Precision = 0.406699 at threshold = 0.5
   Recall    = 0.923913
   F1        = 0.564784


Total learning time: 1.641 seconds
Total inference time: 3.822 seconds
AUC ROC: 0.992152


Results scoring model
   AUC ROC   = 0.971111
   AUC PR    = 0.968623
   CLL	      = -0.310739
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.903226


Total scoring time: 0.898 seconds
Parameter learned model CLL: -0.310739


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(G, D), function(D, H)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,false,false': 'function(A, K), interaction(A, L)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), function(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [0.0, 0, 1], 'false,true,true,true': [0.0, 4, 0], 'false,false,false,false': [0.0, 0, 0], 'false,true,false,true': [1.754, 5, 8], 'false,true,false,false': [0.816, 2, 1], 'true': [0.0, 0, 1], 'false,true,true,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'function(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.062, 0, 4], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,false,true': [1.259, 2, 9], 'false,true,false,false': [0.038, 5, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.039, 7, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), function(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.081, 0, 4], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,false,true': [1.252, 2, 9], 'false,true,false,false': [0.034, 5, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.726, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'function(A, G), function(E, H)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,true': [1.654, 9, 8], 'false,false,false,false': [0.543, 1, 4], 'false,true,false': [0.041, 5, 0], 'false,true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.498, 1, 2], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.525, 7, 7], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.599, 7, 1], 'false,true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(D, A), function(A, F)', 'false': 'interaction(G, A)', 'false,false,false': 'function(A, J), interaction(A, K)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true': 'interaction(A, D), interaction(E, C)'}, {'true,true,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,true,false': [0.488, 1, 2], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true': [1.699, 14, 10], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H)', 'true,false': 'interaction(E, A), interaction(A, E)', 'false,false': 'interaction(G, A)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.668, 14, 9], 'false,false,false,true': [0.493, 1, 4], 'false,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'interaction(I, A)', 'false,true': 'interaction(G, A), interaction(F, G)', 'true': 'interaction(A, D), function(A, E)'}, {'true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,false,true': [0.489, 1, 3], 'false,false,false,false': [0.0, 0, 1], 'false,false,true': [1.659, 14, 9], 'false,true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false,false': 'interaction(G, A)', 'false,true': 'function(A, E)', 'false,true,true': 'interaction(F, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'false,false,true,true': [0.106, 0, 2], 'false,false,true,false': [1.581, 14, 7], 'false,false,false,true': [0.492, 1, 3], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.026, 0, 2], 'true,true,false': [1.262, 2, 9], 'false,true,true,true': [0.073, 0, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.182, 12, 0], 'false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 1]}]]
[{'': [0.0, 0.2497027348394768], 'false,false,true': [0.0, 0.22222222222222224], 'false,false,false': [0.0, nan], 'false,false': [0.18750000000000006, 0.0], 'false,true': [0.10937500000000004, 0.24609374999999997], 'false,true,false': [0.23668639053254428, 0.22222222222222224], 'false,true,true': [0.0, 0.18750000000000003], 'false': [0.24305555555555558, 0.15999999999999986]}, {'': [0.0, 0.22990300053005622], 'false,false,true': [0.0009658273954848973, 0.0], 'false,false': [0.15098230992137096, nan], 'false,true': [0.10584033033269762, 0.24268376707316683], 'false,true,false': [0.14406533301563593, 0.0002951516827804423], 'false,true,true': [0.0, 0.0002217019956041455], 'false': [0.228535871962792, 0.15098230992137096]}, {'': [0.0, 0.1707662291676354], 'false,false,true': [0.0016221108115896388, 0.0], 'false,false': [0.09649308105637584, nan], 'false,true': [0.07418769677334311, 0.19449692296711668], 'false,true,false': [0.14244322637919937, 0.00022697583023176816], 'false,true,true': [0.0, 0.13174416530453778], 'false': [0.17572038808149934, 0.09649308105637584]}, {'': [0.004556476496278827, 0.1315440693022457], 'true': [0.0, 0.0], 'false,false,false': [0.16091027188802554, 0.059070833665786006], 'false,false': [nan, 0.14229749549987555], 'false,true': [0.0, 0.00034438004364000934], 'false,true,true': [0.0, nan], 'false': [0.06121613592745129, 0.14229749549987558]}, {'': [0.002241627265344437, 0.1194683013928742], 'false,false,true': [0.0, 0.08264228663995742], 'true': [0.0, 0.0], 'false,false,false': [0.166194026276174, 0.0], 'false,false': [0.06496518915116414, 0.1571604706983061], 'false,true': [0.0, 0.04491498564985713], 'false,true,true': [nan, 0.0], 'false': [0.06053494315197472, 0.13867690266821767]}, {'': [0.0, 0.1101772345041145], 'true,true': [0.0, nan], 'false,false,true': [0.0, 0.07925117050629425], 'true,true,true': [0.0, nan], 'false': [0.1203455804042885, 0.05003130722906181], 'false,false,false': [0.0, nan], 'false,false': [0.0613763504775998, 0.0], 'true': [0.0, nan]}, {'': [0.002117331172446682, 0.10963554520904288], 'false': [nan, 0.10963554520904288], 'false,false,false': [0.048572465970935265, nan], 'true,false': [0.0, nan], 'false,false': [0.12099888354229671, 0.048572465970935265], 'true': [0.0, 0.0]}, {'': [0.0, 0.10543831860256464], 'false,true,false': [nan, 0.0], 'false': [0.0, 0.10807026347613778], 'false,false,false': [0.05986924421399195, 0.0], 'false,false': [0.11972082732488434, 0.04873166564075902], 'false,true': [nan, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.1040881116351988], 'false,false,true': [0.005577186424606695, 0.11898228091287806], 'false,false,false': [0.060479526964329275, 0.0], 'false,false': [0.11875216042151997, 0.04910935699892206], 'false,true': [0.0, nan], 'false,true,true': [0.0, nan], 'false': [0.0, 0.10702090235695132]}, {'': [0.10681205221863563, 0.049724146806025306], 'true,true': [0.00032965520815958493, 0.14468374975818274], 'true': [0.12370323673244996, 0.0027655214146413976], 'false,true': [0.0024511745653263486, 0.0], 'false,true,true': [0.0017755505348215166, 0.0], 'false': [0.049724146806025306, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false,true;recursion_proteinclass(J, B).;true;true
0;false,false;interaction(A, I), interaction(I, J).;true;true
0;false,true;interaction(E, D), interaction(E, A).;true;true
0;false,true,true;interaction(A, D), function(A, F).;true;true
0;false;interaction(D, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;false,true;interaction(D, E), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true,true;interaction(A, E), function(A, F).;true;true
2;false;interaction(D, A).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,false,true;recursion_proteinclass(I, B).;true;true
4;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
4;false,false,false;interaction(J, A).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
4;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;false;interaction(E, A), interaction(A, F).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(A, H), interaction(H, I).;true;true
5;false,false,true;recursion_proteinclass(I, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(I, A).;true;true
7;false,false,false;interaction(A, J), interaction(J, K).;true;true
7;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false;interaction(G, A).;true;true
8;false,false,false;interaction(A, I), interaction(I, J).;true;true
8;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;false,true;interaction(F, H).;true;true
9;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5248156017661789;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8444674378357556;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13833946294375696;  // std dev = 0,039, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6112359392590154;  // std dev = 1,250, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.19323566112052057;  // std dev = 0,069, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.7505511758931249;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.21837106042470464;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), function(A, F) )
%   | | | then return -0.1110371587126968;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07134281958617508;  // std dev = 0,726, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4940492648114032;  // std dev = 1,240, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.16503200296169318;  // std dev = 0,061, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.5879550920336302;  // std dev = 0,081, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1833886721496299;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.6425768073520894;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.5423729204153851;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.10981975604145466;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then return -0.08130383167026868;  // std dev = 0,568, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.2605231387144597;  // std dev = 1,399, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.456821955984038;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.4860009230339841;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.40794341760220887;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.1117763744379762;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0984290026239536;  // std dev = 0,464, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.2987039531452472;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19954243338422592;  // std dev = 0,424, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.12381749151770657;  // std dev = 1,449, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.42180907014488467;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.09508306091768548;  // std dev = 0,819, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.12099030270997291;  // std dev = 0,118, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.31459015239913696;  // std dev = 0,518, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11202888889468067;  // std dev = 1,098, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.24009091953537132;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1603638918302682;  // std dev = 0,409, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3236253888375008;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.34590352923026024;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.2413732660446942;  // std dev = 0,916, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.10257185895295226;  // std dev = 0,062, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.188951036091471;  // std dev = 0,103, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then return 0.42047673232637894;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.16889199407400504;  // std dev = 0,417, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.10399150450251654;  // std dev = 0,620, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.27229722903525855;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.0017312618111951783;  // std dev = 1,094, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.09100409621804599;  // std dev = 0,819, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.11651462357419806;  // std dev = 0,402, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2262378189679365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.2217847760978019;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.038103083840514786;  // std dev = 1,260, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.09382826938123208;  // std dev = 0,507, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.09635833400900004;  // std dev = 0,402, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18909281191534888;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.15993791644644378;  // std dev = 0,037, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.29184098981950807;  // std dev = 0,067, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09472122896207853;  // std dev = 1,062, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, G) )
%   | | then return -0.09666953921053441;  // std dev = 0,058, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1869577601653308;  // std dev = 0,116, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, J) )
%   | | then return 0.19545473001876612;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16178471281007156;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.2656947568378839;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.95098
   AUC PR    = 0.092115
   CLL	      = -0.332781
   Precision = 0.061681 at threshold = 0.5
   Recall    = 0.869565
   F1        = 0.115191


Total learning time: 3.272 seconds
Total inference time: 8.47 seconds
AUC ROC: 0.95098


Results scoring model
   AUC ROC   = 0.982222
   AUC PR    = 0.980804
   CLL	      = -0.253034
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.113 seconds
Refined model CLL: -0.253034


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.95098
   AUC PR    = 0.092115
   CLL	      = -0.332781
   Precision = 0.061681 at threshold = 0.5
   Recall    = 0.869565
   F1        = 0.115191


Total learning time: 6.9239999999999995 seconds
Total inference time: 8.47 seconds
AUC ROC: 0.95098
Total revision time: 6.9239999999999995
Best scored revision CLL: -0.253034


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:42:27
{'parameter_15': {'Inference time': 3.822, 'AUC ROC': 0.992152, 'F1': 0.564784, 'Learning time': 1.641, 'Precision': [0.406699, 0.5], 'CLL': -0.249172, 'AUC PR': 0.545441, 'Recall': 0.923913}, 'Inference time': 8.47, 'AUC ROC': 0.95098, 'F1': 0.115191, 'Learning time': 6.9239999999999995, 'Precision': [0.061681, 0.5], 'CLL': -0.332781, 'AUC PR': 0.092115, 'Recall': 0.869565}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( enzyme(C, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( complex(A, F) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( complex(A, I) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6914822684328454;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), interaction(F, D) )
%   | then return -0.13747980798273257;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | then return 0.5630481887055254;  // std dev = 0,831, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.15642011249382914;  // std dev = 0,076, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.6167559772000967;  // std dev = 0,870, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.1951535762650222;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, K) )
%   | | then return 0.6120543013757329;  // std dev = 0,912, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.41851933418886933;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), interaction(F, D) )
%   | then return -0.12200042691900963;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | then return 0.463245459282626;  // std dev = 0,820, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.13712624678601307;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then return 0.13921548343132625;  // std dev = 0,708, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then return 0.1849882011860145;  // std dev = 0,915, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.6558522394229337;  // std dev = 0,077, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3290730354709481;  // std dev = 1,106, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(A, E), phenotype(E, C) )
%   | then return 0.22417633832902883;  // std dev = 0,687, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.23655564379319505;  // std dev = 0,252, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( enzyme(A, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return 0.21546729015921898;  // std dev = 0,767, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5307613970966042;  // std dev = 0,101, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return 0.03162828384576884;  // std dev = 0,737, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.3336883283165203;  // std dev = 0,796, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12698772199496433;  // std dev = 0,856, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(E, C), interaction(E, A) )
%   | then return -0.11841889546059889;  // std dev = 0,042, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(F, C) )
%   | | then return 0.22655723862404206;  // std dev = 0,641, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.016632269723726428;  // std dev = 0,551, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then return 0.33643077742535;  // std dev = 0,690, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then return 0.03633455793217878;  // std dev = 0,840, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.1258253330647649;  // std dev = 0,557, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3345880382782172;  // std dev = 0,892, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( phenotype(A, E) )
%   | then return -0.16497514792122775;  // std dev = 0,216, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.19210584958257235;  // std dev = 0,655, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(F, H) )
%   | | then return -0.11887433489701145;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.3637087086959424;  // std dev = 0,632, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08692277616884049;  // std dev = 1,258, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return 0.3414757721174685;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), interaction(A, E) )
%   | then return 0.12692114079844966;  // std dev = 0,489, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.20370180044132918;  // std dev = 0,217, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), interaction(G, G) )
%   | | then return 0.10052442498391648;  // std dev = 0,684, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3519789505088714;  // std dev = 0,125, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.008774377882885515;  // std dev = 0,600, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.1924561590078741;  // std dev = 0,761, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0037581136448091718;  // std dev = 0,801, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( phenotype(A, E) )
%   | then return -0.13486347742307134;  // std dev = 0,166, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.10241767195566685;  // std dev = 0,631, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.13818996633811437;  // std dev = 0,677, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.20870081306605748;  // std dev = 0,393, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, F) )
%   | | | then return 0.23032388840626064;  // std dev = 0,819, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.04470404852749859;  // std dev = 0,462, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.24309517667446548;  // std dev = 0,080, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( phenotype(A, E) )
%   | then return -0.12053302699741178;  // std dev = 0,152, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.07865249203501062;  // std dev = 0,632, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( enzyme(A, F) )
%   | then return 0.17876898541762867;  // std dev = 0,346, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.051414687478362205;  // std dev = 0,696, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.24849039054115485;  // std dev = 0,071, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.0272521426441474;  // std dev = 0,733, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13721395156422223;  // std dev = 0,656, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(A, E), phenotype(E, C) )
%   | then return 0.08841768702773398;  // std dev = 0,401, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.14577291851485558;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( enzyme(A, F), interaction(A, G) )
%   | then return 0.216531579198285;  // std dev = 0,159, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(J, A) )
%   | | | then return -0.1491183155265182;  // std dev = 0,172, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.05486190188049324;  // std dev = 1,001, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.12127713538275692;  // std dev = 0,818, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.577882
   AUC PR    = 0.008458
   CLL	      = -0.858112
   Precision = 0.00953 at threshold = 0.5
   Recall    = 0.673913
   F1        = 0.018794


Total learning time: 4.581 seconds
Total inference time: 2.68 seconds
AUC ROC: 0.577882


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:42:35
{'Inference time': 2.68, 'AUC ROC': 0.577882, 'F1': 0.018794, 'Learning time': 4.581, 'Precision': [0.00953, 0.5], 'CLL': -0.858112, 'AUC PR': 0.008458, 'Recall': 0.673913}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( enzyme(C, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( complex(A, F) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.50001
   AUC PR    = 0.007252
   CLL	      = -0.247712
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.561 seconds
Total inference time: 1.614 seconds
AUC ROC: 0.50001


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:42:38
{'Inference time': 1.614, 'AUC ROC': 0.50001, 'F1': nan, 'Learning time': 1.561, 'Precision': [nan, 0.5], 'CLL': -0.247712, 'AUC PR': 0.007252, 'Recall': 0.0}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), complex(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.2867203636709408;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, G), complex(D, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 4,21e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2867203636709409;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.8195467402759845;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16211705265880746;  // std dev = 0,064, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7413815155947212;  // std dev = 0,120, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1490779674864458;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7861889642543077;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1621170526588075;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.2195467402759844;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.308741135785635;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), complex(A, F) )
%   | | | then return -0.10871173900626215;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.195652356548162;  // std dev = 1,080, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5801503277898322;  // std dev = 0,165, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1311385780460788;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.545876254988677;  // std dev = 1,146, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.20438848136825846;  // std dev = 0,081, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), complex(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4118587379394217;  // std dev = 0,008, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.15085781710377924;  // std dev = 0,107, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.3403348674310615;  // std dev = 0,976, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.16500636535949229;  // std dev = 1,703, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3168916179814827;  // std dev = 0,007, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.021729582903291033;  // std dev = 0,705, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3646540588224001;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13345758001174407;  // std dev = 1,516, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.37561217003748065;  // std dev = 0,625, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.05623187993326318;  // std dev = 0,671, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then if ( recursion_proteinclass(D, B), interaction(D, C) )
%   | | then if ( interaction(A, D), complex(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.25697724308928527;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2448788616960057;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then return 0.09610488164257887;  // std dev = 1,131, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2849834504784077;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10678705427257242;  // std dev = 1,501, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.20802795623356812;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1718926681816973;  // std dev = 0,592, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), interaction(E, G) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2067456641481581;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return 0.07965178340819985;  // std dev = 1,111, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0837669573655167;  // std dev = 1,630, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then return 0.1786586129161526;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17410621089852996;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.06591358250408674;  // std dev = 1,096, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.07671961123025066;  // std dev = 1,489, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.014015067731279593;  // std dev = 0,634, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1516245659190849;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2964747620188495;  // std dev = 0,128, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.02601376303576427;  // std dev = 1,016, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.06030935088282886;  // std dev = 1,483, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.011154537051942285;  // std dev = 0,633, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.13448466086490318;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.26376574828395544;  // std dev = 0,299, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.1788791335743423;  // std dev = 0,148, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F) )
%   | | | then return 0.3283788858873914;  // std dev = 0,909, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1645523085870975;  // std dev = 0,504, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.27758994045448593;  // std dev = 0,091, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.997281
   AUC PR    = 0.632283
   CLL	      = -0.280933
   Precision = 0.539877 at threshold = 0.5
   Recall    = 0.956522
   F1        = 0.690196


Total learning time: 1.654 seconds
Total inference time: 3.593 seconds
AUC ROC: 0.997281


Results scoring model
   AUC ROC   = 0.9925
   AUC PR    = 0.992112
   CLL	      = -0.290608
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.892 seconds
Parameter learned model CLL: -0.290608


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(D, G), complex(D, H)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K), interaction(L, A)', 'false,false': 'interaction(I, A), interaction(J, I)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(D, A), complex(A, F)', 'false': 'interaction(A, D)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.852, 8, 6], 'false,false,false,true': [0.0, 1, 0], 'false,true,true,true': [0.0, 2, 0], 'false,false,false,false': [0.707, 1, 1], 'false,true,false,true': [0.894, 4, 1], 'false,true,false,false': [4.21e-08, 0, 5], 'true': [2.11e-08, 0, 3], 'false,true,true,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false,false': 'complex(A, H)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(F, D), recursion_proteinclass(F, B)', 'false': 'interaction(A, D)'}, {'false,false,true,true': [0.082, 0, 3], 'false,false,true,false': [0.045, 3, 0], 'false,false,false,true': [1.549, 6, 4], 'false,true,true,true': [0.0, 0, 3], 'false,false,false,false': [0.707, 1, 1], 'false,true,false,true': [0.12, 0, 6], 'false,true,false,false': [0.0, 4, 0], 'true': [0.0, 0, 3], 'false,true,true,false': [0.064, 6, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(E, A), complex(A, F)', 'false': 'interaction(A, D)'}, {'false,false,true,true': [1.146, 2, 8], 'false,false,true,false': [0.081, 8, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,false,true': [0.165, 0, 6], 'false,true,false,false': [0.0, 4, 0], 'true': [1.05e-08, 0, 3], 'false,true,true,false': [1.08, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, A)', 'false': 'interaction(E, A), interaction(A, E)', 'false,false,false': 'interaction(A, K)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'complex(A, G), complex(E, H)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [0.976, 3, 8], 'false,false,false,false': [1.703, 10, 8], 'false,true,false': [0.107, 7, 0], 'false,true,true,false': [0.008, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(A, E), interaction(F, A)', 'false,false,false': 'interaction(A, J)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.516, 8, 6], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [0.625, 1, 6], 'false,false,false,false': [0.671, 2, 1], 'false,true,false': [0.705, 9, 3], 'false,true,true,false': [0.007, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(D, C)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(A, D), complex(A, F)', 'false': 'interaction(A, G)', 'false,false,false': 'complex(A, J), interaction(K, A)', 'false,false': 'interaction(H, A), interaction(I, H)', 'true': 'interaction(D, A), interaction(C, E)'}, {'true,true,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 1, 0], 'false,false,true,false': [1.501, 8, 6], 'true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 1], 'true,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.592, 1, 1], 'false,true': [1.131, 10, 9], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(I, A)', 'false,false': 'interaction(A, H)', 'false,true': 'complex(A, F), interaction(E, G)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.111, 10, 9], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.63, 10, 8], 'false,false,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.006, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, G)', 'true': 'interaction(D, A), complex(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(H, A), interaction(I, H)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.096, 10, 9], 'false,false,false,false': [0.634, 2, 1], 'false,false,false,true': [1.489, 8, 7], 'true,false': [0.004, 0, 2], 'false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, E)', 'false,false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(G, A), interaction(H, G)'}, {'false,false,true,true': [0.128, 0, 2], 'false,false,true,false': [1.016, 10, 7], 'false,false,false,true': [1.483, 8, 7], 'false,false,false,false': [0.633, 2, 1], 'false,true': [0.0, 0, 0], 'true': [0.005, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.299, 0, 11], 'false,true,true,true': [0.909, 1, 7], 'false,false': [0.0, 0, 0], 'true,false': [0.148, 10, 0], 'false,true,false': [0.091, 8, 0], 'false,true,true,false': [0.504, 1, 1]}]]
[{'': [1.4802973661668753e-16, 0.2483564645726808], 'false,false,true': [0.0, 0.24489795918367352], 'false,false,false': [0.0, 0.25], 'false,true,false': [0.16000000000000003, 3.552713678800501e-16], 'false,false': [0.24888888888888888, 0.22222222222222224], 'false,true': [0.2222222222222221, 0.23999999999999994], 'false,true,true': [0.0, 0.24489795918367346], 'false': [0.2493074792243767, 0.2469135802469136]}, {'': [0.0, 0.22640939671183485], 'false,true,false': [0.002399824969368932, 0.0], 'false,false,true': [0.0022254824422247577, 0.0006724329790763669], 'false,false,false': [0.24, 0.25000000000000006], 'false,false': [0.22627003313905494, 0.24277161669310168], 'false,true': [0.2145958002880781, 0.1917402368238244], 'false,true,true': [-1.4802973661668753e-16, 0.0006724329790763715], 'false': [0.21464329821846398, 0.2386100677535844]}, {'': [3.700743415417188e-17, 0.1758349378044315], 'false,false,true': [0.13133440936442636, 0.0008102339771638295], 'false,true,false': [0.004560233813210024, 0.0], 'false,false': [0.21231062144434465, nan], 'false,true': [0.14549806118255448, 0.12415979810358549], 'false,true,true': [0.0, 0.16648282410332751], 'false': [0.14127196105948198, 0.21231062144434465]}, {'': [0.0, 0.1302990391563005], 'false,false,true': [nan, 0.0], 'true': [0.0, nan], 'false,false,false': [0.0865334169865038, 0.16120444613464938], 'false,false': [0.0, 0.14011821339053085], 'false,true': [3.197728575926595e-05, 0.0016288237305084885], 'false,true,true': [nan, 3.197728575926595e-05], 'false': [0.05600358499557198, 0.136562405884448]}, {'': [0.0, 0.1147248511597661], 'false,false,true': [0.0, 0.16418445821301256], 'true': [0.0, nan], 'false,false,false': [0.05573589581337057, 0.15026801712089155], 'false,false': [0.15656471817837725, 0.10551632384410822], 'false,true': [2.5537023042060403e-05, 0.04146584687614929], 'false,true,true': [nan, 2.5537023042060403e-05], 'false': [0.0495863313079886, 0.14025943689861659]}, {'': [2.83980610022531e-05, 0.10869282169160469], 'true,true': [0.0, 0.0], 'false,false,true': [0.0, 0.16087840368657833], 'true,true,true': [nan, 0.0], 'true': [8.14506719112873e-07, 0.0], 'false,false,false': [0.0, 0.17522454633641169], 'false,false': [0.1521289784572085, 0.14889184885896004], 'false': [0.06729286308759838, 0.1523380217699678]}, {'': [0.0, 0.10051368124726415], 'true': [0.0, nan], 'false,false,false': [0.14758970707029037, nan], 'false,false': [0.06492286939512476, 0.14758970707029037], 'false,true': [1.8372102029359794e-05, nan], 'false,true,true': [nan, 1.8372102029359794e-05], 'false': [1.8372102029359794e-05, 0.10514339937631641]}, {'': [1.056662453501056e-05, 0.10352876073275633], 'false,false': [0.0632528408732084, 0.14604216688105526], 'true': [0.0, 8.941815425829447e-06], 'false,false,false': [0.14782743097026066, 0.13383929662218313], 'false': [nan, 0.10352876073275633]}, {'': [7.363660776781485e-06, 0.10232909802914338], 'false,false': [0.062075357963661426, 0.14481628124329915], 'false,false,true': [0.008212159194831592, 0.06071229414385949], 'false,false,false': [0.14666832870174643, 0.1335425475154388], 'false': [nan, 0.10232909802914342]}, {'': [0.0519961810112503, 0.1439933075956214], 'true,true': [0.0, 0.008122573065899384], 'false': [0.1439933075956214, nan], 'false,true': [0.11233289838071833, 0.001034227510226332], 'false,true,true': [0.10323486578246147, 0.12725371082980258], 'true': [0.008722425277121507, 0.002190348171586376]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,false,true;recursion_proteinclass(J, B).;true;true
0;false,false,false;complex(A, K), interaction(L, A).;true;true
0;false,false;interaction(I, A), interaction(J, I).;true;true
0;false,true;interaction(D, E), interaction(A, E).;true;true
0;false,true,false;interaction(D, G), complex(D, H).;true;true
0;false,true,true;interaction(D, A), complex(A, F).;true;true
0;false;interaction(A, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
1;false,false;complex(A, H).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,true,true;interaction(F, D), recursion_proteinclass(F, B).;true;true
1;false;interaction(A, D).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;false,true;interaction(E, D), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;false,true,true;interaction(E, A), complex(A, F).;true;true
2;false;interaction(A, D).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false;interaction(E, A), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false,false;interaction(H, A), interaction(I, H).;true;true
4;false,false,true;recursion_proteinclass(I, B).;true;true
4;false,true;interaction(E, G), recursion_proteinclass(G, B).;true;true
4;false;interaction(A, E), interaction(F, A).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,true;recursion_proteinclass(D, B), interaction(D, C).;true;true
5;false,false,true;recursion_proteinclass(I, B).;true;true
5;true;interaction(D, A), interaction(C, E).;true;true
5;false,false,false;complex(A, J), interaction(K, A).;true;true
5;false,false;interaction(H, A), interaction(I, H).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), complex(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(F, G), recursion_proteinclass(G, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), complex(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.2867203636709408;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, G), complex(D, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 4,21e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2867203636709409;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.8195467402759845;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16211705265880746;  // std dev = 0,064, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7413815155947212;  // std dev = 0,120, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1490779674864458;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7861889642543077;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1621170526588075;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.10217371042159888;  // std dev = 1,191, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4195467402759844;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), complex(A, F) )
%   | | | then return -0.10871173900626215;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.195652356548162;  // std dev = 1,080, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5801503277898322;  // std dev = 0,165, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1311385780460788;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.22316421256183774;  // std dev = 1,230, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.43594766566358883;  // std dev = 1,089, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.2001853375676341;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.4118587379394217;  // std dev = 0,008, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.15085781710377924;  // std dev = 0,107, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A), phenotype(A, H) )
%   | | | then return 0.07719716798773245;  // std dev = 1,385, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.360579913356315;  // std dev = 1,408, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.3168916179814827;  // std dev = 0,007, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.15086984706490306;  // std dev = 0,032, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.034090192780512965;  // std dev = 0,666, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3450509230369231;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1119344104110808;  // std dev = 1,591, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.4325456389620873;  // std dev = 0,687, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1550571004120606;  // std dev = 0,679, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.26668628391422106;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.024433208394120297;  // std dev = 0,321, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14052294082487157;  // std dev = 0,045, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.09144066794268733;  // std dev = 0,616, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4088707250768106;  // std dev = 0,133, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2717194189811222;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08875391189010336;  // std dev = 1,583, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.16130506669272643;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.17745385329620705;  // std dev = 0,664, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20785553270624302;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.2229346158502563;  // std dev = 0,019, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.40468417659086037;  // std dev = 0,685, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1791670224429864;  // std dev = 0,281, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.04108626775573684;  // std dev = 0,895, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.27193394141031113;  // std dev = 0,920, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then return 0.17488992296744676;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.187141051330248;  // std dev = 0,016, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then return -0.15439467351866545;  // std dev = 0,115, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( phenotype(G, H) )
%   | | | then return -0.0906155695444553;  // std dev = 0,356, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.082713545614099;  // std dev = 0,996, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.02824167016063487;  // std dev = 0,644, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.21118801052208203;  // std dev = 1,048, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1572507430060347;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.07233697107110373;  // std dev = 1,007, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.12884714487101187;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.16385529672319685;  // std dev = 0,094, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.12026478818474241;  // std dev = 0,736, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.19447086819764622;  // std dev = 0,193, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.21537276126407065;  // std dev = 0,592, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.11016202080980453;  // std dev = 0,651, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1312276152937376;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.22058650630496798;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.18603503651935718;  // std dev = 0,111, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then return -0.09119179106120431;  // std dev = 0,021, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.18118475682481613;  // std dev = 0,206, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | then if ( interaction(K, A), interaction(L, K) )
%   | | then if ( enzyme(A, M), interaction(N, L) )
%   | | | then return -0.03730096310765067;  // std dev = 0,646, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.24147546699501846;  // std dev = 0,911, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.014008944825904793;  // std dev = 0,598, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.2318745586996384;  // std dev = 0,273, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.964348
   AUC PR    = 0.349301
   CLL	      = -0.397192
   Precision = 0.053696 at threshold = 0.5
   Recall    = 0.923913
   F1        = 0.101493


Total learning time: 13.356 seconds
Total inference time: 13.202 seconds
AUC ROC: 0.964348


Results scoring model
   AUC ROC   = 0.9925
   AUC PR    = 0.992289
   CLL	      = -0.259338
   Precision = 0.95 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.95


Total scoring time: 1.288 seconds
Refined model CLL: -0.259338


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.964348
   AUC PR    = 0.349301
   CLL	      = -0.397192
   Precision = 0.053696 at threshold = 0.5
   Recall    = 0.923913
   F1        = 0.101493


Total learning time: 17.189999999999998 seconds
Total inference time: 13.202 seconds
AUC ROC: 0.964348
Total revision time: 17.189999999999998
Best scored revision CLL: -0.259338


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:43:13
{'Inference time': 13.202, 'AUC ROC': 0.964348, 'parameter_20': {'Inference time': 3.593, 'AUC ROC': 0.997281, 'F1': 0.690196, 'Learning time': 1.654, 'Precision': [0.539877, 0.5], 'CLL': -0.280933, 'AUC PR': 0.632283, 'Recall': 0.956522}, 'F1': 0.101493, 'Learning time': 17.189999999999998, 'Precision': [0.053696, 0.5], 'CLL': -0.397192, 'AUC PR': 0.349301, 'Recall': 0.923913}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(D, E) )
%   | then if ( phenotype(D, C) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(D, C), enzyme(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( complex(D, E), interaction(A, D) )
%   | then return -0.13578210608840643;  // std dev = 0,036, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( location(A, F), location(D, F) )
%   | | then if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.4885933957750039;  // std dev = 0,754, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16444892249501722;  // std dev = 1,260, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.16428998081164273;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then return 0.3503529923115952;  // std dev = 1,091, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.7392070123615108;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4615180779359973;  // std dev = 1,131, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), complex(A, F) )
%   | then return -0.16297271665913196;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, D), complex(D, G) )
%   | | then return -0.12065928055093304;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, D), interaction(D, H) )
%   | | | then return 0.3472901596157779;  // std dev = 1,129, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.02314186704647093;  // std dev = 0,790, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(I, A), interaction(I, I) )
%   | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then return 0.27929231196266724;  // std dev = 1,090, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.5750887498568714;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3764089688329318;  // std dev = 1,126, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, C), complex(C, E) )
%   | then return -0.10845946746670476;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, F), phenotype(F, D) )
%   | | then return 0.38875922029721494;  // std dev = 0,596, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(C, G) )
%   | | | then return -0.15914165711353462;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.14109711678236905;  // std dev = 1,174, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( complex(A, J) )
%   | | then return 0.3908805489097397;  // std dev = 0,860, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.04761210631852801;  // std dev = 0,859, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then return 0.21184678187572928;  // std dev = 0,757, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.5030087336194005;  // std dev = 0,316, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.29355863669050025;  // std dev = 0,794, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( complex(A, E), enzyme(D, F) )
%   | then return -0.14108043984580912;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( complex(D, G), interaction(A, D) )
%   | | then return -0.09842952642451472;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, D), enzyme(H, I) )
%   | | | then return 0.2856954207272326;  // std dev = 0,773, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04376387641478333;  // std dev = 1,029, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(J, A), phenotype(J, K) )
%   | then if ( complex(A, L) )
%   | | then return 0.29676763065616496;  // std dev = 0,860, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.0375262915398681;  // std dev = 0,856, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, M), enzyme(M, N) )
%   | | then return 0.1826117254700705;  // std dev = 0,755, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, P) )
%   | | | then return 0.4252865721026588;  // std dev = 0,310, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22301188416622617;  // std dev = 0,792, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4106977340849764;  // std dev = 0,255, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return -0.10495936682130523;  // std dev = 0,053, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(H, E), interaction(E, H) )
%   | | | then return 0.17067946811932103;  // std dev = 0,959, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.007030862898753843;  // std dev = 0,777, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.07546035418169132;  // std dev = 0,376, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.3733252786562537;  // std dev = 0,119, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15105141950086942;  // std dev = 1,531, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), interaction(E, A) )
%   | then if ( phenotype(E, C), interaction(D, E) )
%   | | then return 0.10162667507020258;  // std dev = 0,466, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1427226123998646;  // std dev = 0,132, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(D, C) )
%   | | then return -0.0332787392424746;  // std dev = 0,423, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3781279314412642;  // std dev = 0,735, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1829758871100661;  // std dev = 0,094, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then return 0.23150127909147358;  // std dev = 0,904, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then return 0.022406643384109096;  // std dev = 0,776, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.06354520761068701;  // std dev = 0,746, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19512565370142068;  // std dev = 0,828, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), complex(A, F) )
%   | then return -0.103746219157854;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, D), complex(D, G) )
%   | | then return -0.08318523197188378;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, D), enzyme(H, I) )
%   | | | then return 0.1739611762979021;  // std dev = 0,625, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.0031348595227270737;  // std dev = 0,919, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( enzyme(A, J), complex(A, K) )
%   | then return -0.010731754933773185;  // std dev = 1,059, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, L) )
%   | | then return 0.31569265150623715;  // std dev = 0,220, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.2568169886351051;  // std dev = 0,220, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -9.023973766953547E-4;  // std dev = 1,058, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.3281050534981507;  // std dev = 0,189, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then return -0.08236208430594813;  // std dev = 0,036, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.3730796478264084;  // std dev = 0,219, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then return 0.19178070894428653;  // std dev = 0,386, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return -0.15379656817102022;  // std dev = 0,716, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.051204871143734114;  // std dev = 0,981, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.2603722509953176;  // std dev = 0,560, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.0405038670112475;  // std dev = 0,732, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2564050521280249;  // std dev = 0,225, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then return -0.18939299763136125;  // std dev = 0,128, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, E), complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.27581041406171486;  // std dev = 0,159, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17001679227848476;  // std dev = 0,351, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.2240538149780931;  // std dev = 0,194, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05259234981063297;  // std dev = 1,498, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */


Results
   AUC ROC   = 0.611853
   AUC PR    = 0.012977
   CLL	      = -0.914694
   Precision = 0.009788 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.019308


Total learning time: 6.361 seconds
Total inference time: 3.512 seconds
AUC ROC: 0.611853


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:43:23
{'Inference time': 3.512, 'AUC ROC': 0.611853, 'F1': 0.019308, 'Learning time': 6.361, 'Precision': [0.009788, 0.5], 'CLL': -0.914694, 'AUC PR': 0.012977, 'Recall': 0.706522}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(D, C), interaction(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(D, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( interaction(H, A), complex(H, I) )
%   | then if ( complex(A, J) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.500015
   AUC PR    = 0.007252
   CLL	      = -0.258896
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.069 seconds
Total inference time: 1.776 seconds
AUC ROC: 0.500015


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:43:27
{'Inference time': 1.776, 'AUC ROC': 0.500015, 'F1': nan, 'Learning time': 2.069, 'Precision': [nan, 0.5], 'CLL': -0.258896, 'AUC PR': 0.007252, 'Recall': 0.0}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(D, G), enzyme(D, H) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.33183314562582816;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16900610166053662;  // std dev = 0,047, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.798821123460713;  // std dev = 0,060, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18398669265386927;  // std dev = 0,060, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.781676868747208;  // std dev = 0,108, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1872214029846651;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.31277859701533484;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), enzyme(A, F) )
%   | | | then return -0.10804603207388497;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.17704538712444454;  // std dev = 1,278, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6419407819331452;  // std dev = 0,087, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.15804201124396353;  // std dev = 0,053, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5657959360388636;  // std dev = 1,229, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.19511743821077693;  // std dev = 0,118, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5301369374106992;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), enzyme(E, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5027584277571072;  // std dev = 0,161, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.16089744095347774;  // std dev = 0,083, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.2808697185184529;  // std dev = 1,222, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.17378032193326562;  // std dev = 1,881, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3990457137208804;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3836260019527871;  // std dev = 0,156, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.04031040863120925;  // std dev = 0,896, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3590701908349798;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13027026708083056;  // std dev = 1,651, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3883228669929462;  // std dev = 0,635, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1271375071971671;  // std dev = 0,810, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then if ( recursion_proteinclass(D, B), interaction(D, C) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.22804677211682356;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.24253611451267654;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then return 0.08810828251128684;  // std dev = 1,353, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2812090436995719;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11467817625681087;  // std dev = 1,644, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.33036391931583287;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.023938392034536887;  // std dev = 0,762, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.28431308114486187;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( enzyme(A, G), interaction(F, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19559470015555652;  // std dev = 0,007, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then return 0.07250932992971747;  // std dev = 1,332, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08634501023747877;  // std dev = 1,806, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17012626015912177;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.23014726459712098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.059505716530803006;  // std dev = 1,317, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.06949520854773172;  // std dev = 1,615, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.06172479126452761;  // std dev = 0,789, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1474408693177688;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19191307104545563;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3316665020769716;  // std dev = 0,143, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.006289772571775867;  // std dev = 1,187, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.054609730970229434;  // std dev = 1,609, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.0487971679519236;  // std dev = 0,788, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.13543773609534104;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2978708723878925;  // std dev = 0,356, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.18641549736676843;  // std dev = 0,149, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F) )
%   | | | then return 0.31129511136951626;  // std dev = 0,939, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.1336398260286126;  // std dev = 0,716, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.2693788937777788;  // std dev = 0,150, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.997402
   AUC PR    = 0.64774
   CLL	      = -0.281179
   Precision = 0.505747 at threshold = 0.5
   Recall    = 0.956522
   F1        = 0.661654


Total learning time: 1.635 seconds
Total inference time: 4.185 seconds
AUC ROC: 0.997402


Results scoring model
   AUC ROC   = 0.9936
   AUC PR    = 0.993368
   CLL	      = -0.2976
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 0.948 seconds
Parameter learned model CLL: -0.2976


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(D, G), enzyme(D, H)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,false,false': 'enzyme(A, K), interaction(L, A)', 'false,false': 'interaction(I, A), interaction(J, I)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(D, A), enzyme(A, F)', 'false': 'interaction(A, D)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.176, 10, 9], 'false,false,false,true': [0.0, 0, 1], 'false,true,true,true': [0.0, 1, 0], 'false,false,false,false': [0.816, 2, 1], 'false,true,false,true': [1.155, 4, 2], 'false,true,false,false': [1.155, 2, 4], 'true': [2.11e-08, 0, 3], 'false,true,true,false': [1.549, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false,false': 'enzyme(A, H)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(F, D), recursion_proteinclass(F, B)', 'false': 'interaction(A, D)'}, {'false,false,true,true': [0.108, 0, 6], 'false,false,true,false': [0.0, 5, 0], 'false,false,false,true': [1.581, 5, 5], 'false,true,true,true': [0.0, 0, 4], 'false,false,false,false': [0.816, 2, 1], 'false,true,false,true': [0.06, 0, 6], 'false,true,false,false': [0.06, 6, 0], 'true': [0.0, 0, 3], 'false,true,true,false': [0.047, 7, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(E, A), enzyme(A, F)', 'false': 'interaction(A, D)'}, {'false,false,true,true': [1.229, 2, 12], 'false,false,true,false': [0.118, 10, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false,true': [0.087, 0, 6], 'false,true,false,false': [0.053, 6, 0], 'true': [1.05e-08, 0, 3], 'false,true,true,false': [1.278, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, A)', 'false': 'interaction(E, A), interaction(A, E)', 'false,false,false': 'interaction(A, K)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'enzyme(A, G), enzyme(E, H)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.222, 5, 8], 'false,false,false,false': [1.881, 12, 11], 'false,true,false': [0.083, 8, 0], 'false,true,true,false': [0.161, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(A, E), interaction(F, A)', 'false,false,false': 'interaction(A, J)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.651, 10, 8], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [0.635, 1, 6], 'false,false,false,false': [0.81, 2, 2], 'false,true,false': [0.896, 12, 3], 'false,true,true,false': [0.156, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(D, C)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(A, D), enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false,false': 'enzyme(A, J), interaction(K, A)', 'false,false': 'interaction(H, A), interaction(I, H)', 'true': 'interaction(D, A), interaction(C, E)'}, {'true,true,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,true,false': [1.644, 10, 9], 'true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 1], 'true,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.762, 2, 1], 'false,true': [1.353, 13, 10], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(J, A)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false,false': 'interaction(A, I)', 'false,true': 'enzyme(A, G), interaction(F, H)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.332, 13, 10], 'false,false,false,true': [1.806, 12, 11], 'false,false,false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,false': [0.007, 0, 2], 'false,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false,false': 'interaction(A, I)', 'false,true': 'interaction(A, G), interaction(G, F)', 'true': 'interaction(D, A), enzyme(A, E)'}, {'true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,false': [0.011, 0, 3], 'false,false,false,true': [1.615, 10, 9], 'false,false,false,false': [0.789, 2, 2], 'false,false,true': [1.317, 13, 10], 'false,true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)', 'false,false': 'interaction(A, G)', 'false,true': 'enzyme(A, E)', 'false,true,true': 'interaction(A, F)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'false,false,true,true': [0.143, 0, 3], 'false,false,true,false': [1.187, 13, 7], 'false,false,false,true': [1.609, 10, 9], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.788, 2, 2], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'true': [0.01, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.356, 0, 12], 'false,true,true,true': [0.939, 1, 10], 'false,false': [0.0, 0, 0], 'true,false': [0.149, 13, 0], 'false,true,false': [0.15, 10, 0], 'false,true,true,false': [0.716, 1, 2]}]]
[{'': [1.4802973661668753e-16, 0.24898143956541396], 'false,true,false': [0.22222222222222224, 0.22222222222222224], 'false,false,true': [0.0, 0.2493074792243767], 'false,false,false': [0.0, 0.22222222222222224], 'false,false': [0.25, 0.25], 'false,true': [0.2314049586776858, 0.24999999999999992], 'false,true,true': [0.0, 0.24000000000000005], 'false': [0.2457466918714556, 0.24999999999999956]}, {'': [0.0, 0.24125697942698274], 'false,true,false': [0.0005911423735001087, 0.0005911423735000207], 'false,false,true': [0.001934635002529106, 0.0], 'false,false,false': [0.2500000000000001, 0.2222222222222222], 'false,false': [0.2338066259431177, 0.24738608756247038], 'false,true': [0.22825830415794385, 0.24206894322747882], 'false,true,true': [0.0, 0.00031626684503553915], 'false': [0.23878840898514794, 0.24212382269937552]}, {'': [3.700743415417188e-17, 0.18336131765441435], 'false,false,true': [0.10793073224052556, 0.0013929255347839343], 'false,true,false': [0.0012552087964009158, 0.00046671620757826143], 'false,false': [0.20426651214729344, nan], 'false,true': [0.15530529196768322, 0.16085407984685174], 'false,true,true': [0.0, 0.16344699231894982], 'false': [0.16025854523413469, 0.20426651214729344]}, {'': [0.0031710049244531024, 0.1352603841440204], 'false,false,true': [nan, 0.0], 'true': [0.0, 0.0], 'false,false,false': [0.11482313279253739, 0.15381622463221925], 'false,false': [0.0, 0.14238119881313108], 'false,true': [0.008642395449781218, 0.0008642899310771363], 'false,true,true': [nan, 0.008642395449781218], 'false': [0.09034541531862479, 0.1396388410697771]}, {'': [0.0015340486625885774, 0.1199696420532906], 'false,false,true': [0.0, 0.15135436090944396], 'true': [0.0, 0.0], 'false,false,false': [0.05768950200773986, 0.1641344705178393], 'false,false': [0.14599856155957927, 0.11218269866270342], 'false,true': [0.008153147538958091, 0.05352168006882993], 'false,true,true': [nan, 0.008153147538958091], 'false': [0.0709216580109128, 0.13889669573980531]}, {'': [0.00012282265806788187, 0.11114918508156853], 'true,true': [0.0, 0.0], 'false,false,true': [0.0, 0.14223271165465276], 'true,true,true': [nan, 0.0], 'true': [0.00018394778681960627, 0.0], 'false,false,false': [0.0, 0.19359667164375438], 'false,false': [0.13643837123795396, 0.16280311693961957], 'false': [0.07960660449005928, 0.1409025579054781]}, {'': [0.001389625631669153, 0.10551678682958666], 'false': [2.6995816556261987e-05, 0.10954101218886801], 'false,false,false': [0.1417956353007831, nan], 'true,false': [nan, 0.0], 'false,false': [0.07719067605216365, 0.1417956353007831], 'false,true': [nan, 2.6995816556261987e-05], 'true': [0.0, 0.0]}, {'': [3.831224371075859e-05, 0.10624384521665603], 'false,true,false': [nan, 0.0], 'false': [0.0, 0.10796491592248261], 'false,false,false': [0.13723474229318375, 0.15563773638127387], 'false,false': [0.07544858578159577, 0.14044393754714532], 'false,true': [nan, 0.0], 'true': [nan, 3.831224371075859e-05]}, {'': [3.03532167265456e-05, 0.10500319875120578], 'false,false,true': [0.006800430843722134, 0.07048784799225909], 'false,false,false': [0.1361758329310158, 0.15542393058827605], 'false,false': [0.07418873491657062, 0.1395281821030761], 'false,true': [0.0, nan], 'false,true,true': [nan, 0.0], 'false': [0.0, 0.10686438441125755]}, {'': [0.06230639113527824, 0.13372224751091757], 'true,true': [0.0, 0.010559085850196678], 'false': [0.13372224751091757, nan], 'false,true': [0.10495460303587835, 0.002251831492716472], 'false,true,true': [0.08020965091600737, 0.17088785096313364], 'true': [0.011620305785921266, 0.0016988605601283612]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,false,true;recursion_proteinclass(J, B).;true;true
0;false,false,false;enzyme(A, K), interaction(L, A).;true;true
0;false,false;interaction(I, A), interaction(J, I).;true;true
0;false,true;interaction(D, E), interaction(A, E).;true;true
0;false,true,true;interaction(D, A), enzyme(A, F).;true;true
0;false;interaction(A, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
1;false,false;enzyme(A, H).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,true,true;interaction(F, D), recursion_proteinclass(F, B).;true;true
1;false;interaction(A, D).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;false,true;interaction(E, D), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;false,true,true;interaction(E, A), enzyme(A, F).;true;true
2;false;interaction(A, D).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false;interaction(E, A), interaction(A, E).;true;true
3;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false,false;interaction(H, A), interaction(I, H).;true;true
4;false,false,true;recursion_proteinclass(I, B).;true;true
4;false;interaction(A, E), interaction(F, A).;true;true
4;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,true;recursion_proteinclass(D, B), interaction(D, C).;true;true
5;false,false,true;recursion_proteinclass(I, B).;true;true
5;true;interaction(D, A), interaction(C, E).;true;true
5;false,false,false;enzyme(A, J), interaction(K, A).;true;true
5;false,false;interaction(H, A), interaction(I, H).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
6;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(F, G), recursion_proteinclass(G, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), enzyme(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.33183314562582816;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16900610166053662;  // std dev = 0,047, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7425655804689945;  // std dev = 0,126, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14197357824080592;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.781676868747208;  // std dev = 0,108, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1872214029846651;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.44033195879236153;  // std dev = 1,375, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.02094935470182031;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(E, A), enzyme(A, F) )
%   | | | then return -0.10804603207388497;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.17704538712444454;  // std dev = 1,278, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.58171551470025;  // std dev = 0,176, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12554160496791236;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.2210949318415239;  // std dev = 0,768, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.44932477980378954;  // std dev = 1,534, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return -0.20477209177900657;  // std dev = 0,106, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5590149409984504;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.4850387612812102;  // std dev = 0,180, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.15938507093765752;  // std dev = 0,089, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.16253100406965446;  // std dev = 2,089, 30,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.4676383347444053;  // std dev = 0,666, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.42022501947785096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( phenotype(G, I), complex(A, J) )
%   | | | then return 0.04487935556791269;  // std dev = 0,652, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.12857343749946468;  // std dev = 0,041, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.18102872043445215;  // std dev = 0,586, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( recursion_proteinclass(L, B) )
%   | | | then return 0.3889610279687298;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1353232888242565;  // std dev = 1,745, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.0898260765114144;  // std dev = 0,642, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3831414780738181;  // std dev = 0,747, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.27595230566119855;  // std dev = 0,021, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.24348926903046098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, A) )
%   | | then if ( interaction(G, G), complex(G, H) )
%   | | | then return -0.14340222293202912;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.05317356971989266;  // std dev = 0,865, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.30812055856724185;  // std dev = 0,556, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.3013994589695904;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1187617370140264;  // std dev = 1,742, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.3528367221103035;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.03493844816876709;  // std dev = 0,710, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20633399701460975;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.29716460820520585;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.22199985114788434;  // std dev = 0,029, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A), phenotype(A, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3676258940238254;  // std dev = 0,752, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.19381780665058748;  // std dev = 0,317, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.07141226567598183;  // std dev = 1,112, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.23158710071361044;  // std dev = 0,986, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18226160250675835;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.2390306854401666;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( enzyme(E, G), complex(E, H) )
%   | | | then return -0.09616049467971226;  // std dev = 0,404, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.02025050284857763;  // std dev = 1,206, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.023481972248131793;  // std dev = 0,396, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13862090742545669;  // std dev = 1,425, 20,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15668837442474545;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.19828754478928778;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2810545558673798;  // std dev = 0,738, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.16413407718848502;  // std dev = 0,280, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.0361063064892264;  // std dev = 1,090, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.15631007427004465;  // std dev = 0,970, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.13096531796250388;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.2157759165323783;  // std dev = 0,192, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24567403301248927;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then return -0.0923319196724935;  // std dev = 0,023, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.19765475000691413;  // std dev = 0,166, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | then if ( interaction(K, A), interaction(L, K) )
%   | | then if ( enzyme(A, M), interaction(N, L) )
%   | | | then return -0.0068332703279441465;  // std dev = 0,634, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.29541208753542314;  // std dev = 0,893, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.040585831633181677;  // std dev = 0,661, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.23450953540828468;  // std dev = 0,186, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.979628
   AUC PR    = 0.459211
   CLL	      = -0.379167
   Precision = 0.067621 at threshold = 0.5
   Recall    = 0.923913
   F1        = 0.126019


Total learning time: 14.664 seconds
Total inference time: 12.758 seconds
AUC ROC: 0.979628


Results scoring model
   AUC ROC   = 0.9968
   AUC PR    = 0.99678
   CLL	      = -0.257218
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 1.3 seconds
Refined model CLL: -0.257218


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.979628
   AUC PR    = 0.459211
   CLL	      = -0.379167
   Precision = 0.067621 at threshold = 0.5
   Recall    = 0.923913
   F1        = 0.126019


Total learning time: 18.547 seconds
Total inference time: 12.758 seconds
AUC ROC: 0.979628
Total revision time: 18.547
Best scored revision CLL: -0.257218


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:44:03
{'Inference time': 12.758, 'AUC ROC': 0.979628, 'F1': 0.126019, 'Learning time': 18.547, 'Precision': [0.067621, 0.5], 'CLL': -0.379167, 'AUC PR': 0.459211, 'parameter_25': {'Inference time': 4.185, 'AUC ROC': 0.997402, 'F1': 0.661654, 'Learning time': 1.635, 'Precision': [0.505747, 0.5], 'CLL': -0.281179, 'AUC PR': 0.64774, 'Recall': 0.956522}, 'Recall': 0.923913}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(C, C), complex(C, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.31968739663797385;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( interaction(I, A), interaction(I, I) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.6763307532813305;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(C, C), complex(C, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(C, D), enzyme(A, F) )
%   | | then return 0.03859402036149674;  // std dev = 0,870, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(C, G), complex(C, H) )
%   | | | then return -0.14542316136734243;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.35007848590694574;  // std dev = 1,774, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then if ( complex(A, K) )
%   | | then return 0.5514050678723644;  // std dev = 0,831, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5452230242335111;  // std dev = 0,852, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.17798224922889846;  // std dev = 0,078, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, M) )
%   | | then return 0.6408935331094662;  // std dev = 0,336, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.3908875910706989;  // std dev = 1,065, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( complex(C, E), interaction(C, C) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( complex(C, F), interaction(A, C) )
%   | | then return 0.004589569975679203;  // std dev = 0,807, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(G, C), phenotype(G, D) )
%   | | | then return 0.3721723808528456;  // std dev = 1,186, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.10394222230654576;  // std dev = 1,385, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then return 0.0850689243016613;  // std dev = 0,757, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return 0.6090464047268114;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.4576559316481194;  // std dev = 1,187, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.2254487368631147;  // std dev = 1,415, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then return 0.01207485064141856;  // std dev = 0,336, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(G, C), phenotype(G, D) )
%   | | then return 0.34985808387444034;  // std dev = 0,972, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4861963710786923;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.23569688456403295;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then if ( complex(A, K) )
%   | | then return 0.32175130384744033;  // std dev = 0,744, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, L), recursion_proteinclass(L, B) )
%   | | | then return 0.37886560861483476;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.18296035363163488;  // std dev = 0,136, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, M), complex(A, N) )
%   | | then return 0.1660141929237236;  // std dev = 0,808, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.40373201690752314;  // std dev = 0,365, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5633293116527588;  // std dev = 0,250, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then return -0.14036801959186776;  // std dev = 0,075, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.41026415838930513;  // std dev = 0,156, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( interaction(I, I), interaction(H, I) )
%   | | then if ( interaction(A, J), interaction(H, J) )
%   | | | then return 0.15538077917897955;  // std dev = 0,922, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.24397685934078103;  // std dev = 0,286, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(H, K), interaction(L, I) )
%   | | | then return 0.164747817932876;  // std dev = 1,437, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.5561477492012759;  // std dev = 0,132, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, M) )
%   | | then return 0.481585981382155;  // std dev = 0,184, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.30603155482246014;  // std dev = 0,635, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, E), interaction(C, C) )
%   | then return 0.32978133665056447;  // std dev = 0,519, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( phenotype(C, G), interaction(C, H) )
%   | | | then return -0.18895171512300465;  // std dev = 0,166, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11961673494431553;  // std dev = 0,055, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.19381029558219245;  // std dev = 0,688, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, I), phenotype(I, J) )
%   | then return 0.4335313280143444;  // std dev = 0,257, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(K, L), complex(L, M) )
%   | | | then return -0.01054321457826644;  // std dev = 1,302, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.23341414966289226;  // std dev = 1,127, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.12909316485290506;  // std dev = 0,815, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, C), complex(A, E) )
%   | then return 0.26505003182621567;  // std dev = 0,478, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( enzyme(F, G), phenotype(F, H) )
%   | | | then return -0.1802565618522022;  // std dev = 0,124, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11710626019677939;  // std dev = 0,088, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.15204070344537535;  // std dev = 0,695, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, I), phenotype(I, J) )
%   | then return 0.33802956353004954;  // std dev = 0,241, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then return -0.04788513930509514;  // std dev = 0,555, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return -0.040177506767436796;  // std dev = 0,618, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.12279274970070589;  // std dev = 1,727, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.32317182640271636;  // std dev = 0,236, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then return -0.10885194164904648;  // std dev = 0,064, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.3493635123978865;  // std dev = 0,212, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( interaction(I, I), interaction(H, I) )
%   | | then if ( interaction(A, J), interaction(H, J) )
%   | | | then return 0.08130286052104765;  // std dev = 0,734, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.20315889190060635;  // std dev = 0,288, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, K), interaction(L, I) )
%   | | | then return -0.05325846550922295;  // std dev = 0,773, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2250595284807939;  // std dev = 1,115, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( enzyme(A, M) )
%   | | then return 0.3177335810294693;  // std dev = 0,214, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17265270683299183;  // std dev = 0,612, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3346791757953569;  // std dev = 0,196, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.03289565831394351;  // std dev = 0,482, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.17996114408621122;  // std dev = 0,098, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, F), phenotype(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.21912740149461807;  // std dev = 0,160, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.20305433820396276;  // std dev = 0,284, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.2793927480845948;  // std dev = 0,186, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05275087293991658;  // std dev = 1,687, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, C), complex(A, E) )
%   | then return 0.14273522100264613;  // std dev = 0,363, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.08635825831811479;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1393122140882369;  // std dev = 0,117, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.0767475739183238;  // std dev = 0,505, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then return 0.22411573330052625;  // std dev = 0,192, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then return -0.010923278685568577;  // std dev = 0,642, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.1595295418278056;  // std dev = 0,532, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.008796797403091774;  // std dev = 1,515, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */


Results
   AUC ROC   = 0.65813
   AUC PR    = 0.010293
   CLL	      = -0.886979
   Precision = 0.011892 at threshold = 0.5
   Recall    = 0.826087
   F1        = 0.023446


Total learning time: 6.911 seconds
Total inference time: 3.267 seconds
AUC ROC: 0.65813


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN-B), Time: 01:44:14
{'Inference time': 3.267, 'AUC ROC': 0.65813, 'F1': 0.023446, 'Learning time': 6.911, 'Precision': [0.011892, 0.5], 'CLL': -0.886979, 'AUC PR': 0.010293, 'Recall': 0.826087}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, E), complex(A, G) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, C), phenotype(H, D) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(C, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(J, A) )
%   | then if ( complex(A, K), enzyme(J, L) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, J) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.44148226843284566;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( complex(A, M), phenotype(A, N) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */


Results
   AUC ROC   = 0.599335
   AUC PR    = 0.008853
   CLL	      = -0.240767
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.539 seconds
Total inference time: 2.393 seconds
AUC ROC: 0.599335


Dataset: 22_twitter_yeast, Fold: 3, Type: Scratch (RDN), Time: 01:44:19
{'Inference time': 2.393, 'AUC ROC': 0.599335, 'F1': nan, 'Learning time': 2.539, 'Precision': [nan, 0.5], 'CLL': -0.240767, 'AUC PR': 0.008853, 'Recall': 0.0}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, D), enzyme(D, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19148226843284555;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1667945087684516;  // std dev = 3,73e-09, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6846689160841062;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1448829431573806;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), enzyme(D, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.12783980240582282;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.17988080558471245;  // std dev = 0,759, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1317620463747586;  // std dev = 0,025, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.20627717981635207;  // std dev = 0,655, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then return 0.12239393479907577;  // std dev = 0,747, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.10079219770660117;  // std dev = 0,731, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.0830196862889086;  // std dev = 0,721, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.20142367321119947;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.030404488236891798;  // std dev = 0,681, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2588194905235387;  // std dev = 0,176, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.19443418093804446;  // std dev = 0,080, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.734482
   AUC PR    = 0.195744
   CLL	      = -0.314176
   Precision = 0.03771 at threshold = 0.5
   Recall    = 0.651163
   F1        = 0.071292


Total learning time: 1.512 seconds
Total inference time: 3.485 seconds
AUC ROC: 0.734482


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.201306
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.808 seconds
Parameter learned model CLL: -0.201306


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,false': 'enzyme(A, K), interaction(A, L)', 'false,true,false': 'interaction(G, D), enzyme(D, H)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false': 'interaction(D, A)'}, {'false,true,false,false': [0.816, 2, 1], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0], 'false,true,false,true': [0.816, 2, 1], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,true,false,false': [3.73e-09, 4, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 3], 'false,false,false,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), enzyme(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 4, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,false': 'interaction(I, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'enzyme(A, F), enzyme(D, G)', 'false': 'interaction(A, D), interaction(D, A)'}, {'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.759, 3, 3], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 2], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,false': 'interaction(I, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,true': 'interaction(F, D), recursion_proteinclass(F, B)', 'false,true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(D, A), interaction(A, E)'}, {'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.655, 2, 3], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true,false': [0.025, 2, 0], 'false,true,true,false': [0.0, 0, 2], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, E), interaction(E, F)', 'false': 'interaction(D, A)', 'false,false,false': 'enzyme(A, G), interaction(A, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.747, 4, 5], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, F)'}, {'false,false,false,true': [0.0, 1, 0], 'false,false,true': [0.731, 4, 5], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, F), interaction(F, G)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.721, 4, 5], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.681, 4, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, F)'}, {'true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.176, 0, 5], 'true,false': [0.08, 4, 0], 'false,true,false': [0.0, 1, 0], 'false,true,true': [0.0, 0, 0]}]]
[{'': [nan, 0.24999999999999983], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,true': [1.4802973661668753e-16, 0.22222222222222224], 'false,true,false': [0.22222222222222224, 0.2222222222222222], 'false,true,true': [0.0, 0.0], 'false': [0.2469135802469134, 0.0]}, {'': [nan, 0.21489778774924506], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,true': [0.0, 0.2222222222222222], 'false,true,false': [0.0, 3.469446951953614e-18], 'false,true,true': [0.0, nan], 'false': [0.21608962775155557, 0.0]}, {'': [nan, 0.14101769880313308], 'false,false,true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true': [3.700743415417188e-17, 0.152923619371335], 'false,true,false': [0.0, 0.0], 'false,true,true': [0.0, 0.0], 'false': [0.14184883225939648, 0.0]}, {'': [nan, 0.08610822619981291], 'false,false,false': [0.09592004854015919, 0.0], 'false,false': [nan, 0.09191874089997112], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'false': [0.06609118138599297, 0.09191874089997112]}, {'': [nan, 0.07175333898313133], 'false,false,false': [0.08569689174709631, 0.0], 'false,false': [nan, 0.08382826224568862], 'false,true': [0.0, 0.0003066337454140089], 'false,true,true': [nan, 0.0], 'false': [0.051336472955366884, 0.08382826224568862]}, {'': [nan, 0.05965922651442336], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false': [0.06197913836453867, 0.0]}, {'': [nan, 0.05633614613592721], 'false,false': [0.059371217060850974, 0.0], 'false,false,false': [0.0, nan], 'false': [nan, 0.05633614613592721]}, {'': [nan, 0.05411417056252571], 'false,false': [0.0576849526536321, 0.0], 'false,false,false': [nan, 0.0], 'false': [nan, 0.054114170562525696]}, {'': [nan, 0.05263714598280191], 'false,false': [0.05661331607438718, 0.0], 'false,false,true': [0.0, 0.06628909109865862], 'false,false,false': [nan, 0.0], 'false': [nan, 0.05263714598280191]}, {'': [0.05488640569861607, 0.0], 'true,true': [nan, 0.0062002199503478185], 'false,true': [nan, 0.0], 'false': [0.0, nan], 'true': [0.0062002199503478185, 0.001611420832059847]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true,true;interaction(A, D), enzyme(A, F).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true;interaction(E, D), interaction(E, A).;true;true
1;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true,true;interaction(A, E), enzyme(A, F).;true;true
2;true;interaction(D, E), interaction(E, A).;true;true
2;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, D), interaction(D, A).;true;true
3;false;interaction(I, A).;true;true
3;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(D, A), interaction(A, E).;true;true
4;false;interaction(I, A).;true;true
4;true;interaction(F, D), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(D, A).;true;true
6;;proteinclass(A, B) :- interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(E, A).;true;true
8;true;interaction(F, E), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, C), enzyme(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.8332054912315484;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1667945087684516;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, D), enzyme(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.6846689160841062;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1448829431573806;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.12783980240582282;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then return 0.17988080558471245;  // std dev = 0,759, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.1317620463747586;  // std dev = 0,025, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(F, A) )
%   | then return 0.20627717981635207;  // std dev = 0,655, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D) )
%   | then return 0.3590154480608614;  // std dev = 0,145, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06690327581035274;  // std dev = 0,366, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D) )
%   | then return 0.2827139224471785;  // std dev = 0,126, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.057800039854339645;  // std dev = 0,369, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D) )
%   | then return 0.2299487487504287;  // std dev = 0,109, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.050113520890306726;  // std dev = 0,373, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.207560923279829;  // std dev = 0,116, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.2146644756312915;  // std dev = 0,056, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12692280895891803;  // std dev = 0,056, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17917875261868704;  // std dev = 0,113, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11359808364524099;  // std dev = 0,051, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.766
   AUC PR    = 0.102364
   CLL	      = -0.519723
   Precision = 0.028033 at threshold = 0.5
   Recall    = 0.77907
   F1        = 0.05412


Total learning time: 1.401 seconds
Total inference time: 2.644 seconds
AUC ROC: 0.766


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.134462
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.781 seconds
Refined model CLL: -0.134462


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.766
   AUC PR    = 0.102364
   CLL	      = -0.519723
   Precision = 0.028033 at threshold = 0.5
   Recall    = 0.77907
   F1        = 0.05412


Total learning time: 4.502 seconds
Total inference time: 2.644 seconds
AUC ROC: 0.766
Total revision time: 4.502
Best scored revision CLL: -0.134462


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:44:30
{'Inference time': 2.644, 'AUC ROC': 0.766, 'parameter_5': {'Inference time': 3.485, 'AUC ROC': 0.734482, 'F1': 0.071292, 'Learning time': 1.512, 'Precision': [0.03771, 0.5], 'CLL': -0.314176, 'AUC PR': 0.195744, 'Recall': 0.651163}, 'F1': 0.05412, 'Learning time': 4.502, 'Precision': [0.028033, 0.5], 'CLL': -0.519723, 'AUC PR': 0.102364, 'Recall': 0.77907}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.02176788419240575;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.01904987294481035;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(C, E) )
%   | then return 0.5256277155501381;  // std dev = 0,375, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.03915126786985187;  // std dev = 0,463, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.1500298902743772;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(C, E), enzyme(D, E) )
%   | then return -0.0041846391273166845;  // std dev = 0,370, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.4433391776197077;  // std dev = 0,388, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.13188469456640944;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(C, E), interaction(C, D) )
%   | then return -0.03175040755237187;  // std dev = 0,301, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3753972819949396;  // std dev = 0,362, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11750406789279827;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E), complex(A, F) )
%   | then return -0.047811558731752656;  // std dev = 0,251, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.31870473711855113;  // std dev = 0,321, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10585617626177392;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E), complex(A, F) )
%   | then return -0.041656505871096115;  // std dev = 0,252, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.2609132936806012;  // std dev = 0,297, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09624672330810873;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(C, E), interaction(C, D) )
%   | then return -0.047608569219224996;  // std dev = 0,225, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.22715127685508188;  // std dev = 0,261, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08819400975123458;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then return 0.10526786286243271;  // std dev = 0,397, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.057349582306764374;  // std dev = 0,209, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.499956
   AUC PR    = 0.007758
   CLL	      = -1.220041
   Precision = 0.00776 at threshold = 0.5
   Recall    = 0.523256
   F1        = 0.015293


Total learning time: 2.579 seconds
Total inference time: 2.033 seconds
AUC ROC: 0.499956


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:44:35
{'Inference time': 2.033, 'AUC ROC': 0.499956, 'F1': 0.015293, 'Learning time': 2.579, 'Precision': [0.00776, 0.5], 'CLL': -1.220041, 'AUC PR': 0.007758, 'Recall': 0.523256}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */


Results
   AUC ROC   = 0.499902
   AUC PR    = 0.007757
   CLL	      = -0.27279
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.898 seconds
Total inference time: 1.337 seconds
AUC ROC: 0.499902


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:44:38
{'Inference time': 1.337, 'AUC ROC': 0.499902, 'F1': nan, 'Learning time': 0.898, 'Precision': [nan, 0.5], 'CLL': -0.27279, 'AUC PR': 0.007757, 'Recall': 0.0}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, D), phenotype(D, H) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7373269569258907;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.191258864214365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.820331156220661;  // std dev = 0,040, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16228381312679996;  // std dev = 0,063, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return 0.25289264170267634;  // std dev = 0,589, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5509535346988008;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6684456508274104;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14148060298848297;  // std dev = 0,057, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), phenotype(D, G) )
%   | | | then return 0.6110270595829941;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41424854274987577;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.15606694478586258;  // std dev = 0,064, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.15184487061154295;  // std dev = 1,096, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.15795862733523686;  // std dev = 0,367, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3657444791326663;  // std dev = 0,116, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14426283241148663;  // std dev = 0,072, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.379670407154312;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.24643294945650598;  // std dev = 0,833, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.11694812838381759;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then return 0.10354201612047478;  // std dev = 1,071, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.29512576307728255;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10540117602192783;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.08568749833112457;  // std dev = 1,050, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.07087859096812646;  // std dev = 0,236, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.07084334766207417;  // std dev = 1,036, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.2250244927094055;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10219004323816935;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2452839504679783;  // std dev = 0,096, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.005176344300652623;  // std dev = 0,929, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.18821560123839975;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09318816756258273;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2750174431783426;  // std dev = 0,233, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.1780297444998978;  // std dev = 0,120, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.1611275655160288;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08560629730701763;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.826369
   AUC PR    = 0.302384
   CLL	      = -0.358598
   Precision = 0.035859 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.06832


Total learning time: 1.52 seconds
Total inference time: 3.396 seconds
AUC ROC: 0.826369


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.203624
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.766 seconds
Parameter learned model CLL: -0.203624


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(G, D), phenotype(D, H)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,false,false': 'phenotype(A, K), interaction(A, L)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 1, 0], 'false,true,false,true': [1.225, 3, 3], 'false,true,false,false': [0.913, 5, 1], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'phenotype(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.08, 0, 5], 'false,false,false,false': [0.0, 1, 0], 'false,true,false,true': [0.04, 0, 4], 'false,true,false,false': [0.063, 8, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.589, 1, 1], 'false,true,false,true': [0.062, 0, 4], 'false,true,false,false': [0.057, 8, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,false': 'interaction(I, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'phenotype(A, F), phenotype(D, G)', 'false': 'interaction(A, D), interaction(D, A)'}, {'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.096, 7, 6], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.367, 1, 1], 'false,true,false': [0.064, 2, 0], 'false,true,true,false': [0.0, 0, 2], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,true': 'interaction(F, D), recursion_proteinclass(F, B)', 'false,true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(D, A), interaction(A, E)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.833, 3, 6], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true,false': [0.072, 6, 0], 'false,true,true,false': [0.116, 0, 3], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, E), interaction(E, F)', 'false,false,true': 'recursion_proteinclass(F, B)', 'false': 'interaction(D, A)', 'false,false,false': 'phenotype(A, G), interaction(A, H)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true': [1.071, 9, 9], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, F)'}, {'false,false,false,true': [0.236, 1, 1], 'false,false,true': [1.05, 9, 9], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, F), interaction(F, G)'}, {'false,false,false,true': [0.0, 0, 1], 'false,false,true': [1.036, 9, 9], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'false,false,true,true': [0.096, 0, 4], 'false,false,true,false': [0.929, 9, 5], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.233, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.12, 9, 0], 'false,true,false': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0]}]]
[{'': [nan, 0.25], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,true,false': [0.24999999999999992, 0.13888888888888892], 'false,false': [0.0, 0.0], 'false,true': [0.1388888888888887, 0.22222222222222218], 'false,true,true': [0.25, 0.0], 'false': [0.25, 0.25]}, {'': [nan, 0.21794767993992684], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0], 'false,false': [0.0, 0.0], 'false,true': [0.1208224450883389, 0.21503285622694213], 'false,true,false': [0.00040298572105301744, 0.0005037321513162059], 'false,true,true': [0.0012749962355528943, 0.0], 'false': [0.22232851619390073, 0.178471628116294]}, {'': [nan, 0.14311401349191252], 'false,false,true': [0.0, 0.0], 'false,false': [0.11145008534151415, nan], 'false,true': [0.07751013503309594, 0.14636202009707477], 'false,true,false': [0.0009592443120593486, 0.000403229116166845], 'false,true,true': [0.17330354114352323, 0.0], 'false': [0.14661070249266167, 0.11145008534151415]}, {'': [nan, 0.09351629132112235], 'false,false,false': [0.09234893396777236, 0.06736877561142735], 'false,false': [nan, 0.08902256542494053], 'false,true': [0.008604841041564745, 0.002016653012199967], 'false,true,true': [0.0, 0.0], 'false': [0.1030206217546354, 0.08902256542494053]}, {'': [nan, 0.07873504690019847], 'false,false,true': [nan, 0.0], 'false,false,false': [0.07704653919435994, 0.0], 'false,false': [0.0, 0.08122600797083952], 'false,true': [0.004464253626080568, 0.0008573749302274678], 'false,true,true': [nan, 0.004464253626080568], 'false': [0.0598613251240662, 0.07621834380890247]}, {'': [nan, 0.0613257719402295], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false': [0.06367605092671003, 0.040105457236045645]}, {'': [nan, 0.057918901035081426], 'false,false': [0.061243022320193866, 0.02780443610551245], 'false,false,false': [0.02780443610551245, nan], 'false': [nan, 0.05791890103508146]}, {'': [nan, 0.05629898661848072], 'false,false': [0.059571395715208704, 0.02676733813384669], 'false,false,false': [0.0, 0.0], 'false': [nan, 0.05629898661848074]}, {'': [nan, 0.054573633863489304], 'false,false': [0.05842555827941032, 0.019797020273849206], 'false,false,true': [0.0023088705969191575, 0.06164741705295303], 'false,false,false': [0.0, 0.0], 'false': [nan, 0.054573633863489325]}, {'': [0.05511350659231067, 0.015219399765895474], 'true,true': [nan, 0.006006454005095474], 'true': [0.006006454005095474, 0.0015946820479444896], 'false,true': [0.0, 0.0], 'false,true,true': [0.0, nan], 'false': [0.015219399765895474, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true,true;interaction(A, D), phenotype(A, F).;true;true
0;false;interaction(A, I), interaction(I, J).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;phenotype(A, H).;true;true
1;true;interaction(E, D), interaction(E, A).;true;true
1;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true,true;interaction(A, E), phenotype(A, F).;true;true
2;false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;true;interaction(D, E), interaction(E, A).;true;true
2;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, D), interaction(D, A).;true;true
3;true,true;phenotype(A, F), phenotype(D, G).;true;true
3;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(D, A), interaction(A, E).;true;true
4;false,false;interaction(I, A).;true;true
4;false;interaction(A, G), interaction(G, H).;true;true
4;true;interaction(F, D), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(D, A).;true;true
5;false;interaction(A, E), interaction(E, F).;true;true
7;;proteinclass(A, B) :- interaction(E, A).;true;true
7;false;interaction(A, F), interaction(F, G).;true;true
8;;proteinclass(A, B) :- interaction(E, A).;true;true
8;false;interaction(A, G), interaction(G, H).;true;true
8;true;interaction(F, E), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, C), phenotype(A, E) )
%   | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.7373269569258907;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.191258864214365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.7507219186171548;  // std dev = 0,108, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.13672760989183624;  // std dev = 0,041, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( phenotype(A, G) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, D), phenotype(A, E) )
%   | | then return 0.25289264170267634;  // std dev = 0,589, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.5509535346988008;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.5905599388213819;  // std dev = 0,149, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1214006059044941;  // std dev = 0,037, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(C, F) )
%   | | then return 0.6110270595829941;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41424854274987577;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.15036322722127574;  // std dev = 0,072, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.09975234973535817;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.40839299783090954;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.02229848432905094;  // std dev = 0,631, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.3657444791326663;  // std dev = 0,116, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10492134603383889;  // std dev = 0,080, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then return 0.3227020600360011;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.3129212270754157;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.05007901206429311;  // std dev = 0,613, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.10364977010503269;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(A, D) )
%   | then if ( complex(A, E), interaction(A, F) )
%   | | then return -0.08156386912125661;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.02850946278297698;  // std dev = 0,398, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.1511316583842551;  // std dev = 0,395, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2508527663110436;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.11787323015619999;  // std dev = 0,554, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then return 0.25652980100589606;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.09440797356197872;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), enzyme(E, F) )
%   | then return 0.08607295712889924;  // std dev = 0,333, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.23445515538535638;  // std dev = 0,115, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), interaction(A, G) )
%   | then return 0.1280799496563109;  // std dev = 0,247, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then return -0.11214121539251524;  // std dev = 0,069, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.1255080413323236;  // std dev = 0,508, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.11118145881066821;  // std dev = 0,368, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19151409538026398;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, H) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.021761914692523924;  // std dev = 0,239, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10239227903963236;  // std dev = 0,042, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.12226119661026659;  // std dev = 0,512, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, K), interaction(K, L) )
%   | then return 0.17435538149403274;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.09710062513425198;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.20126358032577277;  // std dev = 0,086, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.07576425438431998;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.01059143233401951;  // std dev = 0,250, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.00995753854154778;  // std dev = 0,348, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17793688205472735;  // std dev = 0,405, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then return 0.15066124827957805;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.08891430454001657;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.16709050491551278;  // std dev = 0,089, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2554205922101607;  // std dev = 0,220, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1084995267918421;  // std dev = 0,136, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(F, G), recursion_proteinclass(F, B) )
%   | then return 0.13237906140401023;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.08196988816649935;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.859866
   AUC PR    = 0.072257
   CLL	      = -0.469004
   Precision = 0.033609 at threshold = 0.5
   Recall    = 0.709302
   F1        = 0.064177


Total learning time: 2.549 seconds
Total inference time: 4.584 seconds
AUC ROC: 0.859866


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.142467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.801 seconds
Refined model CLL: -0.142467


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.859866
   AUC PR    = 0.072257
   CLL	      = -0.469004
   Precision = 0.033609 at threshold = 0.5
   Recall    = 0.709302
   F1        = 0.064177


Total learning time: 5.636 seconds
Total inference time: 4.584 seconds
AUC ROC: 0.859866
Total revision time: 5.636
Best scored revision CLL: -0.142467


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:44:52
{'Inference time': 4.584, 'AUC ROC': 0.859866, 'F1': 0.064177, 'Learning time': 5.636, 'parameter_10': {'Inference time': 3.396, 'AUC ROC': 0.826369, 'F1': 0.06832, 'Learning time': 1.52, 'Precision': [0.035859, 0.5], 'CLL': -0.358598, 'AUC PR': 0.302384, 'Recall': 0.72093}, 'Precision': [0.033609, 0.5], 'CLL': -0.469004, 'AUC PR': 0.072257, 'Recall': 0.709302}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), enzyme(E, F) )
%   | then return 0.4068585879990681;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7443356231566909;  // std dev = 0,068, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( interaction(A, E) )
%   | then return 0.3212531071950044;  // std dev = 0,755, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5817900805941925;  // std dev = 0,089, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then return -0.18004379181225624;  // std dev = 0,157, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then return 0.4263589937061021;  // std dev = 0,660, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.05611453687672874;  // std dev = 0,844, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.07300016424741;  // std dev = 0,724, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( phenotype(A, E) )
%   | then return 0.45735039367601843;  // std dev = 0,138, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then return 0.35986530859474025;  // std dev = 0,585, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.04029136386576462;  // std dev = 0,852, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.061187052911124175;  // std dev = 0,728, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return 0.486235219358095;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.33134213439933013;  // std dev = 0,083, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0022334228410704573;  // std dev = 0,870, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return -0.1579909159667818;  // std dev = 0,112, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.04818597554068136;  // std dev = 0,549, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( location(A, F), interaction(G, A) )
%   | then if ( location(G, F), phenotype(A, H) )
%   | | then return 0.14558232189842044;  // std dev = 0,709, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.4953128137685683;  // std dev = 0,370, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.0017249689971412102;  // std dev = 0,404, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), enzyme(E, F) )
%   | then return 0.04408316789120448;  // std dev = 0,510, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3014531247716365;  // std dev = 0,294, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then return -0.14775296666834012;  // std dev = 0,105, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.187720700573588;  // std dev = 0,355, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.015092241836737097;  // std dev = 0,769, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.06443395517096809;  // std dev = 0,640, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return 0.2809047744743829;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.19616492550390993;  // std dev = 0,103, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.015062015459678701;  // std dev = 0,783, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), enzyme(E, F) )
%   | then return 0.017627936009017797;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.22433879715848906;  // std dev = 0,304, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, G), complex(A, H) )
%   | then return -0.1250162825213458;  // std dev = 0,092, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, I) )
%   | | then return -0.0019407199735586357;  // std dev = 0,444, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.1499943454278361;  // std dev = 0,674, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.05886169089350035;  // std dev = 0,595, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then return 0.013693505581503068;  // std dev = 0,450, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.22982965934006108;  // std dev = 0,486, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.05635671836773665;  // std dev = 0,289, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.499938
   AUC PR    = 0.007757
   CLL	      = -0.705997
   Precision = 0.007756 at threshold = 0.5
   Recall    = 0.325581
   F1        = 0.015152


Total learning time: 3.637 seconds
Total inference time: 2.455 seconds
AUC ROC: 0.499938


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:44:58
{'Inference time': 2.455, 'AUC ROC': 0.499938, 'F1': 0.015152, 'Learning time': 3.637, 'Precision': [0.007756, 0.5], 'CLL': -0.705997, 'AUC PR': 0.007757, 'Recall': 0.325581}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.499882
   AUC PR    = 0.007756
   CLL	      = -0.19851
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.224 seconds
Total inference time: 1.665 seconds
AUC ROC: 0.499882


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:45:01
{'Inference time': 1.665, 'AUC ROC': 0.499882, 'F1': nan, 'Learning time': 1.224, 'Precision': [nan, 0.5], 'CLL': -0.19851, 'AUC PR': 0.007756, 'Recall': 0.0}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.4295775065280836;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(G, D), phenotype(D, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7997069512924345;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19972841217674048;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7921249792825016;  // std dev = 0,068, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17245088670567735;  // std dev = 0,101, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7927941835770488;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2072058164229512;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return 0.24649386101392456;  // std dev = 0,578, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.291304060782793;  // std dev = 1,062, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6340764510940996;  // std dev = 0,101, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1493943088485863;  // std dev = 0,090, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6339167526012681;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1542538097606858;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), phenotype(D, G) )
%   | | | then return 0.5976421393984873;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5694019348614707;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.15399148627807846;  // std dev = 0,063, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.15279494997864362;  // std dev = 1,451, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.17174909602261965;  // std dev = 0,754, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4352284784100046;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.17405119481746717;  // std dev = 0,147, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19061236038876772;  // std dev = 0,673, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.26720936477793505;  // std dev = 1,071, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return -0.11407254956797959;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then return 0.10507095626599654;  // std dev = 1,381, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1510713735769474;  // std dev = 0,654, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1030419444880669;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.0854665059250332;  // std dev = 1,361, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.0839568745522103;  // std dev = 0,673, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.06941806780284569;  // std dev = 1,347, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.10200279356380548;  // std dev = 0,640, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.10129133591592326;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.30863608092311373;  // std dev = 0,108, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.00587233148250093;  // std dev = 1,214, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.08077377426289803;  // std dev = 0,637, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.09243584910622699;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25109492951979867;  // std dev = 0,665, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.1979832208953172;  // std dev = 0,182, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.2962903109594335;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.21786773054122788;  // std dev = 0,163, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.859899
   AUC PR    = 0.312343
   CLL	      = -0.244939
   Precision = 0.288372 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.41196


Total learning time: 1.546 seconds
Total inference time: 3.818 seconds
AUC ROC: 0.859899


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.25186
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.886 seconds
Parameter learned model CLL: -0.25186


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(G, D), phenotype(D, H)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,false,false': 'phenotype(A, K), interaction(A, L)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 2, 3], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 1, 0], 'false,true,false,true': [1.414, 3, 6], 'false,true,false,false': [0.913, 5, 1], 'true': [0.0, 0, 0], 'false,true,true,false': [1.309, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'phenotype(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.01, 0, 5], 'false,false,false,false': [0.0, 1, 0], 'false,true,false,true': [0.068, 0, 7], 'false,true,false,false': [0.101, 8, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [0.01, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.051, 3, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.578, 1, 1], 'false,true,false,true': [0.101, 0, 7], 'false,true,false,false': [0.09, 8, 0], 'true': [0.0, 0, 0], 'false,true,true,false': [1.062, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,false': 'interaction(I, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'phenotype(A, F), phenotype(D, G)', 'false': 'interaction(A, D), interaction(D, A)'}, {'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.451, 10, 9], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.754, 3, 3], 'false,true,false': [0.063, 2, 0], 'false,true,true,false': [0.0, 0, 2], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,true': 'interaction(F, D), recursion_proteinclass(F, B)', 'false,true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(D, A), interaction(A, E)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.673, 2, 3], 'false,false,false,true': [1.071, 4, 9], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true,false': [0.147, 8, 0], 'false,true,true,false': [0.018, 0, 3], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(A, E), interaction(E, F)', 'false,false,true': 'recursion_proteinclass(F, B)', 'false': 'interaction(D, A)', 'false,false,false': 'phenotype(A, G), interaction(A, H)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.654, 2, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0], 'false,true': [1.381, 12, 12], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, F)'}, {'false,false,false,true': [0.673, 3, 3], 'false,false,true': [1.361, 12, 12], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, F), interaction(F, G)'}, {'false,false,false,true': [0.64, 2, 3], 'false,false,true': [1.347, 12, 12], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'false,false,true,true': [0.108, 0, 4], 'false,false,true,false': [1.214, 12, 8], 'false,false,false,true': [0.637, 2, 3], 'false,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.665, 1, 12], 'false,true,true,true': [0.0, 0, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.182, 11, 0], 'false,true,false': [0.163, 3, 0], 'false,true,true,false': [0.0, 0, 0]}]]
[{'': [nan, 0.24999999999999964], 'false,false,true': [nan, 0.23999999999999994], 'false,false,false': [nan, 0.0], 'false,true,false': [0.22222222222222218, 0.13888888888888892], 'false,false': [0.23999999999999994, 0.0], 'false,true': [0.2469135802469134, 0.24888888888888888], 'false,true,true': [0.25, 0.2448979591836735], 'false': [0.24999999999999956, 0.24999999999999992]}, {'': [nan, 0.23886869188342338], 'false,false,true': [0.0, 0.0], 'false,false,false': [nan, 0.0], 'false,true,false': [0.0006610010972114873, 0.001265197412631397], 'false,false': [0.24, 0.0], 'false,true': [0.24665678888239345, 0.23255110433131693], 'false,true,true': [2.0404122364325872e-05, 2.3911080895659687e-05], 'false': [0.2392604259782295, 0.2373015939912825]}, {'': [nan, 0.15777838496138819], 'false,false,true': [0.0, 0.0008793740832217326], 'false,true,false': [0.0014613582903684197, 0.0010071961201024333], 'false,false': [0.15574289588510057, nan], 'false,true': [0.16279235003592837, 0.15399371701897988], 'false,true,true': [0.16707175436741784, 0.16112345108333506], 'false': [0.1582871246363576, 0.15574289588510057]}, {'': [nan, 0.11310870573480428], 'false,false,false': [0.11085720330188809, 0.09462983378276422], 'false,false': [nan, 0.10702816357786991], 'false,true': [0.0001772242560649969, 0.0019896615068836984], 'false,true,true': [0.0, 0.0], 'false': [0.12978360059442987, 0.10702816357786991]}, {'': [nan, 0.09867804540754417], 'false,false,true': [nan, 0.09046807726894329], 'false,false,false': [0.08829900641763458, 0.0], 'false,false': [0.09046807726894329, 0.09163421349338882], 'false,true': [0.00010432248895205405, 0.002698605068326143], 'false,true,true': [nan, 0.00010432248895205405], 'false': [0.07562182787722573, 0.09179981895974358]}, {'': [nan, 0.0796379868758574], 'false,false': [0.08564583257158517, 0.0], 'false,false,true': [nan, 0.08564583257158517], 'false,false,false': [nan, 0.0], 'false': [0.079459801800366, 0.08034007970104476]}, {'': [nan, 0.07679903573147492], 'false,false': [0.07712858656054396, 0.07547900922569335], 'false,false,false': [0.07547900922569335, nan], 'false': [nan, 0.07679903573147494]}, {'': [nan, 0.07528731264055301], 'false,false': [0.07559811353310113, 0.0740427619972269], 'false,false,false': [0.08196323054985216, 0.0], 'false': [nan, 0.07528731264055298]}, {'': [nan, 0.0740452971770242], 'false,false': [0.07459945430091523, 0.0718129868116172], 'false,false,true': [0.0029074279465325092, 0.07366021157590208], 'false,false,false': [0.08117532190266162, 0.0], 'false': [nan, 0.0740452971770242]}, {'': [0.06989731527774401, 0.07050521215091535], 'true,true': [nan, 0.03406513349823538], 'false': [0.07050521215091535, nan], 'false,true': [0.0, 0.008831178481932786], 'false,true,true': [0.0, nan], 'true': [0.034065133498235374, 0.003005880559673218]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;false;interaction(A, I), interaction(I, J).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;true;interaction(E, D), interaction(E, A).;true;true
1;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
1;false;phenotype(A, H).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;false;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;true;interaction(D, E), interaction(E, A).;true;true
2;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, D), interaction(D, A).;true;true
3;true,true;phenotype(A, F), phenotype(D, G).;true;true
3;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(D, A), interaction(A, E).;true;true
4;false,false;interaction(I, A).;true;true
4;false;interaction(A, G), interaction(G, H).;true;true
4;true;interaction(F, D), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(D, A).;true;true
5;false;interaction(A, E), interaction(E, F).;true;true
7;;proteinclass(A, B) :- interaction(E, A).;true;true
7;false;interaction(A, F), interaction(F, G).;true;true
8;;proteinclass(A, B) :- interaction(E, A).;true;true
8;false;interaction(A, G), interaction(G, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;false;interaction(G, F), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), enzyme(F, G) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( interaction(A, L), interaction(L, M) )
%   | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.7443356231566909;  // std dev = 0,068, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1486762440024697;  // std dev = 0,080, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.7727495785232465;  // std dev = 0,058, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.16029204673950886;  // std dev = 0,127, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.7927941835770488;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.2072058164229512;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.005019817462605211;  // std dev = 0,613, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.5894500028225804;  // std dev = 0,080, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.6114804330338526;  // std dev = 0,075, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14014799453634724;  // std dev = 0,114, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | then return 0.4316319330648947;  // std dev = 0,701, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.14376945186891596;  // std dev = 0,044, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(C, F) )
%   | | then return 0.5479758537788375;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4853538841807109;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.1454299328450736;  // std dev = 0,070, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.2511421405343511;  // std dev = 0,447, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4765959690667271;  // std dev = 0,138, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1659700828473974;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, K) )
%   | | then return -0.1412562348765813;  // std dev = 0,083, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.08828776690418431;  // std dev = 0,666, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.3821967065410677;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, F), enzyme(A, G) )
%   | | then return -0.08432856367573109;  // std dev = 0,000263, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12936865068850426;  // std dev = 0,069, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then return 0.17633289803423677;  // std dev = 0,646, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A) )
%   | | then if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.33858403729011755;  // std dev = 0,097, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13383746190449541;  // std dev = 0,771, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return -0.10690261122326276;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return 0.2032708791654195;  // std dev = 0,326, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(D, F) )
%   | | | then return -0.09621049217190959;  // std dev = 0,068, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11646415970054086;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then return -0.018877387704050046;  // std dev = 0,371, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.2637961913835706;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20323813055675133;  // std dev = 0,595, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, J), interaction(J, K) )
%   | then return 0.14050275479244137;  // std dev = 0,630, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.09711669661687686;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(A, E), phenotype(C, E) )
%   | then return 0.11409841990272838;  // std dev = 0,479, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.10384118885234021;  // std dev = 0,102, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then return -0.0038856517711170165;  // std dev = 0,440, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( phenotype(A, H) )
%   | | then if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.2205203734708018;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3107788642354085;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.05358318543342863;  // std dev = 0,346, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2235795276020511;  // std dev = 0,375, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), enzyme(F, G) )
%   | | then return 0.13041408206714797;  // std dev = 0,321, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1962361368351996;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( complex(A, J) )
%   | | | then return -0.0938590610449363;  // std dev = 0,079, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.007858264279245283;  // std dev = 0,322, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.12820359431464687;  // std dev = 0,072, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.20565006304249223;  // std dev = 0,312, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, M), interaction(M, N) )
%   | then return 0.07892940432096511;  // std dev = 0,574, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.10878452245686833;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), enzyme(F, G) )
%   | | then return 0.10900751527540525;  // std dev = 0,314, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16742096253846622;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return -0.0994030447645514;  // std dev = 0,085, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return -0.04555321276190001;  // std dev = 0,346, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17264216312830125;  // std dev = 0,288, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, L), interaction(L, M) )
%   | then return 0.06390291395174702;  // std dev = 0,572, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.09867789855774264;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), enzyme(F, G) )
%   | | then return 0.0915539298789984;  // std dev = 0,309, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14557179449822663;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return -0.09095869992078937;  // std dev = 0,079, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return -0.04004514234616526;  // std dev = 0,349, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.14713140944068073;  // std dev = 0,271, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(L, M), recursion_proteinclass(L, B) )
%   | then return 0.1102778793391311;  // std dev = 0,509, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.13611268343025384;  // std dev = 0,065, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.91318
   AUC PR    = 0.347566
   CLL	      = -0.343138
   Precision = 0.058116 at threshold = 0.5
   Recall    = 0.674419
   F1        = 0.107011


Total learning time: 4.081 seconds
Total inference time: 4.834 seconds
AUC ROC: 0.91318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.16943
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.01 seconds
Refined model CLL: -0.16943


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.91318
   AUC PR    = 0.347566
   CLL	      = -0.343138
   Precision = 0.058116 at threshold = 0.5
   Recall    = 0.674419
   F1        = 0.107011


Total learning time: 7.523 seconds
Total inference time: 4.834 seconds
AUC ROC: 0.91318
Total revision time: 7.523
Best scored revision CLL: -0.16943


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:45:18
{'parameter_15': {'Inference time': 3.818, 'AUC ROC': 0.859899, 'F1': 0.41196, 'Learning time': 1.546, 'Precision': [0.288372, 0.5], 'CLL': -0.244939, 'AUC PR': 0.312343, 'Recall': 0.72093}, 'Inference time': 4.834, 'AUC ROC': 0.91318, 'F1': 0.107011, 'Learning time': 7.523, 'Precision': [0.058116, 0.5], 'CLL': -0.343138, 'AUC PR': 0.347566, 'Recall': 0.674419}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(D, F) )
%   | | then return 0.4068585879990681;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7332857516252526;  // std dev = 0,078, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.4975164520739615;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then return -0.151236314720224;  // std dev = 0,093, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.2221086701944321;  // std dev = 0,995, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), interaction(F, A) )
%   | | then return 0.3218969203777237;  // std dev = 0,756, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5697977687757648;  // std dev = 0,100, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then return -0.13441817623071478;  // std dev = 0,073, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.031106600921417454;  // std dev = 0,835, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.4775159967259257;  // std dev = 0,792, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(A, E), phenotype(C, E) )
%   | then return 0.26736353277853714;  // std dev = 0,456, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.11792350858323447;  // std dev = 0,066, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then return 0.5365463553858074;  // std dev = 0,295, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return -0.1563160107081891;  // std dev = 0,164, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.45561652883561365;  // std dev = 0,130, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1668330487408194;  // std dev = 1,115, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then return 0.23706364727085033;  // std dev = 0,392, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.16225185036388926;  // std dev = 0,278, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then return -0.016976613260096623;  // std dev = 0,409, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.26754880275653353;  // std dev = 0,544, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.531541879746185;  // std dev = 0,214, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09452979270088309;  // std dev = 0,761, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then return 0.1934812281097395;  // std dev = 0,365, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.1432018503956992;  // std dev = 0,255, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then return -0.014906726677742548;  // std dev = 0,411, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(A, K), phenotype(I, L) )
%   | | | then return 0.18167569227989722;  // std dev = 0,517, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3887692289313639;  // std dev = 0,217, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.07680188059133848;  // std dev = 0,755, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), phenotype(F, D) )
%   | | then return 0.3176071843101452;  // std dev = 0,075, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.22714606182820982;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1159335205719646;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then return -0.12787176608224185;  // std dev = 0,235, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then return -0.015726201952420037;  // std dev = 0,659, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.023775373877042278;  // std dev = 0,443, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.34465270303011586;  // std dev = 0,253, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then return 0.25420578732125876;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.18896959014196985;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10460860335676285;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(H, A), interaction(A, H) )
%   | then return 0.2196426148801427;  // std dev = 0,408, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then return -0.165836791807389;  // std dev = 0,159, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.05387217451630205;  // std dev = 0,628, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.21752953777358697;  // std dev = 0,365, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then return 0.10570854286897807;  // std dev = 0,253, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.1176349785068524;  // std dev = 0,206, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.266632200476867;  // std dev = 0,143, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.15206276924481818;  // std dev = 0,185, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, J) )
%   | | then return 0.02791726984034383;  // std dev = 0,420, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.23340323193914303;  // std dev = 0,220, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then return 0.09186076734047181;  // std dev = 0,250, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.10669962254960631;  // std dev = 0,191, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.21895767390161405;  // std dev = 0,127, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.13421858798126937;  // std dev = 0,167, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, J) )
%   | | then return 0.023706793545965804;  // std dev = 0,419, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.19582999198267684;  // std dev = 0,196, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */


Results
   AUC ROC   = 0.841207
   AUC PR    = 0.102017
   CLL	      = -0.402172
   Precision = 0.037678 at threshold = 0.5
   Recall    = 0.709302
   F1        = 0.071554


Total learning time: 5.389 seconds
Total inference time: 3.409 seconds
AUC ROC: 0.841207


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:45:27
{'Inference time': 3.409, 'AUC ROC': 0.841207, 'F1': 0.071554, 'Learning time': 5.389, 'Precision': [0.037678, 0.5], 'CLL': -0.402172, 'AUC PR': 0.102017, 'Recall': 0.709302}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.875546
   AUC PR    = 0.081824
   CLL	      = -0.184696
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.796 seconds
Total inference time: 1.978 seconds
AUC ROC: 0.875546


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:45:31
{'Inference time': 1.978, 'AUC ROC': 0.875546, 'F1': nan, 'Learning time': 1.796, 'Precision': [nan, 0.5], 'CLL': -0.184696, 'AUC PR': 0.081824, 'Recall': 0.0}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4831489350995122;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(G, D), phenotype(D, H) )
%   | | | then return 0.44148226843284566;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.1081489350995122;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7866492175274505;  // std dev = 0,008, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.21309976857494173;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8063961853528802;  // std dev = 0,061, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.17778199543345732;  // std dev = 0,081, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7927941835770488;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2072058164229512;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return 0.3517810637035512;  // std dev = 0,656, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.32670603793898656;  // std dev = 1,106, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6509218132370305;  // std dev = 0,091, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.15335220592211635;  // std dev = 0,072, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6339167526012681;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13747883713385406;  // std dev = 0,069, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), phenotype(E, H) )
%   | | | then return 0.5341353467732947;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5506991164888707;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.17186508476967796;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.15849282494250008;  // std dev = 1,600, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.10324520806042323;  // std dev = 0,825, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4092131413787695;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1769801557942144;  // std dev = 0,163, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20373515443817775;  // std dev = 0,683, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2670065665539315;  // std dev = 1,185, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return -0.10894826701226389;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.1097461820363589;  // std dev = 1,544, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1615324598825684;  // std dev = 0,662, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0988135350684663;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.08919516110487248;  // std dev = 1,520, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.0459510629027452;  // std dev = 0,715, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.0724150290111152;  // std dev = 1,505, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.11810677575755216;  // std dev = 0,647, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.09420497275521987;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.27957312506053295;  // std dev = 0,110, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0057643392270383086;  // std dev = 1,363, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.09338965752107967;  // std dev = 0,642, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.08646791765771872;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2530863629598245;  // std dev = 0,696, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return -0.20151916038053239;  // std dev = 0,190, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.3077157457594173;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.15863168614001752;  // std dev = 0,216, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97909
   AUC PR    = 0.369322
   CLL	      = -0.255952
   Precision = 0.275862 at threshold = 0.5
   Recall    = 0.930233
   F1        = 0.425532


Total learning time: 1.605 seconds
Total inference time: 3.803 seconds
AUC ROC: 0.97909


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.237472
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.912 seconds
Parameter learned model CLL: -0.237472


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(G, D), phenotype(D, H)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,false,false': 'phenotype(A, K), interaction(A, L)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 2, 3], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.816, 1, 2], 'false,false,false,false': [0.0, 3, 0], 'false,true,false,true': [1.708, 5, 7], 'false,true,false,false': [1.225, 6, 2], 'true': [0.0, 0, 1], 'false,true,true,false': [1.369, 3, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,false': 'phenotype(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,true,true': [0.008, 0, 7], 'false,false,false,false': [0.0, 3, 0], 'false,true,false,true': [0.061, 0, 9], 'false,true,false,false': [0.081, 11, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.006, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), phenotype(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.069, 5, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.656, 1, 2], 'false,true,false,true': [0.091, 0, 9], 'false,true,false,false': [0.072, 11, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [1.106, 3, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'phenotype(A, G), phenotype(E, H)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 2], 'false,false,false,true': [1.6, 12, 11], 'false,false,false,false': [0.825, 5, 3], 'false,true,false': [0.091, 3, 0], 'false,true,true,false': [0.0, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.683, 2, 3], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.185, 5, 11], 'false,false,false,false': [0.0, 3, 0], 'false,true,false': [0.163, 10, 0], 'false,true,true,false': [0.013, 0, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(D, A), phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false,false': 'phenotype(A, J), interaction(A, K)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true': 'interaction(A, D), interaction(E, C)'}, {'true,true,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true,false': [0.662, 2, 3], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 3, 0], 'false,true': [1.544, 15, 16], 'false,false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(F, A)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.52, 15, 16], 'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [0.715, 5, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(A, D), phenotype(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.505, 15, 16], 'false,false,false,false': [2.63e-09, 3, 0], 'false,false,false,true': [0.647, 2, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'false,false,true,true': [0.11, 0, 6], 'false,false,true,false': [1.363, 15, 10], 'false,false,false,true': [0.642, 2, 3], 'false,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.696, 1, 16], 'false,true,true,true': [7.45e-09, 0, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.19, 14, 0], 'false,true,false': [0.216, 5, 0], 'false,true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24983563445101872], 'false,false,true': [nan, 0.23999999999999994], 'false,false,false': [nan, 0.0], 'false,false': [0.23999999999999994, 0.0], 'false,true': [0.23140495867768587, 0.2475], 'false,true,false': [0.2430555555555555, 0.1875], 'false,true,true': [0.22222222222222224, 0.23437500000000008], 'false': [0.24973985431841783, 0.2343749999999999]}, {'': [0.0, 0.23911922959261206], 'false,false,true': [0.0, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [0.24, 0.0], 'false,true': [0.2312985849572337, 0.24024323479461565], 'false,true,false': [0.0004141200758901083, 0.0005940447369613814], 'false,true,true': [1.0081276286528456e-05, 9.262172588467288e-06], 'false': [0.24278472049896946, 0.21294643986028924]}, {'': [0.0, 0.15812175539332926], 'false,false,true': [0.0, 0.0009497240098794713], 'false,false': [0.1400586921615177, nan], 'false,true': [0.1504501651286533, 0.1607731052744613], 'false,true,false': [0.0009292473502841877, 0.0004689295235775669], 'false,true,true': [0.14362681161681204, 0.15283744353638634], 'false': [0.16068561764542827, 0.1400586921615177]}, {'': [0.0, 0.11121991840039507], 'true': [0.0, nan], 'false,false,false': [0.11126591171591625, 0.08510963118702908], 'false,false': [nan, 0.10510031907942027], 'false,true': [6.584603212576035e-05, 0.0027810974063703733], 'false,true,true': [0.0, 0.0], 'false': [0.12121724014145084, 0.10510031907942026]}, {'': [0.0, 0.09559816379406151], 'false,false,true': [nan, 0.09328314497842757], 'true': [0.0, nan], 'false,false,false': [0.0878125828064315, 0.0], 'false,false': [0.09328314497842757, 0.0927408391786174], 'false,true': [3.524933807277364e-05, 0.0026503834859493034], 'false,true,true': [nan, 3.524933807277364e-05], 'false': [0.0781392458034425, 0.09285634118653778]}, {'': [0.0, 0.07596579055599784], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.0876587342671038], 'true,true,true': [0.0, nan], 'false': [0.0769006586830014, 0.07067265510921585], 'false,false,false': [nan, -1.1564823173178713e-18], 'false,false': [0.0876587342671038, -1.1564823173178713e-18], 'true': [0.0, nan]}, {'': [0.0, 0.07267631380091404], 'false,false': [0.07454196470321012, 0.06396046494147137], 'true': [0.0, nan], 'false,false,false': [0.06396046494147137, nan], 'false': [nan, 0.07267631380091404]}, {'': [0.0, 0.07114604691325524], 'false,false': [0.07302424446037614, 0.06295320042599402], 'true': [0.0, nan], 'false,false,false': [0.08382151622288397, 2.3129646346357427e-18], 'false': [nan, 0.07114604691325524]}, {'': [0.0, 0.06958913157205561], 'false,false': [0.0720581646921016, 0.05916561166484721], 'false,false,true': [0.0019997310222782025, 0.07436162402454713], 'false,false,false': [0.08253419840780661, -1.1564823173178713e-18], 'false': [nan, 0.06958913157205561]}, {'': [0.06605433275878621, 0.056786444822040344], 'true,true': [0.0, 0.02845922336153323], 'true': [0.027622161841806808, 0.0025761614406751127], 'false,true': [1.850371707708594e-17, 0.009303339000565297], 'false,true,true': [1.850371707708594e-17, nan], 'false': [0.056786444822040344, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false;interaction(A, I), interaction(I, J).;true;true
0;false;interaction(D, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
1;false,false;phenotype(A, H).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true;interaction(D, E), interaction(E, A).;true;true
2;false;interaction(D, A).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,true,true;phenotype(A, G), phenotype(E, H).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
4;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;false,false,false;interaction(J, A).;true;true
4;false;interaction(E, A), interaction(A, F).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(A, H), interaction(H, I).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false;interaction(G, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false;interaction(A, G), interaction(G, H).;true;true
8;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
8;false;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8008006020917441;  // std dev = 0,062, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19734028379686713;  // std dev = 0,045, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7713502277936989;  // std dev = 0,066, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16919185336127;  // std dev = 0,132, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7927941835770488;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2072058164229512;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.10971800231691231;  // std dev = 0,963, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.6358728417007131;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6099789420763415;  // std dev = 0,093, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14694613723052471;  // std dev = 0,118, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.4316319330648947;  // std dev = 0,701, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.12804291503126117;  // std dev = 0,054, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), phenotype(D, G) )
%   | | | then return 0.6403277618386303;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5126553381369032;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12028005179432834;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then return -0.1366646221012666;  // std dev = 0,078, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.3215693204326524;  // std dev = 1,059, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.07896662875026592;  // std dev = 0,930, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.4255516501146457;  // std dev = 0,107, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11747669343203673;  // std dev = 0,093, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.16630816612656604;  // std dev = 0,778, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.21508377054772368;  // std dev = 1,104, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return -0.10751570473420308;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, E) )
%   | | | then return -0.10497218928884351;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.027082219676854785;  // std dev = 0,463, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.11608194172694908;  // std dev = 1,169, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.35455312173560305;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.12885676403802998;  // std dev = 0,770, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.09762578173939775;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(E, F), interaction(G, A) )
%   | | | then return 0.12035278213514901;  // std dev = 0,585, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.32556863630701693;  // std dev = 0,145, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.19861893642903866;  // std dev = 0,239, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then return 0.18389424284766237;  // std dev = 0,292, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.10772758823865847;  // std dev = 0,091, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.058874353895011715;  // std dev = 0,758, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( phenotype(E, G), location(A, H) )
%   | | | then return 0.07271249975742944;  // std dev = 0,722, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.14107583613079444;  // std dev = 0,160, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.04467223848020687;  // std dev = 0,675, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.2083254588627418;  // std dev = 0,356, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.0722147014345983;  // std dev = 0,642, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.08096992453553677;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.22941301497969482;  // std dev = 0,075, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.1042513169295259;  // std dev = 0,101, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.08727125686603567;  // std dev = 0,955, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.057387656157346624;  // std dev = 0,641, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.07514544472901603;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.04429389572534817;  // std dev = 0,539, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2258350912785495;  // std dev = 0,201, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, G) )
%   | | then return -0.09500397574141986;  // std dev = 0,093, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.22315502932261483;  // std dev = 0,108, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | then return 0.11816242557786127;  // std dev = 0,554, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.11363390307458987;  // std dev = 0,151, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.966448
   AUC PR    = 0.393032
   CLL	      = -0.286369
   Precision = 0.162896 at threshold = 0.5
   Recall    = 0.837209
   F1        = 0.272727


Total learning time: 3.547 seconds
Total inference time: 5.139 seconds
AUC ROC: 0.966448


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.191581
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.973 seconds
Refined model CLL: -0.191581


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.966448
   AUC PR    = 0.393032
   CLL	      = -0.286369
   Precision = 0.162896 at threshold = 0.5
   Recall    = 0.837209
   F1        = 0.272727


Total learning time: 7.037 seconds
Total inference time: 5.139 seconds
AUC ROC: 0.966448
Total revision time: 7.037
Best scored revision CLL: -0.191581


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:45:48
{'Inference time': 5.139, 'AUC ROC': 0.966448, 'parameter_20': {'Inference time': 3.803, 'AUC ROC': 0.97909, 'F1': 0.425532, 'Learning time': 1.605, 'Precision': [0.275862, 0.5], 'CLL': -0.255952, 'AUC PR': 0.369322, 'Recall': 0.930233}, 'F1': 0.272727, 'Learning time': 7.037, 'Precision': [0.162896, 0.5], 'CLL': -0.286369, 'AUC PR': 0.393032, 'Recall': 0.837209}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( enzyme(A, F), complex(A, G) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(D, F) )
%   | | then return 0.49327268722383816;  // std dev = 0,839, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.728993122216108;  // std dev = 0,060, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, D) )
%   | | then return 0.4305656340904462;  // std dev = 0,632, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(F, A), phenotype(F, C) )
%   | | then return 0.27819297151846367;  // std dev = 0,749, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5673361464513115;  // std dev = 0,070, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( enzyme(A, K), phenotype(J, L) )
%   | | | then return 0.11635935935226249;  // std dev = 0,817, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4447886284261281;  // std dev = 0,941, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.1763120255770855;  // std dev = 0,157, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), phenotype(E, C) )
%   | | then return 0.5260962232297741;  // std dev = 0,065, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.14272308430898123;  // std dev = 0,660, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.433666486209676;  // std dev = 0,068, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.11385916235453193;  // std dev = 0,055, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.3489971390544614;  // std dev = 0,525, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return -0.1194683268163265;  // std dev = 0,079, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.015426253089405928;  // std dev = 0,694, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3787065105998196;  // std dev = 0,747, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.3812723241266351;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10545463002115497;  // std dev = 0,062, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return 0.32380189434326073;  // std dev = 0,461, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then return -0.12276061451144289;  // std dev = 0,051, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(I, A), location(A, J) )
%   | | | then return 0.27882841530664054;  // std dev = 1,073, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.07826874884930991;  // std dev = 0,655, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.2967129608841335;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09595271818077207;  // std dev = 0,057, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(F, H), enzyme(H, I) )
%   | | then if ( interaction(J, F), enzyme(J, I) )
%   | | | then return 0.05148324070592902;  // std dev = 0,676, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.18936723186569673;  // std dev = 0,205, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.35100722695214265;  // std dev = 0,099, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, K) )
%   | | then if ( interaction(K, L), phenotype(K, M) )
%   | | | then return 0.32749923534043157;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.028575351719347126;  // std dev = 0,356, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.1514206932270912;  // std dev = 0,618, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.46169799294049346;  // std dev = 0,074, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, E) )
%   | | then return 0.08820333829682188;  // std dev = 0,674, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2718388222497681;  // std dev = 0,114, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.09201614335707611;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(F, A), location(A, G) )
%   | then if ( enzyme(F, H), location(F, G) )
%   | | then return -0.10096334338464122;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, I), phenotype(F, J) )
%   | | | then return -0.03014350808244223;  // std dev = 0,619, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3261302236003264;  // std dev = 0,130, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1449584874406561;  // std dev = 0,207, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.21404459446748103;  // std dev = 0,078, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.08747267994106059;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.1866942586954309;  // std dev = 0,342, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), phenotype(I, J) )
%   | | | then return -0.25028060636002963;  // std dev = 0,370, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.03209096788367743;  // std dev = 0,302, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.07998074362955825;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08637371179169133;  // std dev = 0,729, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, E) )
%   | | then return 0.05601722200071407;  // std dev = 0,593, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.19467286163466457;  // std dev = 0,101, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.07822536325923146;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then return 0.13576350873834317;  // std dev = 0,314, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return -0.1585961285994965;  // std dev = 0,326, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.07633196070439278;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.12194530592521395;  // std dev = 0,516, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.16209006066332507;  // std dev = 0,077, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.07516671708087531;  // std dev = 0,033, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(A, H), interaction(F, H) )
%   | | then return 0.010939703539436222;  // std dev = 0,235, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12707778271884987;  // std dev = 0,548, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return 0.20037630260590192;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.12243549190311664;  // std dev = 0,220, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.020319932290762514;  // std dev = 0,620, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */


Results
   AUC ROC   = 0.802496
   AUC PR    = 0.081397
   CLL	      = -0.410133
   Precision = 0.034676 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.066169


Total learning time: 6.326 seconds
Total inference time: 4.13 seconds
AUC ROC: 0.802496


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:45:59
{'Inference time': 4.13, 'AUC ROC': 0.802496, 'F1': 0.066169, 'Learning time': 6.326, 'Precision': [0.034676, 0.5], 'CLL': -0.410133, 'AUC PR': 0.081397, 'Recall': 0.72093}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( enzyme(A, F), complex(A, G) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.821658
   AUC PR    = 0.039978
   CLL	      = -0.174867
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.812 seconds
Total inference time: 2.329 seconds
AUC ROC: 0.821658


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:46:03
{'Inference time': 2.329, 'AUC ROC': 0.821658, 'F1': nan, 'Learning time': 1.812, 'Precision': [nan, 0.5], 'CLL': -0.174867, 'AUC PR': 0.039978, 'Recall': 0.0}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(J, B).;false;false
0;false,false,false;tweets(A, K), follows(A, L).;false;false
0;false,false;follows(A, I), follows(I, J).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false,true,false;follows(G, D), tweets(D, H).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
0;false;follows(D, A).;true;true
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J), follows(J, K).;false;false
1;false,false;tweets(A, H).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,true,true;follows(D, F), recursion_accounttype(F, B).;false;false
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;tweets(A, J).;false;false
2;false,false;follows(A, H).;true;true
2;false,true;follows(D, E), follows(E, A).;true;true
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,true,true;follows(A, E), tweets(A, F).;false;false
2;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(A, J).;false;false
3;true;follows(D, A), recursion_accounttype(D, B).;false;false
3;false,false,false;follows(K, A).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;tweets(A, G), tweets(E, H).;false;false
3;false;follows(A, E), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;true;follows(D, A), recursion_accounttype(D, B).;false;false
4;false,false,false;follows(J, A).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,true;follows(G, E), recursion_accounttype(G, B).;true;false
4;false,true,true;recursion_accounttype(E, B).;false;false
4;false;follows(E, A), follows(A, F).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,true;recursion_accounttype(D, B), follows(C, D).;true;false
5;false,false,true;recursion_accounttype(I, B).;false;false
5;true,true,true;follows(D, A), tweets(A, F).;false;false
5;true;follows(A, D), follows(E, C).;true;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
5;false,false;follows(A, H), follows(H, I).;true;true
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), recursion_accounttype(D, B).;false;true
6;false,false,false;follows(A, J).;false;false
6;true,false;follows(E, A), follows(A, E).;false;false
6;false,false;follows(I, A).;false;true
6;false,true;tweets(A, G), follows(H, F).;true;false
6;false,true,true;follows(H, A), recursion_accounttype(H, B).;false;false
6;false;follows(F, A), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), tweets(A, E).;false;false
7;false,false,false;follows(A, K), follows(K, L).;false;false
7;false,false;follows(J, A).;false;true
7;false,true,false;follows(I, F), follows(F, I).;false;false
7;false,true;follows(G, A), follows(F, G).;true;true
7;false,true,true;tweets(A, H), tweets(F, H).;false;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;follows(A, J), follows(J, K).;false;false
8;false,false;follows(H, A).;true;true
8;false,true;tweets(A, E).;true;true
8;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
8;false,true,true;follows(F, A).;false;false
8;false;follows(A, D), recursion_accounttype(D, B).;true;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;false,false;tweets(A, I).;true;false
9;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
9;false,true,true;follows(F, H).;false;false
9;false;follows(A, F).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, D), function(D, H) )
%   | | | then return 0.42957750652808374;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( function(A, K), interaction(A, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8013853751435229;  // std dev = 0,053, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18588657842126696;  // std dev = 0,058, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8012034407855589;  // std dev = 0,034, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.19598028250212285;  // std dev = 0,039, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.40874113578563503;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.1418981949498848;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, E), function(A, F) )
%   | | | then return 0.32304771359052337;  // std dev = 1,107, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.1354769697318885;  // std dev = 0,963, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6440907420332019;  // std dev = 0,050, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.16694450777423228;  // std dev = 0,035, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.737518376072187;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17121458457109484;  // std dev = 0,166, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( function(A, G), function(E, H) )
%   | | | then return 0.5479566203998212;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.20112874178222978;  // std dev = 0,093, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.20226759634064503;  // std dev = 1,813, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.09183235323647151;  // std dev = 1,032, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41203996175270274;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.08830518622496276;  // std dev = 0,798, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16635627494875296;  // std dev = 0,944, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.25092777950299655;  // std dev = 1,399, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return -0.10311049502200059;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.1172311209005084;  // std dev = 1,827, 40,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13096946030808285;  // std dev = 0,930, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return -0.09395764266504282;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.09458807444896247;  // std dev = 1,799, 40,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.039357914116498166;  // std dev = 0,959, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), function(A, E) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.07619297295995055;  // std dev = 1,781, 40,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.09337629201470928;  // std dev = 0,919, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.08941150568097367;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2955639650607847;  // std dev = 0,205, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.019981401823115044;  // std dev = 1,644, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.07231890922400609;  // std dev = 0,914, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.08239417127805151;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2766304409767924;  // std dev = 0,663, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return -0.22781171256699162;  // std dev = 0,159, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.4258949556458467;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.19528716016656103;  // std dev = 0,306, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.989055
   AUC PR    = 0.365405
   CLL	      = -0.245808
   Precision = 0.280277 at threshold = 0.5
   Recall    = 0.94186
   F1        = 0.432


Total learning time: 1.887 seconds
Total inference time: 4.073 seconds
AUC ROC: 0.989055


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.256636
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.975 seconds
Parameter learned model CLL: -0.256636


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,true,false': 'interaction(G, D), function(D, H)', 'false,false,true': 'recursion_proteinclass(J, B)', 'false,false,false': 'function(A, K), interaction(A, L)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(A, D), function(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 3, 3], 'false,false,false,true': [0.0, 3, 0], 'false,true,true,true': [1.369, 3, 5], 'false,false,false,false': [0.0, 0, 0], 'false,true,false,true': [2.268, 9, 12], 'false,true,false,false': [1.095, 3, 2], 'true': [0.0, 0, 1], 'false,true,true,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'function(A, H)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(D, F), recursion_proteinclass(F, B)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [1.095, 2, 3], 'false,false,true,false': [0.057, 4, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [0.053, 0, 7], 'false,true,false,true': [0.034, 0, 14], 'false,true,false,false': [0.039, 12, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.058, 7, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, E), function(A, F)', 'false': 'interaction(D, A)'}, {'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.166, 6, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true,true': [1.107, 3, 5], 'false,true,false,true': [0.05, 0, 14], 'false,true,false,false': [0.035, 12, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.963, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, E), interaction(E, A)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'function(A, G), function(E, H)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 5], 'false,false,false,true': [1.813, 14, 16], 'false,false,false,false': [1.032, 6, 3], 'false,true,false': [0.093, 5, 0], 'false,true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,false,false': 'interaction(J, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(E, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)'}, {'true,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.944, 3, 3], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.399, 7, 14], 'false,false,false,false': [0.0, 3, 0], 'false,true,false': [0.798, 12, 2], 'false,true,true,false': [0.0, 0, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true,true,true': 'interaction(D, A), function(A, F)', 'false': 'interaction(G, A)', 'false,false,false': 'function(A, J), interaction(A, K)', 'false,false': 'interaction(A, H), interaction(H, I)', 'true': 'interaction(A, D), interaction(E, C)'}, {'true,true,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 3, 0], 'false,false,true,false': [0.93, 3, 3], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'false,true': [1.827, 19, 21], 'false,false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false': 'interaction(F, A)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.799, 19, 21], 'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [0.959, 6, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(G, A)', 'true': 'interaction(A, D), function(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 1], 'false,false,true': [1.781, 19, 21], 'false,false,false,false': [1.86e-09, 3, 0], 'false,false,false,true': [0.919, 3, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'false,false,true,true': [0.205, 0, 6], 'false,false,true,false': [1.644, 19, 15], 'false,false,false,true': [0.914, 3, 3], 'false,false,false,false': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.663, 1, 21], 'false,true,true,true': [0.0, 0, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.159, 18, 0], 'false,true,false': [0.306, 6, 0], 'false,true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2498958767180341], 'false,false,true': [nan, 0.24999999999999992], 'false,false,false': [0.0, nan], 'false,false': [0.24999999999999992, 0.0], 'false,true': [0.25, 0.24852071005917128], 'false,true,false': [0.24489795918367308, 0.24000000000000005], 'false,true,true': [0.23437499999999983, 0.22222222222222224], 'false': [0.24937500000000004, 0.2222222222222221]}, {'': [0.0, 0.24354141791989858], 'false,false,true': [0.23999999999999994, 0.0008121585567457991], 'false,false': [0.20855939702592682, nan], 'false,true': [0.24412198628056533, 0.2472282204578013], 'false,true,false': [8.460175488357789e-05, 0.00012954643716565906], 'false,true,true': [0.00040500791514183225, 0.0004860094981705936], 'false': [0.2463920307958308, 0.20855939702592682]}, {'': [0.0, 0.17008069320505315], 'false,false,true': [-1.4802973661668753e-16, 0.004608540128717434], 'false,true,false': [0.00018201423457428083, 0.00010040914059543844], 'false,false': [0.18658249203236818, nan], 'false,true': [0.1623244041452745, 0.16361584981290764], 'false,true,true': [0.15305456377720555, 0.15457974333031013], 'false': [0.16333100261541222, 0.18658249203236818]}, {'': [0.0, 0.11938623559922142], 'true': [0.0, nan], 'false,false,false': [0.10961210348113118, 0.11839523023882365], 'false,false': [nan, 0.11380393916831665], 'false,true': [-4.4408920985006264e-17, 0.0017318801186486875], 'false,true,true': [-4.4408920985006264e-17, nan], 'false': [0.141148160018178, 0.11380393916831665]}, {'': [0.0, 0.10254441732497539], 'false,false,true': [nan, 0.1486312250657594], 'true': [0.0, nan], 'false,false,false': [0.0931492454939721, 0.0], 'false,false': [0.1486312250657594, 0.09521499135098278], 'false,true': [-4.4408920985006264e-17, 0.04551740180652499], 'false,true,true': [nan, -4.4408920985006264e-17], 'false': [0.08208254176695591, 0.10615830816286596]}, {'': [0.0, 0.08838890466841788], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.1442117444150671], 'true,true,true': [0.0, nan], 'false': [0.0834262583089916, 0.10738387442157431], 'false,false,false': [-1.1564823173178713e-18, nan], 'false,false': [0.1442117444150671, -1.1564823173178713e-18], 'true': [0.0, nan]}, {'': [0.0, 0.08524917608673031], 'false,false': [0.08088329989579608, 0.10216297181123207], 'true': [0.0, nan], 'false,false,false': [0.10216297181123207, nan], 'false': [nan, 0.08524917608673035]}, {'': [0.0, 0.08359363643895432], 'false,false': [0.0792759408459357, 0.10122118412789442], 'true': [0.0, nan], 'false,false,false': [0.14069464986302901, 1.1564823173178713e-18], 'false': [nan, 0.08359363643895432]}, {'': [0.0, 0.08217277322701926], 'false,false': [0.07827588355428063, 0.09814861084707469], 'false,false,true': [0.00699791473532622, 0.0794624862658818], 'false,false,false': [0.13924420384446667, 1.1564823173178713e-18], 'false': [nan, 0.08217277322701921]}, {'': [0.07293593697037312, 0.09612925636229558], 'true,true': [0.0, 0.01995685022742034], 'false': [0.09612925636229558, nan], 'false,true': [0.0, 0.015571477541716871], 'false,true,true': [0.0, nan], 'true': [0.019935118784338044, 0.0014002467641481091]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false;interaction(A, I), interaction(I, J).;true;true
0;false;interaction(D, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,true,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,true;interaction(D, E), interaction(E, A).;true;true
2;false;interaction(D, A).;true;true
2;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
4;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;false,false,false;interaction(J, A).;true;true
4;false;interaction(E, A), interaction(A, F).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false;interaction(A, H), interaction(H, I).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false;interaction(G, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false,false;interaction(A, G), interaction(G, H).;true;true
8;false;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( phenotype(E, G), interaction(H, E) )
%   | | | then return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.43709630352056494;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7863426652072155;  // std dev = 0,072, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1685860207479182;  // std dev = 0,099, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7751080524575045;  // std dev = 0,132, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1773466529986838;  // std dev = 0,127, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.40874113578563503;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.1418981949498848;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.055485555311458316;  // std dev = 0,967, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.4870209968192775;  // std dev = 0,734, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6150719335501148;  // std dev = 0,174, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.15313302245419128;  // std dev = 0,112, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.33751837607218693;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.1255810648927358;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.5665624427289531;  // std dev = 0,121, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1448623733348931;  // std dev = 0,081, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, F), location(A, G) )
%   | | then if ( phenotype(A, H), location(F, G) )
%   | | | then return 0.39372289408552463;  // std dev = 0,670, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.060516602057647084;  // std dev = 0,963, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.48629636195953446;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.20774774876229138;  // std dev = 1,273, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.4275638662383816;  // std dev = 0,122, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.1363481240272448;  // std dev = 0,069, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.14388892228007105;  // std dev = 0,460, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.1632955038472144;  // std dev = 1,101, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.20596577664210175;  // std dev = 1,289, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return -0.09365120438319836;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.32864209353667945;  // std dev = 0,111, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.07963677286997621;  // std dev = 0,473, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.11182623733959396;  // std dev = 0,466, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21442016528089067;  // std dev = 1,053, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.12685659620805573;  // std dev = 1,096, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.0859988322674698;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.412773301313067;  // std dev = 0,251, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.28660117643325456;  // std dev = 0,225, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13344478102979163;  // std dev = 0,151, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.2687655950236889;  // std dev = 0,106, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.02405609326723948;  // std dev = 1,130, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.4649094149582152;  // std dev = 0,093, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15035417638843998;  // std dev = 0,399, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.21062991897976038;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13797672177305131;  // std dev = 0,186, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.00892968398754364;  // std dev = 0,634, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1555892596820608;  // std dev = 0,896, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.07297079140895686;  // std dev = 0,885, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.08421077401465236;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.17787325802085144;  // std dev = 0,055, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12282944608703548;  // std dev = 0,169, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.02779548706610367;  // std dev = 0,712, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.14722956424381078;  // std dev = 0,812, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.05676249322726729;  // std dev = 0,882, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.07794716044548071;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.12601762813446782;  // std dev = 0,423, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21432977733614567;  // std dev = 0,235, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, G) )
%   | | then return -0.10261601925520263;  // std dev = 0,105, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.23198095959507245;  // std dev = 0,205, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | then return 0.0998223836455621;  // std dev = 0,826, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.11305771626059335;  // std dev = 0,141, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.978124
   AUC PR    = 0.345496
   CLL	      = -0.31832
   Precision = 0.157895 at threshold = 0.5
   Recall    = 0.906977
   F1        = 0.268966


Total learning time: 4.936 seconds
Total inference time: 6.515 seconds
AUC ROC: 0.978124


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.202711
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.13 seconds
Refined model CLL: -0.202711


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.978124
   AUC PR    = 0.345496
   CLL	      = -0.31832
   Precision = 0.157895 at threshold = 0.5
   Recall    = 0.906977
   F1        = 0.268966


Total learning time: 8.928 seconds
Total inference time: 6.515 seconds
AUC ROC: 0.978124
Total revision time: 8.928
Best scored revision CLL: -0.202711


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:46:23
{'Inference time': 6.515, 'AUC ROC': 0.978124, 'F1': 0.268966, 'Learning time': 8.928, 'Precision': [0.157895, 0.5], 'CLL': -0.31832, 'AUC PR': 0.345496, 'parameter_25': {'Inference time': 4.073, 'AUC ROC': 0.989055, 'F1': 0.432, 'Learning time': 1.887, 'Precision': [0.280277, 0.5], 'CLL': -0.245808, 'AUC PR': 0.365405, 'Recall': 0.94186}, 'Recall': 0.906977}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), location(C, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( phenotype(A, I), complex(A, J) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6581489350995123;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), location(C, G) )
%   | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.36887697659770574;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(I, A), interaction(I, I) )
%   | then return 0.13238211375941952;  // std dev = 0,719, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.7323220530145879;  // std dev = 0,045, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.20538341790851228;  // std dev = 1,081, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5296313604253299;  // std dev = 1,194, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), location(D, G) )
%   | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.3027909085849406;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( phenotype(A, I), complex(A, J) )
%   | then return 0.5801524245791537;  // std dev = 0,125, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then return 0.04132406420746791;  // std dev = 0,833, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.2933473136832963;  // std dev = 1,430, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.6717598490556694;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5614762425833137;  // std dev = 0,303, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), interaction(A, G) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.2560870406327872;  // std dev = 0,213, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(J, H) )
%   | | then if ( interaction(J, J), interaction(J, A) )
%   | | | then return -0.03999303073314469;  // std dev = 0,524, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2902958921611581;  // std dev = 1,400, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | else return -0.23066101451902654;  // std dev = 0,173, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, K) )
%   | | then return 0.6402035011375842;  // std dev = 0,096, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2665678557787152;  // std dev = 0,675, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3522664945609882;  // std dev = 0,098, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), location(C, G) )
%   | | then return -0.10676863755815268;  // std dev = 0,063, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.17777572480419584;  // std dev = 1,044, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.1172728954943474;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(I, A), interaction(I, I) )
%   | then return -8.873011499982986E-4;  // std dev = 0,491, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then return 0.1272862551660813;  // std dev = 0,886, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.36224246734650645;  // std dev = 0,959, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.2233843328099935;  // std dev = 0,526, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), phenotype(C, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( enzyme(E, D), complex(A, H) )
%   | | | then return 0.1376492492201442;  // std dev = 0,274, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10428836433243124;  // std dev = 0,031, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.18522116877951056;  // std dev = 0,336, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.10386149253955416;  // std dev = 0,698, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( phenotype(A, I) )
%   | then if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.17477384304351856;  // std dev = 0,408, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.38779841630963374;  // std dev = 0,082, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(L, A), location(A, M) )
%   | | then if ( location(L, M), enzyme(L, N) )
%   | | | then return -0.13659408843278883;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.15133216624636084;  // std dev = 1,403, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else return -0.13720959929707102;  // std dev = 0,129, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.3683986842733197;  // std dev = 0,348, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), interaction(A, G) )
%   | | then return -0.08692227552181064;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.22462356817079407;  // std dev = 0,214, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(J, H) )
%   | | then if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.06225171378533991;  // std dev = 0,439, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1457727260272132;  // std dev = 1,173, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | else return -0.22044169988534165;  // std dev = 0,191, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then return 0.1236608533681948;  // std dev = 0,454, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3588436277571939;  // std dev = 0,106, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.22310776056185525;  // std dev = 0,123, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then return -0.10455772559592487;  // std dev = 0,083, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return -0.07346269895863468;  // std dev = 0,583, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.14204766523445422;  // std dev = 0,471, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | then if ( phenotype(A, M), location(A, N) )
%   | | | then return 0.14743385252972852;  // std dev = 0,377, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.36318067920433605;  // std dev = 0,140, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.3322143469204184;  // std dev = 0,392, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(P, A), phenotype(P, Q) )
%   | | then return 0.12333064334662722;  // std dev = 0,658, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2916054618243423;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.26845037593870225;  // std dev = 0,295, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), interaction(A, G) )
%   | | then return -0.07383929660144256;  // std dev = 0,016, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.180171202333436;  // std dev = 0,192, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.1926518028800699;  // std dev = 0,091, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, H), interaction(K, A) )
%   | | | then return -0.12461694918605215;  // std dev = 0,137, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.0604513742927885;  // std dev = 1,045, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( phenotype(A, L) )
%   | | then return 0.2660362136474054;  // std dev = 0,072, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08946512786311785;  // std dev = 0,407, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.15889856598235927;  // std dev = 0,100, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, F) )
%   | | then if ( enzyme(C, G) )
%   | | | then return -0.07269691135085703;  // std dev = 0,508, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.23285043125372593;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09339529942749035;  // std dev = 0,115, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then return -0.0636893931220501;  // std dev = 0,289, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return 0.05908446489646111;  // std dev = 0,838, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.28165607823189465;  // std dev = 0,260, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.007533104836152479;  // std dev = 0,457, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.69708
   AUC PR    = 0.017816
   CLL	      = -0.613425
   Precision = 0.014372 at threshold = 0.5
   Recall    = 0.639535
   F1        = 0.028111


Total learning time: 8.383 seconds
Total inference time: 3.874 seconds
AUC ROC: 0.69708


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN-B), Time: 01:46:36
{'Inference time': 3.874, 'AUC ROC': 0.69708, 'F1': 0.028111, 'Learning time': 8.383, 'Precision': [0.014372, 0.5], 'CLL': -0.613425, 'AUC PR': 0.017816, 'Recall': 0.639535}


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), location(C, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( phenotype(A, I), complex(A, J) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, K) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6581489350995123;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */


Results
   AUC ROC   = 0.663027
   AUC PR    = 0.06625
   CLL	      = -0.208638
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.804 seconds
Total inference time: 1.875 seconds
AUC ROC: 0.663027


Dataset: 22_twitter_yeast, Fold: 4, Type: Scratch (RDN), Time: 01:46:40
{'Inference time': 1.875, 'AUC ROC': 0.663027, 'F1': nan, 'Learning time': 1.804, 'Precision': [nan, 0.5], 'CLL': -0.208638, 'AUC PR': 0.06625, 'Recall': 0.0}


