Starting experiment #1 for 10_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048896;  // std dev = 0,000, 683,000 (wgt'ed) examples reached here.  /* #neg=683 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.12544463852839235;  // std dev = 0,000, 682,000 (wgt'ed) examples reached here.  /* #neg=682 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.11231637819360658;  // std dev = 0,000, 705,000 (wgt'ed) examples reached here.  /* #neg=705 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.10159632948783519;  // std dev = 4,29e-07, 693,000 (wgt'ed) examples reached here.  /* #neg=693 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.09269127618926203;  // std dev = 0,000, 696,000 (wgt'ed) examples reached here.  /* #neg=696 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.08518475138839675;  // std dev = 1,37e-07, 740,000 (wgt'ed) examples reached here.  /* #neg=740 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0787767547310917;  // std dev = 2,79e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07877675473109275;  // std dev = 0,000, 690,000 (wgt'ed) examples reached here.  /* #neg=690 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07324622576333649;  // std dev = 2,47e-07, 711,000 (wgt'ed) examples reached here.  /* #neg=711 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2,11e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420261;  // std dev = 1,80e-07, 735,000 (wgt'ed) examples reached here.  /* #neg=735 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.0641918400820253;  // std dev = 2,53e-07, 703,000 (wgt'ed) examples reached here.  /* #neg=703 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 536
Target train neg examples: 18889

Target test facts examples: 7463
Target test pos	 examples: 162
Target test neg examples: 9107

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.12543301544918353;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.10782354562777509;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.09150383240113759;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.07678249969777719;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.06380835741947548;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.05259581166798401;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.043061399542859605;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.03506047229230461;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.028417796087898104;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.314266
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 1.322 seconds
Total inference time: 2.225 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.8
   AUC PR    = 0.873077
   CLL	      = -0.457802
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 1.007 seconds
Parameter learned model CLL: -0.457802


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-08, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}]]
[{'': [1.4802973661668753e-16, 0.20408163265306126]}, {'': [0.0, 0.20408163265306117]}, {'': [3.700743415417188e-17, 0.2040816326530612]}, {'': [-3.700743415417188e-17, 0.20408163265306117]}, {'': [0.0, 0.2040816326530612]}, {'': [0.0, 0.20408163265306117]}, {'': [0.0, 0.2040816326530612]}, {'': [0.0, 0.2040816326530612]}, {'': [-4.625929269271485e-18, 0.2040816326530612]}, {'': [-2.3129646346357427e-18, 0.20408163265306126]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.671645
   AUC PR    = 0.431619
   CLL	      = -0.416408
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 1.907 seconds
Total inference time: 2.945 seconds
AUC ROC: 0.671645


Results scoring model
   AUC ROC   = 0.92
   AUC PR    = 0.931429
   CLL	      = -0.334793
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 1.073 seconds
Refined model CLL: -0.334793


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.671645
   AUC PR    = 0.431619
   CLL	      = -0.416408
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 5.308999999999999 seconds
Total inference time: 2.945 seconds
AUC ROC: 0.671645
Total revision time: 5.308999999999999
Best scored revision CLL: -0.334793


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:15
{'Learning time': 5.308999999999999, 'Inference time': 2.945, 'AUC ROC': 0.671645, 'AUC PR': 0.431619, 'Recall': 0.407407, 'CLL': -0.416408, 'parameter_5': {'Learning time': 1.322, 'Inference time': 2.225, 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'CLL': -0.314266, 'F1': 0.578947, 'Precision': [1.0, 0.5]}, 'F1': 0.578947, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.05002771289938789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.04190386852605735;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.03491396367325339;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.028961035597951046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.023934242922604827;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.494319
   AUC PR    = 0.01723
   CLL	      = -0.69781
   Precision = 0.017151 at threshold = 0.5
   Recall    = 0.58642
   F1        = 0.033327


Total learning time: 1.949 seconds
Total inference time: 2.474 seconds
AUC ROC: 0.494319


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:00:20
{'Learning time': 1.949, 'Inference time': 2.474, 'AUC ROC': 0.494319, 'AUC PR': 0.01723, 'Recall': 0.58642, 'CLL': -0.69781, 'F1': 0.033327, 'Precision': [0.017151, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.494319
   AUC PR    = 0.01723
   CLL	      = -0.240557
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.221 seconds
Total inference time: 1.54 seconds
AUC ROC: 0.494319


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 00:00:23
{'Learning time': 1.221, 'Inference time': 1.54, 'AUC ROC': 0.494319, 'AUC PR': 0.01723, 'Recall': 0.0, 'CLL': -0.240557, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.1914822684328457;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.1665388245648817;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.14209424281556463;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.11914890490746437;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.09841340278401871;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.08026654944252239;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.06479591611329234;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.051879169344040466;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.04126932998424623;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.032663748734830175;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.374256
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 1.535 seconds
Total inference time: 2.103 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.75
   AUC PR    = 0.82372
   CLL	      = -0.510268
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.666667


Total scoring time: 1.105 seconds
Parameter learned model CLL: -0.510268


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.49e-08, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}]]
[{'': [0.0, 0.22222222222222202]}, {'': [0.0, 0.22222222222222238]}, {'': [-4.4408920985006264e-17, 0.22222222222222215]}, {'': [4.4408920985006264e-17, 0.22222222222222218]}, {'': [-2.2204460492503132e-17, 0.22222222222222215]}, {'': [0.0, 0.22222222222222207]}, {'': [-5.551115123125783e-18, 0.22222222222222232]}, {'': [0.0, 0.22222222222222218]}, {'': [0.0, 0.22222222222222213]}, {'': [0.0, 0.22222222222222202]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.0010060779566550668;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 8.835646163369372E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 7.758973011973702E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 6.8129367991872E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.25206564481433;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.20214445715384777;  // std dev = 1,117, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.14225896129140858;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.19292386438161405;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.16859696693786574;  // std dev = 1,120, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.12576741935618288;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.14565792934085833;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.1377703857072729;  // std dev = 1,123, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.11257747733593797;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.10936989620321738;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.008372488126955846;  // std dev = 0,319, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.0046657069719718836;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.08203625432353104;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.11079066073812498;  // std dev = 1,125, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.10257967426804009;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.06159524961500464;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.08790164036257198;  // std dev = 1,126, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.09351401846132354;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.04632822707005526;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.716079
   AUC PR    = 0.434586
   CLL	      = -0.494128
   Precision = 0.026721 at threshold = 0.5
   Recall    = 0.641975
   F1        = 0.051307


Total learning time: 3.567 seconds
Total inference time: 3.241 seconds
AUC ROC: 0.716079


Results scoring model
   AUC ROC   = 0.895
   AUC PR    = 0.906564
   CLL	      = -0.402586
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.8


Total scoring time: 1.003 seconds
Refined model CLL: -0.402586


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.716079
   AUC PR    = 0.434586
   CLL	      = -0.494128
   Precision = 0.026721 at threshold = 0.5
   Recall    = 0.641975
   F1        = 0.051307


Total learning time: 7.21 seconds
Total inference time: 3.241 seconds
AUC ROC: 0.716079
Total revision time: 7.21
Best scored revision CLL: -0.402586


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:36
{'Learning time': 7.21, 'Inference time': 3.241, 'AUC ROC': 0.716079, 'AUC PR': 0.434586, 'Recall': 0.641975, 'CLL': -0.494128, 'parameter_10': {'Learning time': 1.535, 'Inference time': 2.103, 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'CLL': -0.374256, 'F1': 0.578947, 'Precision': [1.0, 0.5]}, 'F1': 0.051307, 'Precision': [0.026721, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.6081489350995123;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5170719622367218;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.41257245288266;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3151786576185065;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.23676009386434194;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.028267579930898568;  // std dev = 0,160, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.17806945427207505;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.2498370029473993;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.08741358257560115;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.13513671764223462;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.20598176226389175;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.08068725889000898;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.103671751136855;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.17432202054915702;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07490103938556608;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.04126932998424626;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.08034833303035915;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.15063586213081848;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.007029434181493585;  // std dev = 0,821, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.06987350947851606;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.06282214181758176;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */


Results
   AUC ROC   = 0.749413
   AUC PR    = 0.048831
   CLL	      = -0.754637
   Precision = 0.030612 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.059186


Total learning time: 5.505 seconds
Total inference time: 2.743 seconds
AUC ROC: 0.749413


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:00:45
{'Learning time': 5.505, 'Inference time': 2.743, 'AUC ROC': 0.749413, 'AUC PR': 0.048831, 'Recall': 0.888889, 'CLL': -0.754637, 'F1': 0.059186, 'Precision': [0.030612, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.6081489350995123;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */


Results
   AUC ROC   = 0.749813
   AUC PR    = 0.048842
   CLL	      = -0.235426
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.941 seconds
Total inference time: 1.755 seconds
AUC ROC: 0.749813


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 00:00:49
{'Learning time': 1.941, 'Inference time': 1.755, 'AUC ROC': 0.749813, 'AUC PR': 0.048842, 'Recall': 0.0, 'CLL': -0.235426, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.17633075328133055;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.1534823605167704;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.13126760833378437;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.11049397908378188;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.09172466407655461;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.07525517484793537;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.061148495826541645;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.04929877947809456;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.03949769486849585;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.031488929375440365;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.35452
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 1.514 seconds
Total inference time: 2.549 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.766667
   AUC PR    = 0.83611
   CLL	      = -0.49363
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.533333
   F1        = 0.695652


Total scoring time: 1.03 seconds
Parameter learned model CLL: -0.49363


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.49e-08, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.185, 15, 7]}]]
[{'': [-2.220446049250313e-16, 0.2169421487603307]}, {'': [1.1102230246251565e-16, 0.2169421487603306]}, {'': [-1.1102230246251565e-16, 0.21694214876033066]}, {'': [1.1102230246251565e-16, 0.21694214876033058]}, {'': [-4.163336342344337e-17, 0.2169421487603307]}, {'': [2.7755575615628914e-17, 0.21694214876033052]}, {'': [-2.0816681711721685e-17, 0.2169421487603305]}, {'': [6.938893903907228e-18, 0.2169421487603307]}, {'': [-3.469446951953614e-18, 0.21694214876033066]}, {'': [0.0, 0.21694214876033072]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.030739953789376676;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.4831489350995123;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.027039036105351237;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.4136573287083126;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.023851027745157634;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.3366053739648666;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.02109064741059409;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.038428662236904595;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.26297558544868993;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.018689747435324762;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.03315494592188569;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.20032545170291094;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.01659325843366048;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.02849510592572117;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.15079889954054382;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.014756227012937785;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.024408230135271946;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.11312434025950242;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.09143453152487283;  // std dev = 0,438, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.12425273111490631;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.08492715391619823;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.07892196248864358;  // std dev = 0,438, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.1113512304099411;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.06391587871034281;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.06750616675845718;  // std dev = 0,438, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.100800295851327;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.04824192700154653;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */


Results
   AUC ROC   = 0.716079
   AUC PR    = 0.434586
   CLL	      = -0.466397
   Precision = 0.026721 at threshold = 0.5
   Recall    = 0.641975
   F1        = 0.051307


Total learning time: 4.266 seconds
Total inference time: 2.84 seconds
AUC ROC: 0.716079


Results scoring model
   AUC ROC   = 0.908889
   AUC PR    = 0.920982
   CLL	      = -0.387569
   Precision = 0.8125 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.83871


Total scoring time: 1.082 seconds
Refined model CLL: -0.387569


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.716079
   AUC PR    = 0.434586
   CLL	      = -0.466397
   Precision = 0.026721 at threshold = 0.5
   Recall    = 0.641975
   F1        = 0.051307


Total learning time: 7.892 seconds
Total inference time: 2.84 seconds
AUC ROC: 0.716079
Total revision time: 7.892
Best scored revision CLL: -0.387569


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:03
{'Learning time': 7.892, 'Inference time': 2.84, 'AUC ROC': 0.716079, 'AUC PR': 0.434586, 'Recall': 0.641975, 'CLL': -0.466397, 'parameter_15': {'Learning time': 1.514, 'Inference time': 2.549, 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'CLL': -0.35452, 'F1': 0.578947, 'Precision': [1.0, 0.5]}, 'F1': 0.051307, 'Precision': [0.026721, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0.4692600462106234;  // std dev = 0,487, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.009036994521038667;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.5601937747097304;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.007546741721456895;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.4528698006256444;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.006308260164053381;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.3479886328611641;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.0052772266800826025;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.261653285823431;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.0044176468202011265;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.19675350774768244;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0.10689106475897119;  // std dev = 0,421, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.02158806662678432;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.12457944101192815;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.017886799943680875;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.09658201250090369;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.01485405643658443;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.07568016541535452;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */


Results
   AUC ROC   = 0.749813
   AUC PR    = 0.048842
   CLL	      = -0.689319
   Precision = 0.030612 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.059186


Total learning time: 7.407 seconds
Total inference time: 2.822 seconds
AUC ROC: 0.749813


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:01:13
{'Learning time': 7.407, 'Inference time': 2.822, 'AUC ROC': 0.749813, 'AUC PR': 0.048842, 'Recall': 0.888889, 'CLL': -0.689319, 'F1': 0.059186, 'Precision': [0.030612, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.6273797043302815;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */


Results
   AUC ROC   = 0.749813
   AUC PR    = 0.048842
   CLL	      = -0.230062
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.217 seconds
Total inference time: 2.843 seconds
AUC ROC: 0.749813


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 00:01:19
{'Learning time': 2.217, 'Inference time': 2.843, 'AUC ROC': 0.749813, 'AUC PR': 0.048842, 'Recall': 0.0, 'CLL': -0.230062, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.2129876447769317;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.1850340567651117;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.15733633666574967;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.13120969089740736;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.10760714862133729;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.08704103420637159;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.06963300017480052;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.05522774314863855;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.04351183703267405;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.03410706771080944;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.403296
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 10.461 seconds
Total inference time: 1.911 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.725
   AUC PR    = 0.799619
   CLL	      = -0.533842
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.45
   F1        = 0.62069


Total scoring time: 1.135 seconds
Parameter learned model CLL: -0.533842


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.33e-08, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.83e-08, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}]]
[{'': [-2.9605947323337506e-16, 0.22892819979188297]}, {'': [9.868649107779169e-17, 0.2289281997918835]}, {'': [-1.4802973661668753e-16, 0.22892819979188325]}, {'': [1.2335811384723962e-16, 0.2289281997918837]}, {'': [-3.700743415417188e-17, 0.2289281997918834]}, {'': [3.700743415417188e-17, 0.22892819979188345]}, {'': [-2.4671622769447922e-17, 0.22892819979188314]}, {'': [6.1679056923619804e-18, 0.2289281997918836]}, {'': [-3.0839528461809902e-18, 0.22892819979188334]}, {'': [0.0, 0.22892819979188359]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.39207446911896815;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.16932078898570713;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1117787945119077;  // std dev = 0,004, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.2539951431655794;  // std dev = 0,488, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10164540768798548;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2724047038419722;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.16903581659961212;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09273236748179248;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2112703568325859;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.1469609472538718;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08521962409139265;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16073265740185155;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.12972519589521417;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0788066984730127;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1211046701063095;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.11594819126941347;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07327220120433643;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.09090002172354801;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.10471378058718601;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.06840311429118533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06844971413446345;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.06818023576792179;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.09539531573529537;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.052078905701252655;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06421189995015351;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.05117498791637754;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.08755217658423464;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.849162
   AUC PR    = 0.484826
   CLL	      = -0.466516
   Precision = 0.032922 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.063492


Total learning time: 8.406 seconds
Total inference time: 4.661 seconds
AUC ROC: 0.849162


Results scoring model
   AUC ROC   = 0.89625
   AUC PR    = 0.90132
   CLL	      = -0.394188
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.818182


Total scoring time: 1.26 seconds
Refined model CLL: -0.394188


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.849162
   AUC PR    = 0.484826
   CLL	      = -0.466516
   Precision = 0.032922 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.063492


Total learning time: 21.262000000000004 seconds
Total inference time: 4.661 seconds
AUC ROC: 0.849162
Total revision time: 21.262000000000004
Best scored revision CLL: -0.394188


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:49
{'Learning time': 21.262000000000004, 'Inference time': 4.661, 'AUC ROC': 0.849162, 'AUC PR': 0.484826, 'Recall': 0.888889, 'CLL': -0.466516, 'parameter_20': {'Learning time': 10.461, 'Inference time': 1.911, 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'CLL': -0.403296, 'F1': 0.578947, 'Precision': [1.0, 0.5]}, 'F1': 0.063492, 'Precision': [0.032922, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.48314893509951234;  // std dev = 0,484, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.12199066204164584;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5108795509305348;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.46125983910675533;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.10094254950630273;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.41347261685815223;  // std dev = 0,448, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3488463256948422;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.08245209409989405;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.3191063351122624;  // std dev = 0,448, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.26212705508354184;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.06664023602548282;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.24056213118309241;  // std dev = 0,448, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.19945264276423433;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.05340669259957562;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.18052688505740788;  // std dev = 0,448, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.15451336627983223;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.042516215931643085;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.136163358382768;  // std dev = 0,448, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.12179491558002796;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.03367022354066859;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.10356332408577885;  // std dev = 0,448, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.09745354768081688;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.0265567062802101;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.07944854680428731;  // std dev = 0,448, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.07895233872555124;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.02088023706971896;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.061419898929786026;  // std dev = 0,448, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.763787
   AUC PR    = 0.050133
   CLL	      = -0.631973
   Precision = 0.032922 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.063492


Total learning time: 111.128 seconds
Total inference time: 4.182 seconds
AUC ROC: 0.763787


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:03:44
{'Learning time': 111.128, 'Inference time': 4.182, 'AUC ROC': 0.763787, 'AUC PR': 0.050133, 'Recall': 0.888889, 'CLL': -0.631973, 'F1': 0.063492, 'Precision': [0.032922, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5803711573217345;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.763787
   AUC PR    = 0.050133
   CLL	      = -0.224524
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.206 seconds
Total inference time: 1.926 seconds
AUC ROC: 0.763787


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 00:03:49
{'Learning time': 2.206, 'Inference time': 1.926, 'AUC ROC': 0.763787, 'AUC PR': 0.050133, 'Recall': 0.0, 'CLL': -0.224524, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.2002541982574071;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.17408811758091414;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.14832909402857294;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.1240999634177955;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.1022054077578086;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.08307660005252253;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.06681528940289194;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.05328719884755189;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.04221996737928091;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.033281520142686705;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.385956
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 1.677 seconds
Total inference time: 2.145 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.74
   AUC PR    = 0.812571
   CLL	      = -0.519888
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.48
   F1        = 0.648649


Total scoring time: 1.195 seconds
Parameter learned model CLL: -0.519888


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-08, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-08, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 12], 'false': [2.924, 25, 13]}]]
[{'': [-1.4802973661668753e-16, 0.22506925207756182]}, {'': [1.4802973661668753e-16, 0.22506925207756198]}, {'': [-2.590520390792032e-16, 0.22506925207756204]}, {'': [1.4802973661668753e-16, 0.2250692520775625]}, {'': [-5.551115123125783e-17, 0.22506925207756226]}, {'': [3.700743415417188e-17, 0.22506925207756232]}, {'': [-2.7755575615628914e-17, 0.22506925207756232]}, {'': [9.25185853854297e-18, 0.22506925207756232]}, {'': [9.25185853854297e-18, 0.22506925207756243]}, {'': [0.0, 0.2250692520775625]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.3126943896449669;  // std dev = 2,335, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.27021896952830937;  // std dev = 2,335, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.05726473170948111;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.25580140785533656;  // std dev = 0,488, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3151786576185065;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.10159632948783628;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.04701463900950977;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.20998650579115796;  // std dev = 0,486, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.23676009386434207;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.03836638856400863;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2127949527830446;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else return -0.14274441601797616;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.1780694542720751;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.031154816672460783;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.16479762226721656;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else return -0.1263038587223022;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.13513671764223453;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.025197842403048027;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.12568754430855839;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else return -0.11312134385376467;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.103671751136855;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.020314326847690984;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.09502208614365433;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else return -0.10234132437110917;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.08034833303035915;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.016334960599086696;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.07150802689063301;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else return -0.09337711275864537;  // std dev = 0,042, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.06282214181758172;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.013107924892302407;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.05369419129954989;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else return -0.08581504853935361;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.849162
   AUC PR    = 0.484826
   CLL	      = -0.437316
   Precision = 0.120729 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.203846


Total learning time: 12.613 seconds
Total inference time: 3.907 seconds
AUC ROC: 0.849162


Results scoring model
   AUC ROC   = 0.9064
   AUC PR    = 0.91378
   CLL	      = -0.384179
   Precision = 0.9375 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.731707


Total scoring time: 1.291 seconds
Refined model CLL: -0.384179


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.849162
   AUC PR    = 0.484826
   CLL	      = -0.437316
   Precision = 0.120729 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.203846


Total learning time: 16.776 seconds
Total inference time: 3.907 seconds
AUC ROC: 0.849162
Total revision time: 16.776
Best scored revision CLL: -0.384179


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:04:12
{'Learning time': 16.776, 'Inference time': 3.907, 'parameter_25': {'Learning time': 1.677, 'Inference time': 2.145, 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'CLL': -0.385956, 'F1': 0.578947, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.849162, 'AUC PR': 0.484826, 'Recall': 0.654321, 'CLL': -0.437316, 'F1': 0.203846, 'Precision': [0.120729, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.5538011090125557;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6189976143448207;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.12543301544918353;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4722933514313262;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4851287515461648;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return 0.10782354562777509;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.3800173081038168;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.36568225360444984;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.09150383240113759;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2928705343129344;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.27560196347331406;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.07678249969777719;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.22088514420133495;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.21158287903019785;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.06380835741947548;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.16572114150216558;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16608044254560703;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.05259581166798401;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.12473636890516954;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.13303193637503513;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.043061399542859605;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.09448637891966666;  // std dev = 0,460, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10839224498101034;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.06342894559597952;  // std dev = 0,458, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08956128580326395;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.02295950754545162;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.05729514358188243;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.763424
   AUC PR    = 0.050122
   CLL	      = -0.608252
   Precision = 0.032922 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.063492


Total learning time: 54.628 seconds
Total inference time: 3.264 seconds
AUC ROC: 0.763424


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:05:11
{'Learning time': 54.628, 'Inference time': 3.264, 'AUC ROC': 0.763424, 'AUC PR': 0.050122, 'Recall': 0.888889, 'CLL': -0.608252, 'F1': 0.063492, 'Precision': [0.032922, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.5538011090125557;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.763787
   AUC PR    = 0.050133
   CLL	      = -0.22199
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.786 seconds
Total inference time: 2.13 seconds
AUC ROC: 0.763787


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 00:05:17
{'Learning time': 3.786, 'Inference time': 2.13, 'AUC ROC': 0.763787, 'AUC PR': 0.050133, 'Recall': 0.0, 'CLL': -0.22199, 'F1': nan, 'Precision': [nan, 0.5]}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 558
Target train neg examples: 23373

Target test facts examples: 9016
Target test pos	 examples: 140
Target test neg examples: 4623

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2564123687585864;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.20613740734453975;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.16162857548414675;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.1245559779208197;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.09492800936730683;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07186088850055855;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05418307375954949;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.04076025323305626;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.029393
   CLL	      = -0.637309
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.455 seconds
Total inference time: 1.919 seconds
AUC ROC: 0.5


Results scoring model
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total scoring time: 1.05 seconds
Parameter learned model CLL: -0.695026


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.24999999999999983, nan]}, {'': [0.24999999999999994, nan]}, {'': [0.25000000000000006, nan]}, {'': [0.24999999999999992, nan]}, {'': [0.24999999999999994, nan]}, {'': [0.24999999999999986, nan]}, {'': [0.25, nan]}, {'': [0.25000000000000006, nan]}, {'': [0.25, nan]}, {'': [0.24999999999999994, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.48767788391726297;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.24018496001139553;  // std dev = 0,443, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.1385828257338818;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.33667513090792;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.1228521925940143;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.25495252814133246;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.11021510739935973;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.19132059563598233;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.09986181867914361;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.14394393226162608;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.09123709366880606;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.10908332354752344;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.0839492143162312;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.08334071598020533;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.07771478509433764;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.06415502421228704;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.402945
   AUC PR    = 0.023731
   CLL	      = -0.842357
   Precision = 0.02182 at threshold = 0.5
   Recall    = 0.542857
   F1        = 0.041954


Total learning time: 3.047 seconds
Total inference time: 2.546 seconds
AUC ROC: 0.402945


Results scoring model
   AUC ROC   = 0.8
   AUC PR    = 0.714286
   CLL	      = -0.445296
   Precision = 0.714286 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.833333


Total scoring time: 1.067 seconds
Refined model CLL: -0.445296


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.402945
   AUC PR    = 0.023731
   CLL	      = -0.842357
   Precision = 0.02182 at threshold = 0.5
   Recall    = 0.542857
   F1        = 0.041954


Total learning time: 6.619 seconds
Total inference time: 2.546 seconds
AUC ROC: 0.402945
Total revision time: 6.619
Best scored revision CLL: -0.445296


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:05:29
{'Learning time': 6.619, 'Inference time': 2.546, 'AUC ROC': 0.402945, 'AUC PR': 0.023731, 'Recall': 0.542857, 'CLL': -0.842357, 'parameter_5': {'Learning time': 1.455, 'Inference time': 1.919, 'AUC ROC': 0.5, 'AUC PR': 0.029393, 'Recall': 0.0, 'CLL': -0.637309, 'F1': nan, 'Precision': [nan, 0.5]}, 'F1': 0.041954, 'Precision': [0.02182, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.48767788391726297;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.3912569620992536;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.3005711547884894;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.22629823971521876;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.16984358676510128;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.12813320688246752;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.09743184803714998;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.07468131696953094;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.057651940521137104;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */


Results
   AUC ROC   = 0.402945
   AUC PR    = 0.023731
   CLL	      = -0.852
   Precision = 0.02182 at threshold = 0.5
   Recall    = 0.542857
   F1        = 0.041954


Total learning time: 2.144 seconds
Total inference time: 1.891 seconds
AUC ROC: 0.402945


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:05:33
{'Learning time': 2.144, 'Inference time': 1.891, 'AUC ROC': 0.402945, 'AUC PR': 0.023731, 'Recall': 0.542857, 'CLL': -0.852, 'F1': 0.041954, 'Precision': [0.02182, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */


Results
   AUC ROC   = 0.402945
   AUC PR    = 0.023731
   CLL	      = -0.269613
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.217 seconds
Total inference time: 1.219 seconds
AUC ROC: 0.402945


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 00:05:36
{'Learning time': 1.217, 'Inference time': 1.219, 'AUC ROC': 0.402945, 'AUC PR': 0.023731, 'Recall': 0.0, 'CLL': -0.269613, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.1914822684328457;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.1665388245648817;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.14209424281556463;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.11914890490746437;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.09841340278401871;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.08026654944252239;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.06479591611329234;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.051879169344040466;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.04126932998424623;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.032663748734830175;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.376838
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 1.322 seconds
Total inference time: 2.139 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.75
   AUC PR    = 0.82372
   CLL	      = -0.510268
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.666667


Total scoring time: 0.997 seconds
Parameter learned model CLL: -0.510268


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.49e-08, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}]]
[{'': [0.0, 0.22222222222222202]}, {'': [0.0, 0.22222222222222238]}, {'': [-4.4408920985006264e-17, 0.22222222222222215]}, {'': [4.4408920985006264e-17, 0.22222222222222218]}, {'': [-2.2204460492503132e-17, 0.22222222222222215]}, {'': [0.0, 0.22222222222222207]}, {'': [-5.551115123125783e-18, 0.22222222222222232]}, {'': [0.0, 0.22222222222222218]}, {'': [0.0, 0.22222222222222213]}, {'': [0.0, 0.22222222222222202]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.41370449065506787;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.35555573927149886;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.2926148461096881;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.23214124828648122;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.17942003892665268;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.13647857812921954;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.10293424750437877;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.07732947852152008;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.05801086896812466;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.0435105023222711;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */


Results
   AUC ROC   = 0.698087
   AUC PR    = 0.506139
   CLL	      = -0.5707
   Precision = 0.031277 at threshold = 0.5
   Recall    = 0.785714
   F1        = 0.060159


Total learning time: 2.302 seconds
Total inference time: 2.167 seconds
AUC ROC: 0.698087


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.906038
   CLL	      = -0.360533
   Precision = 0.714286 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.833333


Total scoring time: 1.025 seconds
Refined model CLL: -0.360533


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.698087
   AUC PR    = 0.506139
   CLL	      = -0.5707
   Precision = 0.031277 at threshold = 0.5
   Recall    = 0.785714
   F1        = 0.060159


Total learning time: 5.646000000000001 seconds
Total inference time: 2.167 seconds
AUC ROC: 0.698087
Total revision time: 5.646000000000001
Best scored revision CLL: -0.360533


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:05:47
{'Learning time': 5.646000000000001, 'Inference time': 2.167, 'AUC ROC': 0.698087, 'AUC PR': 0.506139, 'Recall': 0.785714, 'CLL': -0.5707, 'parameter_10': {'Learning time': 1.322, 'Inference time': 2.139, 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'CLL': -0.376838, 'F1': 0.640777, 'Precision': [1.0, 0.5]}, 'F1': 0.060159, 'Precision': [0.031277, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.5724346493852266;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.4876778839172629;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.3912569620992537;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.3005711547884892;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.22629823971521892;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.1698435867651014;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.12813320688246746;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.09743184803714998;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.07468131696953091;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.057651940521137146;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */


Results
   AUC ROC   = 0.402945
   AUC PR    = 0.023731
   CLL	      = -0.852
   Precision = 0.02182 at threshold = 0.5
   Recall    = 0.542857
   F1        = 0.041954


Total learning time: 2.331 seconds
Total inference time: 1.865 seconds
AUC ROC: 0.402945


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:05:51
{'Learning time': 2.331, 'Inference time': 1.865, 'AUC ROC': 0.402945, 'AUC PR': 0.023731, 'Recall': 0.542857, 'CLL': -0.852, 'F1': 0.041954, 'Precision': [0.02182, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.5724346493852266;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */


Results
   AUC ROC   = 0.402945
   AUC PR    = 0.023731
   CLL	      = -0.269613
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.325 seconds
Total inference time: 1.318 seconds
AUC ROC: 0.402945


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 00:05:54
{'Learning time': 1.325, 'Inference time': 1.318, 'AUC ROC': 0.402945, 'AUC PR': 0.023731, 'Recall': 0.0, 'CLL': -0.269613, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.2059750220560341;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.1790077228829523;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.1523821775265529;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.1273054751204641;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.10464720369983299;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.08487425862404781;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.06809746722252737;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.054173678700115205;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.04281271651348477;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.033662278315023386;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.395806
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 1.376 seconds
Total inference time: 2.201 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.733333
   AUC PR    = 0.807615
   CLL	      = -0.526158
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.466667
   F1        = 0.636364


Total scoring time: 1.093 seconds
Parameter learned model CLL: -0.526158


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [2.284, 15, 8]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 7], 'false': [2.284, 15, 8]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [2.284, 15, 8]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.58e-08, 0, 7], 'false': [2.284, 15, 8]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [2.284, 15, 8]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.29e-08, 0, 7], 'false': [2.284, 15, 8]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [2.284, 15, 8]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.27e-09, 0, 7], 'false': [2.284, 15, 8]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [2.284, 15, 8]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [2.284, 15, 8]}]]
[{'': [-2.5376526277146434e-16, 0.226843100189036]}, {'': [6.344131569286608e-17, 0.22684310018903614]}, {'': [-6.344131569286608e-17, 0.22684310018903564]}, {'': [9.516197353929913e-17, 0.22684310018903592]}, {'': [-3.172065784643304e-17, 0.22684310018903614]}, {'': [2.3790493384824782e-17, 0.22684310018903614]}, {'': [-1.586032892321652e-17, 0.2268431001890358]}, {'': [3.96508223080413e-18, 0.22684310018903608]}, {'': [-7.93016446160826e-18, 0.2268431001890357]}, {'': [0.0, 0.22684310018903583]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.30259337954395676;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.2616318086752123;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.2192721473492705;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return 0.4140871870299187;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.17873524574687283;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return -0.19636849064858464;  // std dev = 0,232, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return 0.31260689209317943;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.1424392447767628;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return -0.17019476421880383;  // std dev = 0,209, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.434830684983309;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07945652453941686;  // std dev = 1,665, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return -0.14959420661160575;  // std dev = 0,188, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.332477852989859;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.0613037151834545;  // std dev = 1,666, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return -0.13306773208599162;  // std dev = 0,171, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2631854779452617;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.04708821123806875;  // std dev = 1,666, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return -0.11958117908403187;  // std dev = 0,156, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.21540247077786756;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.0360593365605239;  // std dev = 1,666, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return -0.10840714593841627;  // std dev = 0,144, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.18122571928488274;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.027555962117118946;  // std dev = 1,666, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return -0.09902388125062599;  // std dev = 0,133, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.78606
   AUC PR    = 0.55483
   CLL	      = -0.724059
   Precision = 0.043321 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.081494


Total learning time: 4.511 seconds
Total inference time: 3.276 seconds
AUC ROC: 0.78606


Results scoring model
   AUC ROC   = 0.935556
   AUC PR    = 0.943364
   CLL	      = -0.325154
   Precision = 0.916667 at threshold = 0.5
   Recall    = 0.733333
   F1        = 0.814815


Total scoring time: 1.1 seconds
Refined model CLL: -0.325154


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.78606
   AUC PR    = 0.55483
   CLL	      = -0.724059
   Precision = 0.043321 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.081494


Total learning time: 8.08 seconds
Total inference time: 3.276 seconds
AUC ROC: 0.78606
Total revision time: 8.08
Best scored revision CLL: -0.325154


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:06:08
{'Learning time': 8.08, 'Inference time': 3.276, 'AUC ROC': 0.78606, 'AUC PR': 0.55483, 'Recall': 0.685714, 'CLL': -0.724059, 'parameter_15': {'Learning time': 1.376, 'Inference time': 2.201, 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'CLL': -0.395806, 'F1': 0.640777, 'Precision': [1.0, 0.5]}, 'F1': 0.081494, 'Precision': [0.043321, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5456489350995123;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.46555214248586174;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3750733777717184;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.2894808572301893;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.22369447571250697;  // std dev = 0,468, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.1401008276426122;  // std dev = 0,116, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.1693103580065824;  // std dev = 0,468, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.12460113161212992;  // std dev = 0,105, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.2007921928870306;  // std dev = 0,708, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.12071150259201774;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.11203604039424835;  // std dev = 0,096, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.1641090911432582;  // std dev = 0,708, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.09134449694230623;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.10167043012705934;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.13502800257755598;  // std dev = 0,709, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.06955942280448837;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.09298951715135785;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13867775808272187;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.05529734238192723;  // std dev = 0,468, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.08562392413942203;  // std dev = 0,076, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.804247
   Precision = 0.059855 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.112949


Total learning time: 6.83 seconds
Total inference time: 2.752 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:06:18
{'Learning time': 6.83, 'Inference time': 2.752, 'AUC ROC': 0.821572, 'AUC PR': 0.097917, 'Recall': 1.0, 'CLL': -0.804247, 'F1': 0.112949, 'Precision': [0.059855, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5456489350995123;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.249595
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.818 seconds
Total inference time: 1.382 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 00:06:22
{'Learning time': 1.818, 'Inference time': 1.382, 'AUC ROC': 0.821572, 'AUC PR': 0.097917, 'Recall': 0.0, 'CLL': -0.249595, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.2129876447769317;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.1850340567651117;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.15733633666574967;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.13120969089740736;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.10760714862133729;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.08704103420637159;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.06963300017480052;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.05522774314863855;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.04351183703267405;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.03410706771080944;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.405181
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 1.498 seconds
Total inference time: 2.01 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.725
   AUC PR    = 0.799619
   CLL	      = -0.533842
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.45
   F1        = 0.62069


Total scoring time: 1.096 seconds
Parameter learned model CLL: -0.533842


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.33e-08, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.83e-08, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}]]
[{'': [-2.9605947323337506e-16, 0.22892819979188297]}, {'': [9.868649107779169e-17, 0.2289281997918835]}, {'': [-1.4802973661668753e-16, 0.22892819979188325]}, {'': [1.2335811384723962e-16, 0.2289281997918837]}, {'': [-3.700743415417188e-17, 0.2289281997918834]}, {'': [3.700743415417188e-17, 0.22892819979188345]}, {'': [-2.4671622769447922e-17, 0.22892819979188314]}, {'': [6.1679056923619804e-18, 0.2289281997918836]}, {'': [-3.0839528461809902e-18, 0.22892819979188334]}, {'': [0.0, 0.22892819979188359]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return 0.274815601766179;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.03683251744007497;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return 0.23796730798362134;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.007540153172730945;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.19327110293366806;  // std dev = 1,894, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return -0.14447597104553336;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.0066756365893255835;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return 0.13616900644569271;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.16579071488894545;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return -0.12755408256385417;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11372384214716785;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.00591423819201763;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.13336754710573254;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return -0.11404622995726943;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.005242809192571807;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.10314290069149806;  // std dev = 1,893, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return -0.10303942475367311;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.07431494922786745;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.004650056209079656;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.08299939290667184;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return -0.09391288501906198;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.004126242620843677;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return 0.059798552788653946;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0642984115244231;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return -0.08623195232252175;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0036629453266524663;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.04914304134510813;  // std dev = 1,893, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return -0.07968428485064417;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0032528552094566072;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.037923656832894524;  // std dev = 1,893, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return -0.07404023691231983;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.469922
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 6.854 seconds
Total inference time: 3.742 seconds
AUC ROC: 0.899184


Results scoring model
   AUC ROC   = 0.8825
   AUC PR    = 0.902311
   CLL	      = -0.425177
   Precision = 0.928571 at threshold = 0.5
   Recall    = 0.65
   F1        = 0.764706


Total scoring time: 1.13 seconds
Refined model CLL: -0.425177


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.469922
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 10.578 seconds
Total inference time: 3.742 seconds
AUC ROC: 0.899184
Total revision time: 10.578
Best scored revision CLL: -0.425177


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:06:39
{'Learning time': 10.578, 'Inference time': 3.742, 'AUC ROC': 0.899184, 'AUC PR': 0.571454, 'Recall': 0.685714, 'CLL': -0.469922, 'parameter_20': {'Learning time': 1.498, 'Inference time': 2.01, 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'CLL': -0.405181, 'F1': 0.640777, 'Precision': [1.0, 0.5]}, 'F1': 0.277457, 'Precision': [0.173913, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.016851064900487787;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.48972788246793336;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.014812149378556561;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4191376347930739;  // std dev = 0,482, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.013040256218347378;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3407031818531311;  // std dev = 0,482, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.17719854357714007;  // std dev = 0,462, 30,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2697478132793615;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.14153203047617632;  // std dev = 0,460, 30,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.2062525881598365;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.053583663352058816;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.1717132940097548;  // std dev = 0,483, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.16095555079641394;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.0253236618790101;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.045858293136978825;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.1465713100188564;  // std dev = 0,482, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.12802275604229368;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.03945944896635308;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.09766743821005143;  // std dev = 0,482, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10349083403071088;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.03410876454044788;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.07376381252400387;  // std dev = 0,482, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08478440748267765;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.02959812912586146;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.055765543689745845;  // std dev = 0,482, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.659869
   Precision = 0.059855 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.112949


Total learning time: 15.288 seconds
Total inference time: 3.163 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:06:58
{'Learning time': 15.288, 'Inference time': 3.163, 'AUC ROC': 0.821572, 'AUC PR': 0.097917, 'Recall': 1.0, 'CLL': -0.659869, 'F1': 0.112949, 'Precision': [0.059855, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.48972788246793336;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.246257
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.586 seconds
Total inference time: 1.603 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 00:07:02
{'Learning time': 2.586, 'Inference time': 1.603, 'AUC ROC': 0.821572, 'AUC PR': 0.097917, 'Recall': 0.0, 'CLL': -0.246257, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.24839283753853675;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.21538963726453592;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.18211112909257343;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.15050406991191925;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.12201015159221176;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.09739595254626598;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.07682769287355179;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.06006334288028828;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.04664683831854915;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.036050813860385104;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.454466
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 1.45 seconds
Total inference time: 1.846 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.68
   AUC PR    = 0.757207
   CLL	      = -0.572663
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.36
   F1        = 0.529412


Total scoring time: 1.107 seconds
Parameter learned model CLL: -0.572663


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.33e-08, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.83e-08, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [3.123, 25, 16]}]]
[{'': [-2.9605947323337506e-16, 0.2379535990481851]}, {'': [9.868649107779169e-17, 0.23795359904818547]}, {'': [-1.4802973661668753e-16, 0.237953599048185]}, {'': [1.2335811384723962e-16, 0.2379535990481855]}, {'': [-3.700743415417188e-17, 0.23795359904818542]}, {'': [3.700743415417188e-17, 0.23795359904818542]}, {'': [-2.4671622769447922e-17, 0.23795359904818555]}, {'': [6.1679056923619804e-18, 0.23795359904818572]}, {'': [-3.0839528461809902e-18, 0.2379535990481855]}, {'': [0.0, 0.2379535990481857]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.030739953789376676;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.28672036367094095;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.027039036105351237;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.24811816884741297;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.023851027745157634;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.20848477447886868;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.02109064741059409;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.17062637354018537;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2697478132793615;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.018689747435324762;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.13664585375352217;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2062525881598365;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.01659325843366048;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.10762034996184401;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.16095555079641394;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.059129063303904224;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.014756227012937785;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.15515665098181003;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12802275604229368;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0131416200037952;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.06424258213274692;  // std dev = 2,249, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.10349083403071088;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.01171867477668203;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.04927410781183253;  // std dev = 2,248, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08478440748267765;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0715181575984681;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.0520344051176306;  // std dev = 2,109, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.526295
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 6.633 seconds
Total inference time: 3.388 seconds
AUC ROC: 0.899184


Results scoring model
   AUC ROC   = 0.884
   AUC PR    = 0.8982
   CLL	      = -0.432932
   Precision = 0.9375 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.731707


Total scoring time: 1.09 seconds
Refined model CLL: -0.432932


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899184
   AUC PR    = 0.571454
   CLL	      = -0.526295
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 10.28 seconds
Total inference time: 3.388 seconds
AUC ROC: 0.899184
Total revision time: 10.28
Best scored revision CLL: -0.432932


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:19
{'Learning time': 10.28, 'Inference time': 3.388, 'parameter_25': {'Learning time': 1.45, 'Inference time': 1.846, 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'CLL': -0.454466, 'F1': 0.640777, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.899184, 'AUC PR': 0.571454, 'Recall': 0.685714, 'CLL': -0.526295, 'F1': 0.277457, 'Precision': [0.173913, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.030739953789376676;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.524815601766179;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.12543301544918353;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.027039036105351237;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.448295606241962;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.023851027745157634;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.29872839614891095;  // std dev = 0,479, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.17403962195050832;  // std dev = 0,457, 37,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.04236540266371696;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return 0.02801015174208713;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.25428316455924943;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.215871968382499;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.03694166212678655;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.1493579572594998;  // std dev = 0,472, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.17024717710075593;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.032342414158506486;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.11388036206537824;  // std dev = 0,472, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.13713633723655955;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.02841399586525437;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.03148186485892035;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.12590713808267165;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11243535096764834;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.04306436297219987;  // std dev = 0,438, 37,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09352720014861136;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.030182193849570042;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03399572874640931;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.08433020653116956;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.662239
   Precision = 0.059855 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.112949


Total learning time: 13.95 seconds
Total inference time: 3.035 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:36
{'Learning time': 13.95, 'Inference time': 3.035, 'AUC ROC': 0.821572, 'AUC PR': 0.097917, 'Recall': 1.0, 'CLL': -0.662239, 'F1': 0.112949, 'Precision': [0.059855, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.030739953789376676;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.42957750652808374;  // std dev = 0,495, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.723874
   AUC PR    = 0.084864
   CLL	      = -0.257926
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.031 seconds
Total inference time: 1.69 seconds
AUC ROC: 0.723874


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 00:07:41
{'Learning time': 3.031, 'Inference time': 1.69, 'AUC ROC': 0.723874, 'AUC PR': 0.084864, 'Recall': 0.0, 'CLL': -0.257926, 'F1': nan, 'Precision': [nan, 0.5]}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 585
Target train neg examples: 24169

Target test facts examples: 9306
Target test pos	 examples: 113
Target test neg examples: 3827

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2564123687585864;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.20613740734453975;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.16162857548414675;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.1245559779208197;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.09492800936730683;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07186088850055855;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05418307375954949;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.04076025323305626;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.62856
   AUC PR    = 0.038227
   CLL	      = -0.517162
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.398 seconds
Total inference time: 1.918 seconds
AUC ROC: 0.62856


Results scoring model
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total scoring time: 1.073 seconds
Parameter learned model CLL: -0.695026


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.24999999999999983, nan]}, {'': [0.24999999999999994, nan]}, {'': [0.25000000000000006, nan]}, {'': [0.24999999999999992, nan]}, {'': [0.24999999999999994, nan]}, {'': [0.24999999999999986, nan]}, {'': [0.25, nan]}, {'': [0.25000000000000006, nan]}, {'': [0.25, nan]}, {'': [0.24999999999999994, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.2434694851619868;  // std dev = 0,888, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.08973746802057851;  // std dev = 1,138, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.025487949188404295;  // std dev = 0,859, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.18375601258740745;  // std dev = 1,144, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.18314655214223563;  // std dev = 0,868, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.029810358125803498;  // std dev = 1,126, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.006141886134650637;  // std dev = 0,851, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.12428345722659155;  // std dev = 1,135, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.13968814494491877;  // std dev = 0,857, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.002711678650013538;  // std dev = 1,119, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.026114336564644652;  // std dev = 0,844, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.08899622045807358;  // std dev = 1,128, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.654016
   AUC PR    = 0.036585
   CLL	      = -0.53259
   Precision = 0.042687 at threshold = 0.5
   Recall    = 0.60177
   F1        = 0.079719


Total learning time: 2.293 seconds
Total inference time: 2.1 seconds
AUC ROC: 0.654016


Results scoring model
   AUC ROC   = 0.76
   AUC PR    = 0.77735
   CLL	      = -0.590112
   Precision = 0.666667 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.727273


Total scoring time: 1.1 seconds
Refined model CLL: -0.590112


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.654016
   AUC PR    = 0.036585
   CLL	      = -0.53259
   Precision = 0.042687 at threshold = 0.5
   Recall    = 0.60177
   F1        = 0.079719


Total learning time: 5.864000000000001 seconds
Total inference time: 2.1 seconds
AUC ROC: 0.654016
Total revision time: 5.864000000000001
Best scored revision CLL: -0.590112


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 00:07:52
{'Learning time': 5.864000000000001, 'Inference time': 2.1, 'AUC ROC': 0.654016, 'AUC PR': 0.036585, 'Recall': 0.60177, 'CLL': -0.53259, 'parameter_5': {'Learning time': 1.398, 'Inference time': 1.918, 'AUC ROC': 0.62856, 'AUC PR': 0.038227, 'Recall': 0.0, 'CLL': -0.517162, 'F1': nan, 'Precision': [nan, 0.5]}, 'F1': 0.079719, 'Precision': [0.042687, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.2434694851619868;  // std dev = 0,888, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0.08973746802057851;  // std dev = 1,138, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.025487949188404295;  // std dev = 0,859, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.18375601258740745;  // std dev = 1,144, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.18314655214223563;  // std dev = 0,868, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0.029810358125803498;  // std dev = 1,126, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return -0.006141886134650637;  // std dev = 0,851, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.12428345722659155;  // std dev = 1,135, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.13968814494491877;  // std dev = 0,857, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.002711678650013538;  // std dev = 1,119, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return -0.026114336564644652;  // std dev = 0,844, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.08899622045807358;  // std dev = 1,128, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.495959
   AUC PR    = 0.025388
   CLL	      = -0.695769
   Precision = 0.028428 at threshold = 0.5
   Recall    = 0.60177
   F1        = 0.054291


Total learning time: 1.81 seconds
Total inference time: 1.614 seconds
AUC ROC: 0.495959


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:07:55
{'Learning time': 1.81, 'Inference time': 1.614, 'AUC ROC': 0.495959, 'AUC PR': 0.025388, 'Recall': 0.60177, 'CLL': -0.695769, 'F1': 0.054291, 'Precision': [0.028428, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.497253
   AUC PR    = 0.028487
   CLL	      = -0.257326
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.101 seconds
Total inference time: 1.137 seconds
AUC ROC: 0.497253


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 00:07:58
{'Learning time': 1.101, 'Inference time': 1.137, 'AUC ROC': 0.497253, 'AUC PR': 0.028487, 'Recall': 0.0, 'CLL': -0.257326, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.23314893509951234;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.202334239218108;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.17149281961528923;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.14228146899184058;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.11591746118730602;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.09305316265470481;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.07383827012230793;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.05807372983129966;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.04537020502570499;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.03526821680925485;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.433717
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 1.289 seconds
Total inference time: 1.833 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.779088
   CLL	      = -0.555937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 0.954 seconds
Parameter learned model CLL: -0.555937


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}]]
[{'': [0.0, 0.23437500000000006]}, {'': [0.0, 0.23437500000000008]}, {'': [0.0, 0.23437500000000017]}, {'': [0.0, 0.23437499999999997]}, {'': [0.0, 0.23437500000000008]}, {'': [0.0, 0.23437500000000003]}, {'': [0.0, 0.2343750000000001]}, {'': [0.0, 0.23437500000000008]}, {'': [0.0, 0.2343749999999999]}, {'': [0.0, 0.23437499999999983]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.47542757614889813;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.02707409646353569;  // std dev = 0,900, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.1444995039394977;  // std dev = 0,474, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.09144234219098117;  // std dev = 1,098, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.07782772982363484;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.22881336794722643;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3724743257667264;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.01111182694108972;  // std dev = 0,901, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.07838150373043316;  // std dev = 0,468, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.027992176587749062;  // std dev = 1,038, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.06477941799032114;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.1640545610145583;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.28314864705005766;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 4.8084735089771736E-4;  // std dev = 0,899, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.032447110475281246;  // std dev = 0,463, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.014262241999951686;  // std dev = 0,991, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.05472781689960826;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.11890754313277929;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.011192659827602503;  // std dev = 0,991, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.04598419951605617;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.09049361778656295;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.22069211774808464;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.011787725177207064;  // std dev = 0,895, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.011444578661380211;  // std dev = 0,455, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */


Results
   AUC ROC   = 0.863108
   AUC PR    = 0.543105
   CLL	      = -0.419713
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 2.997 seconds
Total inference time: 2.477 seconds
AUC ROC: 0.863108


Results scoring model
   AUC ROC   = 0.83
   AUC PR    = 0.864869
   CLL	      = -0.494152
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.705882


Total scoring time: 0.986 seconds
Refined model CLL: -0.494152


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.863108
   AUC PR    = 0.543105
   CLL	      = -0.419713
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 6.226 seconds
Total inference time: 2.477 seconds
AUC ROC: 0.863108
Total revision time: 6.226
Best scored revision CLL: -0.494152


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:09
{'Learning time': 6.226, 'Inference time': 2.477, 'AUC ROC': 0.863108, 'AUC PR': 0.543105, 'Recall': 0.663717, 'CLL': -0.419713, 'parameter_10': {'Learning time': 1.289, 'Inference time': 1.833, 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'CLL': -0.433717, 'F1': 0.604938, 'Precision': [1.0, 0.5]}, 'F1': 0.305499, 'Precision': [0.198413, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.5581489350995124;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.47588605454691735;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.382647398804739;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.2946730206437158;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.22214664751409413;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.41359988277585574;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.010591186458651859;  // std dev = 0,907, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.09671717608663073;  // std dev = 0,447, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.03150317753540055;  // std dev = 1,093, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.05171674368077317;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.14269805640161687;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.320791275171079;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.016714355374463363;  // std dev = 0,907, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.043520137705575335;  // std dev = 0,442, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return -0.015377027592582776;  // std dev = 1,037, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.046093709092297146;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.09736955611041852;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return -0.01197574973862405;  // std dev = 1,037, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.03850921491953151;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.07430150477539031;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */


Results
   AUC ROC   = 0.673939
   AUC PR    = 0.042729
   CLL	      = -0.608981
   Precision = 0.040201 at threshold = 0.5
   Recall    = 0.566372
   F1        = 0.075073


Total learning time: 2.853 seconds
Total inference time: 2.08 seconds
AUC ROC: 0.673939


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:14
{'Learning time': 2.853, 'Inference time': 2.08, 'AUC ROC': 0.673939, 'AUC PR': 0.042729, 'Recall': 0.566372, 'CLL': -0.608981, 'F1': 0.075073, 'Precision': [0.040201, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.5581489350995124;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */


Results
   AUC ROC   = 0.618016
   AUC PR    = 0.038556
   CLL	      = -0.248809
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.285 seconds
Total inference time: 1.23 seconds
AUC ROC: 0.618016


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 00:08:17
{'Learning time': 1.285, 'Inference time': 1.23, 'AUC ROC': 0.618016, 'AUC PR': 0.038556, 'Recall': 0.0, 'CLL': -0.248809, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.23314893509951237;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.202334239218108;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.1714928196152892;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.14228146899184058;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.11591746118730585;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.09305316265470505;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.07383827012230793;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.05807372983129966;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.04537020502570499;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.03526821680925496;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.433717
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 1.406 seconds
Total inference time: 1.76 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.777338
   CLL	      = -0.555937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 1.064 seconds
Parameter learned model CLL: -0.555937


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.27e-09, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}]]
[{'': [-1.4802973661668753e-16, 0.23437500000000003]}, {'': [7.401486830834377e-17, 0.2343750000000001]}, {'': [-7.401486830834377e-17, 0.2343750000000003]}, {'': [7.401486830834377e-17, 0.23437499999999997]}, {'': [-3.700743415417188e-17, 0.23437499999999986]}, {'': [9.25185853854297e-18, 0.23437499999999997]}, {'': [-9.25185853854297e-18, 0.23437499999999986]}, {'': [4.625929269271485e-18, 0.2343750000000001]}, {'': [-4.625929269271485e-18, 0.2343749999999999]}, {'': [0.0, 0.2343749999999998]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.3126943896449669;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.27021896952830904;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.22609590054064999;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.25206564481433;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.18382902223075037;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.19292386438161405;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.14604980861094888;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.14565792934085833;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.05002771289938789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.11405557378101809;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.10936989620321738;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.04190386852605735;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.0879978236541454;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08203625432353104;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.03491396367325339;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.06733625981328885;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.06159524961500464;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.028961035597951046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.05124268215565502;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.04632822707005526;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.023934242922604827;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.03885246607182053;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */


Results
   AUC ROC   = 0.866406
   AUC PR    = 0.543271
   CLL	      = -0.366814
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 4.431 seconds
Total inference time: 2.661 seconds
AUC ROC: 0.866406


Results scoring model
   AUC ROC   = 0.833333
   AUC PR    = 0.854896
   CLL	      = -0.474686
   Precision = 0.818182 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.692308


Total scoring time: 1.111 seconds
Refined model CLL: -0.474686


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.866406
   AUC PR    = 0.543271
   CLL	      = -0.366814
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 8.012 seconds
Total inference time: 2.661 seconds
AUC ROC: 0.866406
Total revision time: 8.012
Best scored revision CLL: -0.474686


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:30
{'Learning time': 8.012, 'Inference time': 2.661, 'AUC ROC': 0.866406, 'AUC PR': 0.543271, 'Recall': 0.663717, 'CLL': -0.366814, 'parameter_15': {'Learning time': 1.406, 'Inference time': 1.76, 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'CLL': -0.433717, 'F1': 0.604938, 'Precision': [1.0, 0.5]}, 'F1': 0.305499, 'Precision': [0.198413, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.43201604470553195;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.29912836216848887;  // std dev = 0,481, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.25206564481433;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.035541200544988556;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.28435498147442356;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.19292386438161405;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.18082429960138957;  // std dev = 0,475, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.14565792934085833;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.003148562841623903;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.1716560903893157;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.10936989620321738;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.002553744598295979;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.12877010205806774;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.08203625432353104;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.016306827578291827;  // std dev = 0,868, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.09674032553573;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.06159524961500464;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.06935697651752039;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 9.899289333574687E-4;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.07293463091189212;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.04632822707005526;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.06501191044819324;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 8.047622162823398E-4;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.055205411455257085;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */


Results
   AUC ROC   = 0.676797
   AUC PR    = 0.042876
   CLL	      = -0.519725
   Precision = 0.054236 at threshold = 0.5
   Recall    = 0.929204
   F1        = 0.102489


Total learning time: 4.715 seconds
Total inference time: 2.372 seconds
AUC ROC: 0.676797


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:38
{'Learning time': 4.715, 'Inference time': 2.372, 'AUC ROC': 0.676797, 'AUC PR': 0.042876, 'Recall': 0.929204, 'CLL': -0.519725, 'F1': 0.102489, 'Precision': [0.054236, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */


Results
   AUC ROC   = 0.677236
   AUC PR    = 0.042895
   CLL	      = -0.232076
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.819 seconds
Total inference time: 1.551 seconds
AUC ROC: 0.677236


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 00:08:41
{'Learning time': 1.819, 'Inference time': 1.551, 'AUC ROC': 0.677236, 'AUC PR': 0.042895, 'Recall': 0.0, 'CLL': -0.232076, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.23314893509951234;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.2023342392181077;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.17149281961528942;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.14228146899184044;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.11591746118730595;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.09305316265470504;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.0738382701223079;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.05807372983129966;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.04537020502570499;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.03526821680925506;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.433717
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 1.488 seconds
Total inference time: 1.816 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.776709
   CLL	      = -0.555937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 1.08 seconds
Parameter learned model CLL: -0.555937


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.49e-08, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.739, 20, 12]}]]
[{'': [-2.220446049250313e-16, 0.2343749999999995]}, {'': [1.1102230246251565e-16, 0.23437500000000022]}, {'': [-1.1102230246251565e-16, 0.23437499999999994]}, {'': [1.1102230246251565e-16, 0.234375]}, {'': [-4.163336342344337e-17, 0.23437499999999986]}, {'': [2.7755575615628914e-17, 0.23437499999999992]}, {'': [-2.0816681711721685e-17, 0.2343749999999998]}, {'': [6.938893903907228e-18, 0.2343750000000001]}, {'': [-3.469446951953614e-18, 0.23437499999999986]}, {'': [0.0, 0.2343749999999998]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.3087411357856348;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.2564123687585864;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.25206564481433;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.038428662236904595;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.20613740734453964;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.19292386438161405;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.03315494592188569;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.16162857548414683;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.14565792934085833;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.02849510592572117;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.12455597792081978;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.10936989620321738;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.024408230135271946;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.0949280093673068;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08203625432353104;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.020846889108740264;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.0718608885005585;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.06159524961500464;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.017760671541598484;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.05418307375954923;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.04632822707005526;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.015098879183171288;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.040760253233056334;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */


Results
   AUC ROC   = 0.866406
   AUC PR    = 0.543271
   CLL	      = -0.386307
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 4.635 seconds
Total inference time: 2.7 seconds
AUC ROC: 0.866406


Results scoring model
   AUC ROC   = 0.8425
   AUC PR    = 0.858349
   CLL	      = -0.459803
   Precision = 0.846154 at threshold = 0.5
   Recall    = 0.55
   F1        = 0.666667


Total scoring time: 1.033 seconds
Refined model CLL: -0.459803


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.866406
   AUC PR    = 0.543271
   CLL	      = -0.386307
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 8.235999999999999 seconds
Total inference time: 2.7 seconds
AUC ROC: 0.866406
Total revision time: 8.235999999999999
Best scored revision CLL: -0.459803


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:55
{'Learning time': 8.235999999999999, 'Inference time': 2.7, 'AUC ROC': 0.866406, 'AUC PR': 0.543271, 'Recall': 0.663717, 'CLL': -0.386307, 'parameter_20': {'Learning time': 1.488, 'Inference time': 1.816, 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'CLL': -0.433717, 'F1': 0.604938, 'Precision': [1.0, 0.5]}, 'F1': 0.305499, 'Precision': [0.198413, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.524815601766179;  // std dev = 0,471, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.37978292111637435;  // std dev = 0,484, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.003904380325631296;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.3766702555034207;  // std dev = 0,471, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.25206564481433;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.0032713251414446254;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.29351770232879076;  // std dev = 0,471, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.19292386438161405;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.18385821338620614;  // std dev = 0,468, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.14565792934085833;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.03408522669309905;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.17700401988546566;  // std dev = 0,471, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.10936989620321738;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.028029582339288494;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.13280639295907434;  // std dev = 0,471, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.08203625432353104;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.023133123666666477;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.09995306993416925;  // std dev = 0,471, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.06159524961500464;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.019148814888902264;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.0755923847452934;  // std dev = 0,471, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.04632822707005526;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.01588964695847258;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.05745479610991657;  // std dev = 0,471, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */


Results
   AUC ROC   = 0.677236
   AUC PR    = 0.042895
   CLL	      = -0.52763
   Precision = 0.054236 at threshold = 0.5
   Recall    = 0.929204
   F1        = 0.102489


Total learning time: 4.659 seconds
Total inference time: 2.33 seconds
AUC ROC: 0.677236


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:09:02
{'Learning time': 4.659, 'Inference time': 2.33, 'AUC ROC': 0.677236, 'AUC PR': 0.042895, 'Recall': 0.929204, 'CLL': -0.52763, 'F1': 0.102489, 'Precision': [0.054236, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.524815601766179;  // std dev = 0,471, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */


Results
   AUC ROC   = 0.677236
   AUC PR    = 0.042895
   CLL	      = -0.231979
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.925 seconds
Total inference time: 1.436 seconds
AUC ROC: 0.677236


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 00:09:06
{'Learning time': 1.925, 'Inference time': 1.436, 'AUC ROC': 0.677236, 'AUC PR': 0.042895, 'Recall': 0.0, 'CLL': -0.231979, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.24839283753853675;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.21538963726453592;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.18211112909257343;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.15050406991191925;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.12201015159221176;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.09739595254626598;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.07682769287355179;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.06006334288028828;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.04664683831854915;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.036050813860385104;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.455324
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 1.443 seconds
Total inference time: 1.965 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.68
   AUC PR    = 0.757207
   CLL	      = -0.572663
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.36
   F1        = 0.529412


Total scoring time: 1.114 seconds
Parameter learned model CLL: -0.572663


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.33e-08, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.83e-08, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [3.123, 25, 16]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [3.123, 25, 16]}]]
[{'': [-2.9605947323337506e-16, 0.2379535990481851]}, {'': [9.868649107779169e-17, 0.23795359904818547]}, {'': [-1.4802973661668753e-16, 0.237953599048185]}, {'': [1.2335811384723962e-16, 0.2379535990481855]}, {'': [-3.700743415417188e-17, 0.23795359904818542]}, {'': [3.700743415417188e-17, 0.23795359904818542]}, {'': [-2.4671622769447922e-17, 0.23795359904818555]}, {'': [6.1679056923619804e-18, 0.23795359904818572]}, {'': [-3.0839528461809902e-18, 0.2379535990481855]}, {'': [0.0, 0.2379535990481857]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.10814893509951218;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.48767788391726297;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.03683251744007497;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.09446743783575556;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.3087411357856348;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3912569620992536;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.03254015317273094;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.08165239320886175;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.2564123687585864;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.13836669367278082;  // std dev = 0,453, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.26665885387323096;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.04518738759169399;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.04856740031232177;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.17663075496166952;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.20019068900333087;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.03966869141685874;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.04064159801069067;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.13684582199904974;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.15048890964164277;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.03496982907835731;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.0338348318841144;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.10464425326455995;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.11389948849713245;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.030938863743541455;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.028046900540583234;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.07937543879012021;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08691019200473522;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.02745823112380682;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.02316573843790182;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.05991931248114432;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.06682767786050765;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.024435638045184727;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.019077230536846148;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.04510586084168322;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */


Results
   AUC ROC   = 0.866406
   AUC PR    = 0.543271
   CLL	      = -0.434135
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 8.57 seconds
Total inference time: 2.812 seconds
AUC ROC: 0.866406


Results scoring model
   AUC ROC   = 0.8408
   AUC PR    = 0.86183
   CLL	      = -0.485578
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.56
   F1        = 0.682927


Total scoring time: 1.194 seconds
Refined model CLL: -0.485578


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.866406
   AUC PR    = 0.543271
   CLL	      = -0.434135
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 12.321000000000002 seconds
Total inference time: 2.812 seconds
AUC ROC: 0.866406
Total revision time: 12.321000000000002
Best scored revision CLL: -0.485578


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 00:09:24
{'Learning time': 12.321000000000002, 'Inference time': 2.812, 'parameter_25': {'Learning time': 1.443, 'Inference time': 1.965, 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'CLL': -0.455324, 'F1': 0.604938, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.866406, 'AUC PR': 0.543271, 'Recall': 0.663717, 'CLL': -0.434135, 'F1': 0.305499, 'Precision': [0.198413, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.10814893509951218;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.5381489350995123;  // std dev = 0,466, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.48767788391726297;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.03683251744007497;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.09446743783575556;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.4593445937067122;  // std dev = 0,466, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.3912569620992536;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.03254015317273094;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.30048420453614566;  // std dev = 0,475, 33,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.3005711547884894;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.028843434243526523;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.03531269847329779;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.30293445354966436;  // std dev = 0,466, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.22629823971521876;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.025640477399664095;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.02929913255417352;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.22960820569092824;  // std dev = 0,466, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.16984358676510128;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.022850675562834787;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.024218705474524538;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.17237049408187857;  // std dev = 0,466, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.12813320688246752;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.02040946845150366;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.019957082338337265;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.12945056389568646;  // std dev = 0,466, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.09743184803714998;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.018264572141688296;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.016403191747657555;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.09767102147062146;  // std dev = 0,466, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.07468131696953094;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.01637321748135532;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.013453716495895298;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.07412335336629639;  // std dev = 0,466, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.057651940521137104;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.014700098059752786;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.04552589399712485;  // std dev = 0,459, 33,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */


Results
   AUC ROC   = 0.777261
   AUC PR    = 0.085546
   CLL	      = -0.584223
   Precision = 0.054236 at threshold = 0.5
   Recall    = 0.929204
   F1        = 0.102489


Total learning time: 9.113 seconds
Total inference time: 2.199 seconds
AUC ROC: 0.777261


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:09:35
{'Learning time': 9.113, 'Inference time': 2.199, 'AUC ROC': 0.777261, 'AUC PR': 0.085546, 'Recall': 0.929204, 'CLL': -0.584223, 'F1': 0.102489, 'Precision': [0.054236, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.10814893509951218;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.5381489350995123;  // std dev = 0,466, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */


Results
   AUC ROC   = 0.777261
   AUC PR    = 0.085546
   CLL	      = -0.239318
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.501 seconds
Total inference time: 1.487 seconds
AUC ROC: 0.777261


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 00:09:40
{'Learning time': 2.501, 'Inference time': 1.487, 'AUC ROC': 0.777261, 'AUC PR': 0.085546, 'Recall': 0.0, 'CLL': -0.239318, 'F1': nan, 'Precision': [nan, 0.5]}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 569
Target train neg examples: 23251

Target test facts examples: 8129
Target test pos	 examples: 129
Target test neg examples: 4745

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.12543301544918353;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.10782354562777509;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.09150383240113759;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.07678249969777719;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.06380835741947548;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.05259581166798401;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.043061399542859605;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.03506047229230461;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.028417796087898104;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.318503
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 1.277 seconds
Total inference time: 1.866 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.8
   AUC PR    = 0.873077
   CLL	      = -0.457802
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 1.055 seconds
Parameter learned model CLL: -0.457802


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-08, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}]]
[{'': [1.4802973661668753e-16, 0.20408163265306126]}, {'': [0.0, 0.20408163265306117]}, {'': [3.700743415417188e-17, 0.2040816326530612]}, {'': [-3.700743415417188e-17, 0.20408163265306117]}, {'': [0.0, 0.2040816326530612]}, {'': [0.0, 0.20408163265306117]}, {'': [0.0, 0.2040816326530612]}, {'': [0.0, 0.2040816326530612]}, {'': [-4.625929269271485e-18, 0.2040816326530612]}, {'': [-2.3129646346357427e-18, 0.20408163265306126]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.1438632208137979;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.12543301544918353;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.10782354562777509;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.09150383240113759;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.07678249969777719;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.06380835741947548;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.05259581166798401;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.043061399542859605;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.03506047229230461;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.028417796087898104;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.318503
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 1.902 seconds
Total inference time: 1.975 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.8
   AUC PR    = 0.873077
   CLL	      = -0.457802
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 1.006 seconds
Refined model CLL: -0.457802


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.318503
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 5.24 seconds
Total inference time: 1.866 seconds
AUC ROC: 0.713178
Total revision time: 5.24
Best scored revision CLL: -0.457802


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:50
{'Learning time': 5.24, 'Inference time': 1.866, 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'CLL': -0.318503, 'parameter_5': {'Learning time': 1.277, 'Inference time': 1.866, 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'CLL': -0.318503, 'F1': 0.597826, 'Precision': [1.0, 0.5]}, 'F1': 0.597826, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.4295775065280837;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.36887697659770574;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.3027909085849406;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   return 0;  // std dev = 0,491, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.2393401664098931;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.1843038277162846;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.13977569193759043;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.1052107561348137;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.07895904348963037;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.04126932998424626;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.0592222778258641;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */


Results
   AUC ROC   = 0.500453
   AUC PR    = 0.026493
   CLL	      = -0.663196
   Precision = 0.026497 at threshold = 0.5
   Recall    = 0.775194
   F1        = 0.051243


Total learning time: 2.052 seconds
Total inference time: 2.047 seconds
AUC ROC: 0.500453


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:54
{'Learning time': 2.052, 'Inference time': 2.047, 'AUC ROC': 0.500453, 'AUC PR': 0.026493, 'Recall': 0.775194, 'CLL': -0.663196, 'F1': 0.051243, 'Precision': [0.026497, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.4295775065280837;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */


Results
   AUC ROC   = 0.500453
   AUC PR    = 0.026493
   CLL	      = -0.254126
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.318 seconds
Total inference time: 1.203 seconds
AUC ROC: 0.500453


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 00:09:57
{'Learning time': 1.318, 'Inference time': 1.203, 'AUC ROC': 0.500453, 'AUC PR': 0.026493, 'Recall': 0.0, 'CLL': -0.254126, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.1914822684328457;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.1665388245648817;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.14209424281556463;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.11914890490746437;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.09841340278401871;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.08026654944252239;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.06479591611329234;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.051879169344040466;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.04126932998424623;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.032663748734830175;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.37717
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 1.474 seconds
Total inference time: 1.872 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.75
   AUC PR    = 0.82372
   CLL	      = -0.510268
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.666667


Total scoring time: 1.049 seconds
Parameter learned model CLL: -0.510268


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.49e-08, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}]]
[{'': [0.0, 0.22222222222222202]}, {'': [0.0, 0.22222222222222238]}, {'': [-4.4408920985006264e-17, 0.22222222222222215]}, {'': [4.4408920985006264e-17, 0.22222222222222218]}, {'': [-2.2204460492503132e-17, 0.22222222222222215]}, {'': [0.0, 0.22222222222222207]}, {'': [-5.551115123125783e-18, 0.22222222222222232]}, {'': [0.0, 0.22222222222222218]}, {'': [0.0, 0.22222222222222213]}, {'': [0.0, 0.22222222222222202]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.22178529873587596;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.19258789115538322;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.16352953408429413;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.13606878407651105;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.11126948691064746;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.05002771289938789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.08970341513165919;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.04190386852605735;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.07150513066226619;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.03491396367325339;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.056501932792643365;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.028961035597951046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.04434895786191332;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.023934242922604827;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.034633754785669255;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */


Results
   AUC ROC   = 0.712026
   AUC PR    = 0.464611
   CLL	      = -0.386243
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 2.293 seconds
Total inference time: 2.319 seconds
AUC ROC: 0.712026


Results scoring model
   AUC ROC   = 0.775
   AUC PR    = 0.835713
   CLL	      = -0.505812
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.666667


Total scoring time: 1.136 seconds
Refined model CLL: -0.505812


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.712026
   AUC PR    = 0.464611
   CLL	      = -0.386243
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 5.952 seconds
Total inference time: 2.319 seconds
AUC ROC: 0.712026
Total revision time: 5.952
Best scored revision CLL: -0.505812


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 00:10:08
{'Learning time': 5.952, 'Inference time': 2.319, 'AUC ROC': 0.712026, 'AUC PR': 0.464611, 'Recall': 0.426357, 'CLL': -0.386243, 'parameter_10': {'Learning time': 1.474, 'Inference time': 1.872, 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'CLL': -0.37717, 'F1': 0.597826, 'Precision': [1.0, 0.5]}, 'F1': 0.597826, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.4735335504841277;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.24822967119721917;  // std dev = 1,023, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.32605362239842267;  // std dev = 0,496, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.21377513769667383;  // std dev = 1,011, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.267415553057988;  // std dev = 0,496, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.17956069812011796;  // std dev = 1,000, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.21209798387609427;  // std dev = 0,495, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.14754404739253232;  // std dev = 0,990, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.16423201619414005;  // std dev = 0,495, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.13674864278134508;  // std dev = 1,042, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.2399886912809678;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2036180517277687;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.13110076333003398;  // std dev = 0,904, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.07750264311426074;  // std dev = 0,493, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.10560487742472606;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.05824005228489016;  // std dev = 0,493, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.08411435173020043;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.0437130171065151;  // std dev = 0,493, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.06643157654035078;  // std dev = 0,880, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.0327966881220171;  // std dev = 0,493, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */


Results
   AUC ROC   = 0.582468
   AUC PR    = 0.032534
   CLL	      = -0.627635
   Precision = 0.033646 at threshold = 0.5
   Recall    = 0.751938
   F1        = 0.064409


Total learning time: 2.588 seconds
Total inference time: 2.073 seconds
AUC ROC: 0.582468


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 00:10:13
{'Learning time': 2.588, 'Inference time': 2.073, 'AUC ROC': 0.582468, 'AUC PR': 0.032534, 'Recall': 0.751938, 'CLL': -0.627635, 'F1': 0.064409, 'Precision': [0.033646, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.39148226843284567;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */


Results
   AUC ROC   = 0.500453
   AUC PR    = 0.026493
   CLL	      = -0.251207
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.267 seconds
Total inference time: 1.23 seconds
AUC ROC: 0.500453


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 00:10:15
{'Learning time': 1.267, 'Inference time': 1.23, 'AUC ROC': 0.500453, 'AUC PR': 0.026493, 'Recall': 0.0, 'CLL': -0.251207, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.17633075328133055;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.1534823605167704;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.13126760833378437;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.11049397908378188;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.09172466407655461;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.07525517484793537;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.061148495826541645;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.04929877947809456;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.03949769486849585;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.031488929375440365;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.357851
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 1.531 seconds
Total inference time: 1.71 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.766667
   AUC PR    = 0.83611
   CLL	      = -0.49363
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.533333
   F1        = 0.695652


Total scoring time: 1.119 seconds
Parameter learned model CLL: -0.49363


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.49e-08, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.185, 15, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.185, 15, 7]}]]
[{'': [-2.220446049250313e-16, 0.2169421487603307]}, {'': [1.1102230246251565e-16, 0.2169421487603306]}, {'': [-1.1102230246251565e-16, 0.21694214876033066]}, {'': [1.1102230246251565e-16, 0.21694214876033058]}, {'': [-4.163336342344337e-17, 0.2169421487603307]}, {'': [2.7755575615628914e-17, 0.21694214876033052]}, {'': [-2.0816681711721685e-17, 0.2169421487603305]}, {'': [6.938893903907228e-18, 0.2169421487603307]}, {'': [-3.469446951953614e-18, 0.21694214876033066]}, {'': [0.0, 0.21694214876033072]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.19148226843284566;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.16653882456488167;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.14209424281556468;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.25206564481433;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.11914890490746437;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.592923864381614;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.026200611583675173;  // std dev = 0,471, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.44599694534296336;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.02123067272663107;  // std dev = 0,471, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3400985576824791;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.017159480538204517;  // std dev = 0,471, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.008085236577671639;  // std dev = 0,757, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.08660628589471493;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.26995155775299795;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 2.5115100728905532E-5;  // std dev = 0,469, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.03622844709398452;  // std dev = 0,702, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07015491824227883;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */


Results
   AUC ROC   = 0.757534
   AUC PR    = 0.506619
   CLL	      = -0.355585
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 3.533 seconds
Total inference time: 2.539 seconds
AUC ROC: 0.757534


Results scoring model
   AUC ROC   = 0.893333
   AUC PR    = 0.919577
   CLL	      = -0.362969
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.733333
   F1        = 0.846154


Total scoring time: 1.153 seconds
Refined model CLL: -0.362969


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.757534
   AUC PR    = 0.506619
   CLL	      = -0.355585
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 7.336 seconds
Total inference time: 2.539 seconds
AUC ROC: 0.757534
Total revision time: 7.336
Best scored revision CLL: -0.362969


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 00:10:28
{'Learning time': 7.336, 'Inference time': 2.539, 'AUC ROC': 0.757534, 'AUC PR': 0.506619, 'Recall': 0.534884, 'CLL': -0.355585, 'parameter_15': {'Learning time': 1.531, 'Inference time': 1.71, 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'CLL': -0.357851, 'F1': 0.597826, 'Precision': [1.0, 0.5]}, 'F1': 0.422018, 'Precision': [0.348485, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.43709630352056494;  // std dev = 0,494, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.3751785876229692;  // std dev = 0,494, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.30758572307646626;  // std dev = 0,494, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.24271717457728084;  // std dev = 0,494, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1865919925771221;  // std dev = 0,494, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.49282321561504483;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.0795658240155931;  // std dev = 0,507, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.37249399475136735;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.05987802884334742;  // std dev = 0,507, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.012873268600127274;  // std dev = 0,961, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.10676520466343335;  // std dev = 0,494, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.2876346961420976;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.020556368259830187;  // std dev = 0,504, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.028442586167871764;  // std dev = 0,904, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.07496365093060052;  // std dev = 0,494, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */


Results
   AUC ROC   = 0.591468
   AUC PR    = 0.059153
   CLL	      = -0.637583
   Precision = 0.032069 at threshold = 0.5
   Recall    = 0.976744
   F1        = 0.0621


Total learning time: 3.866 seconds
Total inference time: 2.303 seconds
AUC ROC: 0.591468


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 00:10:34
{'Learning time': 3.866, 'Inference time': 2.303, 'AUC ROC': 0.591468, 'AUC PR': 0.059153, 'Recall': 0.976744, 'CLL': -0.637583, 'F1': 0.0621, 'Precision': [0.032069, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.43709630352056494;  // std dev = 0,494, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */


Results
   AUC ROC   = 0.563635
   AUC PR    = 0.029256
   CLL	      = -0.250728
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.368 seconds
Total inference time: 1.331 seconds
AUC ROC: 0.563635


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 00:10:37
{'Learning time': 1.368, 'Inference time': 1.331, 'AUC ROC': 0.563635, 'AUC PR': 0.029256, 'Recall': 0.0, 'CLL': -0.250728, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.1914822684328457;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.16653882456488173;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.14209424281556463;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.11914890490746405;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.09841340278401871;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.0802665494425227;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.06479591611329234;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.05187916934404068;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.04126932998424623;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.032663748734830154;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.37717
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 1.473 seconds
Total inference time: 1.93 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.75
   AUC PR    = 0.821473
   CLL	      = -0.510268
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.666667


Total scoring time: 1.067 seconds
Parameter learned model CLL: -0.510268


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 10], 'false': [2.582, 20, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 10], 'false': [2.582, 20, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 10], 'false': [2.582, 20, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.65e-08, 0, 10], 'false': [2.582, 20, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 10], 'false': [2.582, 20, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.83e-08, 0, 10], 'false': [2.582, 20, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 10], 'false': [2.582, 20, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 10], 'false': [2.582, 20, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 10], 'false': [2.582, 20, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 10], 'false': [2.582, 20, 10]}]]
[{'': [-8.881784197001253e-17, 0.2222222222222223]}, {'': [8.881784197001253e-17, 0.22222222222222202]}, {'': [-1.7763568394002506e-16, 0.22222222222222218]}, {'': [1.3322676295501878e-16, 0.22222222222222227]}, {'': [-4.4408920985006264e-17, 0.22222222222222215]}, {'': [3.3306690738754695e-17, 0.22222222222222218]}, {'': [-2.7755575615628914e-17, 0.222222222222222]}, {'': [5.551115123125783e-18, 0.22222222222222243]}, {'': [0.0, 0.22222222222222243]}, {'': [0.0, 0.2222222222222223]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.25814893509951237;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.22373365448410584;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.17622023461360936;  // std dev = 1,902, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.14525481140990518;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.14688408167839004;  // std dev = 1,899, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.12840342922216033;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.12021967724987842;  // std dev = 1,896, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.11490306872729113;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.09694213107378444;  // std dev = 1,893, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.10387252637481031;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.07726113944826873;  // std dev = 1,892, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.09470754482510178;  // std dev = 0,056, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.06102412619695496;  // std dev = 0,473, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.08698218550163174;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.04787239627615347;  // std dev = 1,889, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.08038872045740096;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.03736360273900308;  // std dev = 0,472, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.07469990807504197;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.821048
   AUC PR    = 0.222184
   CLL	      = -0.387218
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 7.775 seconds
Total inference time: 2.739 seconds
AUC ROC: 0.821048


Results scoring model
   AUC ROC   = 0.94
   AUC PR    = 0.947693
   CLL	      = -0.314816
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.823529


Total scoring time: 1.071 seconds
Refined model CLL: -0.314816


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.821048
   AUC PR    = 0.222184
   CLL	      = -0.387218
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 11.386000000000001 seconds
Total inference time: 2.739 seconds
AUC ROC: 0.821048
Total revision time: 11.386000000000001
Best scored revision CLL: -0.314816


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 00:10:54
{'Learning time': 11.386000000000001, 'Inference time': 2.739, 'AUC ROC': 0.821048, 'AUC PR': 0.222184, 'Recall': 0.534884, 'CLL': -0.387218, 'parameter_20': {'Learning time': 1.473, 'Inference time': 1.93, 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'CLL': -0.37717, 'F1': 0.597826, 'Precision': [1.0, 0.5]}, 'F1': 0.422018, 'Precision': [0.348485, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.44148226843284566;  // std dev = 0,493, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.26497857941112785;  // std dev = 0,482, 31,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.3537867228119064;  // std dev = 0,349, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.15751004762848964;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.38541121737240763;  // std dev = 0,481, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.46719492632905163;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.13771701603436612;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.25390023220336794;  // std dev = 0,492, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3546631422894744;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.12216355329955154;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.19560101114636028;  // std dev = 0,492, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2782282488858408;  // std dev = 1,29e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09003536640798253;  // std dev = 0,446, 31,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.22591980509438736;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07075867127954562;  // std dev = 0,445, 31,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.18886298313135275;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.12636710405725612;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.10842871492319922;  // std dev = 0,492, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1616125994080151;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.11306225788749227;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.08134316825248983;  // std dev = 0,492, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.14089323789235386;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.3647800228220548;  // std dev = 0,368, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.0974583916965642;  // std dev = 0,036, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.10567383865726832;  // std dev = 0,472, 23,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */


Results
   AUC ROC   = 0.718534
   AUC PR    = 0.076763
   CLL	      = -0.645109
   Precision = 0.040487 at threshold = 0.5
   Recall    = 0.953488
   F1        = 0.077676


Total learning time: 23.349 seconds
Total inference time: 2.013 seconds
AUC ROC: 0.718534


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 00:11:20
{'Learning time': 23.349, 'Inference time': 2.013, 'AUC ROC': 0.718534, 'AUC PR': 0.076763, 'Recall': 0.953488, 'CLL': -0.645109, 'F1': 0.077676, 'Precision': [0.040487, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.44148226843284566;  // std dev = 0,493, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.655126
   AUC PR    = 0.069585
   CLL	      = -0.247683
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.359 seconds
Total inference time: 1.507 seconds
AUC ROC: 0.655126


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 00:11:24
{'Learning time': 2.359, 'Inference time': 1.507, 'AUC ROC': 0.655126, 'AUC PR': 0.069585, 'Recall': 0.0, 'CLL': -0.247683, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return 0.1824732594238367;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return 0.15877807893665422;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return 0.13566553555729496;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return 0.11401852534459346;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return 0.09445772340382501;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return 0.07731130214989572;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return 0.06265217284550903;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452774;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return 0.05036838257158804;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return 0.040236693402981236;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return 0.03198268636325311;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.36561
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 1.627 seconds
Total inference time: 1.864 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.76
   AUC PR    = 0.829672
   CLL	      = -0.50038
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.52
   F1        = 0.684211


Total scoring time: 1.06 seconds
Parameter learned model CLL: -0.50038


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 13], 'false': [2.847, 25, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 13], 'false': [2.847, 25, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 13], 'false': [2.847, 25, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 13], 'false': [2.847, 25, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 13], 'false': [2.847, 25, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 13], 'false': [2.847, 25, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 13], 'false': [2.847, 25, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 13], 'false': [2.847, 25, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 13], 'false': [2.847, 25, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 13], 'false': [2.847, 25, 12]}]]
[{'': [-2.7328566760003855e-16, 0.2191380569758943]}, {'': [1.3664283380001927e-16, 0.21913805697589436]}, {'': [-2.7328566760003855e-16, 0.21913805697589478]}, {'': [1.3664283380001927e-16, 0.21913805697589472]}, {'': [-5.124106267500723e-17, 0.21913805697589508]}, {'': [3.416070845000482e-17, 0.21913805697589483]}, {'': [-3.416070845000482e-17, 0.21913805697589445]}, {'': [0.0, 0.21913805697589503]}, {'': [-1.2810265668751807e-17, 0.21913805697589478]}, {'': [0.0, 0.21913805697589492]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.221785298735876;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.19258789115538322;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.16352953408429408;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.13606878407651127;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.11126948691064734;  // std dev = 2,256, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.2739329485047045;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0782887395297571;  // std dev = 2,222, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.2229266500569054;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06527227848165738;  // std dev = 2,216, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1770964977452774;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09441309749573365;  // std dev = 0,022, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.1583340955771502;  // std dev = 0,098, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.10811545807668566;  // std dev = 0,483, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.08664881503740579;  // std dev = 0,021, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.1386771900492199;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.08557455807753529;  // std dev = 0,483, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08230746614776953;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04511227397917255;  // std dev = 2,181, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else return -0.06828823310031724;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.368759
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 5.963 seconds
Total inference time: 2.776 seconds
AUC ROC: 0.826968


Results scoring model
   AUC ROC   = 0.9296
   AUC PR    = 0.939318
   CLL	      = -0.331741
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.68
   F1        = 0.809524


Total scoring time: 1.233 seconds
Refined model CLL: -0.331741


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.368759
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 9.883000000000001 seconds
Total inference time: 2.776 seconds
AUC ROC: 0.826968
Total revision time: 9.883000000000001
Best scored revision CLL: -0.331741


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 00:11:40
{'Learning time': 9.883000000000001, 'Inference time': 2.776, 'parameter_25': {'Learning time': 1.627, 'Inference time': 1.864, 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'CLL': -0.36561, 'F1': 0.597826, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.826968, 'AUC PR': 0.521103, 'Recall': 0.534884, 'CLL': -0.368759, 'F1': 0.422018, 'Precision': [0.348485, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.42064893509951234;  // std dev = 0,496, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.361386758207022;  // std dev = 0,496, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.2654241185378755;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.355265536634538;  // std dev = 2,613, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.20414951444457374;  // std dev = 0,428, 47,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=25 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.36885353771644197;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.12180336254929203;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.18770245953181633;  // std dev = 0,483, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.28782073126342483;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.10936284249503159;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.1431045015993054;  // std dev = 0,483, 32,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.23257775467446118;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.0991568005194481;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.3211630670976503;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.15258187223432915;  // std dev = 2,613, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.19366173699688746;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.2554801084165494;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09064493453264387;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.11448008000940482;  // std dev = 2,613, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16519769072239518;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.20997516411860725;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08344529345556614;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.08591596888708279;  // std dev = 2,613, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.14365610603724122;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.17725596945592917;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07728105815971648;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.06461759802565703;  // std dev = 2,613, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.718784
   AUC PR    = 0.076771
   CLL	      = -0.598699
   Precision = 0.040487 at threshold = 0.5
   Recall    = 0.953488
   F1        = 0.077676


Total learning time: 8.847 seconds
Total inference time: 2.778 seconds
AUC ROC: 0.718784


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 00:11:52
{'Learning time': 8.847, 'Inference time': 2.778, 'AUC ROC': 0.718784, 'AUC PR': 0.076771, 'Recall': 0.953488, 'CLL': -0.598699, 'F1': 0.077676, 'Precision': [0.040487, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.47883859027192616;  // std dev = 2,613, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.718527
   AUC PR    = 0.076762
   CLL	      = -0.234569
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.285 seconds
Total inference time: 1.728 seconds
AUC ROC: 0.718527


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 00:11:56
{'Learning time': 2.285, 'Inference time': 1.728, 'AUC ROC': 0.718527, 'AUC PR': 0.076762, 'Recall': 0.0, 'CLL': -0.234569, 'F1': nan, 'Precision': [nan, 0.5]}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 544
Target train neg examples: 22302

Target test facts examples: 8644
Target test pos	 examples: 154
Target test neg examples: 5694

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.4136573287083126;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3366053739648666;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.26297558544868993;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.20032545170291094;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.15079889954054382;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.11312434025950242;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.08492715391619823;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.06391587871034281;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.04824192700154653;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.562346
   AUC PR    = 0.029973
   CLL	      = -0.778266
   Precision = 0.029973 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.058201


Total learning time: 1.239 seconds
Total inference time: 2.082 seconds
AUC ROC: 0.562346


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.625
   CLL	      = -0.543944
   Precision = 0.625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.769231


Total scoring time: 1.06 seconds
Parameter learned model CLL: -0.543944


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.369, 3, 5], 'false': [0.0, 2, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.369, 3, 5], 'false': [0.0, 2, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.369, 3, 5], 'false': [0.0, 2, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.369, 3, 5], 'false': [0.0, 2, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.369, 3, 5], 'false': [0.0, 2, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.369, 3, 5], 'false': [0.0, 2, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.369, 3, 5], 'false': [0.0, 2, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.369, 3, 5], 'false': [0.0, 2, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.369, 3, 5], 'false': [0.0, 2, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.369, 3, 5], 'false': [0.0, 2, 0]}]]
[{'': [0.23437499999999983, 0.0]}, {'': [0.2343749999999998, 0.0]}, {'': [0.234375, 0.0]}, {'': [0.23437500000000006, 0.0]}, {'': [0.234375, 0.0]}, {'': [0.23437500000000003, 0.0]}, {'': [0.23437500000000003, 0.0]}, {'': [0.23437499999999997, 0.0]}, {'': [0.234375, 0.0]}, {'': [0.23437499999999997, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.3151786576185065;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.27000574827754514;  // std dev = 0,959, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1567074865122639;  // std dev = 0,904, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.2058639756042253;  // std dev = 0,963, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.11894648243666435;  // std dev = 0,901, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.07299132450179983;  // std dev = 0,951, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.1566280053136036;  // std dev = 0,907, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.13193872361699707;  // std dev = 0,976, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.060523685091780334;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.031209180058987276;  // std dev = 0,932, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.10171194423877625;  // std dev = 0,918, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.08813857292517475;  // std dev = 0,983, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.029050384765643554;  // std dev = 0,861, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.507954
   AUC PR    = 0.023976
   CLL	      = -0.874882
   Precision = 0.038026 at threshold = 0.5
   Recall    = 0.980519
   F1        = 0.073212


Total learning time: 2.005 seconds
Total inference time: 2.851 seconds
AUC ROC: 0.507954


Results scoring model
   AUC ROC   = 0.86
   AUC PR    = 0.768333
   CLL	      = -0.513252
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 1.09 seconds
Refined model CLL: -0.513252


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.507954
   AUC PR    = 0.023976
   CLL	      = -0.874882
   Precision = 0.038026 at threshold = 0.5
   Recall    = 0.980519
   F1        = 0.073212


Total learning time: 5.394 seconds
Total inference time: 2.851 seconds
AUC ROC: 0.507954
Total revision time: 5.394
Best scored revision CLL: -0.513252


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:07
{'Learning time': 5.394, 'Inference time': 2.851, 'AUC ROC': 0.507954, 'AUC PR': 0.023976, 'Recall': 0.980519, 'CLL': -0.874882, 'parameter_5': {'Learning time': 1.239, 'Inference time': 2.082, 'AUC ROC': 0.562346, 'AUC PR': 0.029973, 'Recall': 1.0, 'CLL': -0.778266, 'F1': 0.058201, 'Precision': [0.029973, 0.5]}, 'F1': 0.073212, 'Precision': [0.038026, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3151786576185065;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.23676009386434207;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.14601843541297985;  // std dev = 0,633, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.04102020654066907;  // std dev = 1,061, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.12420684288378518;  // std dev = 0,607, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.030961015168188832;  // std dev = 1,061, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.10508308022518834;  // std dev = 0,586, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.023405638316138577;  // std dev = 1,061, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.08852845187800205;  // std dev = 0,569, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.01771744116371936;  // std dev = 1,061, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.07433332603301446;  // std dev = 0,557, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0.013426032846250546;  // std dev = 1,061, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.773263
   AUC PR    = 0.068506
   CLL	      = -0.71081
   Precision = 0.03315 at threshold = 0.5
   Recall    = 0.980519
   F1        = 0.064133


Total learning time: 2.027 seconds
Total inference time: 2.264 seconds
AUC ROC: 0.773263


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 00:12:12
{'Learning time': 2.027, 'Inference time': 2.264, 'AUC ROC': 0.773263, 'AUC PR': 0.068506, 'Recall': 0.980519, 'CLL': -0.71081, 'F1': 0.064133, 'Precision': [0.03315, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.639346
   AUC PR    = 0.037505
   CLL	      = -0.261568
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.238 seconds
Total inference time: 1.374 seconds
AUC ROC: 0.639346


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 00:12:14
{'Learning time': 1.238, 'Inference time': 1.374, 'AUC ROC': 0.639346, 'AUC PR': 0.037505, 'Recall': 0.0, 'CLL': -0.261568, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.26991364098186527;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.2337836550996701;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.19697678246055136;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.16189848815690908;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.1303444240371668;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.10325226905662939;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.08080125457789766;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.06267194972365497;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.04829996903690906;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.0370533980540081;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.485857
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 1.414 seconds
Total inference time: 1.996 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.65
   AUC PR    = 0.72976
   CLL	      = -0.59634
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.3
   F1        = 0.461538


Total scoring time: 1.06 seconds
Parameter learned model CLL: -0.59634


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-08, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}]]
[{'': [1.4802973661668753e-16, 0.24221453287197234]}, {'': [0.0, 0.2422145328719722]}, {'': [3.700743415417188e-17, 0.2422145328719721]}, {'': [-3.700743415417188e-17, 0.2422145328719721]}, {'': [0.0, 0.2422145328719724]}, {'': [0.0, 0.24221453287197225]}, {'': [0.0, 0.24221453287197228]}, {'': [0.0, 0.24221453287197228]}, {'': [-4.625929269271485e-18, 0.2422145328719724]}, {'': [-2.3129646346357427e-18, 0.24221453287197245]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.3126943896449669;  // std dev = 0,498, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.32882249716937495;  // std dev = 1,009, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.1667945087684516;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3156735149828545;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.27706266541964003;  // std dev = 1,011, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.1448829431573806;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2634398979265597;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.22546101518608147;  // std dev = 1,012, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.12783980240582282;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2126300880321037;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.1783906862848835;  // std dev = 1,014, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.11425108565257079;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.16720310135371286;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.1383264051897626;  // std dev = 1,014, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.1031887045859254;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.129100295394955;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.1058431029707542;  // std dev = 1,015, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.09402297530370358;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.09850954484247065;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.08404412214935304;  // std dev = 0,917, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.027667529880157228;  // std dev = 0,499, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.07036121771401062;  // std dev = 0,909, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.0208859215572449;  // std dev = 0,499, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.05862876831685101;  // std dev = 0,903, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.01574990825446498;  // std dev = 0,499, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */


Results
   AUC ROC   = 0.821561
   AUC PR    = 0.552951
   CLL	      = -0.488721
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 2.64 seconds
Total inference time: 2.259 seconds
AUC ROC: 0.821561


Results scoring model
   AUC ROC   = 0.765
   AUC PR    = 0.797523
   CLL	      = -0.524178
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.3
   F1        = 0.461538


Total scoring time: 1.062 seconds
Refined model CLL: -0.524178


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.821561
   AUC PR    = 0.552951
   CLL	      = -0.488721
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 6.176000000000001 seconds
Total inference time: 2.259 seconds
AUC ROC: 0.821561
Total revision time: 6.176000000000001
Best scored revision CLL: -0.524178


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:26
{'Learning time': 6.176000000000001, 'Inference time': 2.259, 'AUC ROC': 0.821561, 'AUC PR': 0.552951, 'Recall': 0.467532, 'CLL': -0.488721, 'parameter_10': {'Learning time': 1.414, 'Inference time': 1.996, 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'CLL': -0.485857, 'F1': 0.637168, 'Precision': [1.0, 0.5]}, 'F1': 0.637168, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.42957750652808374;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.3688769765977055;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.3027909085849407;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.23934016640989336;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.18430382771628467;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.20228669220914652;  // std dev = 1,097, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.2530667838908109;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.1837317358936343;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.15967169335054043;  // std dev = 1,102, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.20826933537464645;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.13821345190776355;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.12409079413258146;  // std dev = 1,106, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.1760040692814553;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.10367811172597327;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.0954674113989646;  // std dev = 1,107, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.1519146350922046;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.07782731941710308;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.07797800096592263;  // std dev = 0,967, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.013221063988984467;  // std dev = 0,496, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */


Results
   AUC ROC   = 0.43381
   AUC PR    = 0.020898
   CLL	      = -0.650292
   Precision = 0.023969 at threshold = 0.5
   Recall    = 0.603896
   F1        = 0.046108


Total learning time: 2.274 seconds
Total inference time: 2.074 seconds
AUC ROC: 0.43381


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 00:12:30
{'Learning time': 2.274, 'Inference time': 2.074, 'AUC ROC': 0.43381, 'AUC PR': 0.020898, 'Recall': 0.603896, 'CLL': -0.650292, 'F1': 0.046108, 'Precision': [0.023969, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.42957750652808374;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */


Results
   AUC ROC   = 0.469405
   AUC PR    = 0.024501
   CLL	      = -0.250149
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.31 seconds
Total inference time: 1.362 seconds
AUC ROC: 0.469405


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 00:12:33
{'Learning time': 1.31, 'Inference time': 1.362, 'AUC ROC': 0.469405, 'AUC PR': 0.024501, 'Recall': 0.0, 'CLL': -0.250149, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.2812258581764354;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.24343481888732565;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.2047323048430412;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.16778925982029097;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.1346051315246625;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.1062110453196897;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.08278679559835075;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.06396363163531019;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.04911358160877256;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.03754608823819938;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.503035
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 1.476 seconds
Total inference time: 2.289 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.633333
   AUC PR    = 0.709873
   CLL	      = -0.608828
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.266667
   F1        = 0.421053


Total scoring time: 1.076 seconds
Parameter learned model CLL: -0.608828


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [2.519, 15, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [2.519, 15, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [2.519, 15, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [2.519, 15, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [2.519, 15, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [2.519, 15, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [2.519, 15, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [2.519, 15, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [2.519, 15, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [2.519, 15, 11]}]]
[{'': [0.0, 0.24408284023668594]}, {'': [0.0, 0.24408284023668642]}, {'': [0.0, 0.24408284023668653]}, {'': [0.0, 0.24408284023668647]}, {'': [0.0, 0.2440828402366864]}, {'': [0.0, 0.24408284023668617]}, {'': [0.0, 0.24408284023668625]}, {'': [0.0, 0.24408284023668653]}, {'': [0.0, 0.24408284023668647]}, {'': [0.0, 0.2440828402366862]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.4831489350995123;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2867203636709409;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.4136573287083126;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.24811816884741297;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.3366053739648666;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.20848477447886868;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.26297558544868993;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.17062637354018512;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.40865878503624425;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.06648080349719573;  // std dev = 0,499, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.307095953555103;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.05225267714742542;  // std dev = 0,499, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.23173196360451276;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.0408337408832054;  // std dev = 0,499, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.017265831941407468;  // std dev = 0,426, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.10260446725088032;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.17381696069477756;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.011169215066905585;  // std dev = 0,497, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.015833865976959204;  // std dev = 0,416, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.07713003696794526;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */


Results
   AUC ROC   = 0.826556
   AUC PR    = 0.558946
   CLL	      = -0.485447
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 4.306 seconds
Total inference time: 2.793 seconds
AUC ROC: 0.826556


Results scoring model
   AUC ROC   = 0.802222
   AUC PR    = 0.835521
   CLL	      = -0.489708
   Precision = 0.9 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.72


Total scoring time: 0.986 seconds
Refined model CLL: -0.489708


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826556
   AUC PR    = 0.558946
   CLL	      = -0.485447
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 7.844 seconds
Total inference time: 2.793 seconds
AUC ROC: 0.826556
Total revision time: 7.844
Best scored revision CLL: -0.489708


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:47
{'Learning time': 7.844, 'Inference time': 2.793, 'AUC ROC': 0.826556, 'AUC PR': 0.558946, 'Recall': 0.714286, 'CLL': -0.485447, 'parameter_15': {'Learning time': 1.476, 'Inference time': 2.289, 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'CLL': -0.503035, 'F1': 0.637168, 'Precision': [1.0, 0.5]}, 'F1': 0.272277, 'Precision': [0.168196, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.5248156017661789;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return 0.28672036367094095;  // std dev = 0,495, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.448295606241962;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.18045325972401555;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.34895850498186676;  // std dev = 0,499, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.36236334632262296;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.15528555853817805;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2915287647601988;  // std dev = 0,499, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.2807538536965854;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.13598818287634376;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.23473816372848622;  // std dev = 0,499, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.40295689169446186;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.12078613851430267;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.11657669461824959;  // std dev = 0,511, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.3025648613513457;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.10853506765781916;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.08952468843794048;  // std dev = 0,511, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2295859357890377;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.0984712022735706;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.06824282374983044;  // std dev = 0,512, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.022050701976354576;  // std dev = 0,424, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return 0.07946075441652022;  // std dev = 0,457, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.01710847708806794;  // std dev = 0,424, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.09679639157647409;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.09999943750902944;  // std dev = 0,499, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.16920519110893592;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.0886577805856542;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.01137256883399019;  // std dev = 0,508, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */


Results
   AUC ROC   = 0.629016
   AUC PR    = 0.056244
   CLL	      = -0.598093
   Precision = 0.027943 at threshold = 0.5
   Recall    = 0.396104
   F1        = 0.052204


Total learning time: 7.435 seconds
Total inference time: 2.599 seconds
AUC ROC: 0.629016


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 00:12:57
{'Learning time': 7.435, 'Inference time': 2.599, 'AUC ROC': 0.629016, 'AUC PR': 0.056244, 'Recall': 0.396104, 'CLL': -0.598093, 'F1': 0.052204, 'Precision': [0.027943, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.5248156017661789;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3875606998053947;  // std dev = 0,499, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */


Results
   AUC ROC   = 0.567727
   AUC PR    = 0.029284
   CLL	      = -0.246405
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.012 seconds
Total inference time: 1.32 seconds
AUC ROC: 0.567727


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 00:13:01
{'Learning time': 2.012, 'Inference time': 1.32, 'AUC ROC': 0.567727, 'AUC PR': 0.029284, 'Recall': 0.0, 'CLL': -0.246405, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.26991364098186527;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.2337836550996707;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.19697678246055098;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.16189848815690908;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.1303444240371668;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.10325226905662921;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.0808012545778974;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.06267194972365514;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.0482999690369091;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.037053398054008216;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.485857
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 1.488 seconds
Total inference time: 2.246 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.65
   AUC PR    = 0.727043
   CLL	      = -0.59634
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.3
   F1        = 0.461538


Total scoring time: 1.112 seconds
Parameter learned model CLL: -0.59634


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.27e-09, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.87, 20, 14]}]]
[{'': [-1.4802973661668753e-16, 0.2422145328719718]}, {'': [7.401486830834377e-17, 0.2422145328719724]}, {'': [-7.401486830834377e-17, 0.24221453287197275]}, {'': [7.401486830834377e-17, 0.2422145328719725]}, {'': [-3.700743415417188e-17, 0.24221453287197198]}, {'': [9.25185853854297e-18, 0.2422145328719724]}, {'': [-9.25185853854297e-18, 0.24221453287197234]}, {'': [4.625929269271485e-18, 0.2422145328719724]}, {'': [-4.625929269271485e-18, 0.24221453287197225]}, {'': [0.0, 0.2422145328719724]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.6081489350995123;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.29564893509951234;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5170719622367218;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.2557225255975429;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.41257245288266;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.214562364478699;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3151786576185065;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.038428662236904595;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.17520344886901457;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.23676009386434194;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.03315494592188569;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.13992299045211237;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.17806945427207505;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.02849510592572117;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.06343105681806517;  // std dev = 0,441, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.13513671764223462;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.024408230135271946;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.09025965672833822;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.09575075493544111;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.103671751136855;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.020846889108740264;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.0831171778096859;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07389652665830537;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.08034833303035915;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.017760671541598484;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07699846115847944;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.05663099979142323;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.06282214181758176;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.015098879183171288;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07170135000501567;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.04318987944705152;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */


Results
   AUC ROC   = 0.888242
   AUC PR    = 0.568489
   CLL	      = -0.387108
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 6.501 seconds
Total inference time: 3.125 seconds
AUC ROC: 0.888242


Results scoring model
   AUC ROC   = 0.83875
   AUC PR    = 0.854262
   CLL	      = -0.479023
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.705882


Total scoring time: 1.085 seconds
Refined model CLL: -0.479023


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.888242
   AUC PR    = 0.568489
   CLL	      = -0.387108
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 10.186 seconds
Total inference time: 3.125 seconds
AUC ROC: 0.888242
Total revision time: 10.186
Best scored revision CLL: -0.479023


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 00:13:17
{'Learning time': 10.186, 'Inference time': 3.125, 'AUC ROC': 0.888242, 'AUC PR': 0.568489, 'Recall': 0.714286, 'CLL': -0.387108, 'parameter_20': {'Learning time': 1.488, 'Inference time': 2.246, 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'CLL': -0.485857, 'F1': 0.637168, 'Precision': [1.0, 0.5]}, 'F1': 0.272277, 'Precision': [0.168196, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.6359267128772901;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.42957750652808374;  // std dev = 0,495, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5398498420741675;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.2738151275349949;  // std dev = 0,486, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.4289562725350853;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.22879502250242018;  // std dev = 0,483, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.32644004768013724;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.038428662236904595;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.19166292476700475;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.27571885979810606;  // std dev = 0,495, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.24503149911444544;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return -0.16370658187393639;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.03315494592188569;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.21527391518161054;  // std dev = 0,495, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.18482045881522163;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return -0.1425084019832941;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.02849510592572117;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.16453436450739675;  // std dev = 0,495, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.1410881440687913;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return -0.12596472547648652;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.024408230135271946;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.12430146162305376;  // std dev = 0,495, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.10912169797108993;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return -0.11273702221304234;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.020846889108740264;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.09341032851924828;  // std dev = 0,495, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.08540523411308514;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return -0.10194292089513138;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.017760671541598484;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.0700719282090253;  // std dev = 0,495, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.0675192639640355;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return -0.09298139931256098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.015098879183171288;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.05256290320915365;  // std dev = 0,495, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */


Results
   AUC ROC   = 0.784405
   AUC PR    = 0.074355
   CLL	      = -0.492519
   Precision = 0.051017 at threshold = 0.5
   Recall    = 0.961039
   F1        = 0.09689


Total learning time: 9.729 seconds
Total inference time: 2.307 seconds
AUC ROC: 0.784405


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 00:13:29
{'Learning time': 9.729, 'Inference time': 2.307, 'AUC ROC': 0.784405, 'AUC PR': 0.074355, 'Recall': 0.961039, 'CLL': -0.492519, 'F1': 0.09689, 'Precision': [0.051017, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.6359267128772901;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.31968739663797385;  // std dev = 0,499, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */


Results
   AUC ROC   = 0.706343
   AUC PR    = 0.064957
   CLL	      = -0.237694
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.629 seconds
Total inference time: 1.551 seconds
AUC ROC: 0.706343


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 00:13:34
{'Learning time': 2.629, 'Inference time': 1.551, 'AUC ROC': 0.706343, 'AUC PR': 0.064957, 'Recall': 0.0, 'CLL': -0.237694, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.2629108398614171;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.2278030810333252;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.1921555713188067;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.158217972030257;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.12766592860711473;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.10138035857331136;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.07953782582861654;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.061846372934082086;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.047778686452923595;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.03673792756696574;  // std dev = 3,181, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.475393
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 1.457 seconds
Total inference time: 2.369 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.66
   AUC PR    = 0.737117
   CLL	      = -0.588626
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.32
   F1        = 0.484848


Total scoring time: 1.056 seconds
Parameter learned model CLL: -0.588626


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [3.181, 25, 17]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 8], 'false': [3.181, 25, 17]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [3.181, 25, 17]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 8], 'false': [3.181, 25, 17]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [3.181, 25, 17]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.49e-08, 0, 8], 'false': [3.181, 25, 17]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [3.181, 25, 17]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 8], 'false': [3.181, 25, 17]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [3.181, 25, 17]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [3.181, 25, 17]}]]
[{'': [-2.220446049250313e-16, 0.24092970521541904]}, {'': [1.1102230246251565e-16, 0.24092970521541945]}, {'': [-1.1102230246251565e-16, 0.24092970521541962]}, {'': [1.1102230246251565e-16, 0.24092970521541923]}, {'': [-4.163336342344337e-17, 0.24092970521541948]}, {'': [2.7755575615628914e-17, 0.24092970521541898]}, {'': [-2.0816681711721685e-17, 0.2409297052154198]}, {'': [6.938893903907228e-18, 0.2409297052154192]}, {'': [-3.469446951953614e-18, 0.24092970521541948]}, {'': [0.0, 0.2409297052154197]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.6581489350995123;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.2391013160518933;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5580193346218546;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return 8.835646163369372E-4;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.2074346514099043;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.44194861002444086;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return 7.758973011973702E-4;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.17564775908399566;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.335411394950943;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return 6.8129367991872E-4;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.14550731772537298;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.25176837314502193;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return 5.981815657342761E-4;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.11831567107861887;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19047961032437172;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return 5.251750232105731E-4;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.0947689977225805;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14620194507639933;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return 4.6105298554669334E-4;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.07502403390026863;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11389369465607464;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07208634773450524;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.06364021957039333;  // std dev = 2,239, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08989956180301868;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05655247953287268;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.051368663990423814;  // std dev = 2,238, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.07174810215160456;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.04466389204352539;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.04123294418283266;  // std dev = 2,237, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.899035
   AUC PR    = 0.570325
   CLL	      = -0.396596
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 7.714 seconds
Total inference time: 3.634 seconds
AUC ROC: 0.899035


Results scoring model
   AUC ROC   = 0.8584
   AUC PR    = 0.875745
   CLL	      = -0.462601
   Precision = 0.888889 at threshold = 0.5
   Recall    = 0.64
   F1        = 0.744186


Total scoring time: 1.198 seconds
Refined model CLL: -0.462601


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899035
   AUC PR    = 0.570325
   CLL	      = -0.396596
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 11.425 seconds
Total inference time: 3.634 seconds
AUC ROC: 0.899035
Total revision time: 11.425
Best scored revision CLL: -0.462601


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 00:13:52
{'Learning time': 11.425, 'Inference time': 3.634, 'parameter_25': {'Learning time': 1.457, 'Inference time': 2.369, 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'CLL': -0.475393, 'F1': 0.637168, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.899035, 'AUC PR': 0.570325, 'Recall': 0.714286, 'CLL': -0.396596, 'F1': 0.272277, 'Precision': [0.168196, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6763307532813305;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5728505077589573;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return 8.835646163369372E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.45250734201965837;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return 7.758973011973702E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.34273989085368034;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return 6.8129367991872E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.24467760512178605;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2573771265051453;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return 5.981815657342761E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.16955341604285068;  // std dev = 0,487, 28,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.19529825339842233;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return 5.251750232105731E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.03181397347357496;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.14675474979502348;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15063646694077695;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return 4.6105298554669334E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.02633848842985654;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1103830794984807;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11808890552787804;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return 4.0474016800403E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.07408776609138536;  // std dev = 0,485, 28,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09389442014327215;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return 0.008418520749232411;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return 3.552900687252162E-4;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.06430100396228092;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07554408412491875;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return 3.118698576379649E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.006872726739596491;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.04827417997672134;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.804917
   AUC PR    = 0.077769
   CLL	      = -0.499637
   Precision = 0.05761 at threshold = 0.5
   Recall    = 0.961039
   F1        = 0.108704


Total learning time: 16.707 seconds
Total inference time: 3.28 seconds
AUC ROC: 0.804917


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 00:14:13
{'Learning time': 16.707, 'Inference time': 3.28, 'AUC ROC': 0.804917, 'AUC PR': 0.077769, 'Recall': 0.961039, 'CLL': -0.499637, 'F1': 0.108704, 'Precision': [0.05761, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6763307532813305;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return 0.0010060779566550668;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.804917
   AUC PR    = 0.077769
   CLL	      = -0.22648
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.679 seconds
Total inference time: 1.622 seconds
AUC ROC: 0.804917


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 00:14:18
{'Learning time': 3.679, 'Inference time': 1.622, 'AUC ROC': 0.804917, 'AUC PR': 0.077769, 'Recall': 0.0, 'CLL': -0.22648, 'F1': nan, 'Precision': [nan, 0.5]}


