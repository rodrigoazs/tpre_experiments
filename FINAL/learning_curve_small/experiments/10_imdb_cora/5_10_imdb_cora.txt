Starting experiment #5 for 10_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.14185106490048907;  // std dev = 0,000, 690,000 (wgt'ed) examples reached here.  /* #neg=690 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.12544463852839238;  // std dev = 0,000, 753,000 (wgt'ed) examples reached here.  /* #neg=753 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360626;  // std dev = 4,94e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.11231637819360646;  // std dev = 0,000, 684,000 (wgt'ed) examples reached here.  /* #neg=684 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.10159632948783513;  // std dev = 4,48e-07, 721,000 (wgt'ed) examples reached here.  /* #neg=721 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.0926912761892619;  // std dev = 0,000, 660,000 (wgt'ed) examples reached here.  /* #neg=660 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.08518475138839675;  // std dev = 1,40e-07, 714,000 (wgt'ed) examples reached here.  /* #neg=714 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.0787767547310928;  // std dev = 0,000, 704,000 (wgt'ed) examples reached here.  /* #neg=704 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07324622576333654;  // std dev = 2,35e-07, 703,000 (wgt'ed) examples reached here.  /* #neg=703 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420267;  // std dev = 3,25e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.06842697784420261;  // std dev = 1,80e-07, 731,000 (wgt'ed) examples reached here.  /* #neg=731 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06419184008202532;  // std dev = 2,51e-07, 706,000 (wgt'ed) examples reached here.  /* #neg=706 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 536
Target train neg examples: 18889

Target test facts examples: 7463
Target test pos	 examples: 162
Target test neg examples: 9107

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.35555573927149886;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2926148461096881;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.23214124828648122;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.17942003892665268;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.13647857812921954;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.10293424750437877;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07732947852152008;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05801086896812466;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.0435105023222711;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.547601
   AUC PR    = 0.019281
   CLL	      = -0.675055
   Precision = 0.019281 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.037833


Total learning time: 1.439 seconds
Total inference time: 2.549 seconds
AUC ROC: 0.547601


Results scoring model
   AUC ROC   = 0.6
   AUC PR    = 0.555556
   CLL	      = -0.626428
   Precision = 0.555556 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.714286


Total scoring time: 1.103 seconds
Parameter learned model CLL: -0.626428


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.491, 4, 5], 'false': [0.0, 1, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.491, 4, 5], 'false': [0.0, 1, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.491, 4, 5], 'false': [0.0, 1, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.491, 4, 5], 'false': [0.0, 1, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.491, 4, 5], 'false': [0.0, 1, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.491, 4, 5], 'false': [0.0, 1, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.491, 4, 5], 'false': [0.0, 1, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.491, 4, 5], 'false': [0.0, 1, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.491, 4, 5], 'false': [0.0, 1, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.491, 4, 5], 'false': [0.0, 1, 0]}]]
[{'': [0.2469135802469134, 0.0]}, {'': [0.2469135802469136, 0.0]}, {'': [0.24691358024691348, 0.0]}, {'': [0.24691358024691348, 0.0]}, {'': [0.2469135802469136, 0.0]}, {'': [0.24691358024691354, 0.0]}, {'': [0.24691358024691365, 0.0]}, {'': [0.2469135802469136, 0.0]}, {'': [0.24691358024691354, 0.0]}, {'': [0.2469135802469136, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.05187663198536933;  // std dev = 0,557, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.24693321610918906;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.24543841328508753;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.04399625185751995;  // std dev = 1,133, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.013068964886253153;  // std dev = 0,520, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.18813033248412148;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.20075244037984885;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.006199178842007547;  // std dev = 1,112, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.17046282798492318;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.004841884296988415;  // std dev = 1,112, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.53687
   AUC PR    = 0.01702
   CLL	      = -1.008009
   Precision = 0.019637 at threshold = 0.5
   Recall    = 0.41358
   F1        = 0.037493


Total learning time: 2.197 seconds
Total inference time: 3.425 seconds
AUC ROC: 0.53687


Results scoring model
   AUC ROC   = 0.92
   AUC PR    = 0.931429
   CLL	      = -0.413428
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 1.058 seconds
Refined model CLL: -0.413428


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.53687
   AUC PR    = 0.01702
   CLL	      = -1.008009
   Precision = 0.019637 at threshold = 0.5
   Recall    = 0.41358
   F1        = 0.037493


Total learning time: 5.797 seconds
Total inference time: 3.425 seconds
AUC ROC: 0.53687
Total revision time: 5.797
Best scored revision CLL: -0.413428


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 01:55:30
{'Learning time': 5.797, 'Inference time': 3.425, 'AUC ROC': 0.53687, 'AUC PR': 0.01702, 'Recall': 0.41358, 'CLL': -1.008009, 'parameter_5': {'Learning time': 1.439, 'Inference time': 2.549, 'AUC ROC': 0.547601, 'AUC PR': 0.019281, 'Recall': 1.0, 'CLL': -0.675055, 'F1': 0.037833, 'Precision': [0.019281, 0.5]}, 'F1': 0.037493, 'Precision': [0.019637, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.1438632208137979;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.3675715392205318;  // std dev = 0,964, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0.2397187297348978;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.6397500658037023;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.08452711585793664;  // std dev = 0,456, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.4836382089719164;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.07060727932854935;  // std dev = 0,456, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.3660712107201769;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.05845399996572138;  // std dev = 0,456, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.2859410278358847;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.04803190664291378;  // std dev = 0,456, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.2312758590597579;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.03922530405505288;  // std dev = 0,456, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.1927255024438448;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.03187245415384056;  // std dev = 0,456, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.012384383470222814;  // std dev = 0,484, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0.14719353318540862;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.16620882998134134;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.005928704461207064;  // std dev = 0,451, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Results
   AUC ROC   = 0.490895
   AUC PR    = 0.015521
   CLL	      = -0.980507
   Precision = 0.017962 at threshold = 0.5
   Recall    = 0.41358
   F1        = 0.03443


Total learning time: 2.152 seconds
Total inference time: 2.043 seconds
AUC ROC: 0.490895


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 01:55:35
{'Learning time': 2.152, 'Inference time': 2.043, 'AUC ROC': 0.490895, 'AUC PR': 0.015521, 'Recall': 0.41358, 'CLL': -0.980507, 'F1': 0.03443, 'Precision': [0.017962, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.1438632208137979;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Results
   AUC ROC   = 0.505681
   AUC PR    = 0.017778
   CLL	      = -0.260663
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.321 seconds
Total inference time: 1.584 seconds
AUC ROC: 0.505681


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 01:55:38
{'Learning time': 1.321, 'Inference time': 1.584, 'AUC ROC': 0.505681, 'AUC PR': 0.017778, 'Recall': 0.0, 'CLL': -0.260663, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.26991364098186527;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.2337836550996701;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.19697678246055136;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.16189848815690908;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.1303444240371668;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.10325226905662939;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.08080125457789766;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.06267194972365497;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.04829996903690906;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.0370533980540081;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.485968
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 1.541 seconds
Total inference time: 2.122 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.65
   AUC PR    = 0.72976
   CLL	      = -0.59634
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.3
   F1        = 0.461538


Total scoring time: 0.977 seconds
Parameter learned model CLL: -0.59634


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-08, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.029, 10, 7]}]]
[{'': [1.4802973661668753e-16, 0.24221453287197234]}, {'': [0.0, 0.2422145328719722]}, {'': [3.700743415417188e-17, 0.2422145328719721]}, {'': [-3.700743415417188e-17, 0.2422145328719721]}, {'': [0.0, 0.2422145328719724]}, {'': [0.0, 0.24221453287197225]}, {'': [0.0, 0.24221453287197228]}, {'': [0.0, 0.24221453287197228]}, {'': [-4.625929269271485e-18, 0.2422145328719724]}, {'': [-2.3129646346357427e-18, 0.24221453287197245]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.15814893509951225;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1377866547829789;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.11817988627418433;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.09993441797327969;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.08346091377439459;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.06896730092307753;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.05648826586059508;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.018429497221670445;  // std dev = 0,405, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.07450712354149933;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.04242370201338134;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.06952952778728377;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.03422792533296491;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */


Results
   AUC ROC   = 0.765503
   AUC PR    = 0.088835
   CLL	      = -0.948825
   Precision = 0.030439 at threshold = 0.5
   Recall    = 0.709877
   F1        = 0.058376


Total learning time: 2.879 seconds
Total inference time: 3.172 seconds
AUC ROC: 0.765503


Results scoring model
   AUC ROC   = 0.895
   AUC PR    = 0.922685
   CLL	      = -0.360899
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.823529


Total scoring time: 1.134 seconds
Refined model CLL: -0.360899


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.765503
   AUC PR    = 0.088835
   CLL	      = -0.948825
   Precision = 0.030439 at threshold = 0.5
   Recall    = 0.709877
   F1        = 0.058376


Total learning time: 6.531000000000001 seconds
Total inference time: 3.172 seconds
AUC ROC: 0.765503
Total revision time: 6.531000000000001
Best scored revision CLL: -0.360899


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 01:55:50
{'Learning time': 6.531000000000001, 'Inference time': 3.172, 'AUC ROC': 0.765503, 'AUC PR': 0.088835, 'Recall': 0.709877, 'CLL': -0.948825, 'parameter_10': {'Learning time': 1.541, 'Inference time': 2.122, 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'CLL': -0.485968, 'F1': 0.578947, 'Precision': [1.0, 0.5]}, 'F1': 0.058376, 'Precision': [0.030439, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.22178529873587596;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.19258789115538322;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.16352953408429413;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.13606878407651105;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.11126948691064746;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.08970341513165919;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.07150513066226619;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.056501932792643365;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.04434895786191332;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.034633754785669255;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */


Results
   AUC ROC   = 0.542393
   AUC PR    = 0.018711
   CLL	      = -1.033183
   Precision = 0.017962 at threshold = 0.5
   Recall    = 0.41358
   F1        = 0.03443


Total learning time: 2.693 seconds
Total inference time: 2.272 seconds
AUC ROC: 0.542393


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 01:55:56
{'Learning time': 2.693, 'Inference time': 2.272, 'AUC ROC': 0.542393, 'AUC PR': 0.018711, 'Recall': 0.41358, 'CLL': -1.033183, 'F1': 0.03443, 'Precision': [0.017962, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.22178529873587596;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */


Results
   AUC ROC   = 0.542393
   AUC PR    = 0.018711
   CLL	      = -0.258309
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.276 seconds
Total inference time: 1.623 seconds
AUC ROC: 0.542393


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 01:55:59
{'Learning time': 1.276, 'Inference time': 1.623, 'AUC ROC': 0.542393, 'AUC PR': 0.018711, 'Recall': 0.0, 'CLL': -0.258309, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.23314893509951237;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.202334239218108;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.1714928196152892;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.14228146899184058;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.11591746118730585;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.09305316265470505;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.07383827012230793;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.05807372983129966;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.04537020502570499;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.03526821680925496;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.43161
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 1.492 seconds
Total inference time: 2.616 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.777338
   CLL	      = -0.555937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 1.067 seconds
Parameter learned model CLL: -0.555937


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.27e-09, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}]]
[{'': [-1.4802973661668753e-16, 0.23437500000000003]}, {'': [7.401486830834377e-17, 0.2343750000000001]}, {'': [-7.401486830834377e-17, 0.2343750000000003]}, {'': [7.401486830834377e-17, 0.23437499999999997]}, {'': [-3.700743415417188e-17, 0.23437499999999986]}, {'': [9.25185853854297e-18, 0.23437499999999997]}, {'': [-9.25185853854297e-18, 0.23437499999999986]}, {'': [4.625929269271485e-18, 0.2343750000000001]}, {'': [-4.625929269271485e-18, 0.2343749999999999]}, {'': [0.0, 0.2343749999999998]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.16584124279182003;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.48767788391726297;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.14443085832463678;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.3912569620992536;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.0681894737390936;  // std dev = 0,416, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.3005711547884894;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.11929679411417388;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.11327178734365605;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.22629823971521876;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.10732096996787494;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.09491526479970121;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.16984358676510128;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.09746413245604076;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.07858370633903909;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.24718082593008658;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.08922065164902773;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.01794123945898498;  // std dev = 0,475, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.041972501041440236;  // std dev = 0,418, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.1792049900985749;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.08545503715378908;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.006509886633456692;  // std dev = 0,476, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.1398530358001476;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.07900879481323168;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.005249746497650408;  // std dev = 0,476, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */


Results
   AUC ROC   = 0.782771
   AUC PR    = 0.478939
   CLL	      = -0.538711
   Precision = 0.030439 at threshold = 0.5
   Recall    = 0.709877
   F1        = 0.058376


Total learning time: 4.08 seconds
Total inference time: 3.16 seconds
AUC ROC: 0.782771


Results scoring model
   AUC ROC   = 0.873333
   AUC PR    = 0.898561
   CLL	      = -0.433612
   Precision = 0.846154 at threshold = 0.5
   Recall    = 0.733333
   F1        = 0.785714


Total scoring time: 1.173 seconds
Refined model CLL: -0.433612


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.782771
   AUC PR    = 0.478939
   CLL	      = -0.538711
   Precision = 0.030439 at threshold = 0.5
   Recall    = 0.709877
   F1        = 0.058376


Total learning time: 7.812 seconds
Total inference time: 3.16 seconds
AUC ROC: 0.782771
Total revision time: 7.812
Best scored revision CLL: -0.433612


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 01:56:13
{'Learning time': 7.812, 'Inference time': 3.16, 'AUC ROC': 0.782771, 'AUC PR': 0.478939, 'Recall': 0.709877, 'CLL': -0.538711, 'parameter_15': {'Learning time': 1.492, 'Inference time': 2.616, 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'CLL': -0.43161, 'F1': 0.578947, 'Precision': [1.0, 0.5]}, 'F1': 0.058376, 'Precision': [0.030439, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.6763307532813305;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.25814893509951237;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.6546686895771392;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.19441709417742042;  // std dev = 0,488, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.4425813893549615;  // std dev = 0,367, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.19370979718071743;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.3350332649383311;  // std dev = 0,365, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1601904948832403;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.25203340736561325;  // std dev = 0,364, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.129785324759431;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.19171805566679784;  // std dev = 0,365, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1034431975287676;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.14823156088111708;  // std dev = 0,366, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.08141998287311007;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.18892780427092074;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.021500384665950372;  // std dev = 0,501, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.15170774860558073;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.01666488190245064;  // std dev = 0,501, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.1242214938754634;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.012896657363264823;  // std dev = 0,501, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */


Results
   AUC ROC   = 0.597265
   AUC PR    = 0.038121
   CLL	      = -0.630665
   Precision = 0.018616 at threshold = 0.5
   Recall    = 0.41358
   F1        = 0.035629


Total learning time: 11.315 seconds
Total inference time: 2.875 seconds
AUC ROC: 0.597265


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 01:56:28
{'Learning time': 11.315, 'Inference time': 2.875, 'AUC ROC': 0.597265, 'AUC PR': 0.038121, 'Recall': 0.41358, 'CLL': -0.630665, 'F1': 0.035629, 'Precision': [0.018616, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.6763307532813305;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.25814893509951237;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */


Results
   AUC ROC   = 0.542393
   AUC PR    = 0.018711
   CLL	      = -0.242706
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.311 seconds
Total inference time: 1.546 seconds
AUC ROC: 0.542393


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 01:56:32
{'Learning time': 2.311, 'Inference time': 1.546, 'AUC ROC': 0.542393, 'AUC PR': 0.018711, 'Recall': 0.0, 'CLL': -0.242706, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.2129876447769317;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.1850340567651117;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.15733633666574967;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.13120969089740736;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.10760714862133729;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.08704103420637159;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.06963300017480052;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.05522774314863855;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.04351183703267405;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.03410706771080944;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.403296
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 1.542 seconds
Total inference time: 2.348 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.725
   AUC PR    = 0.799619
   CLL	      = -0.533842
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.45
   F1        = 0.62069


Total scoring time: 1.129 seconds
Parameter learned model CLL: -0.533842


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.33e-08, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.83e-08, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}]]
[{'': [-2.9605947323337506e-16, 0.22892819979188297]}, {'': [9.868649107779169e-17, 0.2289281997918835]}, {'': [-1.4802973661668753e-16, 0.22892819979188325]}, {'': [1.2335811384723962e-16, 0.2289281997918837]}, {'': [-3.700743415417188e-17, 0.2289281997918834]}, {'': [3.700743415417188e-17, 0.22892819979188345]}, {'': [-2.4671622769447922e-17, 0.22892819979188314]}, {'': [6.1679056923619804e-18, 0.2289281997918836]}, {'': [-3.0839528461809902e-18, 0.22892819979188334]}, {'': [0.0, 0.22892819979188359]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.6081489350995123;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.17064893509951234;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5170719622367218;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1485807217799291;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.41257245288266;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.18531109171149804;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1259817820574177;  // std dev = 1,837, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3151786576185065;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.1589473248563136;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1077549317533561;  // std dev = 1,833, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.23676009386434194;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.13883155507933695;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09099752521299542;  // std dev = 1,831, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.17806945427207505;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.12304987985443917;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07600004212311251;  // std dev = 1,828, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.13513671764223462;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.15888316916269413;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08583648009773588;  // std dev = 1,794, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.103671751136855;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.1387818468008478;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07072783462513474;  // std dev = 1,792, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08034833303035915;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.12301037743216672;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0577874813690156;  // std dev = 1,790, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.06282214181758176;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.11034353828677869;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.04689197893899719;  // std dev = 1,788, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.852874
   AUC PR    = 0.484927
   CLL	      = -0.305543
   Precision = 0.120729 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.203846


Total learning time: 6.971 seconds
Total inference time: 3.558 seconds
AUC ROC: 0.852874


Results scoring model
   AUC ROC   = 0.91
   AUC PR    = 0.917564
   CLL	      = -0.389721
   Precision = 0.882353 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.810811


Total scoring time: 1.167 seconds
Refined model CLL: -0.389721


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.852874
   AUC PR    = 0.484927
   CLL	      = -0.305543
   Precision = 0.120729 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.203846


Total learning time: 10.809 seconds
Total inference time: 3.558 seconds
AUC ROC: 0.852874
Total revision time: 10.809
Best scored revision CLL: -0.389721


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 01:56:50
{'Learning time': 10.809, 'Inference time': 3.558, 'AUC ROC': 0.852874, 'AUC PR': 0.484927, 'Recall': 0.654321, 'CLL': -0.305543, 'parameter_20': {'Learning time': 1.542, 'Inference time': 2.348, 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'CLL': -0.403296, 'F1': 0.578947, 'Precision': [1.0, 0.5]}, 'F1': 0.203846, 'Precision': [0.120729, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7043027812533584;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3875606998053947;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5956068723141557;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2647111444300879;  // std dev = 0,488, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.46863440886780433;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.15747456208781327;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.21216007472628468;  // std dev = 0,476, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3540171821738477;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.13768947411171278;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.13527104218606512;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.24761532647346757;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2662055261992429;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.10276719594058052;  // std dev = 0,444, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2030717105018897;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.13151384934954813;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.13359533227573292;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.17167149314076127;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15792789436671026;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.11720656733419832;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.11887446436498687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13134195045696667;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12508565429655716;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.10697622818898832;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.10561273608439016;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09949043094100955;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10063530397647755;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.09717784903710026;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09604414230832042;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07495559645611918;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08201840165050935;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.08802298847801589;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08897939940460237;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.056317271978653875;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.766794
   AUC PR    = 0.050206
   CLL	      = -0.430093
   Precision = 0.06988 at threshold = 0.5
   Recall    = 0.358025
   F1        = 0.116935


Total learning time: 15.416 seconds
Total inference time: 3.488 seconds
AUC ROC: 0.766794


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 01:57:09
{'Learning time': 15.416, 'Inference time': 3.488, 'AUC ROC': 0.766794, 'AUC PR': 0.050206, 'Recall': 0.358025, 'CLL': -0.430093, 'F1': 0.116935, 'Precision': [0.06988, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7043027812533584;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3875606998053947;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.757677
   AUC PR    = 0.049917
   CLL	      = -0.203686
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.592 seconds
Total inference time: 1.795 seconds
AUC ROC: 0.757677


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 01:57:14
{'Learning time': 3.592, 'Inference time': 1.795, 'AUC ROC': 0.757677, 'AUC PR': 0.049917, 'Recall': 0.0, 'CLL': -0.203686, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.21712329407387132;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.18858590291629596;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.16025072096919057;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.13349925975782642;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.10933578465970169;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.08830023309949626;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.07052043384242647;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.05583321527207684;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.04391069237466862;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.034358795335119346;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */


Results
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.409018
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total learning time: 1.545 seconds
Total inference time: 2.477 seconds
AUC ROC: 0.703704


Results scoring model
   AUC ROC   = 0.72
   AUC PR    = 0.794841
   CLL	      = -0.538373
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44
   F1        = 0.611111


Total scoring time: 1.075 seconds
Parameter learned model CLL: -0.538373


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.27e-09, 0, 11], 'false': [2.996, 25, 14]}]]
[{'': [-1.6148698540002277e-16, 0.23011176857330654]}, {'': [1.6148698540002277e-16, 0.2301117685733073]}, {'': [-2.0185873175002846e-16, 0.23011176857330662]}, {'': [1.6148698540002277e-16, 0.2301117685733073]}, {'': [-6.055761952500853e-17, 0.23011176857330676]}, {'': [4.0371746350005693e-17, 0.23011176857330723]}, {'': [-2.5232341468753557e-17, 0.23011176857330662]}, {'': [5.046468293750712e-18, 0.23011176857330717]}, {'': [5.046468293750712e-18, 0.2301117685733071]}, {'': [2.523234146875356e-18, 0.23011176857330723]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.6359267128772901;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.16249676118646889;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5398498420741675;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.16280508366399113;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.19466700536312892;  // std dev = 2,109, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4289562725350853;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.1418135371530159;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.16743423488139958;  // std dev = 2,106, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.32644004768013724;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.12541493311713212;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.14116667958039372;  // std dev = 2,103, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.24503149911444544;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.19176485255658524;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10086383635400485;  // std dev = 2,096, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.18482045881522163;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.12274669326087273;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.10729866569344751;  // std dev = 2,075, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1410881440687913;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.17901292859416904;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07345825252504826;  // std dev = 2,068, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.10912169797108993;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.11753723719395437;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.15419611389405674;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.13861531925433734;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08540523411308514;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.13513976526063723;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.04345063992399785;  // std dev = 2,040, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.0675192639640355;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.11006787308216513;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.10146996308515534;  // std dev = 0,065, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.08951905901402553;  // std dev = 0,483, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */


Results
   AUC ROC   = 0.852874
   AUC PR    = 0.484927
   CLL	      = -0.336219
   Precision = 0.120729 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.203846


Total learning time: 9.056 seconds
Total inference time: 4.222 seconds
AUC ROC: 0.852874


Results scoring model
   AUC ROC   = 0.916
   AUC PR    = 0.921073
   CLL	      = -0.376006
   Precision = 0.9 at threshold = 0.5
   Recall    = 0.72
   F1        = 0.8


Total scoring time: 1.25 seconds
Refined model CLL: -0.376006


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.852874
   AUC PR    = 0.484927
   CLL	      = -0.336219
   Precision = 0.120729 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.203846


Total learning time: 12.925999999999998 seconds
Total inference time: 4.222 seconds
AUC ROC: 0.852874
Total revision time: 12.925999999999998
Best scored revision CLL: -0.376006


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 01:57:35
{'Learning time': 12.925999999999998, 'Inference time': 4.222, 'parameter_25': {'Learning time': 1.545, 'Inference time': 2.477, 'AUC ROC': 0.703704, 'AUC PR': 0.43503, 'Recall': 0.407407, 'CLL': -0.409018, 'F1': 0.578947, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.852874, 'AUC PR': 0.484927, 'Recall': 0.654321, 'CLL': -0.336219, 'F1': 0.203846, 'Precision': [0.120729, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.44905802600860323;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6045267906174346;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.21498023893064688;  // std dev = 0,468, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4749335700127619;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.15098827318197452;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.15098827318197452;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.34784652829879137;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3584548159137825;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.13263497541595473;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.21510933785419942;  // std dev = 0,476, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.26974781327936176;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.1593932194588462;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.11810550697332912;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.23036556492175747;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2062525881598365;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.13917693090286062;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.10634801144884368;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.17574083234172033;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16095555079641383;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.09665578668148844;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.12332427382842766;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1325373724992081;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12802275604229368;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.08853918512614292;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.11059830843226617;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09949877052054665;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10349083403071092;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.08164956490012802;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.10017852899275234;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07463067814336703;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.0847844074826777;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.07573264052722627;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.03332757471743984;  // std dev = 0,455, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.766794
   AUC PR    = 0.050206
   CLL	      = -0.474526
   Precision = 0.032922 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.063492


Total learning time: 17.636 seconds
Total inference time: 3.56 seconds
AUC ROC: 0.766794


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 01:57:57
{'Learning time': 17.636, 'Inference time': 3.56, 'AUC ROC': 0.766794, 'AUC PR': 0.050206, 'Recall': 0.888889, 'CLL': -0.474526, 'F1': 0.063492, 'Precision': [0.032922, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.732451
   AUC PR    = 0.047022
   CLL	      = -0.21368
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.464 seconds
Total inference time: 1.958 seconds
AUC ROC: 0.732451


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 01:58:02
{'Learning time': 3.464, 'Inference time': 1.958, 'AUC ROC': 0.732451, 'AUC PR': 0.047022, 'Recall': 0.0, 'CLL': -0.21368, 'F1': nan, 'Precision': [nan, 0.5]}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 558
Target train neg examples: 23373

Target test facts examples: 9016
Target test pos	 examples: 140
Target test neg examples: 4623

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2564123687585864;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.20613740734453975;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.16162857548414675;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.1245559779208197;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.09492800936730683;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07186088850055855;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05418307375954949;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.04076025323305626;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.029393
   CLL	      = -0.637309
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.37 seconds
Total inference time: 2.021 seconds
AUC ROC: 0.5


Results scoring model
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total scoring time: 0.949 seconds
Parameter learned model CLL: -0.695026


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.24999999999999983, nan]}, {'': [0.24999999999999994, nan]}, {'': [0.25000000000000006, nan]}, {'': [0.24999999999999992, nan]}, {'': [0.24999999999999994, nan]}, {'': [0.24999999999999986, nan]}, {'': [0.25, nan]}, {'': [0.25000000000000006, nan]}, {'': [0.25, nan]}, {'': [0.24999999999999994, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.038428662236904595;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.24556389740397652;  // std dev = 0,714, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.012191697272330257;  // std dev = 1,025, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.1933649873310551;  // std dev = 0,688, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.010170473565113893;  // std dev = 1,024, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.16902540341752845;  // std dev = 0,796, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.006946182494127706;  // std dev = 0,930, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.1270545075451277;  // std dev = 0,633, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.01959408799702758;  // std dev = 1,045, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.10145691004045505;  // std dev = 0,630, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.01639369223470183;  // std dev = 1,044, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.09537425098283152;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.008757207529657408;  // std dev = 0,957, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.536933
   AUC PR    = 0.070473
   CLL	      = -0.491617
   Precision = 0.05 at threshold = 0.5
   Recall    = 0.457143
   F1        = 0.090141


Total learning time: 2.153 seconds
Total inference time: 2.508 seconds
AUC ROC: 0.536933


Results scoring model
   AUC ROC   = 0.84
   AUC PR    = 0.907143
   CLL	      = -0.488165
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.8


Total scoring time: 1.019 seconds
Refined model CLL: -0.488165


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.536933
   AUC PR    = 0.070473
   CLL	      = -0.491617
   Precision = 0.05 at threshold = 0.5
   Recall    = 0.457143
   F1        = 0.090141


Total learning time: 5.491 seconds
Total inference time: 2.508 seconds
AUC ROC: 0.536933
Total revision time: 5.491
Best scored revision CLL: -0.488165


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:58:13
{'Learning time': 5.491, 'Inference time': 2.508, 'AUC ROC': 0.536933, 'AUC PR': 0.070473, 'Recall': 0.457143, 'CLL': -0.491617, 'parameter_5': {'Learning time': 1.37, 'Inference time': 2.021, 'AUC ROC': 0.5, 'AUC PR': 0.029393, 'Recall': 0.0, 'CLL': -0.637309, 'F1': nan, 'Precision': [nan, 0.5]}, 'F1': 0.090141, 'Precision': [0.05, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.038428662236904595;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.24556389740397652;  // std dev = 0,714, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.012191697272330257;  // std dev = 1,025, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.1933649873310551;  // std dev = 0,688, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.010170473565113893;  // std dev = 1,024, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.16902540341752845;  // std dev = 0,796, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.006946182494127706;  // std dev = 0,930, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.1270545075451277;  // std dev = 0,633, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.01959408799702758;  // std dev = 1,045, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.10145691004045505;  // std dev = 0,630, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.01639369223470183;  // std dev = 1,044, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.09537425098283152;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.008757207529657408;  // std dev = 0,957, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.536933
   AUC PR    = 0.070473
   CLL	      = -0.491617
   Precision = 0.05 at threshold = 0.5
   Recall    = 0.457143
   F1        = 0.090141


Total learning time: 1.992 seconds
Total inference time: 1.847 seconds
AUC ROC: 0.536933


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 01:58:17
{'Learning time': 1.992, 'Inference time': 1.847, 'AUC ROC': 0.536933, 'AUC PR': 0.070473, 'Recall': 0.457143, 'CLL': -0.491617, 'F1': 0.090141, 'Precision': [0.05, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.597055
   AUC PR    = 0.04209
   CLL	      = -0.235641
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.039 seconds
Total inference time: 1.209 seconds
AUC ROC: 0.597055


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 01:58:20
{'Learning time': 1.039, 'Inference time': 1.209, 'AUC ROC': 0.597055, 'AUC PR': 0.04209, 'Recall': 0.0, 'CLL': -0.235641, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.23314893509951234;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.202334239218108;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.17149281961528923;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.14228146899184058;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.11591746118730602;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.09305316265470481;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.07383827012230793;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.05807372983129966;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.04537020502570499;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.03526821680925485;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.432846
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 1.393 seconds
Total inference time: 2.133 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.779088
   CLL	      = -0.555937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 1.065 seconds
Parameter learned model CLL: -0.555937


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}]]
[{'': [0.0, 0.23437500000000006]}, {'': [0.0, 0.23437500000000008]}, {'': [0.0, 0.23437500000000017]}, {'': [0.0, 0.23437499999999997]}, {'': [0.0, 0.23437500000000008]}, {'': [0.0, 0.23437500000000003]}, {'': [0.0, 0.2343750000000001]}, {'': [0.0, 0.23437500000000008]}, {'': [0.0, 0.2343749999999999]}, {'': [0.0, 0.23437499999999983]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.10814893509951218;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.09446743783575556;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.08165239320886175;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.06990902274840138;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.059354635365447495;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.05002771289938786;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.04190386852605733;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.12032373444636879;  // std dev = 0,474, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.00929009013018236;  // std dev = 0,456, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.1033662809716891;  // std dev = 0,454, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.007637857852897933;  // std dev = 0,456, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.08893617585108415;  // std dev = 0,438, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.006283420014551672;  // std dev = 0,456, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */


Results
   AUC ROC   = 0.847517
   AUC PR    = 0.56015
   CLL	      = -0.455387
   Precision = 0.073171 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.132231


Total learning time: 2.54 seconds
Total inference time: 2.614 seconds
AUC ROC: 0.847517


Results scoring model
   AUC ROC   = 0.915
   AUC PR    = 0.937531
   CLL	      = -0.387091
   Precision = 0.888889 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.842105


Total scoring time: 1.091 seconds
Refined model CLL: -0.387091


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.847517
   AUC PR    = 0.56015
   CLL	      = -0.455387
   Precision = 0.073171 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.132231


Total learning time: 6.089 seconds
Total inference time: 2.614 seconds
AUC ROC: 0.847517
Total revision time: 6.089
Best scored revision CLL: -0.387091


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:58:31
{'Learning time': 6.089, 'Inference time': 2.614, 'AUC ROC': 0.847517, 'AUC PR': 0.56015, 'Recall': 0.685714, 'CLL': -0.455387, 'parameter_10': {'Learning time': 1.393, 'Inference time': 2.133, 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'CLL': -0.432846, 'F1': 0.640777, 'Precision': [1.0, 0.5]}, 'F1': 0.132231, 'Precision': [0.073171, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2581489350995123;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return 0.1431540484042988;  // std dev = 0,454, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.6177907128699047;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14200975025280912;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.18794598826226813;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.353335133641933;  // std dev = 0,321, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.1255702313275105;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.1704318078624861;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.26683074221082326;  // std dev = 0,321, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.11241798467219016;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.13891159517382964;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.20473371446131308;  // std dev = 0,323, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.10168006783311938;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.11123868411905882;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.1602388907984003;  // std dev = 0,324, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.09276138527270723;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.08786760435724209;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.1277549924686579;  // std dev = 0,326, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.08524424911783719;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.06869781050620408;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.22261311918477525;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07882784196831598;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.01202574984944326;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.18646947617449916;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07329054189935326;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.009327402586395769;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */


Results
   AUC ROC   = 0.732329
   AUC PR    = 0.081721
   CLL	      = -0.56939
   Precision = 0.05 at threshold = 0.5
   Recall    = 0.457143
   F1        = 0.090141


Total learning time: 4.542 seconds
Total inference time: 2.264 seconds
AUC ROC: 0.732329


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 01:58:39
{'Learning time': 4.542, 'Inference time': 2.264, 'AUC ROC': 0.732329, 'AUC PR': 0.081721, 'Recall': 0.457143, 'CLL': -0.56939, 'F1': 0.090141, 'Precision': [0.05, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2581489350995123;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */


Results
   AUC ROC   = 0.694753
   AUC PR    = 0.048315
   CLL	      = -0.23831
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.805 seconds
Total inference time: 1.409 seconds
AUC ROC: 0.694753


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 01:58:42
{'Learning time': 1.805, 'Inference time': 1.409, 'AUC ROC': 0.694753, 'AUC PR': 0.048315, 'Recall': 0.0, 'CLL': -0.23831, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.23314893509951237;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.202334239218108;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.1714928196152892;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.14228146899184058;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.11591746118730585;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.09305316265470505;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.07383827012230793;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.05807372983129966;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.04537020502570499;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.03526821680925496;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.432846
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 1.394 seconds
Total inference time: 2.095 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.777338
   CLL	      = -0.555937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 1.051 seconds
Parameter learned model CLL: -0.555937


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.27e-09, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}]]
[{'': [-1.4802973661668753e-16, 0.23437500000000003]}, {'': [7.401486830834377e-17, 0.2343750000000001]}, {'': [-7.401486830834377e-17, 0.2343750000000003]}, {'': [7.401486830834377e-17, 0.23437499999999997]}, {'': [-3.700743415417188e-17, 0.23437499999999986]}, {'': [9.25185853854297e-18, 0.23437499999999997]}, {'': [-9.25185853854297e-18, 0.23437499999999986]}, {'': [4.625929269271485e-18, 0.2343750000000001]}, {'': [-4.625929269271485e-18, 0.2343749999999999]}, {'': [0.0, 0.2343749999999998]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.19148226843284566;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.16653882456488167;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.14209424281556468;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.11914890490746437;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.04220614426246583;  // std dev = 0,406, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.09630233766133861;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.0907429056078416;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.0882409508139671;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07368299353346049;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.08139476175057303;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.05927003264476468;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04126932998424626;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07551257032525166;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.047321597934520974;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.032663748734830134;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07040708367838269;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.037561084462592244;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */


Results
   AUC ROC   = 0.824267
   AUC PR    = 0.136623
   CLL	      = -0.432115
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 4.026 seconds
Total inference time: 3.062 seconds
AUC ROC: 0.824267


Results scoring model
   AUC ROC   = 0.888889
   AUC PR    = 0.914449
   CLL	      = -0.372907
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.8


Total scoring time: 1.008 seconds
Refined model CLL: -0.372907


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.824267
   AUC PR    = 0.136623
   CLL	      = -0.432115
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 7.479 seconds
Total inference time: 3.062 seconds
AUC ROC: 0.824267
Total revision time: 7.479
Best scored revision CLL: -0.372907


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:58:55
{'Learning time': 7.479, 'Inference time': 3.062, 'AUC ROC': 0.824267, 'AUC PR': 0.136623, 'Recall': 0.685714, 'CLL': -0.432115, 'parameter_15': {'Learning time': 1.394, 'Inference time': 2.095, 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'CLL': -0.432846, 'F1': 0.640777, 'Precision': [1.0, 0.5]}, 'F1': 0.277457, 'Precision': [0.173913, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.324815601766179;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.2805107770599873;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.23424256206591026;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.18987476870468104;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.15030788490124342;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.11694170908536865;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.08990276855148759;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.06857046202066547;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.04126932998424626;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.05203081637267762;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.032663748734830134;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.03934879572263034;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.509183
   Precision = 0.123077 at threshold = 0.5
   Recall    = 0.457143
   F1        = 0.193939


Total learning time: 4.955 seconds
Total inference time: 2.487 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 01:59:03
{'Learning time': 4.955, 'Inference time': 2.487, 'AUC ROC': 0.821572, 'AUC PR': 0.097917, 'Recall': 0.457143, 'CLL': -0.509183, 'F1': 0.193939, 'Precision': [0.123077, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.324815601766179;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.226749
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.707 seconds
Total inference time: 1.562 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 01:59:07
{'Learning time': 1.707, 'Inference time': 1.562, 'AUC ROC': 0.821572, 'AUC PR': 0.097917, 'Recall': 0.0, 'CLL': -0.226749, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.25208832903890627;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.2185513014981362;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.18467420665320486;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.15247837881798254;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.12346317434138805;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.09842380419293258;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.07752968025238201;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.060526932499037005;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.04694207753704613;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.036230497292734754;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.459798
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 1.369 seconds
Total inference time: 2.176 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.675
   AUC PR    = 0.752585
   CLL	      = -0.576723
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.35
   F1        = 0.518519


Total scoring time: 1.092 seconds
Parameter learned model CLL: -0.576723


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [2.807, 20, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 7], 'false': [2.807, 20, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [2.807, 20, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.58e-08, 0, 7], 'false': [2.807, 20, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [2.807, 20, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.29e-08, 0, 7], 'false': [2.807, 20, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [2.807, 20, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.27e-09, 0, 7], 'false': [2.807, 20, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [2.807, 20, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [2.807, 20, 13]}]]
[{'': [-2.5376526277146434e-16, 0.23875114784205645]}, {'': [6.344131569286608e-17, 0.23875114784205673]}, {'': [-6.344131569286608e-17, 0.23875114784205748]}, {'': [9.516197353929913e-17, 0.23875114784205695]}, {'': [-3.172065784643304e-17, 0.23875114784205695]}, {'': [2.3790493384824782e-17, 0.23875114784205698]}, {'': [-1.586032892321652e-17, 0.23875114784205678]}, {'': [3.96508223080413e-18, 0.23875114784205695]}, {'': [-7.93016446160826e-18, 0.2387511478420569]}, {'': [0.0, 0.2387511478420571]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.21109011157010057;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.18340385319677519;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.15599733614673358;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.13015597951886929;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.10680980930785675;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.05002771289938789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.08645868236511085;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04190386852605735;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.06922136186270642;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03491396367325339;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.0549459771851332;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.028961035597951046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.04332554931799962;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.023934242922604827;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.03398899672515525;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */


Results
   AUC ROC   = 0.875934
   AUC PR    = 0.147927
   CLL	      = -0.424654
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 4.489 seconds
Total inference time: 2.959 seconds
AUC ROC: 0.875934


Results scoring model
   AUC ROC   = 0.88625
   AUC PR    = 0.911031
   CLL	      = -0.383548
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.65
   F1        = 0.787879


Total scoring time: 1.274 seconds
Refined model CLL: -0.383548


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.875934
   AUC PR    = 0.147927
   CLL	      = -0.424654
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 8.224 seconds
Total inference time: 2.959 seconds
AUC ROC: 0.875934
Total revision time: 8.224
Best scored revision CLL: -0.383548


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:59:21
{'Learning time': 8.224, 'Inference time': 2.959, 'AUC ROC': 0.875934, 'AUC PR': 0.147927, 'Recall': 0.685714, 'CLL': -0.424654, 'parameter_20': {'Learning time': 1.369, 'Inference time': 2.176, 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'CLL': -0.459798, 'F1': 0.640777, 'Precision': [1.0, 0.5]}, 'F1': 0.277457, 'Precision': [0.173913, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.2285193054698827;  // std dev = 0,483, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.172005409460258;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.30418506673021817;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.1488706756682091;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.25646992871168;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.13373925845019025;  // std dev = 0,463, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14696357006571134;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.18240857258997942;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.05002771289938789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.12947810796923406;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.14319720881009598;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.04190386852605735;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.11557079353540056;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.11066952318526005;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.03491396367325339;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.10427236734866437;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.08464276743989571;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.028961035597951046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.09492743543467395;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.06430306492014799;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.023934242922604827;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.08707930214599513;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.04864320489873629;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.501346
   Precision = 0.123077 at threshold = 0.5
   Recall    = 0.457143
   F1        = 0.193939


Total learning time: 4.554 seconds
Total inference time: 2.627 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 01:59:28
{'Learning time': 4.554, 'Inference time': 2.627, 'AUC ROC': 0.821572, 'AUC PR': 0.097917, 'Recall': 0.457143, 'CLL': -0.501346, 'F1': 0.193939, 'Precision': [0.123077, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.3343394112899885;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.225135
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.99 seconds
Total inference time: 1.595 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 01:59:32
{'Learning time': 1.99, 'Inference time': 1.595, 'AUC ROC': 0.821572, 'AUC PR': 0.097917, 'Recall': 0.0, 'CLL': -0.225135, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.23314893509951234;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.2023342392181074;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.17149281961528975;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.1422814689918402;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.11591746118730614;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.09305316265470505;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.07383827012230781;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.05807372983129966;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.04537020502570499;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return 0.03526821680925511;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */


Results
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.432846
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total learning time: 1.505 seconds
Total inference time: 2.326 seconds
AUC ROC: 0.735714


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.776414
   CLL	      = -0.555937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 1.105 seconds
Parameter learned model CLL: -0.555937


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 10], 'false': [3.062, 25, 15]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 10], 'false': [3.062, 25, 15]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 10], 'false': [3.062, 25, 15]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.65e-08, 0, 10], 'false': [3.062, 25, 15]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 10], 'false': [3.062, 25, 15]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.83e-08, 0, 10], 'false': [3.062, 25, 15]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 10], 'false': [3.062, 25, 15]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 10], 'false': [3.062, 25, 15]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 10], 'false': [3.062, 25, 15]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 10], 'false': [3.062, 25, 15]}]]
[{'': [-8.881784197001253e-17, 0.2343749999999995]}, {'': [8.881784197001253e-17, 0.23437500000000036]}, {'': [-1.7763568394002506e-16, 0.2343749999999996]}, {'': [1.3322676295501878e-16, 0.23437500000000008]}, {'': [-4.4408920985006264e-17, 0.23437500000000036]}, {'': [3.3306690738754695e-17, 0.23437499999999942]}, {'': [-2.7755575615628914e-17, 0.23437499999999983]}, {'': [5.551115123125783e-18, 0.23437500000000008]}, {'': [0.0, 0.23437500000000017]}, {'': [0.0, 0.23437500000000006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | | then return 0.24703782398840124;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | | then return 0.21423003928420992;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | | then return 0.18117025335774115;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | | then return 0.14977830299848977;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.11018043511144517;  // std dev = 2,245, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.04177231945415147;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | | then return 0.09934558819512966;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.03480141470823062;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | | then return 0.07849052125103263;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.028865634653460703;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | | then return 0.06144460359182227;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.02385399829654123;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | | then return 0.047772334389497274;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.019652204439650517;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | | then return 0.036955165507365245;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.875934
   AUC PR    = 0.147927
   CLL	      = -0.443448
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 4.985 seconds
Total inference time: 3.083 seconds
AUC ROC: 0.875934


Results scoring model
   AUC ROC   = 0.9184
   AUC PR    = 0.932359
   CLL	      = -0.343112
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.68
   F1        = 0.809524


Total scoring time: 1.097 seconds
Refined model CLL: -0.343112


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.875934
   AUC PR    = 0.147927
   CLL	      = -0.443448
   Precision = 0.173913 at threshold = 0.5
   Recall    = 0.685714
   F1        = 0.277457


Total learning time: 8.692 seconds
Total inference time: 3.083 seconds
AUC ROC: 0.875934
Total revision time: 8.692
Best scored revision CLL: -0.343112


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:59:47
{'Learning time': 8.692, 'Inference time': 3.083, 'parameter_25': {'Learning time': 1.505, 'Inference time': 2.326, 'AUC ROC': 0.735714, 'AUC PR': 0.511561, 'Recall': 0.471429, 'CLL': -0.432846, 'F1': 0.640777, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.875934, 'AUC PR': 0.147927, 'Recall': 0.685714, 'CLL': -0.443448, 'F1': 0.277457, 'Precision': [0.173913, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then return 0.41814893509951234;  // std dev = 0,496, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordtitle(B, E) )
%   | then if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.35928812485445805;  // std dev = 0,496, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then return 0.2954715283798251;  // std dev = 0,496, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.23416667865890822;  // std dev = 2,482, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.18079518226327232;  // std dev = 2,482, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.05002771289938789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then return 0.1374049750226437;  // std dev = 0,496, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.04190386852605735;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordtitle(B, E) )
%   | then if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.10357035484665861;  // std dev = 0,496, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.03491396367325339;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then return 0.07778105384254747;  // std dev = 0,496, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.028961035597951046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then return 0.058343297820867085;  // std dev = 0,496, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.023934242922604827;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then return 0.043763178362585115;  // std dev = 0,496, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.553182
   Precision = 0.059855 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.112949


Total learning time: 7.445 seconds
Total inference time: 2.791 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 01:59:58
{'Learning time': 7.445, 'Inference time': 2.791, 'AUC ROC': 0.821572, 'AUC PR': 0.097917, 'Recall': 1.0, 'CLL': -0.553182, 'F1': 0.112949, 'Precision': [0.059855, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then return 0.41814893509951234;  // std dev = 0,496, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.821572
   AUC PR    = 0.097917
   CLL	      = -0.23001
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.181 seconds
Total inference time: 1.617 seconds
AUC ROC: 0.821572


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 02:00:02
{'Learning time': 2.181, 'Inference time': 1.617, 'AUC ROC': 0.821572, 'AUC PR': 0.097917, 'Recall': 0.0, 'CLL': -0.23001, 'F1': nan, 'Precision': [nan, 0.5]}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 585
Target train neg examples: 24169

Target test facts examples: 9306
Target test pos	 examples: 113
Target test neg examples: 3827

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2564123687585864;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.20613740734453975;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.16162857548414675;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.1245559779208197;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.09492800936730683;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07186088850055855;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05418307375954949;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.04076025323305626;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.62856
   AUC PR    = 0.038227
   CLL	      = -0.517162
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.288 seconds
Total inference time: 1.943 seconds
AUC ROC: 0.62856


Results scoring model
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total scoring time: 0.983 seconds
Parameter learned model CLL: -0.695026


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.24999999999999983, nan]}, {'': [0.24999999999999994, nan]}, {'': [0.25000000000000006, nan]}, {'': [0.24999999999999992, nan]}, {'': [0.24999999999999994, nan]}, {'': [0.24999999999999986, nan]}, {'': [0.25, nan]}, {'': [0.25000000000000006, nan]}, {'': [0.25, nan]}, {'': [0.24999999999999994, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.4295775065280837;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.4879531292107437;  // std dev = 0,802, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.23112798889233627;  // std dev = 0,491, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.10225277101046511;  // std dev = 0,799, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3218048837805409;  // std dev = 0,489, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.3686311809420845;  // std dev = 0,780, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.13483428914822726;  // std dev = 0,485, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.02387073209041546;  // std dev = 0,779, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.21912111803554346;  // std dev = 0,482, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.2654353317026299;  // std dev = 0,760, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.062348543664673385;  // std dev = 0,480, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.02672651004324994;  // std dev = 0,762, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.1458887501174627;  // std dev = 0,477, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.1944295841940147;  // std dev = 0,747, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.018218021226697894;  // std dev = 0,476, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.053591870166332024;  // std dev = 0,750, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.10011835819238028;  // std dev = 0,474, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.14901956844994496;  // std dev = 0,739, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.005942795906053511;  // std dev = 0,473, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.603104
   AUC PR    = 0.032286
   CLL	      = -0.601726
   Precision = 0.004301 at threshold = 0.5
   Recall    = 0.035398
   F1        = 0.00767


Total learning time: 2.523 seconds
Total inference time: 2.337 seconds
AUC ROC: 0.603104


Results scoring model
   AUC ROC   = 0.68
   AUC PR    = 0.723175
   CLL	      = -0.619109
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.2
   F1        = 0.333333


Total scoring time: 1.102 seconds
Refined model CLL: -0.619109


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.603104
   AUC PR    = 0.032286
   CLL	      = -0.601726
   Precision = 0.004301 at threshold = 0.5
   Recall    = 0.035398
   F1        = 0.00767


Total learning time: 5.896000000000001 seconds
Total inference time: 2.337 seconds
AUC ROC: 0.603104
Total revision time: 5.896000000000001
Best scored revision CLL: -0.619109


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:00:13
{'Learning time': 5.896000000000001, 'Inference time': 2.337, 'AUC ROC': 0.603104, 'AUC PR': 0.032286, 'Recall': 0.035398, 'CLL': -0.601726, 'parameter_5': {'Learning time': 1.288, 'Inference time': 1.943, 'AUC ROC': 0.62856, 'AUC PR': 0.038227, 'Recall': 0.0, 'CLL': -0.517162, 'F1': nan, 'Precision': [nan, 0.5]}, 'F1': 0.00767, 'Precision': [0.004301, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.4295775065280837;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.4879531292107437;  // std dev = 0,802, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.23112798889233627;  // std dev = 0,491, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.10225277101046511;  // std dev = 0,799, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.3218048837805409;  // std dev = 0,489, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.3686311809420845;  // std dev = 0,780, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.13483428914822726;  // std dev = 0,485, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.02387073209041546;  // std dev = 0,779, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.21912111803554346;  // std dev = 0,482, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.2654353317026299;  // std dev = 0,760, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.062348543664673385;  // std dev = 0,480, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.02672651004324994;  // std dev = 0,762, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.1458887501174627;  // std dev = 0,477, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.1944295841940147;  // std dev = 0,747, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.018218021226697894;  // std dev = 0,476, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return -0.053591870166332024;  // std dev = 0,750, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.10011835819238028;  // std dev = 0,474, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.14901956844994496;  // std dev = 0,739, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.005942795906053511;  // std dev = 0,473, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */


Results
   AUC ROC   = 0.504041
   AUC PR    = 0.026115
   CLL	      = -0.730739
   Precision = 0.003607 at threshold = 0.5
   Recall    = 0.035398
   F1        = 0.006547


Total learning time: 2.125 seconds
Total inference time: 1.884 seconds
AUC ROC: 0.504041


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 02:00:17
{'Learning time': 2.125, 'Inference time': 1.884, 'AUC ROC': 0.504041, 'AUC PR': 0.026115, 'Recall': 0.035398, 'CLL': -0.730739, 'F1': 0.006547, 'Precision': [0.003607, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.4295775065280837;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */


Results
   AUC ROC   = 0.456882
   AUC PR    = 0.025961
   CLL	      = -0.254568
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.252 seconds
Total inference time: 1.114 seconds
AUC ROC: 0.456882


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 02:00:20
{'Learning time': 1.252, 'Inference time': 1.114, 'AUC ROC': 0.456882, 'AUC PR': 0.025961, 'Recall': 0.0, 'CLL': -0.254568, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3087411357856348;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2564123687585864;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.20613740734453953;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.16162857548414683;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.12455597792081981;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.09492800936730669;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07186088850055856;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.054183073759549595;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.040760253233056355;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.62856
   AUC PR    = 0.038227
   CLL	      = -0.517162
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.7 seconds
Total inference time: 1.982 seconds
AUC ROC: 0.62856


Results scoring model
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total scoring time: 1.044 seconds
Parameter learned model CLL: -0.695026


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [2.236, 10, 10], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [2.236, 10, 10], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [2.236, 10, 10], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [2.236, 10, 10], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [2.236, 10, 10], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [2.236, 10, 10], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [2.236, 10, 10], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [2.236, 10, 10], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [2.236, 10, 10], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [2.236, 10, 10], 'false': [0.0, 0, 0]}]]
[{'': [0.25, nan]}, {'': [0.2500000000000001, nan]}, {'': [0.25000000000000006, nan]}, {'': [0.2500000000000002, nan]}, {'': [0.24999999999999978, nan]}, {'': [0.24999999999999994, nan]}, {'': [0.25000000000000017, nan]}, {'': [0.2500000000000001, nan]}, {'': [0.24999999999999994, nan]}, {'': [0.24999999999999994, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2581489350995123;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.606725502964882;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.18279351949750974;  // std dev = 0,485, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.48374286803697614;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.15416677261001174;  // std dev = 0,485, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3675539952487887;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.12754107627307548;  // std dev = 0,485, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.2759727255627987;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.10381269926467401;  // std dev = 0,486, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.2093641830868637;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.08339377516272957;  // std dev = 0,486, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.16165319435884382;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.0663009945363834;  // std dev = 0,486, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.12704041115648454;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.0522923451383926;  // std dev = 0,486, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.031532167064526474;  // std dev = 0,385, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.07402836001511734;  // std dev = 0,486, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.09525205923907605;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.025730942796274154;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.02556676177498908;  // std dev = 0,486, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.742002
   AUC PR    = 0.075463
   CLL	      = -0.444009
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 7.967 seconds
Total inference time: 2.866 seconds
AUC ROC: 0.742002


Results scoring model
   AUC ROC   = 0.685
   AUC PR    = 0.706986
   CLL	      = -0.602395
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.625


Total scoring time: 1.097 seconds
Refined model CLL: -0.602395


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.742002
   AUC PR    = 0.075463
   CLL	      = -0.444009
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 11.807999999999998 seconds
Total inference time: 2.866 seconds
AUC ROC: 0.742002
Total revision time: 11.807999999999998
Best scored revision CLL: -0.602395


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:00:37
{'Learning time': 11.807999999999998, 'Inference time': 2.866, 'AUC ROC': 0.742002, 'AUC PR': 0.075463, 'Recall': 0.362832, 'CLL': -0.444009, 'parameter_10': {'Learning time': 1.7, 'Inference time': 1.982, 'AUC ROC': 0.62856, 'AUC PR': 0.038227, 'Recall': 0.0, 'CLL': -0.517162, 'F1': nan, 'Precision': [nan, 0.5]}, 'F1': 0.179431, 'Precision': [0.119186, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.2581489350995123;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.606725502964882;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.18279351949750974;  // std dev = 0,485, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.48374286803697614;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.15416677261001174;  // std dev = 0,485, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.3675539952487887;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.12754107627307548;  // std dev = 0,485, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.2759727255627987;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.10381269926467401;  // std dev = 0,486, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.2093641830868637;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.08339377516272957;  // std dev = 0,486, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.16165319435884382;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.0663009945363834;  // std dev = 0,486, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.12704041115648454;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.0522923451383926;  // std dev = 0,486, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.031532167064526474;  // std dev = 0,385, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.04126932998424626;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.08385606902437867;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.09525205923907605;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.032663748734830134;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.023581011728856637;  // std dev = 0,486, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */


Results
   AUC ROC   = 0.659093
   AUC PR    = 0.068079
   CLL	      = -0.510648
   Precision = 0.119186 at threshold = 0.5
   Recall    = 0.362832
   F1        = 0.179431


Total learning time: 3.837 seconds
Total inference time: 2.098 seconds
AUC ROC: 0.659093


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 02:00:43
{'Learning time': 3.837, 'Inference time': 2.098, 'AUC ROC': 0.659093, 'AUC PR': 0.068079, 'Recall': 0.362832, 'CLL': -0.510648, 'F1': 0.179431, 'Precision': [0.119186, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.2581489350995123;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */


Results
   AUC ROC   = 0.617818
   AUC PR    = 0.03699
   CLL	      = -0.251219
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.578 seconds
Total inference time: 1.363 seconds
AUC ROC: 0.617818


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 02:00:46
{'Learning time': 1.578, 'Inference time': 1.363, 'AUC ROC': 0.617818, 'AUC PR': 0.03699, 'Recall': 0.0, 'CLL': -0.251219, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.30259337954395676;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.261631808675212;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.2192721473492705;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.1787352457468729;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.14243924477676276;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.11159559999632997;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.08637026299843599;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.06628370899125427;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.050575643621874215;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.038438849075129344;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.537131
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 1.516 seconds
Total inference time: 1.972 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.6
   AUC PR    = 0.671449
   CLL	      = -0.632522
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.2
   F1        = 0.333333


Total scoring time: 1.075 seconds
Parameter learned model CLL: -0.632522


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 3], 'false': [2.582, 15, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.582, 15, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-08, 0, 3], 'false': [2.582, 15, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.582, 15, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.582, 15, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.582, 15, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.582, 15, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.582, 15, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.582, 15, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [2.582, 15, 12]}]]
[{'': [1.4802973661668753e-16, 0.2469135802469131]}, {'': [0.0, 0.2469135802469134]}, {'': [3.700743415417188e-17, 0.24691358024691332]}, {'': [-3.700743415417188e-17, 0.24691358024691365]}, {'': [0.0, 0.24691358024691382]}, {'': [0.0, 0.24691358024691357]}, {'': [0.0, 0.24691358024691337]}, {'': [0.0, 0.24691358024691382]}, {'': [-4.625929269271485e-18, 0.24691358024691362]}, {'': [-2.3129646346357427e-18, 0.24691358024691384]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6081489350995123;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0803711573217344;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5170719622367218;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.07030324498182235;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.41257245288266;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.061022104415313035;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3151786576185065;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.05259950478597565;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23676009386434194;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.04506156572157876;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17806945427207505;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.03839689936532517;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.13513671764223462;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.03256600389501996;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.103671751136855;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.027510392484601905;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return -0.07837250268796225;  // std dev = 0,708, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(B, D) )
%   | | | then return 0.1874911901732163;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.06840311429118533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.005406405819316179;  // std dev = 0,444, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return -0.06882824478685119;  // std dev = 0,707, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(B, D) )
%   | | | then return 0.1474070634177099;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.052078905701252655;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.004475283538714761;  // std dev = 0,444, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */


Results
   AUC ROC   = 0.776023
   AUC PR    = 0.530771
   CLL	      = -0.66598
   Precision = 0.03958 at threshold = 0.5
   Recall    = 0.734513
   F1        = 0.075113


Total learning time: 6.713 seconds
Total inference time: 2.767 seconds
AUC ROC: 0.776023


Results scoring model
   AUC ROC   = 0.868889
   AUC PR    = 0.872561
   CLL	      = -0.450295
   Precision = 0.764706 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.8125


Total scoring time: 1.286 seconds
Refined model CLL: -0.450295


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.776023
   AUC PR    = 0.530771
   CLL	      = -0.66598
   Precision = 0.03958 at threshold = 0.5
   Recall    = 0.734513
   F1        = 0.075113


Total learning time: 10.59 seconds
Total inference time: 2.767 seconds
AUC ROC: 0.776023
Total revision time: 10.59
Best scored revision CLL: -0.450295


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:01:03
{'Learning time': 10.59, 'Inference time': 2.767, 'AUC ROC': 0.776023, 'AUC PR': 0.530771, 'Recall': 0.734513, 'CLL': -0.66598, 'parameter_15': {'Learning time': 1.516, 'Inference time': 1.972, 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'CLL': -0.537131, 'F1': 0.604938, 'Precision': [1.0, 0.5]}, 'F1': 0.075113, 'Precision': [0.03958, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6081489350995123;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.274815601766179;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.49831477423815096;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.23796730798362134;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return 0.3516717210789981;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4167531299699275;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2003424470315364;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return 0.27139305756675797;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3187573971305422;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.16445940647707039;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return 0.2050422569559646;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.23950798128038514;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.13220063779845395;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return 0.15386011536632385;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.18009042816126586;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.10454407394648617;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return 0.11557127011354378;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1366128149169623;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return 0.05390507097631111;  // std dev = 0,440, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return 0.08717943219565809;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.10475894138322461;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.08277859552031898;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.10643456960081858;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.06955633235448004;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return 0.06609485412552822;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.08115973955609095;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.07670669511732407;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.08040351045697795;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.05363020083311095;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return -0.08640383980039536;  // std dev = 0,709, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, C) )
%   | | then return 0.17057888148907469;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.061045633094685504;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.013628485300538515;  // std dev = 0,504, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */


Results
   AUC ROC   = 0.552357
   AUC PR    = 0.062135
   CLL	      = -0.774594
   Precision = 0.023752 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.045037


Total learning time: 6.548 seconds
Total inference time: 2.661 seconds
AUC ROC: 0.552357


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 02:01:12
{'Learning time': 6.548, 'Inference time': 2.661, 'AUC ROC': 0.552357, 'AUC PR': 0.062135, 'Recall': 0.433628, 'CLL': -0.774594, 'F1': 0.045037, 'Precision': [0.023752, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6081489350995123;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.274815601766179;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */


Results
   AUC ROC   = 0.511915
   AUC PR    = 0.031356
   CLL	      = -0.263838
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.158 seconds
Total inference time: 1.556 seconds
AUC ROC: 0.511915


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 02:01:16
{'Learning time': 2.158, 'Inference time': 1.556, 'AUC ROC': 0.511915, 'AUC PR': 0.031356, 'Recall': 0.0, 'CLL': -0.263838, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.26991364098186527;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.2337836550996707;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.19697678246055098;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.16189848815690908;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.1303444240371668;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.10325226905662921;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.0808012545778974;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.06267194972365514;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.0482999690369091;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.037053398054008216;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.486868
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 1.591 seconds
Total inference time: 1.795 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.65
   AUC PR    = 0.727043
   CLL	      = -0.59634
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.3
   F1        = 0.461538


Total scoring time: 1.059 seconds
Parameter learned model CLL: -0.59634


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.27e-09, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.87, 20, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.87, 20, 14]}]]
[{'': [-1.4802973661668753e-16, 0.2422145328719718]}, {'': [7.401486830834377e-17, 0.2422145328719724]}, {'': [-7.401486830834377e-17, 0.24221453287197275]}, {'': [7.401486830834377e-17, 0.2422145328719725]}, {'': [-3.700743415417188e-17, 0.24221453287197198]}, {'': [9.25185853854297e-18, 0.2422145328719724]}, {'': [-9.25185853854297e-18, 0.24221453287197234]}, {'': [4.625929269271485e-18, 0.2422145328719724]}, {'': [-4.625929269271485e-18, 0.24221453287197225]}, {'': [0.0, 0.2422145328719724]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.6581489350995123;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.088918165868743;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5580193346218546;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.07774578121441031;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.44194861002444086;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.06739536297660921;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.335411394950943;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0579733820773872;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.25176837314502193;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.04552769822582904;  // std dev = 0,396, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.19047961032437172;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.05002771289938789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.038596136596960165;  // std dev = 0,395, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.14620194507639933;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.04190386852605735;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.10001260080001131;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.19155801244646478;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.03670947547193076;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.11389369465607464;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.03491396367325339;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.09136365706407226;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.14370526442817624;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.03090353876209285;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.08989956180301868;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.028961035597951046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.08405685844104138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10803378486762887;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.02591559620996635;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return 0.10581014907527131;  // std dev = 1,081, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(A, D) )
%   | | | then return 0.14674810215160455;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.22606575707739515;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.07780738999152235;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08158995726785749;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.02166194275197991;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */


Results
   AUC ROC   = 0.82475
   AUC PR    = 0.534597
   CLL	      = -0.464716
   Precision = 0.065724 at threshold = 0.5
   Recall    = 0.699115
   F1        = 0.120152


Total learning time: 6.817 seconds
Total inference time: 2.822 seconds
AUC ROC: 0.82475


Results scoring model
   AUC ROC   = 0.9075
   AUC PR    = 0.913837
   CLL	      = -0.427582
   Precision = 0.842105 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.820513


Total scoring time: 1.245 seconds
Refined model CLL: -0.427582


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.82475
   AUC PR    = 0.534597
   CLL	      = -0.464716
   Precision = 0.065724 at threshold = 0.5
   Recall    = 0.699115
   F1        = 0.120152


Total learning time: 10.712 seconds
Total inference time: 2.822 seconds
AUC ROC: 0.82475
Total revision time: 10.712
Best scored revision CLL: -0.427582


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:01:32
{'Learning time': 10.712, 'Inference time': 2.822, 'AUC ROC': 0.82475, 'AUC PR': 0.534597, 'Recall': 0.699115, 'CLL': -0.464716, 'parameter_20': {'Learning time': 1.591, 'Inference time': 1.795, 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'CLL': -0.486868, 'F1': 0.604938, 'Precision': [1.0, 0.5]}, 'F1': 0.120152, 'Precision': [0.065724, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.26991364098186527;  // std dev = 0,492, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2337836550996701;  // std dev = 0,492, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.42244839506705284;  // std dev = 0,388, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.16834760679113825;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.7104951322615483;  // std dev = 0,162, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.19697678246055136;  // std dev = 0,492, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.3200071247447958;  // std dev = 0,387, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.14607399532310142;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5552881132827521;  // std dev = 0,200, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.16189848815690908;  // std dev = 0,492, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.240813266228725;  // std dev = 0,387, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.12877817984954026;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.4250150911434391;  // std dev = 0,203, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1303444240371668;  // std dev = 0,492, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.1829351343668177;  // std dev = 0,387, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.11500733895637218;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3309248545972537;  // std dev = 0,187, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.10325226905662939;  // std dev = 0,492, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.14099113406443858;  // std dev = 0,388, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.10380994333109884;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.26533219818569;  // std dev = 0,166, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.08080125457789766;  // std dev = 0,492, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.11023864958962659;  // std dev = 0,388, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.09454165942665432;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.21891587566028137;  // std dev = 0,146, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.06267194972365497;  // std dev = 0,492, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.0872891710240592;  // std dev = 0,388, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.08675292311779619;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.18508077378754392;  // std dev = 0,129, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.06840311429118533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.04829996903690906;  // std dev = 0,492, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.06985222806888766;  // std dev = 0,389, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.08012165401562288;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.1596424557633608;  // std dev = 0,115, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.052078905701252655;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.0370533980540081;  // std dev = 0,492, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */


Results
   AUC ROC   = 0.55275
   AUC PR    = 0.062344
   CLL	      = -0.947845
   Precision = 0.023752 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.045037


Total learning time: 9.664 seconds
Total inference time: 2.966 seconds
AUC ROC: 0.55275


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 02:01:45
{'Learning time': 9.664, 'Inference time': 2.966, 'AUC ROC': 0.55275, 'AUC PR': 0.062344, 'Recall': 0.433628, 'CLL': -0.947845, 'F1': 0.045037, 'Precision': [0.023752, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.26991364098186527;  // std dev = 0,492, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */


Results
   AUC ROC   = 0.671136
   AUC PR    = 0.06893
   CLL	      = -0.24377
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.362 seconds
Total inference time: 1.649 seconds
AUC ROC: 0.671136


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 02:01:50
{'Learning time': 2.362, 'Inference time': 1.649, 'AUC ROC': 0.671136, 'AUC PR': 0.06893, 'Recall': 0.0, 'CLL': -0.24377, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.27675358626230306;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.2396206853161997;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.2016709747053186;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.16546837522188929;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.1329302916561602;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.10505067669786712;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.08200969000439053;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.06345882477747422;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.04879579179800376;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.03735349941138274;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */


Results
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.49715
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total learning time: 1.485 seconds
Total inference time: 2.0 seconds
AUC ROC: 0.716814


Results scoring model
   AUC ROC   = 0.64
   AUC PR    = 0.716017
   CLL	      = -0.603887
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.28
   F1        = 0.4375


Total scoring time: 1.078 seconds
Parameter learned model CLL: -0.603887


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [3.235, 25, 18]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 7], 'false': [3.235, 25, 18]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [3.235, 25, 18]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.58e-08, 0, 7], 'false': [3.235, 25, 18]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [3.235, 25, 18]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.29e-08, 0, 7], 'false': [3.235, 25, 18]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [3.235, 25, 18]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.27e-09, 0, 7], 'false': [3.235, 25, 18]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [3.235, 25, 18]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 7], 'false': [3.235, 25, 18]}]]
[{'': [-2.5376526277146434e-16, 0.24337479718766852]}, {'': [6.344131569286608e-17, 0.24337479718766883]}, {'': [-6.344131569286608e-17, 0.24337479718766875]}, {'': [9.516197353929913e-17, 0.24337479718766966]}, {'': [-3.172065784643304e-17, 0.24337479718766852]}, {'': [2.3790493384824782e-17, 0.24337479718766877]}, {'': [-1.586032892321652e-17, 0.24337479718766936]}, {'': [3.96508223080413e-18, 0.24337479718766875]}, {'': [-7.93016446160826e-18, 0.24337479718766927]}, {'': [0.0, 0.2433747971876691]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.6763307532813305;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.23314893509951234;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5728505077589573;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.02176788419240575;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.202334239218108;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.45250734201965837;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.01904987294481035;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.17149281961528923;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.34273989085368034;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.01663677639228948;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.14228146899184058;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2573771265051453;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.014502864105143046;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.11591746118730602;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.19529825339842233;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.01262239661487466;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.09305316265470481;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.15063646694077695;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.010970321301480393;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.07383827012230793;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.11808890552787804;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.009522764707203951;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.05807372983129966;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.09389442014327215;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.00825735549633603;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.04537020502570499;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.07554408412491875;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.007153411981729964;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.03526821680925485;  // std dev = 0,484, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */


Results
   AUC ROC   = 0.867502
   AUC PR    = 0.543306
   CLL	      = -0.409503
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 8.61 seconds
Total inference time: 2.928 seconds
AUC ROC: 0.867502


Results scoring model
   AUC ROC   = 0.844
   AUC PR    = 0.865076
   CLL	      = -0.47234
   Precision = 0.888889 at threshold = 0.5
   Recall    = 0.64
   F1        = 0.744186


Total scoring time: 1.289 seconds
Refined model CLL: -0.47234


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.867502
   AUC PR    = 0.543306
   CLL	      = -0.409503
   Precision = 0.198413 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.305499


Total learning time: 12.462 seconds
Total inference time: 2.928 seconds
AUC ROC: 0.867502
Total revision time: 12.462
Best scored revision CLL: -0.47234


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:02:08
{'Learning time': 12.462, 'Inference time': 2.928, 'parameter_25': {'Learning time': 1.485, 'Inference time': 2.0, 'AUC ROC': 0.716814, 'AUC PR': 0.474529, 'Recall': 0.433628, 'CLL': -0.49715, 'F1': 0.604938, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.867502, 'AUC PR': 0.543306, 'Recall': 0.663717, 'CLL': -0.409503, 'F1': 0.305499, 'Precision': [0.198413, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.3581489350995123;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.02176788419240575;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.3087411357856348;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.01904987294481035;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.2564123687585864;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.3277422784320814;  // std dev = 0,355, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return -0.1500298902743772;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.6448435311560186;  // std dev = 0,271, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.20613740734453953;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.24761992388796894;  // std dev = 0,355, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return -0.13188469456640944;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.5071034526017307;  // std dev = 0,311, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.16162857548414683;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.18974589802627115;  // std dev = 0,355, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return -0.11750406789279828;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.39848512758803273;  // std dev = 0,309, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.12455597792081981;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.14797212744030988;  // std dev = 0,356, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return -0.10585617626177393;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.31894833501348835;  // std dev = 0,286, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.09492800936730669;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.11730688863653245;  // std dev = 0,356, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return -0.09624672330810873;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2612843083095401;  // std dev = 0,257, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.07186088850055856;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.09431465523440463;  // std dev = 0,357, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return -0.08819400975123458;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2188617570943376;  // std dev = 0,229, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.054183073759549595;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordvenue(E, C) )
%   | then if ( haswordtitle(A, C) )
%   | | then return 0.07671965021771443;  // std dev = 0,358, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return -0.08135464579062505;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.186949076561398;  // std dev = 0,204, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.040760253233056355;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */


Results
   AUC ROC   = 0.659972
   AUC PR    = 0.068024
   CLL	      = -0.815884
   Precision = 0.03632 at threshold = 0.5
   Recall    = 0.39823
   F1        = 0.066568


Total learning time: 12.822 seconds
Total inference time: 2.776 seconds
AUC ROC: 0.659972


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 02:02:24
{'Learning time': 12.822, 'Inference time': 2.776, 'AUC ROC': 0.659972, 'AUC PR': 0.068024, 'Recall': 0.39823, 'CLL': -0.815884, 'F1': 0.066568, 'Precision': [0.03632, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.3581489350995123;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */


Results
   AUC ROC   = 0.778358
   AUC PR    = 0.085581
   CLL	      = -0.233383
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.673 seconds
Total inference time: 1.77 seconds
AUC ROC: 0.778358


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 02:02:29
{'Learning time': 2.673, 'Inference time': 1.77, 'AUC ROC': 0.778358, 'AUC PR': 0.085581, 'Recall': 0.0, 'CLL': -0.233383, 'F1': nan, 'Precision': [nan, 0.5]}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 569
Target train neg examples: 23251

Target test facts examples: 8129
Target test pos	 examples: 129
Target test neg examples: 4745

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.12543301544918353;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.10782354562777509;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.09150383240113759;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.07678249969777719;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.06380835741947548;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.05259581166798401;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.043061399542859605;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.03506047229230461;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.028417796087898104;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.318503
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 1.42 seconds
Total inference time: 2.1 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.8
   AUC PR    = 0.873077
   CLL	      = -0.457802
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 0.929 seconds
Parameter learned model CLL: -0.457802


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-08, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 3], 'false': [1.195, 5, 2]}]]
[{'': [1.4802973661668753e-16, 0.20408163265306126]}, {'': [0.0, 0.20408163265306117]}, {'': [3.700743415417188e-17, 0.2040816326530612]}, {'': [-3.700743415417188e-17, 0.20408163265306117]}, {'': [0.0, 0.2040816326530612]}, {'': [0.0, 0.20408163265306117]}, {'': [0.0, 0.2040816326530612]}, {'': [0.0, 0.2040816326530612]}, {'': [-4.625929269271485e-18, 0.2040816326530612]}, {'': [-2.3129646346357427e-18, 0.20408163265306126]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.05002771289938789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.04190386852605735;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.03491396367325339;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.04126932998424626;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.028961035597951046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.032663748734830134;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.023934242922604827;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.714331
   AUC PR    = 0.465102
   CLL	      = -0.300776
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 1.931 seconds
Total inference time: 2.531 seconds
AUC ROC: 0.714331


Results scoring model
   AUC ROC   = 0.82
   AUC PR    = 0.883333
   CLL	      = -0.454858
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 1.033 seconds
Refined model CLL: -0.454858


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.714331
   AUC PR    = 0.465102
   CLL	      = -0.300776
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 5.313000000000001 seconds
Total inference time: 2.531 seconds
AUC ROC: 0.714331
Total revision time: 5.313000000000001
Best scored revision CLL: -0.454858


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:02:39
{'Learning time': 5.313000000000001, 'Inference time': 2.531, 'AUC ROC': 0.714331, 'AUC PR': 0.465102, 'Recall': 0.426357, 'CLL': -0.300776, 'parameter_5': {'Learning time': 1.42, 'Inference time': 2.1, 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'CLL': -0.318503, 'F1': 0.597826, 'Precision': [1.0, 0.5]}, 'F1': 0.597826, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.4295775065280837;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.36887697659770574;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.3027909085849406;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.2393401664098931;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.1843038277162846;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.13977569193759043;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.1052107561348137;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.07895904348963037;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.04126932998424626;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.0592222778258641;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.032663748734830134;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.04444053765471761;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */


Results
   AUC ROC   = 0.500453
   AUC PR    = 0.026493
   CLL	      = -0.682656
   Precision = 0.026497 at threshold = 0.5
   Recall    = 0.775194
   F1        = 0.051243


Total learning time: 2.172 seconds
Total inference time: 2.207 seconds
AUC ROC: 0.500453


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 02:02:44
{'Learning time': 2.172, 'Inference time': 2.207, 'AUC ROC': 0.500453, 'AUC PR': 0.026493, 'Recall': 0.775194, 'CLL': -0.682656, 'F1': 0.051243, 'Precision': [0.026497, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.4295775065280837;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */


Results
   AUC ROC   = 0.500453
   AUC PR    = 0.026493
   CLL	      = -0.254126
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.134 seconds
Total inference time: 1.211 seconds
AUC ROC: 0.500453


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 02:02:47
{'Learning time': 1.134, 'Inference time': 1.211, 'AUC ROC': 0.500453, 'AUC PR': 0.026493, 'Recall': 0.0, 'CLL': -0.254126, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.23314893509951234;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.202334239218108;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.17149281961528923;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.14228146899184058;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.11591746118730602;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.09305316265470481;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.07383827012230793;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.05807372983129966;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.04537020502570499;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.03526821680925485;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.433395
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 1.472 seconds
Total inference time: 2.053 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.779088
   CLL	      = -0.555937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 1.032 seconds
Parameter learned model CLL: -0.555937


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 4], 'false': [1.936, 10, 6]}]]
[{'': [0.0, 0.23437500000000006]}, {'': [0.0, 0.23437500000000008]}, {'': [0.0, 0.23437500000000017]}, {'': [0.0, 0.23437499999999997]}, {'': [0.0, 0.23437500000000008]}, {'': [0.0, 0.23437500000000003]}, {'': [0.0, 0.2343750000000001]}, {'': [0.0, 0.23437500000000008]}, {'': [0.0, 0.2343749999999999]}, {'': [0.0, 0.23437499999999983]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1438632208137979;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.12543301544918353;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6419486100244409;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.11540689327147863;  // std dev = 0,463, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.48547486813963053;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.0958024581425545;  // std dev = 0,463, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.25724846199421847;  // std dev = 0,769, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.07481186332396915;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.19743210182835041;  // std dev = 0,771, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.062092313568766;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.1533675275724078;  // std dev = 0,775, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.05112750104019849;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.12067937951096686;  // std dev = 0,779, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.04182302622999291;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.09607739484095598;  // std dev = 0,783, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.03402815594737322;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.07726420697201833;  // std dev = 0,786, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.02756530016102746;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Results
   AUC ROC   = 0.757534
   AUC PR    = 0.506619
   CLL	      = -0.437522
   Precision = 0.063158 at threshold = 0.5
   Recall    = 0.55814
   F1        = 0.113475


Total learning time: 3.01 seconds
Total inference time: 2.251 seconds
AUC ROC: 0.757534


Results scoring model
   AUC ROC   = 0.925
   AUC PR    = 0.942139
   CLL	      = -0.352199
   Precision = 0.888889 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.842105


Total scoring time: 1.139 seconds
Refined model CLL: -0.352199


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.757534
   AUC PR    = 0.506619
   CLL	      = -0.437522
   Precision = 0.063158 at threshold = 0.5
   Recall    = 0.55814
   F1        = 0.113475


Total learning time: 6.653 seconds
Total inference time: 2.251 seconds
AUC ROC: 0.757534
Total revision time: 6.653
Best scored revision CLL: -0.352199


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:02:58
{'Learning time': 6.653, 'Inference time': 2.251, 'AUC ROC': 0.757534, 'AUC PR': 0.506619, 'Recall': 0.55814, 'CLL': -0.437522, 'parameter_10': {'Learning time': 1.472, 'Inference time': 2.053, 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'CLL': -0.433395, 'F1': 0.597826, 'Precision': [1.0, 0.5]}, 'F1': 0.113475, 'Precision': [0.063158, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3581489350995123;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.30874113578563506;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.46125983910675533;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2564123687585864;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.3488463256948422;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.20613740734453975;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.26212705508354184;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.16162857548414675;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.19945264276423433;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1245559779208197;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.15451336627983223;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.09492800936730683;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.12179491558002796;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.07186088850055855;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.26412021434748356;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.005839263857538478;  // std dev = 0,512, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.2160589349145503;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.0044477660491922715;  // std dev = 0,512, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */


Results
   AUC ROC   = 0.583386
   AUC PR    = 0.058632
   CLL	      = -0.672375
   Precision = 0.026436 at threshold = 0.5
   Recall    = 0.224806
   F1        = 0.047308


Total learning time: 3.026 seconds
Total inference time: 2.302 seconds
AUC ROC: 0.583386


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 02:03:04
{'Learning time': 3.026, 'Inference time': 2.302, 'AUC ROC': 0.583386, 'AUC PR': 0.058632, 'Recall': 0.224806, 'CLL': -0.672375, 'F1': 0.047308, 'Precision': [0.026436, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3581489350995123;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */


Results
   AUC ROC   = 0.563635
   AUC PR    = 0.029256
   CLL	      = -0.250828
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.338 seconds
Total inference time: 1.271 seconds
AUC ROC: 0.563635


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 02:03:07
{'Learning time': 1.338, 'Inference time': 1.271, 'AUC ROC': 0.563635, 'AUC PR': 0.029256, 'Recall': 0.0, 'CLL': -0.250828, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.23314893509951237;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.202334239218108;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.1714928196152892;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.14228146899184058;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.11591746118730585;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.09305316265470505;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.07383827012230793;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.05807372983129966;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.04537020502570499;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.03526821680925496;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.433395
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 1.53 seconds
Total inference time: 2.067 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.777338
   CLL	      = -0.555937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 1.046 seconds
Parameter learned model CLL: -0.555937


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.27e-09, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 6], 'false': [2.372, 15, 9]}]]
[{'': [-1.4802973661668753e-16, 0.23437500000000003]}, {'': [7.401486830834377e-17, 0.2343750000000001]}, {'': [-7.401486830834377e-17, 0.2343750000000003]}, {'': [7.401486830834377e-17, 0.23437499999999997]}, {'': [-3.700743415417188e-17, 0.23437499999999986]}, {'': [9.25185853854297e-18, 0.23437499999999997]}, {'': [-9.25185853854297e-18, 0.23437499999999986]}, {'': [4.625929269271485e-18, 0.2343750000000001]}, {'': [-4.625929269271485e-18, 0.2343749999999999]}, {'': [0.0, 0.2343749999999998]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.22178529873587596;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.19258789115538322;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.16352953408429413;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.13606878407651105;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.11126948691064746;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.05002771289938789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.08970341513165919;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04190386852605735;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07150513066226619;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.03491396367325339;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.056501932792643365;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.028961035597951046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.04434895786191332;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.023934242922604827;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.034633754785669255;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */


Results
   AUC ROC   = 0.820923
   AUC PR    = 0.222179
   CLL	      = -0.36891
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 4.745 seconds
Total inference time: 2.723 seconds
AUC ROC: 0.820923


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.921062
   CLL	      = -0.368754
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.8


Total scoring time: 1.008 seconds
Refined model CLL: -0.368754


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.820923
   AUC PR    = 0.222179
   CLL	      = -0.36891
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 8.329 seconds
Total inference time: 2.723 seconds
AUC ROC: 0.820923
Total revision time: 8.329
Best scored revision CLL: -0.368754


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:03:21
{'Learning time': 8.329, 'Inference time': 2.723, 'AUC ROC': 0.820923, 'AUC PR': 0.222179, 'Recall': 0.534884, 'CLL': -0.36891, 'parameter_15': {'Learning time': 1.53, 'Inference time': 2.067, 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'CLL': -0.433395, 'F1': 0.597826, 'Precision': [1.0, 0.5]}, 'F1': 0.422018, 'Precision': [0.348485, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.42064893509951234;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.361386758207022;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.19960153392504562;  // std dev = 0,467, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.13380875185017596;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.25638869173168294;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.11904521520714725;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.19940918138912872;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.05002771289938789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.09042860653985224;  // std dev = 0,447, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11607665738330082;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.04190386852605735;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.13011728644982898;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.03491396367325339;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.10468721037317308;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.09794519599212531;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09527329205693348;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.028961035597951046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.07351666940010165;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.023934242922604827;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.08737174440425513;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.05513981700954632;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */


Results
   AUC ROC   = 0.718534
   AUC PR    = 0.076763
   CLL	      = -0.558471
   Precision = 0.040487 at threshold = 0.5
   Recall    = 0.953488
   F1        = 0.077676


Total learning time: 5.088 seconds
Total inference time: 2.537 seconds
AUC ROC: 0.718534


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 02:03:29
{'Learning time': 5.088, 'Inference time': 2.537, 'AUC ROC': 0.718534, 'AUC PR': 0.076763, 'Recall': 0.953488, 'CLL': -0.558471, 'F1': 0.077676, 'Precision': [0.040487, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.42064893509951234;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */


Results
   AUC ROC   = 0.718409
   AUC PR    = 0.076758
   CLL	      = -0.235255
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.833 seconds
Total inference time: 1.567 seconds
AUC ROC: 0.718409


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 02:03:32
{'Learning time': 1.833, 'Inference time': 1.567, 'AUC ROC': 0.718409, 'AUC PR': 0.076758, 'Recall': 0.0, 'CLL': -0.235255, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.2129876447769317;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.1850340567651117;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.15733633666574967;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.13120969089740736;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.10760714862133729;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.08704103420637159;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.06963300017480052;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.05522774314863855;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.04351183703267405;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.03410706771080944;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.405624
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 1.461 seconds
Total inference time: 2.077 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.725
   AUC PR    = 0.799619
   CLL	      = -0.533842
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.45
   F1        = 0.62069


Total scoring time: 0.957 seconds
Parameter learned model CLL: -0.533842


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [3.33e-08, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.83e-08, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 9], 'false': [2.664, 20, 11]}]]
[{'': [-2.9605947323337506e-16, 0.22892819979188297]}, {'': [9.868649107779169e-17, 0.2289281997918835]}, {'': [-1.4802973661668753e-16, 0.22892819979188325]}, {'': [1.2335811384723962e-16, 0.2289281997918837]}, {'': [-3.700743415417188e-17, 0.2289281997918834]}, {'': [3.700743415417188e-17, 0.22892819979188345]}, {'': [-2.4671622769447922e-17, 0.22892819979188314]}, {'': [6.1679056923619804e-18, 0.2289281997918836]}, {'': [-3.0839528461809902e-18, 0.22892819979188334]}, {'': [0.0, 0.22892819979188359]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.2867203636709409;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.24811816884741297;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.20848477447886868;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.038428662236904595;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.17062637354018512;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.03315494592188569;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.13664585375352212;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.02849510592572117;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.10762034996184425;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.024408230135271946;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.08372807955323866;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.020846889108740264;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.06457405393631672;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.017760671541598484;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.04949778322519479;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.015098879183171288;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.03777940363354101;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */


Results
   AUC ROC   = 0.826718
   AUC PR    = 0.521095
   CLL	      = -0.393773
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 5.213 seconds
Total inference time: 2.686 seconds
AUC ROC: 0.826718


Results scoring model
   AUC ROC   = 0.8925
   AUC PR    = 0.906799
   CLL	      = -0.405405
   Precision = 0.928571 at threshold = 0.5
   Recall    = 0.65
   F1        = 0.764706


Total scoring time: 1.169 seconds
Refined model CLL: -0.405405


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826718
   AUC PR    = 0.521095
   CLL	      = -0.393773
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 8.8 seconds
Total inference time: 2.686 seconds
AUC ROC: 0.826718
Total revision time: 8.8
Best scored revision CLL: -0.405405


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:03:47
{'Learning time': 8.8, 'Inference time': 2.686, 'AUC ROC': 0.826718, 'AUC PR': 0.521095, 'Recall': 0.534884, 'CLL': -0.393773, 'parameter_20': {'Learning time': 1.461, 'Inference time': 2.077, 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'CLL': -0.405624, 'F1': 0.597826, 'Precision': [1.0, 0.5]}, 'F1': 0.422018, 'Precision': [0.348485, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.4581489350995123;  // std dev = 0,490, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.6189976143448207;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.25843597043860145;  // std dev = 0,479, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.4851287515461648;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.15664378347507615;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.3471397140555852;  // std dev = 0,490, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.36568225360444984;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.13704432933453295;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0.22863041095797457;  // std dev = 0,483, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.27560196347331406;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.12162797656623327;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.0050172046649223255;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.22425423827172658;  // std dev = 0,490, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.21158287903019785;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.10922020458762005;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.004228476255732694;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.17037731008419174;  // std dev = 0,490, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.16608044254560703;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.09903872080352241;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0.10329103147504512;  // std dev = 0,476, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.13303193637503513;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.0905456954258007;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.01325498934295074;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.10243057825853197;  // std dev = 0,490, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.10839224498101034;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.08336079681856236;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.011039555895114472;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.07683953877422259;  // std dev = 0,490, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.08956128580326395;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.07720829759298133;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.009207312740412487;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.05771431652388226;  // std dev = 0,490, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */


Results
   AUC ROC   = 0.718784
   AUC PR    = 0.076771
   CLL	      = -0.579722
   Precision = 0.040487 at threshold = 0.5
   Recall    = 0.953488
   F1        = 0.077676


Total learning time: 7.014 seconds
Total inference time: 2.561 seconds
AUC ROC: 0.718784


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 02:03:57
{'Learning time': 7.014, 'Inference time': 2.561, 'AUC ROC': 0.718784, 'AUC PR': 0.076771, 'Recall': 0.953488, 'CLL': -0.579722, 'F1': 0.077676, 'Precision': [0.040487, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.4581489350995123;  // std dev = 0,490, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */


Results
   AUC ROC   = 0.718409
   AUC PR    = 0.076758
   CLL	      = -0.237197
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.418 seconds
Total inference time: 1.55 seconds
AUC ROC: 0.718409


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 02:04:01
{'Learning time': 2.418, 'Inference time': 1.55, 'AUC ROC': 0.718409, 'AUC PR': 0.076758, 'Recall': 0.0, 'CLL': -0.237197, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.21712329407387132;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.18858590291629596;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.16025072096919057;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.13349925975782642;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.10933578465970169;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.08830023309949626;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.07052043384242647;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.05583321527207684;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.04391069237466862;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return 0.034358795335119346;  // std dev = 2,996, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */


Results
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.411234
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total learning time: 1.572 seconds
Total inference time: 1.921 seconds
AUC ROC: 0.713178


Results scoring model
   AUC ROC   = 0.72
   AUC PR    = 0.794841
   CLL	      = -0.538373
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44
   F1        = 0.611111


Total scoring time: 1.046 seconds
Parameter learned model CLL: -0.538373


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 11], 'false': [2.996, 25, 14]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.27e-09, 0, 11], 'false': [2.996, 25, 14]}]]
[{'': [-1.6148698540002277e-16, 0.23011176857330654]}, {'': [1.6148698540002277e-16, 0.2301117685733073]}, {'': [-2.0185873175002846e-16, 0.23011176857330662]}, {'': [1.6148698540002277e-16, 0.2301117685733073]}, {'': [-6.055761952500853e-17, 0.23011176857330676]}, {'': [4.0371746350005693e-17, 0.23011176857330723]}, {'': [-2.5232341468753557e-17, 0.23011176857330662]}, {'': [5.046468293750712e-18, 0.23011176857330717]}, {'': [5.046468293750712e-18, 0.2301117685733071]}, {'': [2.523234146875356e-18, 0.23011176857330723]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.26723984419042146;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.23150070816971172;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.46125983910675533;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.19513777880289396;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3488463256948422;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.16049627291563687;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.26212705508354184;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.07976544060603055;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.19082279468808722;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.19945264276423433;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.10199632335914822;  // std dev = 2,283, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.15451336627983223;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.07993590930442375;  // std dev = 2,282, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then return 0.04197206516111194;  // std dev = 0,415, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11325714403455021;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.1097076236631831;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.043823971249075305;  // std dev = 2,099, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09100667769160216;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07928765935103545;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04983231552328911;  // std dev = 2,271, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.416344
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 7.835 seconds
Total inference time: 2.831 seconds
AUC ROC: 0.826968


Results scoring model
   AUC ROC   = 0.9064
   AUC PR    = 0.915358
   CLL	      = -0.391764
   Precision = 0.941176 at threshold = 0.5
   Recall    = 0.64
   F1        = 0.761905


Total scoring time: 1.225 seconds
Refined model CLL: -0.391764


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.826968
   AUC PR    = 0.521103
   CLL	      = -0.416344
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total learning time: 11.677999999999999 seconds
Total inference time: 2.831 seconds
AUC ROC: 0.826968
Total revision time: 11.677999999999999
Best scored revision CLL: -0.391764


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:04:18
{'Learning time': 11.677999999999999, 'Inference time': 2.831, 'parameter_25': {'Learning time': 1.572, 'Inference time': 1.921, 'AUC ROC': 0.713178, 'AUC PR': 0.464756, 'Recall': 0.426357, 'CLL': -0.411234, 'F1': 0.597826, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.826968, 'AUC PR': 0.521103, 'Recall': 0.534884, 'CLL': -0.416344, 'F1': 0.422018, 'Precision': [0.348485, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.424815601766179;  // std dev = 0,496, 30,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3322346191247583;  // std dev = 0,479, 47,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5616560988190522;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1666418718448515;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06058123318224462;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3794187668177551;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4285731087800901;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.14476577124253612;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.04907887386899651;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3000531347579319;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.32191833203528564;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.12774741062687764;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.04001269960700754;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.22988206865840355;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.24519799958361832;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.114176573288852;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.1389927687308138;  // std dev = 0,474, 30,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1911364426377214;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.058528685725619756;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.08003786104010382;  // std dev = 0,430, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.1524085761667089;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.11076898825580159;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.04746869596170507;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.11865427692607092;  // std dev = 0,480, 25,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12391177835287542;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.10031953677742421;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.03873503169150131;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08915409082256726;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10236892588487623;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.09162120411977889;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.03176669472680077;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06721006683711125;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.718784
   AUC PR    = 0.076771
   CLL	      = -0.629231
   Precision = 0.040487 at threshold = 0.5
   Recall    = 0.953488
   F1        = 0.077676


Total learning time: 17.018 seconds
Total inference time: 2.783 seconds
AUC ROC: 0.718784


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 02:04:38
{'Learning time': 17.018, 'Inference time': 2.783, 'AUC ROC': 0.718784, 'AUC PR': 0.076771, 'Recall': 0.953488, 'CLL': -0.629231, 'F1': 0.077676, 'Precision': [0.040487, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4981489350995123;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.718659
   AUC PR    = 0.076768
   CLL	      = -0.241134
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.901 seconds
Total inference time: 1.714 seconds
AUC ROC: 0.718659


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 02:04:43
{'Learning time': 2.901, 'Inference time': 1.714, 'AUC ROC': 0.718659, 'AUC PR': 0.076768, 'Recall': 0.0, 'CLL': -0.241134, 'F1': nan, 'Precision': [nan, 0.5]}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 544
Target train neg examples: 22302

Target test facts examples: 8644
Target test pos	 examples: 154
Target test neg examples: 5694

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2564123687585864;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.20613740734453975;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.16162857548414675;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.1245559779208197;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.09492800936730683;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07186088850055855;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05418307375954949;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.04076025323305626;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.562346
   AUC PR    = 0.029973
   CLL	      = -0.57857
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.328 seconds
Total inference time: 2.36 seconds
AUC ROC: 0.562346


Results scoring model
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total scoring time: 1.012 seconds
Parameter learned model CLL: -0.695026


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'true': [1.581, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.24999999999999983, nan]}, {'': [0.24999999999999994, nan]}, {'': [0.25000000000000006, nan]}, {'': [0.24999999999999992, nan]}, {'': [0.24999999999999994, nan]}, {'': [0.24999999999999986, nan]}, {'': [0.25, nan]}, {'': [0.25000000000000006, nan]}, {'': [0.25, nan]}, {'': [0.24999999999999994, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.05002771289938789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.04190386852605735;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.03491396367325339;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.028961035597951046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return 0.023934242922604827;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.538972
   AUC PR    = 0.028139
   CLL	      = -0.669979
   Precision = 0.027605 at threshold = 0.5
   Recall    = 0.603896
   F1        = 0.052796


Total learning time: 2.248 seconds
Total inference time: 2.673 seconds
AUC ROC: 0.538972


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.65
   CLL	      = -0.609339
   Precision = 0.666667 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.727273


Total scoring time: 1.05 seconds
Refined model CLL: -0.609339


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.538972
   AUC PR    = 0.028139
   CLL	      = -0.669979
   Precision = 0.027605 at threshold = 0.5
   Recall    = 0.603896
   F1        = 0.052796


Total learning time: 5.638 seconds
Total inference time: 2.673 seconds
AUC ROC: 0.538972
Total revision time: 5.638
Best scored revision CLL: -0.609339


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:04:55
{'Learning time': 5.638, 'Inference time': 2.673, 'AUC ROC': 0.538972, 'AUC PR': 0.028139, 'Recall': 0.603896, 'CLL': -0.669979, 'parameter_5': {'Learning time': 1.328, 'Inference time': 2.36, 'AUC ROC': 0.562346, 'AUC PR': 0.029973, 'Recall': 0.0, 'CLL': -0.57857, 'F1': nan, 'Precision': [nan, 0.5]}, 'F1': 0.052796, 'Precision': [0.027605, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.09446743783575562;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.08165239320886175;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.06990902274840138;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.059354635365447495;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.05002771289938789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.04190386852605735;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.03491396367325339;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.028961035597951046;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.023934242922604827;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.469405
   AUC PR    = 0.024501
   CLL	      = -0.746449
   Precision = 0.023969 at threshold = 0.5
   Recall    = 0.603896
   F1        = 0.046108


Total learning time: 1.961 seconds
Total inference time: 1.902 seconds
AUC ROC: 0.469405


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 02:04:59
{'Learning time': 1.961, 'Inference time': 1.902, 'AUC ROC': 0.469405, 'AUC PR': 0.024501, 'Recall': 0.603896, 'CLL': -0.746449, 'F1': 0.046108, 'Precision': [0.023969, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.469405
   AUC PR    = 0.024501
   CLL	      = -0.25828
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.212 seconds
Total inference time: 1.227 seconds
AUC ROC: 0.469405


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 02:05:01
{'Learning time': 1.212, 'Inference time': 1.227, 'AUC ROC': 0.469405, 'AUC PR': 0.024501, 'Recall': 0.0, 'CLL': -0.25828, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.1914822684328457;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.1665388245648817;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.14209424281556463;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.11914890490746437;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.09841340278401871;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.08026654944252239;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.06479591611329234;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.051879169344040466;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.04126932998424623;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.032663748734830175;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.375981
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 1.504 seconds
Total inference time: 2.213 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.75
   AUC PR    = 0.82372
   CLL	      = -0.510268
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.666667


Total scoring time: 1.069 seconds
Parameter learned model CLL: -0.510268


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.49e-08, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [1.826, 10, 5]}]]
[{'': [0.0, 0.22222222222222202]}, {'': [0.0, 0.22222222222222238]}, {'': [-4.4408920985006264e-17, 0.22222222222222215]}, {'': [4.4408920985006264e-17, 0.22222222222222218]}, {'': [-2.2204460492503132e-17, 0.22222222222222215]}, {'': [0.0, 0.22222222222222207]}, {'': [-5.551115123125783e-18, 0.22222222222222232]}, {'': [0.0, 0.22222222222222218]}, {'': [0.0, 0.22222222222222213]}, {'': [0.0, 0.22222222222222202]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.274815601766179;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.16094778529816064;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2468430946760637;  // std dev = 0,486, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.14046514382051048;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20928635141770305;  // std dev = 0,485, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.15502053333383767;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.18057360568044648;  // std dev = 0,478, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.13601060321817224;  // std dev = 0,065, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.14687271709931596;  // std dev = 0,477, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.1461976761155184;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.1236721714348276;  // std dev = 0,472, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.1292038170936662;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.09800872992210903;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.13517077183499493;  // std dev = 0,096, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.08177953970912154;  // std dev = 0,468, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.12048917480099886;  // std dev = 0,086, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.06394615775416645;  // std dev = 0,467, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then return -0.12418045996883631;  // std dev = 0,098, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.053636670618961414;  // std dev = 0,465, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */


Results
   AUC ROC   = 0.694317
   AUC PR    = 0.506392
   CLL	      = -0.318713
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 2.384 seconds
Total inference time: 2.417 seconds
AUC ROC: 0.694317


Results scoring model
   AUC ROC   = 0.875
   AUC PR    = 0.888783
   CLL	      = -0.418615
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.666667


Total scoring time: 0.958 seconds
Refined model CLL: -0.418615


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.694317
   AUC PR    = 0.506392
   CLL	      = -0.318713
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 5.915 seconds
Total inference time: 2.417 seconds
AUC ROC: 0.694317
Total revision time: 5.915
Best scored revision CLL: -0.418615


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:05:13
{'Learning time': 5.915, 'Inference time': 2.417, 'AUC ROC': 0.694317, 'AUC PR': 0.506392, 'Recall': 0.467532, 'CLL': -0.318713, 'parameter_10': {'Learning time': 1.504, 'Inference time': 2.213, 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'CLL': -0.375981, 'F1': 0.637168, 'Precision': [1.0, 0.5]}, 'F1': 0.637168, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( haswordtitle(A, C), haswordauthor(E, C) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2867203636709409;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.19679605985557097;  // std dev = 1,068, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.3195467402759844;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.15467653205222245;  // std dev = 1,080, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.27093936576066363;  // std dev = 0,497, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.12494584059512803;  // std dev = 1,079, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.21966219518040886;  // std dev = 0,496, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.0920196685268905;  // std dev = 1,091, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.1763748138873229;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.07206999339641063;  // std dev = 1,091, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.1366886740417366;  // std dev = 0,492, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.05048775138514885;  // std dev = 1,101, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.10685967681878938;  // std dev = 0,490, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.03892450877347735;  // std dev = 1,101, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.08115701972143519;  // std dev = 0,490, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.026332475355140838;  // std dev = 1,108, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.06281630346925272;  // std dev = 0,488, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.06840311429118533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.020151200718552607;  // std dev = 1,108, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.04735353483343696;  // std dev = 0,488, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.052078905701252655;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.467548
   AUC PR    = 0.025077
   CLL	      = -0.589965
   Precision = 0.008065 at threshold = 0.5
   Recall    = 0.019481
   F1        = 0.011407


Total learning time: 15.306 seconds
Total inference time: 2.95 seconds
AUC ROC: 0.467548


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 02:05:31
{'Learning time': 15.306, 'Inference time': 2.95, 'AUC ROC': 0.467548, 'AUC PR': 0.025077, 'Recall': 0.019481, 'CLL': -0.589965, 'F1': 0.011407, 'Precision': [0.008065, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( haswordtitle(A, C), haswordauthor(E, C) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2867203636709409;  // std dev = 0,495, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.596542
   AUC PR    = 0.039466
   CLL	      = -0.246229
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 5.077 seconds
Total inference time: 2.368 seconds
AUC ROC: 0.596542


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 02:05:39
{'Learning time': 5.077, 'Inference time': 2.368, 'AUC ROC': 0.596542, 'AUC PR': 0.039466, 'Recall': 0.0, 'CLL': -0.246229, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.2581489350995123;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.22373365448410582;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.1888683221574971;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.15570029437174387;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.1258262822937211;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.1000891691788054;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.07866279780602582;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.06127260860742249;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.04741549148811444;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.036517889972878886;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.468351
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 1.421 seconds
Total inference time: 2.406 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.666667
   AUC PR    = 0.744924
   CLL	      = -0.583386
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.333333
   F1        = 0.5


Total scoring time: 1.127 seconds
Parameter learned model CLL: -0.583386


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [2.449, 15, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [2.449, 15, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [2.449, 15, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.49e-08, 0, 5], 'false': [2.449, 15, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [2.449, 15, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [2.449, 15, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [2.449, 15, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [2.449, 15, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [2.449, 15, 10]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 5], 'false': [2.449, 15, 10]}]]
[{'': [0.0, 0.24000000000000005]}, {'': [0.0, 0.24000000000000024]}, {'': [-4.4408920985006264e-17, 0.24000000000000005]}, {'': [4.4408920985006264e-17, 0.24000000000000013]}, {'': [-2.2204460492503132e-17, 0.23999999999999982]}, {'': [0.0, 0.2399999999999998]}, {'': [-5.551115123125783e-18, 0.23999999999999996]}, {'': [0.0, 0.23999999999999988]}, {'': [0.0, 0.23999999999999988]}, {'': [0.0, 0.24]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.27021896952830904;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5064123687585864;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then return 0.15383689565110176;  // std dev = 0,488, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.40174026742596936;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.038428662236904595;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then return 0.12541152596544677;  // std dev = 0,489, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.30600334774779525;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.03315494592188569;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then return 0.10061874607647711;  // std dev = 0,489, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.0464613363086396;  // std dev = 1,074, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.02849510592572117;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.15242473648942176;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2181662702918746;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.024408230135271946;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then return 0.05017439008079334;  // std dev = 0,486, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.004212776087146745;  // std dev = 1,045, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.020846889108740264;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.10808182682644966;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.16545465425532266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.017760671541598484;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then return 0.018024509007338516;  // std dev = 0,483, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.04126932998424626;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.03092706176003464;  // std dev = 1,022, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.015098879183171288;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.07900351388676037;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.032663748734830134;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.893994
   AUC PR    = 0.569832
   CLL	      = -0.445542
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 8.318 seconds
Total inference time: 2.939 seconds
AUC ROC: 0.893994


Results scoring model
   AUC ROC   = 0.802222
   AUC PR    = 0.840592
   CLL	      = -0.531595
   Precision = 0.888889 at threshold = 0.5
   Recall    = 0.533333
   F1        = 0.666667


Total scoring time: 1.069 seconds
Refined model CLL: -0.531595


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.893994
   AUC PR    = 0.569832
   CLL	      = -0.445542
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 11.934999999999999 seconds
Total inference time: 2.939 seconds
AUC ROC: 0.893994
Total revision time: 11.934999999999999
Best scored revision CLL: -0.531595


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:05:57
{'Learning time': 11.934999999999999, 'Inference time': 2.939, 'AUC ROC': 0.893994, 'AUC PR': 0.569832, 'Recall': 0.714286, 'CLL': -0.445542, 'parameter_15': {'Learning time': 1.421, 'Inference time': 2.406, 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'CLL': -0.468351, 'F1': 0.637168, 'Precision': [1.0, 0.5]}, 'F1': 0.272277, 'Precision': [0.168196, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.4831489350995123;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then return 0.3966104735610508;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.4136573287083126;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.050922032513554226;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then return 0.3411827428099923;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.3366053739648666;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.04434629760466851;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then return 0.2815735770744797;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.47130891878202325;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.038428662236904595;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.1461044373399572;  // std dev = 0,505, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.3571351904717271;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.03315494592188569;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.11352675732272939;  // std dev = 0,505, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.26824091264973754;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.02849510592572117;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.08721675056403724;  // std dev = 0,506, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.04154953733329474;  // std dev = 0,428, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.024408230135271946;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then return 0.14523872917256325;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.19419039365164434;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.020846889108740264;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.03467892369449928;  // std dev = 0,502, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.15071375601401277;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.017760671541598484;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then return 0.02615333000540872;  // std dev = 0,502, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return -0.028427513437443194;  // std dev = 0,412, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.015098879183171288;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then return 0.09514538015063326;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.753939
   AUC PR    = 0.067752
   CLL	      = -0.592261
   Precision = 0.073885 at threshold = 0.5
   Recall    = 0.376623
   F1        = 0.123536


Total learning time: 14.098 seconds
Total inference time: 3.027 seconds
AUC ROC: 0.753939


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 02:06:15
{'Learning time': 14.098, 'Inference time': 3.027, 'AUC ROC': 0.753939, 'AUC PR': 0.067752, 'Recall': 0.376623, 'CLL': -0.592261, 'F1': 0.123536, 'Precision': [0.073885, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.4831489350995123;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then return 0.3966104735610508;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.578113
   AUC PR    = 0.029809
   CLL	      = -0.249564
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.186 seconds
Total inference time: 1.476 seconds
AUC ROC: 0.578113


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 02:06:20
{'Learning time': 3.186, 'Inference time': 1.476, 'AUC ROC': 0.578113, 'AUC PR': 0.029809, 'Recall': 0.0, 'CLL': -0.249564, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.23314893509951234;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.2023342392181077;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.17149281961528942;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.14228146899184044;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.11591746118730595;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.09305316265470504;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.0738382701223079;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.05807372983129966;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.04537020502570499;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return 0.03526821680925506;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.432356
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 1.437 seconds
Total inference time: 2.344 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.776709
   CLL	      = -0.555937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 1.099 seconds
Parameter learned model CLL: -0.555937


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.49e-08, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [7.45e-09, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.739, 20, 12]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 8], 'false': [2.739, 20, 12]}]]
[{'': [-2.220446049250313e-16, 0.2343749999999995]}, {'': [1.1102230246251565e-16, 0.23437500000000022]}, {'': [-1.1102230246251565e-16, 0.23437499999999994]}, {'': [1.1102230246251565e-16, 0.234375]}, {'': [-4.163336342344337e-17, 0.23437499999999986]}, {'': [2.7755575615628914e-17, 0.23437499999999992]}, {'': [-2.0816681711721685e-17, 0.2343749999999998]}, {'': [6.938893903907228e-18, 0.2343750000000001]}, {'': [-3.469446951953614e-18, 0.23437499999999986]}, {'': [0.0, 0.2343749999999998]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.26991364098186527;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.8227441316001013;  // std dev = 0,038, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1705941154152085;  // std dev = 0,071, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.4842596780734232;  // std dev = 0,811, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.2539869814363042;  // std dev = 1,031, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.016088946464289905;  // std dev = 0,773, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.18290820216831885;  // std dev = 1,718, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.20601199274082396;  // std dev = 1,008, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.01407288844229651;  // std dev = 0,772, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.15044329036958398;  // std dev = 1,690, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3653093476927846;  // std dev = 0,702, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.012291719547714816;  // std dev = 0,770, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then return 0.08362539840839187;  // std dev = 0,399, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2793754811249745;  // std dev = 0,687, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.0107223929220961;  // std dev = 0,769, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then return 0.06702272564645387;  // std dev = 0,396, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.21236169760247176;  // std dev = 0,682, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.009343040105623951;  // std dev = 0,768, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then return 0.05334277587850946;  // std dev = 0,394, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return 0.015092828471626055;  // std dev = 0,852, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.008133216128172202;  // std dev = 0,768, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.0800434217493729;  // std dev = 1,642, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.15873073684473094;  // std dev = 0,683, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.007074036391796407;  // std dev = 0,767, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then return 0.026600677373703377;  // std dev = 0,389, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return 0.04126932998424626;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then return -0.014240154038380878;  // std dev = 0,834, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.0061482305411005205;  // std dev = 0,766, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.05716385456665933;  // std dev = 1,631, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.032663748734830134;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.988822
   AUC PR    = 0.887964
   CLL	      = -0.348955
   Precision = 0.654971 at threshold = 0.5
   Recall    = 0.727273
   F1        = 0.689231


Total learning time: 22.899 seconds
Total inference time: 6.958 seconds
AUC ROC: 0.988822


Results scoring model
   AUC ROC   = 0.97875
   AUC PR    = 0.980749
   CLL	      = -0.39391
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.55
   F1        = 0.709677


Total scoring time: 1.716 seconds
Refined model CLL: -0.39391


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988822
   AUC PR    = 0.887964
   CLL	      = -0.348955
   Precision = 0.654971 at threshold = 0.5
   Recall    = 0.727273
   F1        = 0.689231


Total learning time: 27.151000000000003 seconds
Total inference time: 6.958 seconds
AUC ROC: 0.988822
Total revision time: 27.151000000000003
Best scored revision CLL: -0.39391


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:06:57
{'Learning time': 27.151000000000003, 'Inference time': 6.958, 'AUC ROC': 0.988822, 'AUC PR': 0.887964, 'Recall': 0.727273, 'CLL': -0.348955, 'parameter_20': {'Learning time': 1.437, 'Inference time': 2.344, 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'CLL': -0.432356, 'F1': 0.637168, 'Precision': [1.0, 0.5]}, 'F1': 0.689231, 'Precision': [0.654971, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.4831489350995123;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then if ( title(I, B), venue(I, H) )
%   | | | then return 0.3844647245731965;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.4136573287083126;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.02176788419240575;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then if ( title(I, B), venue(I, H) )
%   | | | then return 0.33095332360970464;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.3366053739648666;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.01904987294481035;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then if ( title(I, B), venue(I, H) )
%   | | | then return 0.27367588493199535;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.47130891878202325;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.01663677639228948;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then if ( title(G, B), venue(G, F) )
%   | | then return 0.16331902780005272;  // std dev = 0,505, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.3571351904717271;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.014502864105143046;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then if ( title(G, B), venue(G, F) )
%   | | then if ( samebib(G, H), title(H, A) )
%   | | | then return 0.6564665016246556;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.3538959716182151;  // std dev = 0,073, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.26824091264973754;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.01262239661487466;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then if ( title(G, B), venue(G, F) )
%   | | then if ( samebib(G, H), title(H, A) )
%   | | | then return 0.4977801489503991;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.2778521403162801;  // std dev = 0,065, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.20382767731324045;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.010970321301480393;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then if ( title(G, B), venue(G, F) )
%   | | then if ( samebib(G, H), title(H, A) )
%   | | | then return 0.3759769164450036;  // std dev = 1,49e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.22574507277380243;  // std dev = 0,057, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.15766748346714562;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.009522764707203951;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then if ( title(G, B), venue(G, F) )
%   | | then if ( samebib(G, H), title(H, A) )
%   | | | then return 0.2926317236180114;  // std dev = 1,49e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.18879152275374558;  // std dev = 0,050, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.12411477416757849;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.00825735549633603;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then if ( title(G, B), venue(G, F) )
%   | | then if ( samebib(G, H), title(H, A) )
%   | | | then return 0.23590404354245947;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1615951393503655;  // std dev = 0,045, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.06840311429118533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.0991978804420491;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.007153411981729964;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then if ( title(G, B), venue(G, F) )
%   | | then if ( samebib(G, H), title(H, A) )
%   | | | then return 0.19604922049656737;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1409044491918324;  // std dev = 0,040, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.052078905701252655;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.960536
   AUC PR    = 0.666408
   CLL	      = -0.400288
   Precision = 0.100749 at threshold = 0.5
   Recall    = 0.961039
   F1        = 0.182378


Total learning time: 76.203 seconds
Total inference time: 25.242 seconds
AUC ROC: 0.960536


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 02:08:39
{'Learning time': 76.203, 'Inference time': 25.242, 'AUC ROC': 0.960536, 'AUC PR': 0.666408, 'Recall': 0.961039, 'CLL': -0.400288, 'F1': 0.182378, 'Precision': [0.100749, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.4831489350995123;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then if ( title(I, B), venue(I, H) )
%   | | | then return 0.3844647245731965;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.568374
   AUC PR    = 0.028968
   CLL	      = -0.24944
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.998 seconds
Total inference time: 2.16 seconds
AUC ROC: 0.568374


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 02:08:44
{'Learning time': 2.998, 'Inference time': 2.16, 'AUC ROC': 0.568374, 'AUC PR': 0.028968, 'Recall': 0.0, 'CLL': -0.24944, 'F1': nan, 'Precision': [nan, 0.5]}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.2002541982574071;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.17408811758091414;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.14832909402857294;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.1240999634177955;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.1022054077578086;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.08307660005252253;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.06681528940289194;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.05328719884755189;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.04221996737928091;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return 0.033281520142686705;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */


Results
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.387474
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total learning time: 1.556 seconds
Total inference time: 2.363 seconds
AUC ROC: 0.733766


Results scoring model
   AUC ROC   = 0.74
   AUC PR    = 0.812571
   CLL	      = -0.519888
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.48
   F1        = 0.648649


Total scoring time: 1.078 seconds
Parameter learned model CLL: -0.519888


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-08, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.05e-08, 0, 12], 'false': [2.924, 25, 13]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 12], 'false': [2.924, 25, 13]}]]
[{'': [-1.4802973661668753e-16, 0.22506925207756182]}, {'': [1.4802973661668753e-16, 0.22506925207756198]}, {'': [-2.590520390792032e-16, 0.22506925207756204]}, {'': [1.4802973661668753e-16, 0.2250692520775625]}, {'': [-5.551115123125783e-17, 0.22506925207756226]}, {'': [3.700743415417188e-17, 0.22506925207756232]}, {'': [-2.7755575615628914e-17, 0.22506925207756232]}, {'': [9.25185853854297e-18, 0.22506925207756232]}, {'': [9.25185853854297e-18, 0.22506925207756243]}, {'': [0.0, 0.2250692520775625]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.0010060779566550668;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.2391013160518933;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 8.835646163369372E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.2074346514099043;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 7.758973011973702E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.17564775908399566;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3151786576185065;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 6.8129367991872E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.14550731772537298;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.23676009386434207;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 5.981815657342761E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then return 0.09193980267013387;  // std dev = 0,460, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.1780694542720751;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 5.251750232105731E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.10071831938233054;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10012659953496203;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.13513671764223453;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.09195564144940642;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 4.6105298554669334E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.07946867907119773;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.103671751136855;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.08456007068858688;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 4.0474016800403E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.062474107675526615;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.08034833303035915;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.07824008800603736;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 3.552900687252162E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.04876308179151821;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.04126932998424626;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.06282214181758172;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.07278046846627996;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(H, F) )
%   | | | then return 3.118698576379649E-4;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.0378584290524139;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.032663748734830134;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.893876
   AUC PR    = 0.569814
   CLL	      = -0.340135
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 9.06 seconds
Total inference time: 3.823 seconds
AUC ROC: 0.893876


Results scoring model
   AUC ROC   = 0.8472
   AUC PR    = 0.878908
   CLL	      = -0.455741
   Precision = 0.9375 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.731707


Total scoring time: 1.408 seconds
Refined model CLL: -0.455741


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.893876
   AUC PR    = 0.569814
   CLL	      = -0.340135
   Precision = 0.168196 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.272277


Total learning time: 13.102 seconds
Total inference time: 3.823 seconds
AUC ROC: 0.893876
Total revision time: 13.102
Best scored revision CLL: -0.455741


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:09:04
{'Learning time': 13.102, 'Inference time': 3.823, 'parameter_25': {'Learning time': 1.556, 'Inference time': 2.363, 'AUC ROC': 0.733766, 'AUC PR': 0.504348, 'Recall': 0.467532, 'CLL': -0.387474, 'F1': 0.637168, 'Precision': [1.0, 0.5]}, 'AUC ROC': 0.893876, 'AUC PR': 0.569814, 'Recall': 0.714286, 'CLL': -0.340135, 'F1': 0.272277, 'Precision': [0.168196, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.0010060779566550668;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then if ( title(I, B), venue(I, H) )
%   | | | then return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then if ( haswordauthor(G, E) )
%   | | then return 8.835646163369372E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( title(H, B), venue(H, F) )
%   | | | then return 0.3087411357856347;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 7.758973011973702E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then if ( title(G, B), venue(G, F) )
%   | | then if ( samebib(G, H), title(H, A) )
%   | | | then return 0.7564123687585864;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.21733338063185215;  // std dev = 0,203, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.09240399948451634;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 6.8129367991872E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then if ( title(I, B), venue(I, H) )
%   | | | then return 0.19363922141860343;  // std dev = 1,957, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.08494088828396046;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then if ( haswordauthor(G, E) )
%   | | then return 5.981815657342761E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( title(H, B), venue(H, F) )
%   | | | then return 0.1531943643508681;  // std dev = 1,923, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.215871968382499;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.07856731355075025;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 5.251750232105731E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then if ( title(I, B), venue(I, H) )
%   | | | then return 0.11961657001673091;  // std dev = 1,900, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.17024717710075593;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.0730645058106071;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 4.6105298554669334E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then if ( title(I, B), venue(I, H) )
%   | | | then return 0.09261295919435321;  // std dev = 1,886, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.13713633723655955;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.06826789141822931;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 4.0474016800403E-4;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then if ( title(I, B), venue(I, H) )
%   | | | then return 0.0713310771609659;  // std dev = 1,877, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.393830335800178;  // std dev = 0,614, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.35156689012465653;  // std dev = 0,234, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.28218030620546336;  // std dev = 0,166, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.2211293761348448;  // std dev = 0,444, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.0681929633820366;  // std dev = 0,280, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.01053766208796579;  // std dev = 0,324, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | then if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.049076468438383015;  // std dev = 9,31e-10, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( title(I, B), venue(I, F) )
%   | | | then return 0.038721035218226084;  // std dev = 1,505, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.05695694214851258;  // std dev = 0,718, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.922145
   AUC PR    = 0.466345
   CLL	      = -0.355761
   Precision = 0.139022 at threshold = 0.5
   Recall    = 0.941558
   F1        = 0.242272


Total learning time: 73.339 seconds
Total inference time: 19.588 seconds
AUC ROC: 0.922145


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 02:10:37
{'Learning time': 73.339, 'Inference time': 19.588, 'AUC ROC': 0.922145, 'AUC PR': 0.466345, 'Recall': 0.941558, 'CLL': -0.355761, 'F1': 0.242272, 'Precision': [0.139022, 0.5]}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.0010060779566550668;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | then if ( title(I, B), venue(I, H) )
%   | | | then return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.787274
   AUC PR    = 0.073907
   CLL	      = -0.222439
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.242 seconds
Total inference time: 2.259 seconds
AUC ROC: 0.787274


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 02:10:43
{'Learning time': 3.242, 'Inference time': 2.259, 'AUC ROC': 0.787274, 'AUC PR': 0.073907, 'Recall': 0.0, 'CLL': -0.222439, 'F1': nan, 'Precision': [nan, 0.5]}


