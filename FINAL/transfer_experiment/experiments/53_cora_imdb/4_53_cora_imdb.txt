Starting experiment #4 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21816410960633564;  // std dev = 0,480, 7.908,000 (wgt'ed) examples reached here.  /* #neg=5.061 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8126943896449664;  // std dev = 1,954, 88,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=84 */
%   | | | else return -0.13839085728803122;  // std dev = 0,998, 289,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.2152917922423695;  // std dev = 3,105, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -0.05785106490048775;  // std dev = 4,386, 250,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.007947930997354037;  // std dev = 6,380, 351,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=47 */
%   | | | else return -0.10851773156715437;  // std dev = 1,390, 60,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18190309016042325;  // std dev = 0,478, 8.078,000 (wgt'ed) examples reached here.  /* #neg=5.231 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.3013653286784602;  // std dev = 0,854, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16812639008142502;  // std dev = 3,140, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else return -0.032432298301033245;  // std dev = 0,306, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.05149128863550963;  // std dev = 6,970, 395,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=83 */
%   | | | else return -0.04745372451101535;  // std dev = 4,377, 240,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02604927001257373;  // std dev = 6,448, 415,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=47 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.7567186792993941;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.23479733822911442;  // std dev = 5,883, 141,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=61 */
%   | | | else return -0.14164699996516164;  // std dev = 2,172, 89,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=5 */
%   | else return 0.1615014372262503;  // std dev = 0,480, 7.681,000 (wgt'ed) examples reached here.  /* #neg=4.921 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then if ( author(J, H), venue(J, A) )
%   | | | then return 0.37830947432880757;  // std dev = 0,702, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15860946577330454;  // std dev = 3,103, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else return -0.03331132491081381;  // std dev = 0,299, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.014512435842505896;  // std dev = 0,329, 628,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=104 */
%   | | else return -0.03049824912377346;  // std dev = 0,305, 450,000 (wgt'ed) examples reached here.  /* #neg=403 #pos=47 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13837849914985337;  // std dev = 0,480, 7.839,000 (wgt'ed) examples reached here.  /* #neg=4.992 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.016259621083629258;  // std dev = 1,241, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.14466628472249973;  // std dev = 2,668, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else return 0.012331444334796195;  // std dev = 0,314, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0038111179421314125;  // std dev = 8,321, 575,000 (wgt'ed) examples reached here.  /* #neg=492 #pos=83 */
%   | | | else return -0.042109542250260056;  // std dev = 3,759, 201,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03549919295406402;  // std dev = 5,269, 231,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=47 */
%   | | | else return -0.10931142230047051;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10930804443440922;  // std dev = 0,479, 7.928,000 (wgt'ed) examples reached here.  /* #neg=5.081 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6179573146925352;  // std dev = 2,699, 92,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=84 */
%   | | | else return -0.1332800432984944;  // std dev = 1,021, 312,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.07695058776840652;  // std dev = 3,245, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.053457716797476615;  // std dev = 4,399, 268,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.003467466155029424;  // std dev = 6,391, 358,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=47 */
%   | | | else return -0.09003278339297656;  // std dev = 1,397, 65,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=2 */
%   | | else return -0.09982696140271113;  // std dev = 0,011, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08262681155573885;  // std dev = 0,477, 8.055,000 (wgt'ed) examples reached here.  /* #neg=5.208 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 5.859477986707757E-4;  // std dev = 1,243, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.06166262101671296;  // std dev = 2,174, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.12840380837065635;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.008904068368429097;  // std dev = 0,901, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.017418088789321964;  // std dev = 8,447, 693,000 (wgt'ed) examples reached here.  /* #neg=610 #pos=83 */
%   | | | else return 0.03192376119236814;  // std dev = 2,878, 97,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=21 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0034894504224071087;  // std dev = 4,496, 256,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=47 */
%   | | | else return -0.09055045297931566;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06486953388317203;  // std dev = 0,477, 8.080,000 (wgt'ed) examples reached here.  /* #neg=5.233 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return 0.011872519582826643;  // std dev = 5,831, 413,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=85 */
%   | | | else return -0.04363294484543029;  // std dev = 3,363, 136,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=15 */
%   | | else if ( haswordtitle(E, I), haswordvenue(A, I) )
%   | | | then return 0.06656882036821325;  // std dev = 4,069, 109,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=21 */
%   | | | else return -0.12664631388065523;  // std dev = 0,009, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.006345293265356391;  // std dev = 6,410, 373,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=47 */
%   | | | else return -0.07532744662449267;  // std dev = 1,394, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | else return -0.087343265924962;  // std dev = 0,030, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.058515531796960875;  // std dev = 0,479, 7.922,000 (wgt'ed) examples reached here.  /* #neg=5.075 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6944866839614187;  // std dev = 0,255, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12829083594168703;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0431234088214497;  // std dev = 2,147, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.1353868865586954;  // std dev = 0,099, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.009766516428937956;  // std dev = 8,395, 672,000 (wgt'ed) examples reached here.  /* #neg=589 #pos=83 */
%   | | | else return 0.03337871240838622;  // std dev = 2,802, 96,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=21 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.00930028438607847;  // std dev = 4,437, 278,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=47 */
%   | | | else return -0.07692879981368274;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04632281830340234;  // std dev = 0,479, 7.914,000 (wgt'ed) examples reached here.  /* #neg=5.067 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.0515949990956852;  // std dev = 0,617, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.13063536511153043;  // std dev = 3,077, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.012292949809063838;  // std dev = 5,609, 408,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=83 */
%   | | | else return -0.043254321321568256;  // std dev = 4,368, 259,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.006949966145709221;  // std dev = 6,352, 342,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=47 */
%   | | | else return -0.06746733578652528;  // std dev = 1,397, 54,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=2 */
%   | | else return -0.0716407419920676;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.025112301485563586;  // std dev = 0,476, 7.487,000 (wgt'ed) examples reached here.  /* #neg=4.878 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7189187582890997;  // std dev = 2,964, 142,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=133 */
%   | | | else return -0.13204118167626577;  // std dev = 1,540, 556,000 (wgt'ed) examples reached here.  /* #neg=554 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.12980829818867406;  // std dev = 4,668, 139,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=27 */
%   | | | else return -0.06365355319472701;  // std dev = 0,938, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4764137380140334;  // std dev = 3,895, 97,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=78 */
%   | | | else return 0.06557634347118267;  // std dev = 4,353, 179,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=49 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return 0.08181213318375657;  // std dev = 0,348, 293,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=86 */
%   | else return 0.4724197615787323;  // std dev = 0,338, 42,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=31 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,false,true;title(J, I), venue(J, A).;false;false
1;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
1;false,true;haswordtitle(F, D).;true;false
1;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;false,true,true;author(G, E), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordtitle(F, D).;false;false
2;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
2;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,true;haswordtitle(I, G).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordauthor(E, C).;false;true
2;false,true,true;author(J, H), venue(J, A).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,false,true;title(J, I), venue(J, B).;false;false
3;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
3;false,true;haswordtitle(F, D).;true;false
3;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
3;false,true,true;author(G, E), title(G, F).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,false;haswordauthor(H, D).;false;false
4;false,true;title(F, E), venue(F, A).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
5;false,true,true;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,false,true;title(L, K), venue(L, B).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false,true,true;author(H, G), title(H, E).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,false;haswordtitle(H, D).;false;false
7;false,true;author(F, E), venue(F, B).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,true;samebib(F, G), venue(G, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;false,true,false;title(H, E), venue(H, A).;false;false
8;false,true;haswordauthor(F, D).;true;true
8;false,true,true;author(G, F), title(G, E).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5328477302802359;  // std dev = 4,268, 83,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3759995545839646;  // std dev = 4,758, 94,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.12872592380281067;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.25814760305629575;  // std dev = 0,498, 102,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11230754757640984;  // std dev = 0,000456, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3043333403112304;  // std dev = 4,420, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   else if ( movie(D, A) )
%   | then return -0.10158249569308334;  // std dev = 6,44e-05, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23259895409842404;  // std dev = 4,420, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269243961247015;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09268084236536712;  // std dev = 5,70e-05, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11974442832926764;  // std dev = 4,758, 94,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.08995458030780322;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.0851857387742218;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0851873307133771;  // std dev = 4,59e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15290590307043192;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07875396260335747;  // std dev = 0,000986, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08518344861292368;  // std dev = 4,557, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07270534859592082;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324970567973821;  // std dev = 3,98e-07, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05031548941073509;  // std dev = 4,641, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842895365099266;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06840402693933138;  // std dev = 0,000927, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5773920183659677;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06419358333505472;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4226079816340326;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06374687002217012;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5773920183659678;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06419621232788712;  // std dev = 2,47e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973966
   AUC PR    = 0.853081
   CLL	      = -0.200966
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 1.576 seconds
Total inference time: 3.204 seconds
AUC ROC: 0.973966


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.209815
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.923 seconds
Parameter learned model CLL: -0.209815


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 9, 0], 'true': [4.268, 27, 56], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [8.33e-09, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'true': [4.758, 38, 56], 'false,true,true': [0.015, 5, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 81, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 3, 0], 'true,true': [0.498, 46, 56], 'false,true,false': [0.000456, 74, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)'}, {'false,true': [6.44e-05, 82, 0], 'true': [4.42, 30, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 3, 0], 'true': [4.42, 30, 56], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [5.7e-05, 67, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,false': 'genre(A, F)'}, {'true': [4.758, 38, 56], 'false,true,false,false': [4.59e-08, 78, 0], 'false,true,true': [0.017, 4, 0], 'false,true,false,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [4.371, 29, 56], 'false,true,true': [0.000986, 70, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,false': [0.0, 3, 0], 'true': [4.557, 33, 56], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [3.98e-07, 92, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [4.641, 35, 56], 'false,true,true': [1.32e-09, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.000927, 73, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,false': [1.86e-09, 5, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 4, 0], 'true,false,true,true': [0.0, 0, 56], 'true,false,false,true': [0.0, 21, 0], 'true,false,true,false': [0.0, 4, 0], 'false': [0.0, 0, 0], 'true,false,false,false': [2.47e-08, 74, 0]}]]
[{'': [0.2194803309624035, 7.401486830834377e-17], 'false,true': [-9.25185853854297e-18, 6.78469626159818e-17], 'false': [7.401486830834377e-17, nan], 'false,true,true': [nan, -9.25185853854297e-18]}, {'': [0.24083295608872807, 3.0934992206098195e-06], 'false,true': [4.306733220848513e-05, -2.1930331350620375e-17], 'false': [3.0934992206098195e-06, nan]}, {'': [0.2475970780469047, 2.7008183871175943e-09], 'false,true': [2.3129646346357427e-18, 2.807272845115436e-09], 'true': [0.2475970780469047, nan], 'false': [2.7008183871175943e-09, nan]}, {'': [0.22714981070849125, 4.149906962784725e-09], 'false': [4.149906962784725e-09, nan]}, {'': [0.22714981070849163, 3.114794220961313e-09], 'false,true': [-1.1564823173178713e-18, 3.248498501704732e-09], 'false': [3.114794220961313e-09, nan], 'false,true,true': [nan, -1.1564823173178713e-18]}, {'': [0.24083295608872843, 4.527919604108273e-06], 'false,true': [7.56799487642932e-05, 1.1762000587592833e-13], 'false': [4.527919604108273e-06, nan], 'false,true,false': [0.0, 2.7043894189587146e-17]}, {'': [0.2247750865051905, 1.3897880753375804e-08], 'false,true': [1.3897880753375804e-08, nan], 'false': [1.3897880753375804e-08, nan]}, {'': [0.2333038757732604, 9.062269628279969e-09], 'false,true': [-1.1564823173178713e-18, 1.5837753813732877e-13], 'false': [9.062269628279969e-09, nan], 'false,true,true': [nan, -1.1564823173178713e-18]}, {'': [0.23668639053254464, 1.1334330079756197e-08], 'false,true': [5.782411586589357e-19, 1.1775597849176576e-08], 'false': [1.1334330079756197e-08, nan]}, {'': [0.11332226858793236, nan], 'true,true,false': [nan, 6.938893903907229e-19], 'true,true': [0.0, 6.938893903907229e-19], 'true,false,true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.014718109263170475, 0.04534923872694811], 'true': [0.06503027993041435, 0.1099880181741939], 'true,false,false': [-2.9605947323337506e-16, 8.251657615457245e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(B, E).;true;true
5;false,false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,true;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048763;  // std dev = 8,30e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360638;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.23934049535190838;  // std dev = 0,508, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.0744301220122623;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,39e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.08518475138839679;  // std dev = 1,49e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.06946226143018085;  // std dev = 2,28e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(A), actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.08133995339401379;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, D) )
%   | then return -0.0790562277477788;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return -0.07307242293100284;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.0653705031321545;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.06827482343420066;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06868005959689255;  // std dev = 0,005, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420267;  // std dev = 1,12e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06229184616018495;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1340070300080109;  // std dev = 4,47e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06895688885477276;  // std dev = 1,78e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06418581694128693;  // std dev = 5,41e-05, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.06421773458946366;  // std dev = 0,000539, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079392
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.778 seconds
Total inference time: 3.595 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06474
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 2.435 seconds
Refined model CLL: -0.06474


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079392
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 9.712 seconds
Total inference time: 3.595 seconds
AUC ROC: 1.0
Total revision time: 9.712
Best scored revision CLL: -0.06474


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 09:09:24
{'F1': 0.847854, 'parameter': {'F1': 0.900506, 'Precision': [1.0, 0.5], 'Inference time': 3.204, 'AUC PR': 0.853081, 'CLL': -0.200966, 'Learning time': 1.576, 'AUC ROC': 0.973966, 'Recall': 0.819018}, 'Precision': [0.735892, 0.5], 'Inference time': 3.595, 'AUC PR': 1.0, 'CLL': -0.079392, 'Learning time': 9.712, 'AUC ROC': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 4,21e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.689297767541692;  // std dev = 0,157, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6913094771863096;  // std dev = 0,152, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8,82e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5625484866787079;  // std dev = 0,002, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22239763886489644;  // std dev = 0,000381, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783626;  // std dev = 4,21e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.423115913100828;  // std dev = 5,16e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.4023209123224691;  // std dev = 0,109, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 5,58e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.30367720079578653;  // std dev = 0,108, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3091789658337133;  // std dev = 0,105, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5,37e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.26310350417201134;  // std dev = 0,010, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.31929684464338204;  // std dev = 0,004, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6,83e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21534523664875962;  // std dev = 0,008, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2537268261251027;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 4,71e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( female(A) )
%   | then return 0.16620732601332966;  // std dev = 0,073, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.16911550854740273;  // std dev = 0,070, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 4,83e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1576174619331578;  // std dev = 0,005, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.23911052143638878;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13780044110199394;  // std dev = 0,005, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.19834475562623738;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.089349
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.559 seconds
Total inference time: 2.353 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 09:09:29
{'Inference time': 2.353, 'F1': 0.847854, 'Learning time': 2.559, 'Precision': [0.735892, 0.5], 'AUC PR': 1.0, 'CLL': -0.089349, 'Recall': 1.0, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 6,66e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.994647
   AUC PR    = 0.735892
   CLL	      = -0.169006
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.034 seconds
Total inference time: 1.806 seconds
AUC ROC: 0.994647


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 09:09:32
{'Inference time': 1.806, 'F1': nan, 'Learning time': 1.034, 'Precision': [nan, 0.5], 'AUC PR': 0.735892, 'CLL': -0.169006, 'Recall': 0.0, 'AUC ROC': 0.994647}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,false,true;title(J, I), venue(J, A).;false;false
1;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
1;false,true;haswordtitle(F, D).;true;false
1;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;false,true,true;author(G, E), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordtitle(F, D).;false;false
2;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
2;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,true;haswordtitle(I, G).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordauthor(E, C).;false;true
2;false,true,true;author(J, H), venue(J, A).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,false,true;title(J, I), venue(J, B).;false;false
3;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
3;false,true;haswordtitle(F, D).;true;false
3;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
3;false,true,true;author(G, E), title(G, F).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,false;haswordauthor(H, D).;false;false
4;false,true;title(F, E), venue(F, A).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
5;false,true,true;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,false,true;title(L, K), venue(L, B).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false,true,true;author(H, G), title(H, E).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,false;haswordtitle(H, D).;false;false
7;false,true;author(F, E), venue(F, B).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,true;samebib(F, G), venue(G, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;false,true,false;title(H, E), venue(H, A).;false;false
8;false,true;haswordauthor(F, D).;true;true
8;false,true,true;author(G, F), title(G, E).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5486251255757034;  // std dev = 4,237, 84,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4598907089555593;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.32551255817867686;  // std dev = 0,481, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360624;  // std dev = 6,32e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16681080014612537;  // std dev = 5,095, 105,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=58 */
%   else if ( movie(D, A) )
%   | then return -0.10174853600656182;  // std dev = 0,001, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24865596098937595;  // std dev = 4,346, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10531559258885846;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0926784764749284;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09267847647492827;  // std dev = 6,04e-09, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14305831098371194;  // std dev = 4,630, 92,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.08613960506318695;  // std dev = 0,010, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.08517388828000517;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08517388828000526;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08104480353720138;  // std dev = 4,791, 96,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07889911393547452;  // std dev = 0,010, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08036501150013702;  // std dev = 4,672, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07316368300573141;  // std dev = 5,89e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07322919599284813;  // std dev = 1,61e-09, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1192011836382264;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06841207117013905;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06840950328758974;  // std dev = 9,71e-05, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5922234025030715;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.077395219646657;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06417868774895429;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.40777659749692796;  // std dev = 1,69e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0641247970162192;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5922234025030717;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.06417884197559769;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97601
   AUC PR    = 0.862005
   CLL	      = -0.20875
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 1.797 seconds
Total inference time: 3.194 seconds
AUC ROC: 0.97601


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.204396
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.786 seconds
Parameter learned model CLL: -0.204396


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 7, 0], 'true': [4.237, 26, 58], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [8.33e-09, 70, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'true': [4.292, 27, 58], 'false,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 83, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'true,true': [0.481, 33, 58], 'false,true,false': [6.32e-08, 77, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)'}, {'false,true': [0.001, 90, 0], 'true': [5.095, 47, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 6, 0], 'true': [4.346, 28, 58], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [6.04e-09, 85, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,false': 'genre(A, F)'}, {'true': [4.63, 34, 58], 'false,true,false,false': [0.0, 79, 0], 'false,true,true': [0.01, 11, 0], 'false,true,false,true': [3.73e-09, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [4.791, 38, 58], 'false,true,true': [0.01, 73, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,false': [5.89e-09, 10, 0], 'true': [4.672, 35, 58], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.61e-09, 76, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [4.292, 27, 58], 'false,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [9.71e-05, 67, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,false': [0.0, 6, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,true': [1.69e-07, 0, 58], 'true,false,false,true': [0.0, 33, 0], 'true,false,true,false': [0.0, 7, 0], 'false': [0.0, 0, 0], 'true,false,false,false': [0.0, 81, 0]}]]
[{'': [0.2137188208616776, 7.209240419643874e-17], 'false,true': [-7.93016446160826e-18, 6.97854472621527e-17], 'false': [7.209240419643874e-17, nan], 'false,true,true': [nan, -7.93016446160826e-18]}, {'': [0.2167474048442921, -1.7865657867531254e-17], 'false,true': [0.0, -2.140188963132832e-17], 'false': [-1.7865657867531254e-17, nan]}, {'': [0.23113150585678155, 5.747036833353752e-17], 'false,true': [-1.734723475976807e-18, 5.190653102143589e-17], 'true': [0.23113150585678155, nan], 'false': [5.747036833353752e-17, nan]}, {'': [0.24725623582766476, 2.0618473665178094e-06], 'false': [2.0618473665178094e-06, nan]}, {'': [0.21957815035154127, 1.7169659776620265e-06], 'false,true': [1.9554698409422556e-05, 3.7878197310740636e-17], 'false': [1.7169659776620265e-06, nan], 'false,true,true': [0.0, -1.1564823173178713e-18]}, {'': [0.2329867674858228, 1.1632312680841712e-06], 'false,true': [9.326089053184176e-06, 0.0], 'false': [1.1632312680841712e-06, nan], 'false,true,false': [2.3129646346357427e-18, 0.0]}, {'': [0.23914930555555539, 1.3047423947205777e-06], 'false,true': [1.3047423947205777e-06, nan], 'false': [1.3047423947205777e-06, nan]}, {'': [0.23470921493814337, 4.410334171510788e-10], 'false,true': [3.469446951953614e-18, 2.1912296538654404e-18], 'false': [4.410334171510788e-10, nan], 'false,true,true': [nan, 3.469446951953614e-18]}, {'': [0.21674740484429075, 1.349141052843704e-10], 'false,true': [-5.782411586589357e-19, 1.4067243804310765e-10], 'false': [1.349141052843704e-10, nan]}, {'': [0.11725261634553885, nan], 'true,true,false': [0.0, -5.782411586589357e-19], 'true,false,false': [-2.153159805333637e-16, -7.538551401775754e-18], 'true,false,true': [4.900294729380001e-16, -4.956352788505163e-19], 'true,false': [0.021399412074377174, 0.05734960124452075], 'true': [0.030298178794284324, 0.12048914560808784], 'true,true': [0.0, 2.138898555954931e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(B, F).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(B, E).;true;true
5;false,false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,false;movie(C, B).;true;true
9;true,false;genre(B, E).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839133;  // std dev = 1,83e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360636;  // std dev = 3,23e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926105;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08518475138839685;  // std dev = 2,63e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,75e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.08518475138839679;  // std dev = 1,05e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109172;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.0684269778442027;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.12456898857515225;  // std dev = 0,193, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.11513094714229326;  // std dev = 0,377, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999023
   AUC PR    = 0.971975
   CLL	      = -0.084915
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.339 seconds
Total inference time: 3.931 seconds
AUC ROC: 0.999023


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066206
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 2.207 seconds
Refined model CLL: -0.066206


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999023
   AUC PR    = 0.971975
   CLL	      = -0.084915
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 9.129000000000001 seconds
Total inference time: 3.931 seconds
AUC ROC: 0.999023
Total revision time: 9.129000000000001
Best scored revision CLL: -0.066206


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 09:09:49
{'F1': 0.848168, 'parameter': {'F1': 0.89983, 'Precision': [1.0, 0.5], 'Inference time': 3.194, 'AUC PR': 0.862005, 'CLL': -0.20875, 'Learning time': 1.797, 'AUC ROC': 0.97601, 'Recall': 0.817901}, 'Precision': [0.736364, 0.5], 'Inference time': 3.931, 'AUC PR': 0.971975, 'CLL': -0.084915, 'Learning time': 9.129000000000001, 'AUC ROC': 0.999023, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,69e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0,000, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11560664735261719;  // std dev = 0,331, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10129640519300039;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09244009549547266;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08964220860686688;  // std dev = 0,511, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07825533354202258;  // std dev = 5,57e-05, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07279439385190378;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06803133484435372;  // std dev = 2,69e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.24567209475893106;  // std dev = 0,435, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06803133484435377;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06360813585728434;  // std dev = 0,017, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070764
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.955 seconds
Total inference time: 2.562 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 09:09:55
{'Inference time': 2.562, 'F1': 0.848168, 'Learning time': 2.955, 'Precision': [0.736364, 0.5], 'AUC PR': 1.0, 'CLL': -0.070764, 'Recall': 1.0, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048785;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.167119
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.982 seconds
Total inference time: 1.774 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 09:09:58
{'Inference time': 1.774, 'F1': nan, 'Learning time': 0.982, 'Precision': [nan, 0.5], 'AUC PR': 1.0, 'CLL': -0.167119, 'Recall': 0.0, 'AUC ROC': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,false,true;title(J, I), venue(J, A).;false;false
1;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
1;false,true;haswordtitle(F, D).;true;false
1;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;false,true,true;author(G, E), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordtitle(F, D).;false;false
2;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
2;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,true;haswordtitle(I, G).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordauthor(E, C).;false;true
2;false,true,true;author(J, H), venue(J, A).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,false,true;title(J, I), venue(J, B).;false;false
3;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
3;false,true;haswordtitle(F, D).;true;false
3;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
3;false,true,true;author(G, E), title(G, F).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,false;haswordauthor(H, D).;false;false
4;false,true;title(F, E), venue(F, A).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
5;false,true,true;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,false,true;title(L, K), venue(L, B).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false,true,true;author(H, G), title(H, E).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,false;haswordtitle(H, D).;false;false
7;false,true;author(F, E), venue(F, B).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,true;samebib(F, G), venue(G, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;false,true,false;title(H, E), venue(H, A).;false;false
8;false,true;haswordauthor(F, D).;true;true
8;false,true,true;author(G, F), title(G, E).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5758908705833797;  // std dev = 7,088, 248,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.14185106490048816;  // std dev = 0,000, 259,000 (wgt'ed) examples reached here.  /* #neg=259 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.43204513060453187;  // std dev = 7,788, 270,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839122;  // std dev = 5,05e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.12544463852839183;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.420784627312675;  // std dev = 0,443, 243,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.11231637819360628;  // std dev = 3,80e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.11231637819360664;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2816905641012261;  // std dev = 7,429, 258,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=178 */
%   else if ( movie(D, A) )
%   | then return -0.1015963294878366;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19408034678737698;  // std dev = 7,644, 265,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.09269127618926058;  // std dev = 6,32e-09, 201,000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15851624236535206;  // std dev = 7,493, 260,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.08518475138839679;  // std dev = 1,05e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.0851847513883968;  // std dev = 1,67e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.08518475138839678;  // std dev = 6,66e-08, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13818178534633482;  // std dev = 7,264, 253,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109143;  // std dev = 4,47e-08, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12460380296329596;  // std dev = 7,015, 246,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07324622576333704;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.07324622576333664;  // std dev = 8,64e-09, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08349855093142182;  // std dev = 7,160, 250,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.06842697784420272;  // std dev = 3,94e-08, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.6477792627720655;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.35222073722793357;  // std dev = 1,98e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1898353375384206;  // std dev = 5,154, 107,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=49 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.296814
   Precision = 0.069012 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.129114


Total learning time: 1.974 seconds
Total inference time: 3.734 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.248496
   Precision = 0.226752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.369678


Total scoring time: 2.154 seconds
Parameter learned model CLL: -0.248496


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [4.71e-08, 45, 0], 'true': [7.088, 70, 178], 'false,true,true,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 259, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'true': [7.788, 92, 178], 'false,true,true': [5.05e-08, 52, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 237, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [3.8e-08, 58, 0], 'true,true': [0.443, 65, 178], 'false,true,false': [0.0, 206, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)'}, {'false,true': [0.0, 268, 0], 'true': [7.429, 80, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 42, 0], 'true': [7.644, 87, 178], 'false,true,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [6.32e-09, 201, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,false': 'genre(A, F)'}, {'true': [7.493, 82, 178], 'false,true,false,false': [6.66e-08, 165, 0], 'false,true,true': [1.05e-08, 56, 0], 'false,true,false,true': [1.67e-08, 36, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [7.264, 75, 178], 'false,true,true': [4.47e-08, 281, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,false': [9.13e-09, 34, 0], 'true': [7.015, 68, 178], 'false,true,true,true': [2.63e-09, 9, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [8.64e-09, 224, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [7.16, 72, 178], 'false,true,true': [1.83e-08, 57, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [3.94e-08, 247, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,false': [0.0, 43, 0], 'true,true,false,true': [0.0, 8, 0], 'true,true,true': [0.0, 20, 0], 'true,false,true,true': [1.98e-07, 0, 129], 'true,false,false,true': [5.154, 58, 49], 'true,false,true,false': [0.0, 43, 0], 'false': [0.0, 0, 0], 'true,false,false,false': [0.0, 176, 0]}]]
[{'': [0.20258844953174343, 5.730183352904034e-17], 'false,true': [5.659960517696876e-17, -9.259002830850726e-17], 'false': [5.730183352904034e-17, nan], 'false,true,true': [-6.938893903907228e-18, 4.9343245538895844e-17]}, {'': [0.22463648834018982, -7.990532495572061e-17], 'false,true': [4.910601839688192e-17, -5.808761816604195e-17], 'false': [-7.990532495572061e-17, nan]}, {'': [0.1959389659435391, -1.0092936587501423e-16], 'false,true': [2.488430917263282e-17, -4.958277585704583e-17], 'true': [0.1959389659435391, nan], 'false': [-1.0092936587501423e-16, nan]}, {'': [0.21392945135508812, -6.296787303844171e-17], 'false': [-6.296787303844171e-17, nan]}, {'': [0.2205197579209663, 5.573589273421838e-17], 'false,true': [-1.8101462358018857e-17, 4.08738824986376e-17], 'false': [5.573589273421838e-17, nan], 'false,true,true': [0.0, -1.4538634846281813e-17]}, {'': [0.2159171597633145, 3.455947158366246e-17], 'false,true': [1.982541115402065e-18, 2.982688722873555e-17], 'false': [3.455947158366246e-17, nan], 'false,true,false': [7.709882115452476e-18, 2.6914497566670462e-17]}, {'': [0.20856442062835007, 7.111748912189615e-18], 'false,true': [7.111748912189615e-18, nan], 'false': [7.111748912189615e-18, nan]}, {'': [0.20001321964439112, 4.7402780826692076e-17], 'false,true': [3.2273925134452225e-18, 7.434529182757744e-17], 'false': [4.7402780826692076e-17, nan], 'false,true,true': [7.709882115452476e-19, 2.44902137784961e-18]}, {'': [0.2050559999999997, -5.258951169277057e-17], 'false,true': [5.843279076974508e-18, 6.292762082895624e-18], 'false': [-5.258951169277057e-17, nan]}, {'': [0.106225589350873, nan], 'true,true,false': [0.0, -1.9364355080671335e-18], 'true,false,false': [0.24823128657524707, -5.677276830469551e-18], 'true,false,true': [3.029445772620582e-16, -1.9364355080671335e-18], 'true,false': [0.03251239397661057, 0.0975661947699854], 'true': [0.0689120740964972, 0.10341471445903878], 'true,true': [0.0, -2.7211348642773444e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(B, F).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(B, E).;true;true
5;false,false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(A, F).;true;true
7;false;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,false;movie(C, B).;true;true
9;true,false;genre(B, E).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 6,50e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.14185106490048846;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( genre(B, D) )
%   | then return -0.12544463852839127;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.12544463852839188;  // std dev = 0,000, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.11231637819360633;  // std dev = 2,95e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.11231637819360682;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.10159632948783662;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(B) )
%   | | | then return -0.0926912761892609;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.0926912761892609;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926086;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926092;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return -0.09269127618926089;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 1,61e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( genre(A, E) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.08518475138839682;  // std dev = 9,13e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839675;  // std dev = 1,05e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.08518475138839675;  // std dev = 4,59e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109177;  // std dev = 4,93e-09, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109161;  // std dev = 2,79e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.07877675473109165;  // std dev = 1,67e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07877675473109166;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109168;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.0787767547310917;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0732462257633369;  // std dev = 9,13e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07324622576333699;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.0684269778442027;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420268;  // std dev = 2,08e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( actor(B) )
%   | | | then return -0.0684269778442027;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420271;  // std dev = 4,56e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06842697784420265;  // std dev = 1,32e-09, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.06419184008202616;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.09170849065952752;  // std dev = 1,040, 164,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=129 */
%   | | | else return -0.06419184008202612;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.09903075881565154;  // std dev = 0,540, 51,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=42 */
%   | | | else return -0.0586643815536188;  // std dev = 0,517, 251,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064373
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.951 seconds
Total inference time: 3.256 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067177
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.57 seconds
Refined model CLL: -0.067177


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064373
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.649000000000001 seconds
Total inference time: 3.256 seconds
AUC ROC: 1.0
Total revision time: 11.649000000000001
Best scored revision CLL: -0.067177


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 09:10:17
{'F1': 1.0, 'parameter': {'F1': 0.129114, 'Precision': [0.069012, 0.5], 'Inference time': 3.734, 'AUC PR': 0.961008, 'CLL': -0.296814, 'Learning time': 1.974, 'AUC ROC': 0.993692, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Inference time': 3.256, 'AUC PR': 1.0, 'CLL': -0.064373, 'Learning time': 11.649000000000001, 'AUC ROC': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048818;  // std dev = 0,000, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.1254446385283918;  // std dev = 0,000, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.11231637819360686;  // std dev = 0,000, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4,59e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.10159632948783646;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926064;  // std dev = 2,11e-08, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839678;  // std dev = 8,43e-08, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109169;  // std dev = 3,33e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.07877675473109146;  // std dev = 5,58e-08, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07324622576333684;  // std dev = 9,77e-08, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2,11e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420287;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.06419184008202625;  // std dev = 0,000, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.286 seconds
Total inference time: 2.991 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 09:10:25
{'Inference time': 2.991, 'F1': 1.0, 'Learning time': 4.286, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'CLL': -0.063555, 'Recall': 1.0, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048816;  // std dev = 0,000, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.155326
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.564 seconds
Total inference time: 1.997 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 09:10:29
{'Inference time': 1.997, 'F1': nan, 'Learning time': 1.564, 'Precision': [nan, 0.5], 'AUC PR': 1.0, 'CLL': -0.155326, 'Recall': 0.0, 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,false,true;title(J, I), venue(J, A).;false;false
1;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
1;false,true;haswordtitle(F, D).;true;false
1;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;false,true,true;author(G, E), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordtitle(F, D).;false;false
2;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
2;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,true;haswordtitle(I, G).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordauthor(E, C).;false;true
2;false,true,true;author(J, H), venue(J, A).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,false,true;title(J, I), venue(J, B).;false;false
3;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
3;false,true;haswordtitle(F, D).;true;false
3;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
3;false,true,true;author(G, E), title(G, F).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,false;haswordauthor(H, D).;false;false
4;false,true;title(F, E), venue(F, A).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
5;false,true,true;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,false,true;title(L, K), venue(L, B).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false,true,true;author(H, G), title(H, E).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,false;haswordtitle(H, D).;false;false
7;false,true;author(F, E), venue(F, B).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,true;samebib(F, G), venue(G, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;false,true,false;title(H, E), venue(H, A).;false;false
8;false,true;haswordauthor(F, D).;true;true
8;false,true,true;author(G, F), title(G, E).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.47458729126389637;  // std dev = 4,155, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3456363862047083;  // std dev = 4,472, 81,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.37923774463116333;  // std dev = 0,476, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.1160511955458954;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2795823315946894;  // std dev = 4,059, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, A) )
%   | then return -0.10218107157198729;  // std dev = 0,003, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19599563517186486;  // std dev = 4,155, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10492357237474577;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0923286415345061;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09264211132285378;  // std dev = 5,27e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15619956451085928;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.08514302403258141;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.08487690063493065;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08514302403258134;  // std dev = 2,69e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1740090785207979;  // std dev = 3,784, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07873139891639183;  // std dev = 0,000316, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.01136737043103374;  // std dev = 4,437, 80,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07321578726829651;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07319404383928585;  // std dev = 6,46e-05, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1078216180402504;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07053850337855534;  // std dev = 0,013, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06840155771021347;  // std dev = 3,45e-06, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5804052057842789;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07705761627619569;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0638524913147668;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4195947942157211;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06416825801806221;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5804052057842791;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06416956373840911;  // std dev = 1,58e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.974863
   AUC PR    = 0.856178
   CLL	      = -0.202092
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 1.476 seconds
Total inference time: 3.135 seconds
AUC ROC: 0.974863


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.215406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.794 seconds
Parameter learned model CLL: -0.215406


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 9, 0], 'true': [4.155, 28, 45], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [8.12e-09, 62, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'true': [4.472, 36, 45], 'false,true,true': [5.27e-09, 7, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 64, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.013, 4, 0], 'true,true': [0.476, 24, 45], 'false,true,false': [4.34e-08, 59, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)'}, {'false,true': [0.003, 66, 0], 'true': [4.059, 26, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 5, 0], 'true': [4.155, 28, 45], 'false,true,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [5.27e-09, 61, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,false': 'genre(A, F)'}, {'true': [4.108, 27, 45], 'false,true,false,false': [2.69e-08, 45, 0], 'false,true,true': [0.0, 6, 0], 'false,true,false,true': [1.86e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [3.784, 21, 45], 'false,true,true': [0.000316, 48, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,false': [0.0, 5, 0], 'true': [4.437, 35, 45], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [6.46e-05, 59, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [3.901, 23, 45], 'false,true,true': [0.013, 6, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [3.45e-06, 60, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,false': [0.0, 2, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,true': [0.0, 0, 45], 'true,false,false,true': [0.0, 22, 0], 'true,false,true,false': [1.86e-09, 6, 0], 'false': [0.0, 0, 0], 'true,false,false,false': [1.58e-08, 45, 0]}]]
[{'': [0.23644210921373646, 6.880255363874209e-17], 'false,true': [-9.25185853854297e-18, 6.446456272017038e-17], 'false': [6.880255363874209e-17, nan], 'false,true,true': [nan, -9.25185853854297e-18]}, {'': [0.24691358024691315, -3.1273888017610045e-17], 'false,true': [3.96508223080413e-18, -1.0408340855860843e-17], 'false': [-3.1273888017610045e-17, nan]}, {'': [0.22684310018903614, 3.486336550733125e-06], 'false,true': [4.184658196487549e-05, 3.198947698072485e-17], 'true': [0.22684310018903614, nan], 'false': [3.486336550733125e-06, nan]}, {'': [0.2320968061892484, 7.727543335112053e-06], 'false': [7.727543335112053e-06, nan]}, {'': [0.2364421092137363, 8.164526866408625e-06], 'false,true': [3.916846490627543e-05, 2.7300566179307128e-17], 'false': [8.164526866408625e-06, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.23437499999999986, 3.7159514560053604e-09], 'false,true': [0.0, 4.1497068212215105e-09], 'false': [3.7159514560053604e-09, nan], 'false,true,false': [1.1564823173178713e-18, 1.603655480014115e-17]}, {'': [0.21694214876033074, 2.0862958698593856e-09], 'false,true': [2.0862958698593856e-09, nan], 'false': [2.0862958698593856e-09, nan]}, {'': [0.24609375000000022, 3.883979125297865e-09], 'false,true': [0.0, 4.176194219066245e-09], 'false': [3.883979125297865e-09, nan], 'false,true,true': [nan, 0.0]}, {'': [0.22383217993079554, 2.86114355683019e-06], 'false,true': [2.7321180065386502e-05, 1.9784729410332602e-13], 'false': [2.86114355683019e-06, nan]}, {'': [0.1300015113363297, nan], 'true,true,false': [0.0, 0.0], 'true,false,false': [-1.6148698540002277e-16, 5.551115123125783e-18], 'true,false,true': [-2.1711028037114172e-16, 5.782411586589357e-19], 'true,false': [0.024293428101025197, 0.05877350094393542], 'true': [0.04921006001035839, 0.1311480994338059], 'true,true': [0.0, 3.87500722771004e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(B, F).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(B, E).;true;true
5;false,false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,false;movie(C, B).;true;true
9;true,false;genre(B, E).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.17877981520562825;  // std dev = 0,297, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.1002834830671445;  // std dev = 0,002, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(A) )
%   | then return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.0928017451083058;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.0922727937392641;  // std dev = 0,001, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08527849738038502;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08521736867994288;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.2479440367270802;  // std dev = 0,411, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2097577156325355;  // std dev = 7,90e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07882575585026827;  // std dev = 5,75e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0788178831169253;  // std dev = 0,000102, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.06369181140922536;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07331858846931061;  // std dev = 4,63e-07, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07326951156523688;  // std dev = 9,43e-07, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.1885514209088159;  // std dev = 0,445, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06849029654118663;  // std dev = 6,00e-07, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06844733205166492;  // std dev = 9,54e-07, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.20932152505432802;  // std dev = 0,390, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.055537207456912784;  // std dev = 0,011, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10351489614800523;  // std dev = 0,258, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.12299598166967574;  // std dev = 0,272, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419981830673462;  // std dev = 5,91e-05, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06419991958197346;  // std dev = 0,000126, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.669 seconds
Total inference time: 4.118 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065274
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.979 seconds
Refined model CLL: -0.065274


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.918 seconds
Total inference time: 4.118 seconds
AUC ROC: 1.0
Total revision time: 8.918
Best scored revision CLL: -0.065274


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 09:10:46
{'F1': 1.0, 'parameter': {'F1': 0.904065, 'Precision': [1.0, 0.5], 'Inference time': 3.135, 'AUC PR': 0.856178, 'CLL': -0.202092, 'Learning time': 1.476, 'AUC ROC': 0.974863, 'Recall': 0.824926}, 'Precision': [1.0, 0.5], 'Inference time': 4.118, 'AUC PR': 1.0, 'CLL': -0.069438, 'Learning time': 8.918, 'AUC ROC': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12713031188992027;  // std dev = 0,154, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11214842398288541;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10145768786059524;  // std dev = 1,52e-05, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09257536144520011;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08847102271085758;  // std dev = 0,340, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07844701160537258;  // std dev = 2,04e-05, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07296030331254409;  // std dev = 1,49e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06817664615825964;  // std dev = 3,07e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0639709263114998;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069656
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 2.475 seconds
Total inference time: 2.867 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 09:10:51
{'Inference time': 2.867, 'F1': 0.853165, 'Learning time': 2.475, 'Precision': [0.743929, 0.5], 'AUC PR': 1.0, 'CLL': -0.069656, 'Recall': 1.0, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.995302
   AUC PR    = 0.743929
   CLL	      = -0.16604
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.923 seconds
Total inference time: 2.065 seconds
AUC ROC: 0.995302


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 09:10:55
{'Inference time': 2.065, 'F1': nan, 'Learning time': 0.923, 'Precision': [nan, 0.5], 'AUC PR': 0.743929, 'CLL': -0.16604, 'Recall': 0.0, 'AUC ROC': 0.995302}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,false,true;title(J, I), venue(J, A).;false;false
1;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
1;false,true;haswordtitle(F, D).;true;false
1;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;false,true,true;author(G, E), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordtitle(F, D).;false;false
2;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
2;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
2;false,true;haswordtitle(I, G).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;haswordauthor(E, C).;false;true
2;false,true,true;author(J, H), venue(J, A).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,false,true;title(J, I), venue(J, B).;false;false
3;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
3;false,true;haswordtitle(F, D).;true;false
3;false,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
3;false,true,true;author(G, E), title(G, F).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,false;haswordauthor(H, D).;false;false
4;false,true;title(F, E), venue(F, A).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
5;false,true,true;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,false,true;title(L, K), venue(L, B).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false,true,true;author(H, G), title(H, E).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,false;haswordtitle(H, D).;false;false
7;false,true;author(F, E), venue(F, B).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,true;samebib(F, G), venue(G, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;false,true,false;title(H, E), venue(H, A).;false;false
8;false,true;haswordauthor(F, D).;true;true
8;false,true,true;author(G, F), title(G, E).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5399671169176945;  // std dev = 3,784, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4713394606750666;  // std dev = 3,721, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.1295462451214155;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3213535311110226;  // std dev = 0,482, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11230179654505788;  // std dev = 0,000567, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2669278644430669;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, A) )
%   | then return -0.10158676878717725;  // std dev = 6,27e-05, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18373879559302278;  // std dev = 4,059, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269208024352675;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09268360588183253;  // std dev = 5,70e-05, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15634212429656347;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.08486813418101259;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.08518543378152604;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.08518723052766522;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19094587986315456;  // std dev = 3,513, 62,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877885440943011;  // std dev = 1,53e-06, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.026199155072582116;  // std dev = 4,199, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07299172119633833;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324803436412725;  // std dev = 2,37e-07, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10403873465018909;  // std dev = 3,721, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06842859858684579;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.6132164319117432;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842724340356224;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.38678356808825676;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.0639817678524169;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.35005853717490115;  // std dev = 2,714, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.06419327006261354;  // std dev = 1,29e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983069
   AUC PR    = 0.891379
   CLL	      = -0.243594
   Precision = 0.106309 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.192187


Total learning time: 1.348 seconds
Total inference time: 3.067 seconds
AUC ROC: 0.983069


Results scoring model
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.250772
   Precision = 0.078809 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.146104


Total scoring time: 1.824 seconds
Parameter learned model CLL: -0.250772


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 4, 0], 'true': [3.784, 21, 45], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [8.12e-09, 67, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'true': [3.721, 20, 45], 'false,true,true': [0.014, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 62, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 3, 0], 'true,true': [0.482, 26, 45], 'false,true,false': [0.000567, 56, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)'}, {'false,true': [6.27e-05, 69, 0], 'true': [3.956, 24, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 4, 0], 'true': [4.059, 26, 45], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [5.7e-05, 71, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,false': 'genre(A, F)'}, {'true': [3.956, 24, 45], 'false,true,false,false': [0.0, 57, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [3.513, 17, 45], 'false,true,true': [1.53e-06, 53, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,false': [1.86e-09, 3, 0], 'true': [4.199, 29, 45], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [2.37e-07, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [3.721, 20, 45], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 58, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,false': [0.0, 4, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,true': [0.0, 0, 35], 'true,false,false,true': [2.714, 28, 10], 'true,false,true,false': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,false,false': [1.29e-08, 64, 0]}]]
[{'': [0.21694214876033094, 6.880255363874209e-17], 'false,true': [0.0, 6.628197161941232e-17], 'false': [6.880255363874209e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.21301775147928959, 4.016552734052756e-06], 'false,true': [5.046952993181808e-05, -3.044159906230268e-17], 'false': [4.016552734052756e-06, nan]}, {'': [0.23209680618924877, 5.459214344236835e-09], 'false,true': [2.3129646346357427e-18, 5.740860834332498e-09], 'true': [0.23209680618924877, nan], 'false': [5.459214344236835e-09, nan]}, {'': [0.22684310018903558, 3.930737151228762e-09], 'false': [3.930737151228762e-09, nan]}, {'': [0.23209680618924766, 3.0770420759533106e-09], 'false,true': [0.0, 3.246566438221621e-09], 'false': [3.0770420759533106e-09, nan], 'false,true,true': [nan, 0.0]}, {'': [0.22684310018903572, 4.686806987311366e-09], 'false,true': [-1.1564823173178713e-18, 1.0572145795341555e-13], 'false': [4.686806987311366e-09, nan], 'false,true,false': [0.0, -1.947759692324836e-18]}, {'': [0.19901144640998988, 4.405385909316859e-14], 'false,true': [4.405385909316859e-14, nan], 'false': [4.405385909316859e-14, nan]}, {'': [0.2383126369612855, 2.5227972836698123e-09], 'false,true': [1.1564823173178713e-18, 5.6239735091168086e-14], 'false': [2.5227972836698123e-09, nan], 'false,true,true': [nan, 1.1564823173178713e-18]}, {'': [0.2130177514792902, -9.570888143320316e-18], 'false,true': [nan, -9.570888143320316e-18], 'false': [-9.570888143320316e-18, nan]}, {'': [0.12334574958647407, nan], 'true,true,false': [nan, 0.0], 'true,false,false': [0.19390581717451552, 2.6020852139652106e-18], 'true,false,true': [-1.0150610510858574e-16, 0.0], 'true,false': [0.010389523130751959, 0.09134173741420315], 'true': [0.04748724158646441, 0.12530773862466438], 'true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(B, E).;true;true
5;false,false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,true;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(A) )
%   | | then return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.1336478517144396;  // std dev = 0,016, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12634736757191561;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( actor(B) )
%   | | | then return -0.11225814429602007;  // std dev = 0,001, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.10160164488193267;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.10695080928459232;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926104;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.10275826516939104;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(B) )
%   | | | then return -0.09269572671034897;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.09261986171707193;  // std dev = 0,001, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.08518753407537594;  // std dev = 3,94e-06, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, E) )
%   | | then return -0.09366331187269146;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 9,13e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.08519120977387837;  // std dev = 1,57e-05, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(B), actor(A) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(B) )
%   | | | then return -0.07877980346255888;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0787853094300858;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.0800312833566377;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( genre(B, D) )
%   | then return -0.0731633450478935;  // std dev = 3,42e-06, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324791546785867;  // std dev = 7,62e-06, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07324743743060255;  // std dev = 9,04e-05, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.07736601283716611;  // std dev = 0,009, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842688376688048;  // std dev = 9,32e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.06843126950466556;  // std dev = 1,28e-05, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.0683533208314563;  // std dev = 5,94e-06, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07441524340043718;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.2004540731537077;  // std dev = 0,729, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.12299965351019944;  // std dev = 0,193, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06415654012033159;  // std dev = 0,002, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.997359
   AUC PR    = 0.833792
   CLL	      = -0.082518
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.169 seconds
Total inference time: 3.405 seconds
AUC ROC: 0.997359


Results scoring model
   AUC ROC   = 0.999667
   AUC PR    = 0.968291
   CLL	      = -0.06668
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.918 seconds
Refined model CLL: -0.06668


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.997359
   AUC PR    = 0.833792
   CLL	      = -0.082518
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 8.259 seconds
Total inference time: 3.405 seconds
AUC ROC: 0.997359
Total revision time: 8.259
Best scored revision CLL: -0.06668


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 09:11:10
{'F1': 0.852086, 'parameter': {'F1': 0.192187, 'Precision': [0.106309, 0.5], 'Inference time': 3.067, 'AUC PR': 0.891379, 'CLL': -0.243594, 'Learning time': 1.348, 'AUC ROC': 0.983069, 'Recall': 1.0}, 'Precision': [0.742291, 0.5], 'Inference time': 3.405, 'AUC PR': 0.833792, 'CLL': -0.082518, 'Learning time': 8.259, 'AUC ROC': 0.997359, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839144;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8,16e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5,87e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926108;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 4,94e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 5,27e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07324622576333707;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0862139318719642;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420268;  // std dev = 3,07e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07965977724867426;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202626;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069031
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.424 seconds
Total inference time: 2.688 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 09:11:16
{'Inference time': 2.688, 'F1': 1.0, 'Learning time': 2.424, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'CLL': -0.069031, 'Recall': 1.0, 'AUC ROC': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.16469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.916 seconds
Total inference time: 1.972 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 09:11:19
{'Inference time': 1.972, 'F1': nan, 'Learning time': 0.916, 'Precision': [nan, 0.5], 'AUC PR': 1.0, 'CLL': -0.16469, 'Recall': 0.0, 'AUC ROC': 1.0}


