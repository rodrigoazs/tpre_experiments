Starting experiment #2 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21194538097995946;  // std dev = 0,478, 8.047,000 (wgt'ed) examples reached here.  /* #neg=5.200 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7812258581764349;  // std dev = 2,542, 91,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=84 */
%   | | | else return -0.13869649076799567;  // std dev = 0,998, 317,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.052845829298393404;  // std dev = 3,935, 191,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=17 */
%   | | | else return 0.010148935099512346;  // std dev = 4,014, 125,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.017512440561863577;  // std dev = 6,415, 378,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=47 */
%   | | | else return -0.10959300038435867;  // std dev = 1,391, 62,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8081200033077314;  // std dev = 0,989, 45,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | | else return -0.16965777447004696;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return 0.13034222552995367;  // std dev = 5,020, 120,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return 0.6081200033077307;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.19060850930485435;  // std dev = 0,480, 7.661,000 (wgt'ed) examples reached here.  /* #neg=4.901 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then if ( author(L, J), venue(L, B) )
%   | | | then return 0.304471308917834;  // std dev = 0,861, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1918193219576879;  // std dev = 3,173, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else return -0.025523406477500232;  // std dev = 0,313, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else return -0.0011511423926000956;  // std dev = 0,327, 1.045,000 (wgt'ed) examples reached here.  /* #neg=894 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16288463684617224;  // std dev = 0,479, 7.876,000 (wgt'ed) examples reached here.  /* #neg=5.029 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6557667829274602;  // std dev = 2,538, 90,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=83 */
%   | | | else return -0.1266039193368406;  // std dev = 0,083, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.04598007928003549;  // std dev = 3,857, 180,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=17 */
%   | | | else return 0.05068416661168567;  // std dev = 4,093, 108,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.006431502921550824;  // std dev = 6,336, 322,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=47 */
%   | | | else return -0.0872306079929953;  // std dev = 1,384, 48,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=2 */
%   | | else return -0.12531840311751805;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13793217065803826;  // std dev = 0,480, 7.829,000 (wgt'ed) examples reached here.  /* #neg=4.982 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.2919024307438369;  // std dev = 0,546, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14847488448232773;  // std dev = 3,231, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.2680389108151281;  // std dev = 1,086, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1277503424814071;  // std dev = 0,054, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.025104007409158954;  // std dev = 8,108, 702,000 (wgt'ed) examples reached here.  /* #neg=620 #pos=82 */
%   | | | else return 0.013439327539808697;  // std dev = 2,941, 114,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=21 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.034334101226344796;  // std dev = 4,479, 225,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=48 */
%   | | | else return -0.1122142341178743;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(E, C) )
%   | | | then return 0.6586477477920141;  // std dev = 0,957, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.06835013128842266;  // std dev = 6,029, 202,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=66 */
%   | | else return 0.6577914933405689;  // std dev = 0,043, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10848901211732773;  // std dev = 0,480, 7.691,000 (wgt'ed) examples reached here.  /* #neg=4.931 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then if ( author(J, H), title(J, I) )
%   | | | then return -0.05145932613013569;  // std dev = 0,781, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.15403715623463318;  // std dev = 3,171, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else return -0.029951359040760787;  // std dev = 0,286, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.0037391196423360827;  // std dev = 0,294, 615,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=104 */
%   | | else return -0.012884166078063905;  // std dev = 0,324, 391,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=47 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0828766724149276;  // std dev = 0,477, 8.028,000 (wgt'ed) examples reached here.  /* #neg=5.181 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5057089470425107;  // std dev = 2,573, 91,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=84 */
%   | | | else return -0.1121885754872135;  // std dev = 0,995, 291,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.10242240844678513;  // std dev = 3,243, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.06268503563196229;  // std dev = 4,371, 284,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.009628623337211845;  // std dev = 6,398, 373,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=47 */
%   | | | else return -0.07713338181359669;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=2 */
%   | | else return -0.10034302275007603;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07496336704108304;  // std dev = 0,479, 7.833,000 (wgt'ed) examples reached here.  /* #neg=4.986 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.19431638749910815;  // std dev = 0,473, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.34413154329141343;  // std dev = 0,979, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11879042559870359;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.03922456546035617;  // std dev = 2,077, 61,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return -0.040397104746617785;  // std dev = 0,750, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.012619343336363838;  // std dev = 8,002, 688,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=88 */
%   | | | else return -0.006388595365002438;  // std dev = 3,785, 244,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=46 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05470330758373445;  // std dev = 0,478, 7.938,000 (wgt'ed) examples reached here.  /* #neg=5.091 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.04792183517401633;  // std dev = 1,189, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.04973931583081393;  // std dev = 1,852, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.0027004696842205054;  // std dev = 8,245, 598,000 (wgt'ed) examples reached here.  /* #neg=515 #pos=83 */
%   | | | else return -0.03806719617220908;  // std dev = 2,715, 182,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -6.61605251075206E-5;  // std dev = 3,559, 238,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=47 */
%   | | | else return -0.07909079390773872;  // std dev = 1,401, 36,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | else return -0.0911104867776497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03886936322855856;  // std dev = 0,477, 8.028,000 (wgt'ed) examples reached here.  /* #neg=5.181 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.631996026093022;  // std dev = 0,343, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12815357621023088;  // std dev = 0,043, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 3.2306853037053203E-4;  // std dev = 1,982, 66,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | | | else return -0.11537383414888708;  // std dev = 0,142, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0037053833037738555;  // std dev = 8,258, 601,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=83 */
%   | | | else return -0.03309089095243291;  // std dev = 2,735, 179,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.011319615545127679;  // std dev = 3,775, 269,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=47 */
%   | | | else return -0.08384151209840461;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.028061750320329072;  // std dev = 0,476, 7.413,000 (wgt'ed) examples reached here.  /* #neg=4.804 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7279487533120824;  // std dev = 2,685, 140,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=133 */
%   | | | else return -0.1380608565233916;  // std dev = 1,604, 611,000 (wgt'ed) examples reached here.  /* #neg=609 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.13622014602671906;  // std dev = 4,684, 144,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=27 */
%   | | | else return -0.05620056636527458;  // std dev = 0,801, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.43021531546917646;  // std dev = 4,336, 103,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=78 */
%   | | | else return 0.03449848704219659;  // std dev = 4,013, 206,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5760702116157917;  // std dev = 0,292, 75,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=68 */
%   | else return 0.0012874205040418652;  // std dev = 0,238, 252,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(H, C).;false;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true,true;author(L, J), venue(L, B).;false;false
1;false,true;haswordtitle(K, I).;true;false
1;true,true,true;samebib(F, G), venue(G, A).;false;false
1;true,true;author(F, E), venue(F, B).;true;true
1;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,true;title(L, K), venue(L, B).;false;false
2;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
2;false,true;title(F, E), venue(F, B).;true;true
2;false,true,true;samebib(F, G), venue(G, A).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), venue(G, A).;false;false
3;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
4;false,true,true;author(J, H), title(J, I).;false;false
4;false,true;haswordtitle(I, G).;true;false
4;true,true,true;haswordauthor(E, C).;false;false
4;true,true;haswordtitle(F, C).;true;false
4;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
4;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;haswordtitle(J, H).;false;false
6;false,true,false;author(G, E), venue(G, A).;false;false
6;false,true;haswordtitle(F, D).;false;true
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false;haswordvenue(A, H), haswordauthor(I, H).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;title(K, J), venue(K, A).;false;false
7;false,true,false;title(H, E), venue(H, B).;false;false
7;false,true;haswordauthor(F, D).;true;true
7;false,true,true;author(G, F), venue(G, B).;false;false
7;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
7;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(G, D), venue(G, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4945125714631494;  // std dev = 4,513, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.21324294031064794;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.786757059689352;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.21324294031064805;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(B, H) )
%   | | then return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30598548695293476;  // std dev = 3,807, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.1272556476027624;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360625;  // std dev = 6,84e-09, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3049711717785921;  // std dev = 3,296, 82,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10768807305179845;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783616;  // std dev = 5,58e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.17283750943736859;  // std dev = 0,374, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09290663729929774;  // std dev = 0,002, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13245722114080427;  // std dev = 3,579, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08469453355691793;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08516797016037267;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15608289979586068;  // std dev = 3,225, 83,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07835565054628056;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07876234480030055;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10735629102859631;  // std dev = 3,301, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.0751464307729855;  // std dev = 0,014, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0732160786036012;  // std dev = 0,000688, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06540878672478202;  // std dev = 3,414, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06829422939555643;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06840623434079407;  // std dev = 5,92e-05, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.4320159074253094;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06387151266729567;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3259920309979024;  // std dev = 5,96e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06407470310854434;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.43201590742530965;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06418383429391392;  // std dev = 2,58e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973966
   AUC PR    = 0.853081
   CLL	      = -0.158244
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 1.75 seconds
Total inference time: 3.416 seconds
AUC ROC: 0.973966


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.161237
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.046 seconds
Parameter learned model CLL: -0.161237


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 4, 0], 'true': [4.513, 32, 56], 'false,true,false': [8.12e-09, 62, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(B, H)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'false': 'movie(G, B)'}, {'true,true,true,false': [0.0, 0, 56], 'true,true,false': [0.0, 26, 0], 'false,true,true': [5.27e-09, 6, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 70, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 5, 0], 'true': [3.807, 37, 56], 'false,true,false': [6.84e-09, 71, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [3.296, 26, 56], 'false,true,true': [0.009, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [5.58e-08, 73, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true': [0.374, 37, 56], 'false,true': [0.002, 92, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 4, 0], 'true': [3.579, 37, 56], 'false,true,false': [0.0, 73, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 4, 0], 'true': [3.225, 27, 56], 'false,true,false': [0.0, 80, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [3.301, 29, 56], 'false,true,true': [0.014, 8, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.000688, 80, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true,false': [0.0, 4, 0], 'true': [3.414, 32, 56], 'false,true,false': [5.92e-05, 91, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)'}, {'true,false,true,false': [0.0, 3, 0], 'true,true,true': [1.05e-08, 3, 0], 'false': [0.0, 0, 0], 'true,false,false,false': [2.58e-08, 70, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,true': [5.96e-08, 0, 56], 'true,true,false,false': [0.0, 1, 0], 'true,false,false,true': [0.0, 31, 0]}]]
[{'': [0.23140495867768565, 6.728624391667616e-17], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 6.446456272017038e-17], 'false': [6.728624391667616e-17, nan]}, {'': [0.21948033096240463, -2.6294755846385285e-17], 'true': [0.21948033096240463, nan], 'false,true': [4.625929269271485e-18, -3.172065784643304e-17], 'true,true,true': [0.0, -7.61295788314393e-16], 'true,true': [0.017236072637734055, -4.2700885562506023e-17], 'false': [-2.6294755846385285e-17, nan]}, {'': [0.15582313651856697, 2.8608221549544176e-06], 'false,true,true': [0.0, 0.0], 'false,true': [3.0997468122131534e-05, 4.5347137625534564e-17], 'false': [2.8608221549544176e-06, nan]}, {'': [0.1324865529725329, 1.9527759175745157e-06], 'false,true,false': [nan, 4.258389683493751e-17], 'false,true': [3.710933964907494e-05, 4.258389683493751e-17], 'false': [1.9527759175745157e-06, nan]}, {'': [0.13998538103699068, 2.4385857880154553e-06], 'true': [0.13998538103699068, nan], 'false': [2.4385857880154553e-06, nan]}, {'': [0.13772976661452055, 1.1038881350137183e-08], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 0.0], 'false': [1.1038881350137183e-08, nan]}, {'': [0.12533634310029518, 7.501143591191552e-09], 'false,true': [0.0, -9.714451465470119e-18], 'false': [7.501143591191552e-09, nan]}, {'': [0.12821114728682875, 2.6414341857960988e-06], 'false,true,false': [nan, 5.916554782908756e-09], 'false,true': [2.560910186156888e-05, 5.916554782908756e-09], 'false': [2.6414341857960988e-06, nan]}, {'': [0.13245461439482573, 3.860281444208849e-09], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 3.5017490830090683e-09], 'false': [3.860281444208849e-09, nan]}, {'': [0.07678716947432916, nan], 'true,true,false': [nan, 0.0], 'true': [0.02541193038595202, 0.07523389613323887], 'true,false,false': [-1.4325458382260084e-16, 9.516197353929913e-18], 'true,true': [3.700743415417188e-17, 0.0], 'true,false,true': [6.344131569286608e-17, 0.0], 'true,false': [0.007343161616054928, 0.028781682367648765]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true,true;genre(A, F).;true;true
1;true;genre(B, E).;true;true
1;false;genre(B, H).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(A, F).;true;true
2;false;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839133;  // std dev = 2,11e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( genre(B, F) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 9,13e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.0851847513883968;  // std dev = 2,04e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,32e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202618;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1269284989333667;  // std dev = 0,195, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.12740040100500993;  // std dev = 0,195, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202623;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.998476
   AUC PR    = 0.957409
   CLL	      = -0.079348
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.935 seconds
Total inference time: 4.023 seconds
AUC ROC: 0.998476


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065015
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 2.578 seconds
Refined model CLL: -0.065015


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.998476
   AUC PR    = 0.957409
   CLL	      = -0.079348
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 10.309 seconds
Total inference time: 4.023 seconds
AUC ROC: 0.998476
Total revision time: 10.309
Best scored revision CLL: -0.065015


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 08:58:14
{'Learning time': 10.309, 'F1': 0.847854, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'Inference time': 4.023, 'parameter': {'Learning time': 1.75, 'F1': 0.900506, 'Precision': [1.0, 0.5], 'Recall': 0.819018, 'Inference time': 3.416, 'CLL': -0.158244, 'AUC ROC': 0.973966, 'AUC PR': 0.853081}, 'CLL': -0.079348, 'AUC ROC': 0.998476, 'AUC PR': 0.957409}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5093193460607749;  // std dev = 0,169, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.11479635718659208;  // std dev = 0,331, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10137019415225547;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4229324703304599;  // std dev = 0,042, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17841444072798315;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09250190275820819;  // std dev = 6,23e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32439929984574795;  // std dev = 0,038, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15334716704921147;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08502400842674511;  // std dev = 1,05e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2576935606626646;  // std dev = 0,033, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13554716093738234;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.078638710121183;  // std dev = 1,49e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2115412414372076;  // std dev = 0,029, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12140008719828295;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07312645935386192;  // std dev = 4,08e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17840610162398018;  // std dev = 0,025, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10757033765656497;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06832213386104044;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15373830043252537;  // std dev = 0,022, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09659612669138906;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06409932809882218;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.12954610005304362;  // std dev = 0,042, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.12476310489463183;  // std dev = 0,040, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08337
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.098 seconds
Total inference time: 2.432 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 08:58:20
{'Learning time': 3.098, 'CLL': -0.08337, 'Recall': 1.0, 'Inference time': 2.432, 'F1': 0.847854, 'Precision': [0.735892, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.994647
   AUC PR    = 0.735892
   CLL	      = -0.169006
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.046 seconds
Total inference time: 1.831 seconds
AUC ROC: 0.994647


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 08:58:23
{'Learning time': 1.046, 'CLL': -0.169006, 'Recall': 0.0, 'Inference time': 1.831, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.994647, 'AUC PR': 0.735892}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(H, C).;false;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true,true;author(L, J), venue(L, B).;false;false
1;false,true;haswordtitle(K, I).;true;false
1;true,true,true;samebib(F, G), venue(G, A).;false;false
1;true,true;author(F, E), venue(F, B).;true;true
1;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,true;title(L, K), venue(L, B).;false;false
2;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
2;false,true;title(F, E), venue(F, B).;true;true
2;false,true,true;samebib(F, G), venue(G, A).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), venue(G, A).;false;false
3;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
4;false,true,true;author(J, H), title(J, I).;false;false
4;false,true;haswordtitle(I, G).;true;false
4;true,true,true;haswordauthor(E, C).;false;false
4;true,true;haswordtitle(F, C).;true;false
4;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
4;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;haswordtitle(J, H).;false;false
6;false,true,false;author(G, E), venue(G, A).;false;false
6;false,true;haswordtitle(F, D).;false;true
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false;haswordvenue(A, H), haswordauthor(I, H).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;title(K, J), venue(K, A).;false;false
7;false,true,false;title(H, E), venue(H, B).;false;false
7;false,true;haswordauthor(F, D).;true;true
7;false,true,true;author(G, F), venue(G, B).;false;false
7;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
7;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(G, D), venue(G, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5172398441904221;  // std dev = 4,447, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7829192497050764;  // std dev = 8,43e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.21708075029492324;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(B, H) )
%   | | then return -0.12778841372440516;  // std dev = 0,015, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.36675697464048673;  // std dev = 3,455, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.12699557139668693;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11208291274696476;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360621;  // std dev = 7,57e-09, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20695992187408077;  // std dev = 3,834, 100,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10158366793388374;  // std dev = 0,000416, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.21447329076718055;  // std dev = 0,365, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09279609762126706;  // std dev = 0,001, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22700947014033168;  // std dev = 2,975, 79,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08517658318657263;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08517318856181573;  // std dev = 2,65e-05, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1165194309666115;  // std dev = 3,358, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07876974079724575;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07876315904787046;  // std dev = 0,000298, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06253865572751702;  // std dev = 3,532, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.07309856449828135;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324158519351384;  // std dev = 3,33e-06, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.03330865202489299;  // std dev = 3,628, 96,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06829771164344982;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.0684229637803114;  // std dev = 2,34e-07, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.43234879159427364;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.08309306624356098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06418697540398953;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.32569405128704215;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06407777616723062;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.4323487915942738;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06418833521000339;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973223
   AUC PR    = 0.851779
   CLL	      = -0.160893
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 1.994 seconds
Total inference time: 3.085 seconds
AUC ROC: 0.973223


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.154454
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.121 seconds
Parameter learned model CLL: -0.154454


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 3, 0], 'true': [4.447, 30, 58], 'false,true,false': [8.33e-09, 72, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(B, H)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'false': 'movie(G, B)'}, {'true,true,true,false': [8.43e-08, 0, 58], 'true,true,false': [0.0, 23, 0], 'false,true,true': [0.015, 7, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 79, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 6, 0], 'true': [3.455, 27, 58], 'false,true,false': [7.57e-09, 86, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [3.834, 42, 58], 'false,true,true': [0.0, 8, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.000416, 76, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true': [0.365, 31, 58], 'false,true': [0.001, 91, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [5.27e-09, 9, 0], 'true': [2.975, 21, 58], 'false,true,false': [2.65e-05, 75, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 9, 0], 'true': [3.358, 30, 58], 'false,true,false': [0.000298, 79, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [3.532, 35, 58], 'false,true,true': [2.63e-09, 6, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [3.33e-06, 83, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true,false': [0.0, 6, 0], 'true': [3.628, 38, 58], 'false,true,false': [2.34e-07, 74, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)'}, {'true,false,true,false': [0.0, 5, 0], 'true,true,true': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,false,false,false': [0.0, 99, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,true': [0.0, 0, 58], 'true,true,false,false': [0.0, 4, 0], 'true,false,false,true': [0.0, 23, 0]}]]
[{'': [0.2246900826446277, 7.105427357601002e-17], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 6.78469626159818e-17], 'false': [7.105427357601002e-17, nan]}, {'': [0.20332266422801384, 3.0934992206098195e-06], 'true': [0.20332266422801384, nan], 'false,true': [3.295969301670064e-05, -2.5296220814244072e-17], 'true,true,true': [nan, 1.2250736823450003e-16], 'true,true': [1.2250736823450003e-16, -9.654113257610057e-18], 'false': [3.0934992206098195e-06, nan]}, {'': [0.14041279278780536, 2.300106233049719e-06], 'false,true,true': [0.0, -2.3129646346357427e-18], 'false,true': [2.7231108735077075e-05, 5.680210823663592e-17], 'false': [2.300106233049719e-06, nan]}, {'': [0.1469981274078012, 2.0734794066908555e-09], 'false,true,false': [nan, 2.2764723074445027e-09], 'false,true': [-5.204170427930421e-18, 2.2764723074445027e-09], 'false': [2.0734794066908555e-09, nan]}, {'': [0.13346858169267067, 1.3327145568634165e-06], 'true': [0.13346858169267067, nan], 'false': [1.3327145568634165e-06, nan]}, {'': [0.11202667757641348, 6.266616180998563e-10], 'false,true,true': [nan, 3.0839528461809902e-18], 'false,true': [3.0839528461809902e-18, 7.006263450885324e-10], 'false': [6.266616180998563e-10, nan]}, {'': [0.12811116908407813, 1.0141573187299518e-09], 'false,true': [-7.709882115452476e-19, 1.1252638349944907e-09], 'false': [1.0141573187299518e-09, nan]}, {'': [0.13417305920112751, 1.286142797755985e-09], 'false,true,false': [nan, 1.3365680717479828e-13], 'false,true': [1.1564823173178713e-18, 1.3365680717479828e-13], 'false': [1.286142797755985e-09, nan]}, {'': [0.13713279333615278, 1.0884124213017544e-09], 'false,true,true': [nan, -1.1564823173178713e-18], 'false,true': [-1.1564823173178713e-18, 5.474524737440493e-14], 'false': [1.0884124213017544e-09, nan]}, {'': [0.05800365875652827, nan], 'true,true,false': [0.0, 0.0], 'true': [0.01848838373265842, 0.05866092227803934], 'true,false,false': [-1.1584935909132068e-16, -1.5139404881252134e-17], 'true,true': [0.0, 5.719044333346024e-05], 'true,false,true': [-1.9907447338106256e-16, -6.938893903907229e-19], 'true,false': [0.011100378550854592, 0.020735649757177756]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
1;false;genre(B, H).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(A, F).;true;true
2;false;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;true,false;genre(B, E).;true;true
9;false;genre(B, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(B, E) )
%   | then return -0.1254446385283914;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,05e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109172;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10097388499300493;  // std dev = 0,362, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.11950467365995959;  // std dev = 0,330, 41,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.99881
   AUC PR    = 0.964909
   CLL	      = -0.082749
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.155 seconds
Total inference time: 3.331 seconds
AUC ROC: 0.99881


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066184
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.979 seconds
Refined model CLL: -0.066184


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99881
   AUC PR    = 0.964909
   CLL	      = -0.082749
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 9.248999999999999 seconds
Total inference time: 3.331 seconds
AUC ROC: 0.99881
Total revision time: 9.248999999999999
Best scored revision CLL: -0.066184


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 08:58:40
{'Learning time': 9.248999999999999, 'F1': 0.848168, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'Inference time': 3.331, 'parameter': {'Learning time': 1.994, 'F1': 0.89983, 'Precision': [1.0, 0.5], 'Recall': 0.817901, 'Inference time': 3.085, 'CLL': -0.160893, 'AUC ROC': 0.973223, 'AUC PR': 0.851779}, 'CLL': -0.082749, 'AUC ROC': 0.99881, 'AUC PR': 0.964909}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 8,43e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11346839739719689;  // std dev = 0,115, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10149122774341925;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09260319023090804;  // std dev = 8,79e-06, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08510999445057962;  // std dev = 8,15e-06, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07871254989528113;  // std dev = 7,59e-06, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07319059147772951;  // std dev = 5,77e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06837827792970265;  // std dev = 5,00e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06414887037145095;  // std dev = 4,34e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067701
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.644 seconds
Total inference time: 2.374 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 08:58:45
{'Learning time': 2.644, 'CLL': -0.067701, 'Recall': 1.0, 'Inference time': 2.374, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,60e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.994636
   AUC PR    = 0.736364
   CLL	      = -0.169152
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.179 seconds
Total inference time: 2.009 seconds
AUC ROC: 0.994636


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 08:58:48
{'Learning time': 1.179, 'CLL': -0.169152, 'Recall': 0.0, 'Inference time': 2.009, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.994636, 'AUC PR': 0.736364}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(H, C).;false;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true,true;author(L, J), venue(L, B).;false;false
1;false,true;haswordtitle(K, I).;true;false
1;true,true,true;samebib(F, G), venue(G, A).;false;false
1;true,true;author(F, E), venue(F, B).;true;true
1;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,true;title(L, K), venue(L, B).;false;false
2;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
2;false,true;title(F, E), venue(F, B).;true;true
2;false,true,true;samebib(F, G), venue(G, A).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), venue(G, A).;false;false
3;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
4;false,true,true;author(J, H), title(J, I).;false;false
4;false,true;haswordtitle(I, G).;true;false
4;true,true,true;haswordauthor(E, C).;false;false
4;true,true;haswordtitle(F, C).;true;false
4;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
4;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;haswordtitle(J, H).;false;false
6;false,true,false;author(G, E), venue(G, A).;false;false
6;false,true;haswordtitle(F, D).;false;true
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false;haswordvenue(A, H), haswordauthor(I, H).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;title(K, J), venue(K, A).;false;false
7;false,true,false;title(H, E), venue(H, B).;false;false
7;false,true;haswordauthor(F, D).;true;true
7;false,true,true;author(G, F), venue(G, B).;false;false
7;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
7;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(G, D), venue(G, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5673122817130546;  // std dev = 7,195, 251,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.14185106490048846;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.22571135839664752;  // std dev = 1,29e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.774288641603352;  // std dev = 2,38e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0.21573008304479466;  // std dev = 0,497, 111,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(B, H) )
%   | | then return -0.12544463852839116;  // std dev = 4,21e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.1254446385283918;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3695455643806971;  // std dev = 6,727, 256,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.11231637819360644;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360635;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.11231637819360674;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.27322834295131637;  // std dev = 6,790, 262,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783656;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1878293570856105;  // std dev = 0,427, 270,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926044;  // std dev = 8,23e-09, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15195275626365343;  // std dev = 6,901, 265,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0851847513883969;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.08518475138839678;  // std dev = 5,74e-09, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15008269153262285;  // std dev = 6,475, 251,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109172;  // std dev = 1,97e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.07877675473109146;  // std dev = 6,83e-08, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11638534256233916;  // std dev = 6,466, 250,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,05e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333661;  // std dev = 1,31e-07, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04437084938413979;  // std dev = 7,011, 269,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.06842697784420261;  // std dev = 4,75e-09, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5495716423377116;  // std dev = 0,200, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06419184008202622;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3025897661276254;  // std dev = 2,60e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.07372306245155284;  // std dev = 4,975, 99,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=49 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.262241
   Precision = 0.069012 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.129114


Total learning time: 2.267 seconds
Total inference time: 3.448 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.21974
   Precision = 0.226752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.369678


Total scoring time: 2.439 seconds
Parameter learned model CLL: -0.21974


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [2.98e-08, 32, 0], 'true': [7.195, 73, 178], 'false,true,false': [0.0, 230, 0], 'false,true,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(B, H)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'false': 'movie(G, B)'}, {'true,true,true,false': [2.38e-07, 0, 129], 'true,true,false': [0.497, 62, 49], 'false,true,true': [4.21e-08, 62, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [1.29e-08, 8, 0], 'false,true,false': [0.0, 236, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 44, 0], 'true': [6.727, 78, 178], 'false,true,false': [0.0, 223, 0], 'false,true,true,true': [0.0, 12, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [6.79, 84, 178], 'false,true,true': [0.0, 40, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 227, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true': [0.427, 92, 178], 'false,true': [8.23e-09, 275, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [1.67e-08, 37, 0], 'true': [6.901, 87, 178], 'false,true,false': [5.74e-09, 244, 0], 'false,true,true,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [1.97e-08, 58, 0], 'true': [6.475, 73, 178], 'false,true,false': [6.83e-08, 215, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [6.466, 72, 178], 'false,true,true': [1.05e-08, 50, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [1.31e-07, 218, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true,false': [0.0, 36, 0], 'true': [7.011, 91, 178], 'false,true,false': [4.75e-09, 212, 0], 'false,true,true,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)'}, {'true,false,true,false': [0.0, 40, 0], 'true,true,true': [0.2, 23, 0], 'false': [0.0, 0, 0], 'true,false,false,false': [0.0, 206, 0], 'true,true,false,true': [2.63e-09, 8, 0], 'true,false,true,true': [2.6e-07, 0, 129], 'true,true,false,false': [0.0, 46, 0], 'true,false,false,true': [4.975, 50, 49]}]]
[{'': [0.20625069443342725, -7.373556691850096e-17], 'false,true,true': [0.0, 2.7755575615628914e-17], 'false,true': [3.489272363107635e-17, -2.0852884636437723e-16], 'false': [-7.373556691850096e-17, nan]}, {'': [0.20258844953173455, -9.537486386041613e-17], 'true': [0.20258844953173455, nan], 'false,true': [2.865091676452017e-17, -7.150588972162025e-17], 'true,true,true': [2.0816681711721685e-17, 4.4064665783572104e-16], 'true,true': [0.05498428259363871, 0.2465708952195435], 'false': [-9.537486386041613e-17, nan]}, {'': [0.17674154529632552, -1.1301194946005178e-16], 'false,true,true': [-4.625929269271485e-18, -2.523234146875356e-18], 'false,true': [2.1807952269422717e-17, -6.770866876637726e-17], 'false': [-1.1301194946005178e-16, nan]}, {'': [0.1759587866659229, -6.154045230131954e-17], 'false,true,false': [nan, -7.629726512842486e-17], 'false,true': [-2.7755575615628915e-18, -7.629726512842486e-17], 'false': [-6.154045230131954e-17, nan]}, {'': [0.1819073737546694, 6.782453386800957e-17], 'true': [0.1819073737546694, nan], 'false': [6.782453386800957e-17, nan]}, {'': [0.17973753739880505, 3.5465457731081387e-17], 'false,true,true': [0.0, 7.50150692314295e-18], 'false,true': [6.308085367188389e-18, 3.276067941516855e-17], 'false': [3.5465457731081387e-17, nan]}, {'': [0.16701736360218236, 1.4640303621430636e-17], 'false,true': [6.699621700324221e-18, 2.1688077690351895e-17], 'false': [1.4640303621430636e-17, nan]}, {'': [0.16722980172221077, 4.474033084310332e-17], 'false,true,false': [nan, 7.84285989872817e-17], 'false,true': [2.220446049250313e-18, 7.84285989872817e-17], 'false': [4.474033084310332e-17, nan]}, {'': [0.18271270029220577, -1.2190684191962503e-17], 'false,true,true': [-9.912705577010326e-19, -1.5419764230904951e-18], 'false,true': [1.290957005378089e-18, 2.3042364662031552e-17], 'false': [-1.2190684191962503e-17, nan]}, {'': [0.08224957853302897, nan], 'true,true,false': [8.673617379884035e-19, -1.8101462358018856e-18], 'true': [0.04986951578866233, 0.07927045693645075], 'true,false,false': [0.2499744923987347, -2.1557728633498183e-18], 'true,true': [0.0017330135422198615, -3.0839528461809902e-18], 'true,false,true': [5.232679061799188e-16, -2.0816681711721684e-18], 'true,false': [0.024304762884116864, 0.08115917736728487]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true,true;genre(A, F).;true;true
1;true;genre(B, E).;true;true
1;false;genre(B, H).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(A, F).;true;true
2;false;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(B, F).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;true,false;genre(B, E).;true;true
9;false;genre(B, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 4,94e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.1418510649004885;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.7194734122109556;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.7194734122109553;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.12544463852839133;  // std dev = 2,11e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( genre(B, F) )
%   | then return -0.12544463852839124;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.12544463852839172;  // std dev = 0,000, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462839;  // std dev = 3,57e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 4,15e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1123163781936063;  // std dev = 4,17e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.11231637819360671;  // std dev = 0,000, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.41751358415831097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601503;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926089;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.09269127618926085;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.09269127618926093;  // std dev = 2,28e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839679;  // std dev = 2,28e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.08518475138839682;  // std dev = 2,63e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( genre(A, D) )
%   | then return -0.0851847513883968;  // std dev = 1,61e-09, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.08518475138839676;  // std dev = 1,83e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.08518475138839676;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253578;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.0787767547310915;  // std dev = 6,83e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | | else return -0.07877675473109168;  // std dev = 1,49e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.07877675473109169;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07324622576333698;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936713;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420267;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06842697784420267;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.06842697784420268;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202616;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.10183188875962843;  // std dev = 0,907, 154,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=129 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202625;  // std dev = 0,000, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | | else return 0.0449288861473201;  // std dev = 0,930, 89,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064091
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.215 seconds
Total inference time: 3.604 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067281
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.771 seconds
Refined model CLL: -0.067281


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064091
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.692 seconds
Total inference time: 3.604 seconds
AUC ROC: 1.0
Total revision time: 12.692
Best scored revision CLL: -0.067281


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 08:59:09
{'Learning time': 12.692, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'Inference time': 3.604, 'parameter': {'Learning time': 2.267, 'F1': 0.129114, 'Precision': [0.069012, 0.5], 'Recall': 1.0, 'Inference time': 3.448, 'CLL': -0.262241, 'AUC ROC': 0.993692, 'AUC PR': 0.961008}, 'CLL': -0.064091, 'AUC ROC': 1.0, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.14185106490048813;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.12544463852839183;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360689;  // std dev = 0,000, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783624;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10159632948783644;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926064;  // std dev = 2,98e-08, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839678;  // std dev = 8,43e-08, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 1,97e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07877675473109144;  // std dev = 5,96e-08, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07324622576333681;  // std dev = 1,06e-07, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420264;  // std dev = 1,67e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.06842697784420289;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06419184008202623;  // std dev = 0,000, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.819 seconds
Total inference time: 3.103 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 08:59:16
{'Learning time': 3.819, 'CLL': -0.063555, 'Recall': 1.0, 'Inference time': 3.103, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.14185106490048804;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.155326
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.38 seconds
Total inference time: 1.981 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 08:59:20
{'Learning time': 1.38, 'CLL': -0.155326, 'Recall': 0.0, 'Inference time': 1.981, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(H, C).;false;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true,true;author(L, J), venue(L, B).;false;false
1;false,true;haswordtitle(K, I).;true;false
1;true,true,true;samebib(F, G), venue(G, A).;false;false
1;true,true;author(F, E), venue(F, B).;true;true
1;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,true;title(L, K), venue(L, B).;false;false
2;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
2;false,true;title(F, E), venue(F, B).;true;true
2;false,true,true;samebib(F, G), venue(G, A).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), venue(G, A).;false;false
3;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
4;false,true,true;author(J, H), title(J, I).;false;false
4;false,true;haswordtitle(I, G).;true;false
4;true,true,true;haswordauthor(E, C).;false;false
4;true,true;haswordtitle(F, C).;true;false
4;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
4;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;haswordtitle(J, H).;false;false
6;false,true,false;author(G, E), venue(G, A).;false;false
6;false,true;haswordtitle(F, D).;false;true
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false;haswordvenue(A, H), haswordauthor(I, H).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;title(K, J), venue(K, A).;false;false
7;false,true,false;title(H, E), venue(H, B).;false;false
7;false,true;haswordauthor(F, D).;true;true
7;false,true,true;author(G, F), venue(G, B).;false;false
7;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
7;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(G, D), venue(G, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5724346493852269;  // std dev = 3,586, 63,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14185106490048766;  // std dev = 7,90e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.773392169631549;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.22660783036845153;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(B, H) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.41076240945580855;  // std dev = 2,695, 60,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360625;  // std dev = 6,59e-09, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2277400180586368;  // std dev = 3,139, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10516967905642631;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783621;  // std dev = 4,08e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.18235803418835805;  // std dev = 0,365, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09266984188862319;  // std dev = 7,73e-05, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0832607992043915;  // std dev = 3,335, 79,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0940519032120006;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0849083641523938;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518642174206283;  // std dev = 2,08e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10616355790862025;  // std dev = 3,102, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0785393741924546;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877818903198627;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11645099636864406;  // std dev = 2,903, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.07502078548345863;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07322369179281568;  // std dev = 0,000516, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0676419962260788;  // std dev = 3,034, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.07496936536038372;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0683151122547063;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06841506151029635;  // std dev = 5,11e-05, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.43541401155368825;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06993315175067207;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06401164026751159;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3229593983419172;  // std dev = 8,43e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06409313181498184;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.4354140115536881;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06419501071243912;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978805
   AUC PR    = 0.865091
   CLL	      = -0.159186
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 1.565 seconds
Total inference time: 3.599 seconds
AUC ROC: 0.978805


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.165438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.895 seconds
Parameter learned model CLL: -0.165438


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 9, 0], 'true': [3.586, 18, 45], 'false,true,false': [7.9e-09, 54, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(B, H)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'false': 'movie(G, B)'}, {'true,true,true,false': [0.0, 0, 45], 'true,true,false': [0.0, 29, 0], 'false,true,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 55, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 7, 0], 'true': [2.695, 15, 45], 'false,true,false': [6.59e-09, 69, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [3.139, 26, 45], 'false,true,true': [0.012, 6, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [4.08e-08, 58, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true': [0.365, 25, 45], 'false,true': [7.73e-05, 84, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [2.63e-09, 5, 0], 'true': [3.335, 34, 45], 'false,true,false': [2.08e-09, 62, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [2.63e-09, 6, 0], 'true': [3.102, 27, 45], 'false,true,false': [0.0, 80, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [2.903, 22, 45], 'false,true,true': [0.006, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.000516, 61, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true,false': [0.0, 1, 0], 'true': [3.034, 25, 45], 'false,true,false': [5.11e-05, 67, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)'}, {'true,false,true,false': [0.0, 4, 0], 'true,true,true': [0.0, 5, 0], 'false': [0.0, 0, 0], 'true,false,false,false': [0.0, 51, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,true': [8.43e-08, 0, 45], 'true,true,false,false': [0.0, 4, 0], 'true,false,false,true': [0.0, 28, 0]}]]
[{'': [0.20408163265306156, 6.591949208711867e-17], 'false,true,true': [0.0, -9.25185853854297e-18], 'false,true': [-1.1102230246251566e-17, 5.756711979537848e-17], 'false': [6.591949208711867e-17, nan]}, {'': [0.23831263696128477, -2.3278869871172638e-17], 'true': [0.23831263696128477, nan], 'false,true': [0.0, -2.0185873175002847e-17], 'true,true,true': [nan, -6.315935428978669e-16], 'true,true': [-6.315935428978669e-16, -6.891039463190627e-17], 'false': [-2.3278869871172638e-17, nan]}, {'': [0.1210661364812799, 4.966787215428332e-17], 'false,true,true': [nan, -1.982541115402065e-18], 'false,true': [-1.982541115402065e-18, 4.344350965924526e-17], 'false': [4.966787215428332e-17, nan]}, {'': [0.13875290163829881, 3.479006613195043e-06], 'false,true,false': [nan, 2.871266442996095e-17], 'false,true': [2.5537654278688187e-05, 2.871266442996095e-17], 'false': [3.479006613195043e-06, nan]}, {'': [0.13286751936967803, 5.9725801658858235e-09], 'true': [0.13286751936967803, nan], 'false': [5.9725801658858235e-09, nan]}, {'': [0.14076369832740535, 1.1494352778710621e-06], 'false,true,true': [0.0, 1.3877787807814458e-18], 'false,true': [1.1611709240911863e-05, 4.476705744456276e-18], 'false': [1.1494352778710621e-06, nan]}, {'': [0.13367941787855653, 3.7014079411298537e-09], 'false,true': [1.1564823173178713e-18, -1.3877787807814457e-17], 'false': [3.7014079411298537e-09, nan]}, {'': [0.12580021919573894, 7.711546738363973e-07], 'false,true,false': [nan, 4.361685640168587e-09], 'false,true': [9.433943286736579e-06, 4.361685640168587e-09], 'false': [7.711546738363973e-07, nan]}, {'': [0.13149353256627555, 6.165264777671613e-07], 'false,true,true': [0.0, 0.0], 'false,true': [1.1069771098604943e-05, 2.6147362724413104e-09], 'false': [6.165264777671613e-07, nan]}, {'': [0.08042798559917358, nan], 'true,true,false': [0.0, 0.0], 'true': [0.03426815979544641, 0.07982482635797047], 'true,false,false': [-3.172065784643304e-17, -5.986496701410158e-18], 'true,true': [-4.4408920985006264e-17, 5.610287719230028e-06], 'true,false,true': [1.5789838572446671e-16, 0.0], 'true,false': [0.011231044980489265, 0.03153075861627972]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
1;false;genre(B, H).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(B, F).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;true,false;genre(B, E).;true;true
9;false;genre(B, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, E) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360636;  // std dev = 2,95e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926094;  // std dev = 2,28e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.09269127618926105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08518475138839682;  // std dev = 1,18e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( genre(B, D) )
%   | then return -0.07324622576333702;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420271;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06842697784420267;  // std dev = 1,49e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.0684269778442027;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.11749045750050785;  // std dev = 0,190, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.1131439910511651;  // std dev = 0,375, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073935
   Precision = 0.836228 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.910811


Total learning time: 2.901 seconds
Total inference time: 3.671 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066919
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.815 seconds
Refined model CLL: -0.066919


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073935
   Precision = 0.836228 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.910811


Total learning time: 8.176 seconds
Total inference time: 3.671 seconds
AUC ROC: 1.0
Total revision time: 8.176
Best scored revision CLL: -0.066919


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 08:59:36
{'Learning time': 8.176, 'F1': 0.910811, 'Precision': [0.836228, 0.5], 'Recall': 1.0, 'Inference time': 3.671, 'parameter': {'Learning time': 1.565, 'F1': 0.904065, 'Precision': [1.0, 0.5], 'Recall': 0.824926, 'Inference time': 3.599, 'CLL': -0.159186, 'AUC ROC': 0.978805, 'AUC PR': 0.865091}, 'CLL': -0.073935, 'AUC ROC': 1.0, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 6,83e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839144;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.1015963294878362;  // std dev = 4,94e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926107;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839682;  // std dev = 4,83e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109166;  // std dev = 4,34e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07454245927393803;  // std dev = 0,084, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06834439600297616;  // std dev = 2,11e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06411897306163186;  // std dev = 2,58e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065025
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.556 seconds
Total inference time: 3.025 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 08:59:42
{'Learning time': 2.556, 'CLL': -0.065025, 'Recall': 1.0, 'Inference time': 3.025, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048766;  // std dev = 7,45e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.164255
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.941 seconds
Total inference time: 2.117 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 08:59:45
{'Learning time': 0.941, 'CLL': -0.164255, 'Recall': 0.0, 'Inference time': 2.117, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(H, C).;false;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true,true;author(L, J), venue(L, B).;false;false
1;false,true;haswordtitle(K, I).;true;false
1;true,true,true;samebib(F, G), venue(G, A).;false;false
1;true,true;author(F, E), venue(F, B).;true;true
1;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,true;title(L, K), venue(L, B).;false;false
2;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
2;false,true;title(F, E), venue(F, B).;true;true
2;false,true,true;samebib(F, G), venue(G, A).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), venue(G, A).;false;false
3;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
4;false,true,true;author(J, H), title(J, I).;false;false
4;false,true;haswordtitle(I, G).;true;false
4;true,true,true;haswordauthor(E, C).;false;false
4;true,true;haswordtitle(F, C).;true;false
4;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
4;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;haswordtitle(J, H).;false;false
6;false,true,false;author(G, E), venue(G, A).;false;false
6;false,true;haswordtitle(F, D).;false;true
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false;haswordvenue(A, H), haswordauthor(I, H).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;title(K, J), venue(K, A).;false;false
7;false,true,false;title(H, E), venue(H, B).;false;false
7;false,true;haswordauthor(F, D).;true;true
7;false,true,true;author(G, F), venue(G, B).;false;false
7;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
7;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false,true,false;haswordtitle(H, D).;false;false
8;false,true;author(F, E), venue(F, B).;true;true
8;false,true,true;samebib(F, G), venue(G, A).;false;false
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(G, D), venue(G, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.47458729126389637;  // std dev = 4,155, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 7,68e-09, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7900808306491528;  // std dev = 8,43e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.06035110091942316;  // std dev = 0,444, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(B, H) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34030777377814;  // std dev = 3,611, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360625;  // std dev = 6,59e-09, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2832667234688331;  // std dev = 3,473, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878362;  // std dev = 4,59e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.27096642896200346;  // std dev = 0,394, 63,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1867358500591194;  // std dev = 3,238, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839679;  // std dev = 2,79e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11544370810712012;  // std dev = 3,395, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109172;  // std dev = 2,58e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0964401123118034;  // std dev = 3,352, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04107395567186887;  // std dev = 3,544, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09348935235986819;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420267;  // std dev = 4,06e-09, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5097458952537391;  // std dev = 0,011, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.31026029640493974;  // std dev = 6,32e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.22316869684616633;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983069
   AUC PR    = 0.891379
   CLL	      = -0.20914
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.9216


Total learning time: 1.702 seconds
Total inference time: 3.187 seconds
AUC ROC: 0.983069


Results scoring model
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.215494
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total scoring time: 1.69 seconds
Parameter learned model CLL: -0.215494


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 3, 0], 'true': [4.155, 28, 45], 'false,true,false': [7.68e-09, 55, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(B, H)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'false': 'movie(G, B)'}, {'true,true,true,false': [8.43e-08, 0, 35], 'true,true,false': [0.444, 27, 10], 'false,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 61, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [2.63e-09, 3, 0], 'true': [3.611, 26, 45], 'false,true,false': [6.59e-09, 69, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [3.473, 24, 45], 'false,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [4.59e-08, 62, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true': [0.394, 18, 45], 'false,true': [0.0, 52, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 1, 0], 'true': [3.238, 20, 45], 'false,true,false': [2.79e-09, 53, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 2, 0], 'true': [3.395, 23, 45], 'false,true,false': [2.58e-08, 61, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [3.352, 22, 45], 'false,true,true': [1.86e-09, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 66, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true,false': [0.0, 0, 0], 'true': [3.544, 26, 45], 'false,true,false': [4.06e-09, 81, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)'}, {'true,false,true,false': [0.0, 4, 0], 'true,true,true': [0.011, 2, 0], 'false': [0.0, 0, 0], 'true,false,false,false': [0.0, 60, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,true': [6.32e-08, 0, 35], 'true,true,false,false': [0.0, 2, 0], 'true,false,false,true': [2.657, 24, 10]}]]
[{'': [0.23644210921373646, 6.125368411725002e-17], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 6.055761952500853e-17], 'false': [6.125368411725002e-17, nan]}, {'': [0.23437499999999967, -3.760432825343272e-17], 'true': [0.23437499999999967, nan], 'false,true': [0.0, -3.45807171604557e-17], 'true,true,true': [nan, 2.0301221021717148e-16], 'true,true': [2.0301221021717148e-16, 0.19722425127830556], 'false': [-3.760432825343272e-17, nan]}, {'': [0.1836429625557115, 4.625929269271486e-17], 'false,true,true': [nan, 2.3129646346357427e-18], 'false,true': [2.3129646346357427e-18, 4.344350965924526e-17], 'false': [4.625929269271486e-17, nan]}, {'': [0.17477531256702974, 3.532527805625498e-17], 'false,true,false': [nan, 3.40229636578677e-17], 'false,true': [0.0, 3.40229636578677e-17], 'false': [3.532527805625498e-17, nan]}, {'': [0.15559545298160302, -5.337610695313253e-18], 'true': [0.15559545298160302, nan], 'false': [-5.337610695313253e-18, nan]}, {'': [0.16131997972263623, 6.1679056923619804e-18], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 6.28428127146315e-18], 'false': [6.1679056923619804e-18, nan]}, {'': [0.16950767664186944, 1.2335811384723961e-17], 'false,true': [0.0, 1.0920226471722851e-17], 'false': [1.2335811384723961e-17, nan]}, {'': [0.167722841775478, -2.413528314402514e-18], 'false,true,false': [nan, -1.6821560979169039e-18], 'false,true': [1.1564823173178713e-18, -1.6821560979169039e-18], 'false': [-2.413528314402514e-18, nan]}, {'': [0.1768823968001169, 7.566616883633107e-06], 'false,true,true': [0.0, nan], 'false,true': [0.0, 1.644774851296528e-17], 'false': [7.566616883633107e-06, nan]}, {'': [0.09405892939172839, nan], 'true,true,false': [nan, 0.0], 'true': [0.04965803320292053, 0.09309625859748595], 'true,false,false': [0.20761245674740472, -3.23815048849004e-18], 'true,true': [5.685836586216686e-05, 0.0], 'true,false,true': [1.1419436824715895e-16, 0.0], 'true,false': [0.01319958398090368, 0.08092888630346089]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
1;false;genre(B, H).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109545;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( genre(B, E) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783619;  // std dev = 4,34e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10874302862501635;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 5,27e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.3207118471601494;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926104;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09405818089572886;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694893;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.2551722425694893;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08755908877753103;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(A), actor(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0793254974937554;  // std dev = 0,010, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.08039579444371767;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.07316897006143767;  // std dev = 0,000733, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07321208854279258;  // std dev = 3,57e-05, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.07464891042731077;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06843190265199242;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06831940364203892;  // std dev = 0,000924, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06417557850821307;  // std dev = 6,65e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801084;  // std dev = 3,65e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.06965336670846554;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06418674011382253;  // std dev = 9,76e-05, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return 0.11605070538252354;  // std dev = 0,188, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999707
   AUC PR    = 0.989873
   CLL	      = -0.083014
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.822 seconds
Total inference time: 4.244 seconds
AUC ROC: 0.999707


Results scoring model
   AUC ROC   = 0.999946
   AUC PR    = 0.997367
   CLL	      = -0.06679
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.838 seconds
Refined model CLL: -0.06679


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999707
   AUC PR    = 0.989873
   CLL	      = -0.083014
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 9.052 seconds
Total inference time: 4.244 seconds
AUC ROC: 0.999707
Total revision time: 9.052
Best scored revision CLL: -0.06679


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 09:00:03
{'Learning time': 9.052, 'F1': 0.852086, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'Inference time': 4.244, 'parameter': {'Learning time': 1.702, 'F1': 0.9216, 'Precision': [1.0, 0.5], 'Recall': 0.854599, 'Inference time': 3.187, 'CLL': -0.20914, 'AUC ROC': 0.983069, 'AUC PR': 0.891379}, 'CLL': -0.083014, 'AUC ROC': 0.999707, 'AUC PR': 0.989873}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,30e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.6842684934301482;  // std dev = 0,169, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.6827378447875044;  // std dev = 0,172, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.12743286864711786;  // std dev = 0,154, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11211830159212915;  // std dev = 2,11e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( female(A) )
%   | then return 0.5640419417450248;  // std dev = 6,66e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.4989562164007366;  // std dev = 0,217, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4319705010586559;  // std dev = 0,055, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3215389251650253;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10228529911194689;  // std dev = 0,070, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09248299334015896;  // std dev = 2,11e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3305554207345252;  // std dev = 0,049, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2563856468039282;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08500795525748124;  // std dev = 3,65e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2618929010549199;  // std dev = 0,043, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21621133261221154;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07862492188024989;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0.2145028833871387;  // std dev = 0,038, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18057467882832073;  // std dev = 0,033, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2187144594582691;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07379244265002596;  // std dev = 0,053, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06826852392077142;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15538098809820514;  // std dev = 0,029, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17712039951560143;  // std dev = 0,011, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0640520176621674;  // std dev = 3,33e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1360649653228955;  // std dev = 0,026, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1548334551236263;  // std dev = 0,011, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078787
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.546 seconds
Total inference time: 2.518 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 09:00:08
{'Learning time': 2.546, 'CLL': -0.078787, 'Recall': 1.0, 'Inference time': 2.518, 'F1': 0.852086, 'Precision': [0.742291, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.995191
   AUC PR    = 0.742291
   CLL	      = -0.166516
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.117 seconds
Total inference time: 2.094 seconds
AUC ROC: 0.995191


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 09:00:12
{'Learning time': 1.117, 'CLL': -0.166516, 'Recall': 0.0, 'Inference time': 2.094, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.995191, 'AUC PR': 0.742291}


