Starting experiment #1 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21898543700064782;  // std dev = 0,480, 7.890,000 (wgt'ed) examples reached here.  /* #neg=5.043 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7914822684328452;  // std dev = 2,366, 90,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=84 */
%   | | | else return -0.13891851358083954;  // std dev = 0,999, 341,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return -0.013549178108035515;  // std dev = 5,444, 265,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=34 */
%   | | | else return -0.09056901361843647;  // std dev = 1,377, 39,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.007355284305861245;  // std dev = 6,324, 315,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=47 */
%   | | | else return -0.095339436993511;  // std dev = 1,381, 43,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18795755350067625;  // std dev = 0,480, 7.939,000 (wgt'ed) examples reached here.  /* #neg=5.092 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.11951804961665265;  // std dev = 1,026, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.210306906182139;  // std dev = 3,117, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.35725122040217094;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13567292027978345;  // std dev = 0,029, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.025309668085314173;  // std dev = 8,313, 699,000 (wgt'ed) examples reached here.  /* #neg=617 #pos=82 */
%   | | | else return 0.05444633520855514;  // std dev = 3,505, 99,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03222726563953392;  // std dev = 5,433, 258,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=48 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16045877358531038;  // std dev = 0,480, 7.922,000 (wgt'ed) examples reached here.  /* #neg=5.075 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.06622380626852703;  // std dev = 1,049, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.14760610079974662;  // std dev = 3,199, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.30774029403275294;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1233955544929237;  // std dev = 0,023, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.031429673533039555;  // std dev = 7,662, 617,000 (wgt'ed) examples reached here.  /* #neg=551 #pos=66 */
%   | | | else return 0.024561369700429055;  // std dev = 4,782, 207,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=37 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0395134651357332;  // std dev = 5,383, 239,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=48 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7288184573116446;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3159396694328567;  // std dev = 4,228, 72,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   | | | else return 0.0011637590687110348;  // std dev = 4,569, 119,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=27 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.301300029793217;  // std dev = 4,295, 74,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=39 */
%   | | | else return -0.060082825454668844;  // std dev = 4,746, 163,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=27 */
%   | | else return 0.13549585071472972;  // std dev = 0,480, 7.458,000 (wgt'ed) examples reached here.  /* #neg=4.764 #pos=2.694 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, A) )
%   | | then return 0.04262412883420379;  // std dev = 0,350, 406,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=85 */
%   | | else return -0.02633585304654685;  // std dev = 0,313, 314,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=36 */
%   | else return -0.01391706728608072;  // std dev = 0,323, 407,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=49 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.16337727535514776;  // std dev = 6,064, 166,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=69 */
%   | | | else return 0.49888635519700575;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return -0.11132306839621128;  // std dev = 2,716, 76,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=10 */
%   | | | else return 0.6233471811891427;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, C) )
%   | | | then return 0.07572001485651722;  // std dev = 6,310, 185,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=61 */
%   | | | else return 0.774069542647363;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.10839073112770942;  // std dev = 0,480, 7.511,000 (wgt'ed) examples reached here.  /* #neg=4.817 #pos=2.694 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then return 0.012285557851896228;  // std dev = 0,336, 714,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=121 */
%   | else return -0.020704184782597196;  // std dev = 0,313, 439,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=49 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6784458662616151;  // std dev = 0,311, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return -0.26963104516635467;  // std dev = 0,274, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.4314350884273406;  // std dev = 1,573, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.06350142853082393;  // std dev = 4,458, 146,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=25 */
%   | else return 0.09553230292771032;  // std dev = 0,482, 7.528,000 (wgt'ed) examples reached here.  /* #neg=4.768 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6636425078790625;  // std dev = 1,952, 88,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=84 */
%   | | | else return -0.13655951496755717;  // std dev = 1,023, 306,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=1 */
%   | | else return -3.783247378958377E-4;  // std dev = 0,342, 257,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=36 */
%   | else return -0.021521264026374876;  // std dev = 0,309, 453,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=49 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.11585837192670603;  // std dev = 5,167, 159,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=69 */
%   | | | else return 0.7020954300133986;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07446149423316917;  // std dev = 0,281, 83,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=13 */
%   | else return 0.0745783424280546;  // std dev = 0,481, 7.563,000 (wgt'ed) examples reached here.  /* #neg=4.803 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then return 0.15449398601929604;  // std dev = 0,459, 49,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | else return -0.012116821383090145;  // std dev = 0,278, 669,000 (wgt'ed) examples reached here.  /* #neg=565 #pos=104 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.0017052892629954273;  // std dev = 6,375, 367,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=47 */
%   | | | else return -0.08381610914946987;  // std dev = 1,384, 54,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=2 */
%   | | else return -0.09658534725002689;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.056333424586253227;  // std dev = 0,478, 7.854,000 (wgt'ed) examples reached here.  /* #neg=5.007 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2588566952486028;  // std dev = 0,560, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11904631411837985;  // std dev = 3,159, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.024079482343545216;  // std dev = 5,662, 373,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=83 */
%   | | | else return -0.04906898367452827;  // std dev = 4,392, 255,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0097523613772492;  // std dev = 6,330, 338,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=47 */
%   | | | else return -0.0733517762526476;  // std dev = 1,381, 53,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=2 */
%   | | else return -0.08827935425265916;  // std dev = 0,002, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03100741259188032;  // std dev = 0,474, 7.483,000 (wgt'ed) examples reached here.  /* #neg=4.874 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6898916756778541;  // std dev = 3,625, 144,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=131 */
%   | | | else return -0.1364645249300182;  // std dev = 1,710, 561,000 (wgt'ed) examples reached here.  /* #neg=558 #pos=3 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.19721864794865776;  // std dev = 4,870, 225,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=27 */
%   | | | else return -0.05500515653065917;  // std dev = 1,322, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.36335825184783294;  // std dev = 4,927, 113,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=78 */
%   | | | else return 0.04888182284821325;  // std dev = 4,467, 192,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.575261866569163;  // std dev = 0,293, 75,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=68 */
%   | else return -0.00987136502972247;  // std dev = 0,266, 283,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=49 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.024165951193096703;  // std dev = 0,474, 7.491,000 (wgt'ed) examples reached here.  /* #neg=4.882 #pos=2.609 */
%   | | else return 0.028427212047286248;  // std dev = 0,320, 666,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=134 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.13692786953560526;  // std dev = 0,308, 274,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.2881539863416606;  // std dev = 4,838, 112,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=78 */
%   | | | else return 0.03772489229015197;  // std dev = 4,452, 197,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=49 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return 0.053206697047835316;  // std dev = 0,318, 283,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=81 */
%   | | else if ( haswordtitle(H, J), haswordauthor(K, J) )
%   | | | then return 0.07780667123330649;  // std dev = 1,552, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.2915026634273106;  // std dev = 0,324, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3645984710537067;  // std dev = 0,281, 43,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,true,true;author(G, E), title(G, F).;false;false
1;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), venue(G, A).;false;false
2;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;true,true;haswordauthor(F, C).;false;true
3;true,false,true;author(J, I), venue(J, A).;false;false
3;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
3;false,true;title(M, L), venue(M, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,false;haswordtitle(G, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false;haswordvenue(B, K), haswordtitle(L, K).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;true,true;haswordtitle(F, D).;true;true
4;true,false,true;haswordtitle(J, C).;false;false
4;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordvenue(A, D).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true,true;samebib(J, K), venue(K, B).;false;false
5;false,true;title(J, I), venue(J, A).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;true,true;author(F, E), venue(F, B).;true;true
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false,true;title(L, K), venue(L, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;false,true;haswordauthor(I, G).;false;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true,true;haswordtitle(F, D).;true;false
6;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;title(K, J), venue(K, B).;false;false
7;false,true,false;title(H, E), venue(H, A).;false;false
7;false,true;haswordauthor(F, D).;true;true
7;false,true,true;author(G, F), venue(G, A).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false;title(G, D), venue(G, A).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true;venue(E, B), title(E, D).;true;true
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, A).;false;true
9;false,true;title(I, H), venue(I, B).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5328477302802359;  // std dev = 4,268, 83,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(G, A) )
%   | | | then return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3516834451614722;  // std dev = 4,899, 98,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2578072689491952;  // std dev = 5,055, 103,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360622;  // std dev = 6,83e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.658734893890262;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.34126510610973876;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1050209761591624;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783616;  // std dev = 5,37e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2092643122426526;  // std dev = 0,373, 90,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09268781100899243;  // std dev = 0,000286, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.44760860312152345;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.3122411741297472;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(A, H) )
%   | | then if ( genre(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08491852257872438;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518502142442567;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.18578413182856632;  // std dev = 0,260, 76,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07876332178115006;  // std dev = 5,42e-05, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08328379799294383;  // std dev = 2,673, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0730332612704756;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324735450660241;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.26772141936062493;  // std dev = 0,893, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842796585269743;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.3030458328279024;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06824053366867067;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.30304583282790243;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842796585269742;  // std dev = 2,58e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.23241304706250251;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.06419271180198485;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, E) )
%   | | then return -0.10381620888800289;  // std dev = 0,223, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.24307733831675268;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.0641927118019848;  // std dev = 1,67e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973966
   AUC PR    = 0.853081
   CLL	      = -0.121657
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 1.774 seconds
Total inference time: 3.142 seconds
AUC ROC: 0.973966


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111734
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.935 seconds
Parameter learned model CLL: -0.111734


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true,false': 'movie(G, A)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [4.268, 27, 56], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 7, 0], 'false,true,false,true': [7.3e-08, 75, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 4, 0], 'true': [4.899, 42, 56], 'false,true,false': [0.0, 81, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [5.055, 47, 56], 'false,true,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [6.83e-08, 83, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)'}, {'true,true,false': [0.0, 24, 0], 'false,true,true': [0.012, 4, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false,true,false': [5.37e-08, 71, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,true': [0.373, 34, 56], 'false,true': [0.000286, 83, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,false': 'movie(D, A)', 'false,true,true': 'genre(B, I)', 'false,true': 'genre(A, H)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'true': 'movie(D, B)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [1.03e-07, 0, 56], 'true,true,false,true': [0.0, 32, 0], 'false,true,false': [0.0, 99, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,true': [0.26, 20, 56], 'false,true': [5.42e-05, 67, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [2.673, 33, 56], 'false,true,true': [1.86e-09, 5, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 67, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false': 'genre(A, F)'}, {'true,false,true,false': [0.0, 5, 0], 'true,true,true': [0.893, 1, 56], 'false': [0.0, 0, 0], 'true,false,false,false': [2.58e-08, 80, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true,false,false': [1.32e-09, 3, 0], 'true,false,false,true': [0.0, 29, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,true,false': [0.0, 2, 0], 'true,false,false,true': [0.0, 36, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false,false': [1.67e-08, 66, 0], 'true,false,true': [0.223, 9, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.2194803309624035, 7.311224796312007e-17], 'false,true,true': [nan, -7.93016446160826e-18], 'false,true,false': [7.105427357601002e-17, nan], 'false,true': [-7.93016446160826e-18, 7.105427357601002e-17], 'false': [7.311224796312007e-17, nan]}, {'': [0.24489795918367355, -2.0898315757650005e-17], 'false,true': [0.0, -2.1930331350620375e-17], 'false': [-2.0898315757650005e-17, nan]}, {'': [0.24809124328400434, 5.98771968337163e-17], 'false,true,false': [nan, 5.617996028223683e-17], 'false,true': [0.0, 5.617996028223683e-17], 'false': [5.98771968337163e-17, nan]}, {'': [0.20999999999999944, 2.4686568019867867e-06], 'true,true': [-1.1419436824715897e-15, -1.850371707708594e-17], 'true': [0.20999999999999944, nan], 'false,true': [3.518461447027388e-05, 4.065605442289306e-17], 'false': [2.4686568019867867e-06, nan]}, {'': [0.13896446658287528, 9.846128918882364e-10], 'true': [0.13896446658287528, nan], 'false': [9.846128918882364e-10, nan]}, {'': [0.1336066706750952, 3.250342897609393e-09], 'true,true,false': [-1.5265566588595902e-16, nan], 'true': [0.1336066706750952, nan], 'false,true,true': [nan, -1.3877787807814458e-18], 'false,true': [-1.3877787807814458e-18, -3.252168455972681e-17], 'true,true,true': [nan, 1.9032394707859825e-16], 'true,true': [1.9032394707859825e-16, -1.5265566588595902e-16], 'false': [3.250342897609393e-09, nan]}, {'': [0.06763242211836482, 2.940957221534407e-09], 'true': [0.06763242211836482, nan], 'false': [2.940957221534407e-09, nan]}, {'': [0.08025210702091844, 2.9620044565229855e-09], 'false,true,false': [nan, 0.0], 'false,true': [6.938893903907229e-19, 0.0], 'false': [2.9620044565229855e-09, nan]}, {'': [0.04626130994560062, nan], 'true,true,false': [nan, 5.782411586589357e-19], 'true': [0.018664060383218314, 0.010780221377957222], 'true,false,false': [-1.5313421029312504e-17, 8.326672684688674e-18], 'true,true': [0.013996558891791407, 5.782411586589357e-19], 'true,false,true': [0.0, 0.0], 'true,false': [0.011251740512909456, 0.01074872998310487]}, {'': [0.03297479980551323, nan], 'true,false,false': [-4.9343245538895844e-17, 4.20539024479226e-18], 'true': [0.002929012286996613, 0.007205823766907482], 'true,false': [0.005541046334220284, 0.007307892158545544], 'true,true': [-5.551115123125783e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(B, E).;true;true
3;false;genre(A, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
5;false;genre(A, H).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(A, F).;true;true
8;false,false;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.12544463852839133;  // std dev = 2,11e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926105;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926104;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.09625329750869108;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, E) )
%   | then return -0.09314160201658923;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,49e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.08518475138839679;  // std dev = 2,11e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.08490757892626254;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(A) )
%   | | | then return -0.07876187628778626;  // std dev = 0,000230, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.0787584428008696;  // std dev = 0,000229, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then return -0.08556680635258566;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08556680635258566;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.07910471967200965;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324692497557952;  // std dev = 2,91e-06, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.0732467411725745;  // std dev = 3,92e-06, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.07302461219670664;  // std dev = 2,08e-07, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.06999883071189321;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(D, B) )
%   | | then return -0.07353065888458467;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842740982503458;  // std dev = 3,10e-06, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.06842733671525357;  // std dev = 3,90e-06, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801087;  // std dev = 2,79e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.06391493869562351;  // std dev = 2,25e-07, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.06771789882921038;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419212217011187;  // std dev = 2,92e-06, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.06419202813839617;  // std dev = 3,20e-06, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.995629
   AUC PR    = 0.786075
   CLL	      = -0.082879
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.682 seconds
Total inference time: 4.342 seconds
AUC ROC: 0.995629


Results scoring model
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.065393
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 3.049 seconds
Refined model CLL: -0.065393


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.995629
   AUC PR    = 0.786075
   CLL	      = -0.082879
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 10.44 seconds
Total inference time: 4.342 seconds
AUC ROC: 0.995629
Total revision time: 10.44
Best scored revision CLL: -0.065393


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 04:41:02
{'Learning time': 10.44, 'F1': 0.847854, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'Inference time': 4.342, 'parameter': {'Learning time': 1.774, 'F1': 0.809091, 'Precision': [0.799401, 0.5], 'Recall': 0.819018, 'Inference time': 3.142, 'CLL': -0.121657, 'AUC ROC': 0.973966, 'AUC PR': 0.853081}, 'CLL': -0.082879, 'AUC ROC': 0.995629, 'AUC PR': 0.786075}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,69e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7229214324831331;  // std dev = 0,027, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2733751383356388;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8,16e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( female(A) )
%   | then return 0.5352528892185933;  // std dev = 0,146, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5545148396554054;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4233537002792909;  // std dev = 0,050, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3356852225276032;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10374933401223678;  // std dev = 0,238, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09251036807740275;  // std dev = 2,36e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32469014857828055;  // std dev = 0,045, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2660875128978967;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2463958484561966;  // std dev = 0,088, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.25281986603032824;  // std dev = 2,98e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.08659213036378188;  // std dev = 0,177, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07853185175406176;  // std dev = 1,49e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2130605122312196;  // std dev = 0,039, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.26112313349967137;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07303373160133121;  // std dev = 3,94e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17951983398999297;  // std dev = 0,034, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2149925935996974;  // std dev = 0,011, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06824094550120123;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15458279823948842;  // std dev = 0,030, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.179377650928109;  // std dev = 0,012, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06402767823809702;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13544314269825058;  // std dev = 0,027, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15263688973234504;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087108
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 4.908 seconds
Total inference time: 3.76 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 04:41:12
{'Learning time': 4.908, 'CLL': -0.087108, 'Recall': 1.0, 'Inference time': 3.76, 'F1': 0.847854, 'Precision': [0.735892, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,16e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.994647
   AUC PR    = 0.735892
   CLL	      = -0.169006
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.104 seconds
Total inference time: 2.534 seconds
AUC ROC: 0.994647


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 04:41:15
{'Learning time': 1.104, 'CLL': -0.169006, 'Recall': 0.0, 'Inference time': 2.534, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.994647, 'AUC PR': 0.735892}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,true,true;author(G, E), title(G, F).;false;false
1;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), venue(G, A).;false;false
2;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;true,true;haswordauthor(F, C).;false;true
3;true,false,true;author(J, I), venue(J, A).;false;false
3;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
3;false,true;title(M, L), venue(M, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,false;haswordtitle(G, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false;haswordvenue(B, K), haswordtitle(L, K).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;true,true;haswordtitle(F, D).;true;true
4;true,false,true;haswordtitle(J, C).;false;false
4;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordvenue(A, D).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true,true;samebib(J, K), venue(K, B).;false;false
5;false,true;title(J, I), venue(J, A).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;true,true;author(F, E), venue(F, B).;true;true
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false,true;title(L, K), venue(L, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;false,true;haswordauthor(I, G).;false;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true,true;haswordtitle(F, D).;true;false
6;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;title(K, J), venue(K, B).;false;false
7;false,true,false;title(H, E), venue(H, A).;false;false
7;false,true;haswordauthor(F, D).;true;true
7;false,true,true;author(G, F), venue(G, A).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false;title(G, D), venue(G, A).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true;venue(E, B), title(E, D).;true;true
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, A).;false;true
9;false,true;title(I, H), venue(I, B).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4623156017661798;  // std dev = 4,791, 96,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(G, A) )
%   | | | then return -0.14185106490048766;  // std dev = 7,88e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5552667783974666;  // std dev = 3,706, 76,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3098568462924943;  // std dev = 4,672, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360622;  // std dev = 6,23e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6159896777821484;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.38401032221785186;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10159632948783615;  // std dev = 5,96e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.16482124602185624;  // std dev = 0,376, 95,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.5764580852975226;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4235419147024768;  // std dev = 1,84e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.3336439235757033;  // std dev = 2,11e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(A, H) )
%   | | then if ( genre(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839682;  // std dev = 5,67e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10321784168809078;  // std dev = 0,285, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.0788456579209551;  // std dev = 0,000661, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08163460413237592;  // std dev = 2,743, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0732415486685412;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324154866854118;  // std dev = 2,69e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2856420914107383;  // std dev = 7,88e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0684228838828143;  // std dev = 4,56e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842288388281427;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.30142078642038855;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842288388281433;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.23106869246941739;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06542174489771108;  // std dev = 0,009, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(A, E) )
%   | | then return -0.14326574744972068;  // std dev = 0,194, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.24196029668261249;  // std dev = 3,94e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06418822796438671;  // std dev = 3,25e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973223
   AUC PR    = 0.851779
   CLL	      = -0.121615
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 2.196 seconds
Total inference time: 3.863 seconds
AUC ROC: 0.973223


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108902
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 2.196 seconds
Parameter learned model CLL: -0.108902


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true,false': 'movie(G, A)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [4.791, 38, 58], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 8, 0], 'false,true,false,true': [7.88e-08, 83, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 8, 0], 'true': [3.706, 18, 58], 'false,true,false': [0.0, 86, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.672, 35, 58], 'false,true,true': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [6.23e-08, 78, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)'}, {'true,true,false': [0.0, 27, 0], 'false,true,true': [0.0, 9, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false,true,false': [5.96e-08, 78, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,true': [0.376, 37, 58], 'false,true': [0.0, 82, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,false': 'movie(D, A)', 'false,true,true': 'genre(B, I)', 'false,true': 'genre(A, H)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'true': 'movie(D, B)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [1.84e-07, 0, 58], 'true,true,false,true': [2.11e-08, 27, 0], 'false,true,false': [5.67e-08, 102, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,true': [0.285, 35, 58], 'false,true': [0.000661, 93, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [2.743, 35, 58], 'false,true,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [2.69e-08, 76, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false': 'genre(A, F)'}, {'true,false,true,false': [1.86e-09, 6, 0], 'true,true,true': [7.88e-08, 0, 58], 'false': [0.0, 0, 0], 'true,false,false,false': [0.0, 67, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,true,false,false': [4.56e-09, 10, 0], 'true,false,false,true': [0.0, 29, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,true,false': [0.009, 8, 0], 'true,false,false,true': [3.94e-08, 31, 0], 'true,true,true': [4.21e-08, 0, 58], 'true,false,false,false': [3.25e-08, 70, 0], 'true,false,true': [0.194, 3, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.23914930555555516, 7.723290606088045e-17], 'false,true,true': [0.0, -6.938893903907228e-18], 'false,true,false': [7.490661370964911e-17, nan], 'false,true': [-9.25185853854297e-18, 7.490661370964911e-17], 'false': [7.723290606088045e-17, nan]}, {'': [0.1807479224376726, -1.4173059888831785e-17], 'false,true': [0.0, -1.8073398075293247e-17], 'false': [-1.4173059888831785e-17, nan]}, {'': [0.23470921493814184, 5.617996028223683e-17], 'false,true,false': [nan, 4.981769982292369e-17], 'false,true': [0.0, 4.981769982292369e-17], 'false': [5.617996028223683e-17, nan]}, {'': [0.21674740484429075, 3.317907889684376e-17], 'true,true': [-3.675221047035001e-16, -3.289549702593056e-17], 'true': [0.21674740484429075, nan], 'false,true': [-1.5419764230904951e-18, 4.554761126667309e-17], 'false': [3.317907889684376e-17, nan]}, {'': [0.14108011378258525, 0.0], 'true': [0.14108011378258525, nan], 'false': [0.0, nan]}, {'': [0.12945203919410558, 3.2593703475233955e-17], 'true,true,false': [1.644774851296528e-17, nan], 'true': [0.12945203919410558, nan], 'false,true,true': [nan, -2.9738116731030977e-18], 'false,true': [-2.9738116731030977e-18, 3.1565164425617195e-17], 'true,true,true': [0.0, 5.819099991138751e-16], 'true,true': [0.016661878770468874, 1.644774851296528e-17], 'false': [3.2593703475233955e-17, nan]}, {'': [0.08136465279689535, 4.367837607800068e-07], 'true': [0.08136465279689535, nan], 'false': [4.367837607800068e-07, nan]}, {'': [0.08090149994693718, 1.0831444142684454e-17], 'false,true,false': [nan, 9.495328500083576e-18], 'false,true': [0.0, 9.495328500083576e-18], 'false': [1.0831444142684454e-17, nan]}, {'': [0.04546204838249574, nan], 'true,true,false': [nan, 2.0816681711721684e-18], 'true': [0.01572447316245289, 0.011046495945452373], 'true,false,false': [-6.125368411725002e-17, -5.799672516698579e-18], 'true,true': [1.0719394720518753e-16, 2.0816681711721684e-18], 'true,false,true': [nan, 5.782411586589357e-19], 'true,false': [5.782411586589357e-19, 0.011445489136975297]}, {'': [0.03136634827273235, nan], 'true,true': [3.062684205862501e-17, 1.0650948173582253e-05], 'true': [0.009365077264808504, 0.006906379648607573], 'true,false,false': [5.0139104337910294e-17, 1.5067312477055695e-17], 'true,false': [0.012506508175906721, 0.006722704760660326]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(B, E).;true;true
3;false;genre(A, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true,true;genre(A, F).;true;true
5;true;genre(B, E).;true;true
5;false;genre(A, H).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then return -0.11729613466332506;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.3918725585172846;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( genre(A, E) )
%   | then return -0.10114270553576814;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.10159632948783619;  // std dev = 4,47e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( female(A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601496;  // std dev = 3,73e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.32632338176522774;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09231133132871565;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25767855455692484;  // std dev = 0,002, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(A, F) )
%   | then return -0.08820069875889894;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 2,46e-09, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109172;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(A) )
%   | | then return 0.20934257302797082;  // std dev = 4,56e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.21267712086187193;  // std dev = 4,56e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.07877675473109179;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.07825855713368231;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07825855713368231;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return 0.176791950426531;  // std dev = 5,89e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1792347997032949;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then return -0.07279650397228847;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13242735572835107;  // std dev = 0,064, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.14865145632326673;  // std dev = 0,035, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.0680894396078773;  // std dev = 0,000138, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.06842697784420267;  // std dev = 2,89e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.12600353242825604;  // std dev = 0,045, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.09760165440972743;  // std dev = 0,155, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.06398939907493774;  // std dev = 0,000407, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0638409188529093;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.998125
   AUC PR    = 0.950144
   CLL	      = -0.083219
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.876 seconds
Total inference time: 3.633 seconds
AUC ROC: 0.998125


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06699
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 2.275 seconds
Refined model CLL: -0.06699


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.998125
   AUC PR    = 0.950144
   CLL	      = -0.083219
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 10.543000000000001 seconds
Total inference time: 3.633 seconds
AUC ROC: 0.998125
Total revision time: 10.543000000000001
Best scored revision CLL: -0.06699


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 04:41:35
{'Learning time': 10.543000000000001, 'F1': 0.848168, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'Inference time': 3.633, 'parameter': {'Learning time': 2.196, 'F1': 0.80916, 'Precision': [0.800604, 0.5], 'Recall': 0.817901, 'Inference time': 3.863, 'CLL': -0.121615, 'AUC ROC': 0.973223, 'AUC PR': 0.851779}, 'CLL': -0.083219, 'AUC ROC': 0.998125, 'AUC PR': 0.950144}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048766;  // std dev = 8,02e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8,16e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 1,49e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 5,16e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839683;  // std dev = 5,67e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6,91e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333722;  // std dev = 0,000, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420265;  // std dev = 4,53e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071821
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 6.109 seconds
Total inference time: 2.505 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 04:41:44
{'Learning time': 6.109, 'CLL': -0.071821, 'Recall': 1.0, 'Inference time': 2.505, 'F1': 0.848168, 'Precision': [0.736364, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,56e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.994636
   AUC PR    = 0.736364
   CLL	      = -0.169152
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.039 seconds
Total inference time: 1.987 seconds
AUC ROC: 0.994636


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 04:41:47
{'Learning time': 1.039, 'CLL': -0.169152, 'Recall': 0.0, 'Inference time': 1.987, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.994636, 'AUC PR': 0.736364}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,true,true;author(G, E), title(G, F).;false;false
1;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), venue(G, A).;false;false
2;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;true,true;haswordauthor(F, C).;false;true
3;true,false,true;author(J, I), venue(J, A).;false;false
3;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
3;false,true;title(M, L), venue(M, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,false;haswordtitle(G, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false;haswordvenue(B, K), haswordtitle(L, K).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;true,true;haswordtitle(F, D).;true;true
4;true,false,true;haswordtitle(J, C).;false;false
4;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordvenue(A, D).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true,true;samebib(J, K), venue(K, B).;false;false
5;false,true;title(J, I), venue(J, A).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;true,true;author(F, E), venue(F, B).;true;true
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false,true;title(L, K), venue(L, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;false,true;haswordauthor(I, G).;false;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true,true;haswordtitle(F, D).;true;false
6;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;title(K, J), venue(K, B).;false;false
7;false,true,false;title(H, E), venue(H, A).;false;false
7;false,true;haswordauthor(F, D).;true;true
7;false,true,true;author(G, F), venue(G, A).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false;title(G, D), venue(G, A).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true;venue(E, B), title(E, D).;true;true
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, A).;false;true
9;false,true;title(I, H), venue(I, B).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5673122817130546;  // std dev = 7,195, 251,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( movie(G, A) )
%   | | | then return -0.14185106490048838;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.46421112222350835;  // std dev = 7,429, 258,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.12544463852839172;  // std dev = 0,000, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3651835959428335;  // std dev = 7,524, 261,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360668;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5621651481943397;  // std dev = 2,194, 134,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=129 */
%   | | else return -0.01163253008094923;  // std dev = 5,472, 126,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1015963294878363;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.10159632948783656;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2465067801616006;  // std dev = 0,410, 247,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926043;  // std dev = 1,41e-07, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.5999793166522852;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.400020683347714;  // std dev = 3,15e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.024366236931629853;  // std dev = 5,268, 113,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(A, H) )
%   | | then if ( genre(B, I) )
%   | | | then return -0.08518475138839691;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839686;  // std dev = 2,58e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.08518475138839678;  // std dev = 8,94e-08, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.13664178049512304;  // std dev = 0,385, 250,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109143;  // std dev = 7,15e-09, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08279121780794739;  // std dev = 6,378, 260,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333707;  // std dev = 2,47e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333666;  // std dev = 1,28e-07, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1985301175417301;  // std dev = 2,552, 141,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=129 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.06842697784420278;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420272;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.5066616086276828;  // std dev = 4,71e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06842697784420279;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.05712032422401355;  // std dev = 5,194, 109,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=49 */
%   | | | else return -0.06842697784420262;  // std dev = 7,07e-08, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1816252210756569;  // std dev = 2,149, 137,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=129 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( genre(A, E) )
%   | | then return -0.11720135247375513;  // std dev = 0,821, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.042841226806536;  // std dev = 5,194, 109,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=49 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993632
   AUC PR    = 0.960741
   CLL	      = -0.223563
   Precision = 0.937198 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.944039


Total learning time: 3.978 seconds
Total inference time: 3.772 seconds
AUC ROC: 0.993632


Results scoring model
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.199384
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total scoring time: 2.252 seconds
Parameter learned model CLL: -0.199384


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true,false': 'movie(G, A)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [7.195, 73, 178], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [4.94e-08, 47, 0], 'false,true,false,true': [0.0, 237, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 40, 0], 'true': [7.429, 80, 178], 'false,true,false': [0.0, 211, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [7.524, 83, 178], 'false,true,true': [2.36e-08, 47, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 213, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)'}, {'true,true,false': [5.472, 77, 49], 'false,true,true': [1.05e-08, 45, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [2.194, 5, 129], 'false,true,false': [0.0, 225, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,true': [0.41, 69, 178], 'false,true': [1.41e-07, 284, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,false': 'movie(D, A)', 'false,true,true': 'genre(B, I)', 'false,true': 'genre(A, H)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'true': 'movie(D, B)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [3.15e-07, 0, 129], 'true,true,false,true': [5.268, 64, 49], 'false,true,false': [8.94e-08, 243, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.58e-08, 47, 0], 'true,true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,true': [0.385, 72, 178], 'false,true': [7.15e-09, 292, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [6.378, 82, 178], 'false,true,true': [2.47e-08, 59, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [1.28e-07, 225, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false': 'genre(A, F)'}, {'true,false,true,false': [0.0, 33, 0], 'true,true,true': [2.552, 12, 129], 'false': [0.0, 0, 0], 'true,false,false,false': [7.07e-08, 162, 0], 'true,true,false,true': [2.63e-09, 7, 0], 'true,false,true,true': [4.71e-08, 11, 0], 'true,true,false,false': [5.27e-09, 40, 0], 'true,false,false,true': [5.194, 60, 49]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,true,false': [0.0, 44, 0], 'true,false,false,true': [5.194, 60, 49], 'true,true,true': [2.149, 8, 129], 'true,false,false,false': [0.0, 191, 0], 'true,false,true': [0.821, 48, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.20625069443342725, 0.0], 'false,true,false': [-1.7988423690129118e-16, nan], 'false,true,true': [0.0, 5.196788625904988e-17], 'false,true': [5.659960517696876e-17, -1.7988423690129118e-16], 'false': [0.0, nan]}, {'': [0.21392945135508365, -6.36940699386544e-17], 'false,true': [-2.4980018054066023e-17, -4.2093763966830577e-17], 'false': [-6.36940699386544e-17, nan]}, {'': [0.21687878921331213, -1.0077408992751421e-16], 'false,true,false': [nan, -5.837792429953875e-17], 'false,true': [1.1810883240693155e-17, -5.837792429953875e-17], 'false': [-1.0077408992751421e-16, nan]}, {'': [0.21591715976331707, -6.250144434926808e-17], 'true,true': [0.03592114056582929, 0.2376543209876552], 'true': [0.21591715976331707, nan], 'false,true': [2.4671622769447924e-18, -7.894919286223336e-17], 'false': [-6.250144434926808e-17, nan]}, {'': [0.16822470715288873, 7.03662480396226e-17], 'true': [0.16822470715288873, nan], 'false': [7.03662480396226e-17, nan]}, {'': [0.16148635401423972, 3.6252180395923476e-17], 'true,true,false': [0.2455947999060222, nan], 'true': [0.16148635401423972, nan], 'false,true,true': [0.0, 1.4173059888831785e-17], 'false,true': [1.7415263131375004e-17, 3.289549702593056e-17], 'true,true,true': [0.0, 7.711316512125118e-16], 'true,true': [0.007633136094675336, 0.2455947999060222], 'false': [3.6252180395923476e-17, nan]}, {'': [0.14824515598770788, 5.094859085608595e-17], 'true': [0.14824515598770788, nan], 'false': [5.094859085608595e-17, nan]}, {'': [0.15644263407037576, 2.032802721144653e-17], 'false,true,false': [nan, 7.302800339756585e-17], 'false,true': [1.034953667023451e-17, 7.302800339756585e-17], 'false': [2.032802721144653e-17, nan]}, {'': [0.08619561753539197, nan], 'true,true,false': [9.912705577010326e-19, 6.938893903907229e-19], 'true': [0.048012781294365904, 0.09224788762496715], 'true,false,false': [0.2474539180203688, 3.0839528461809905e-17], 'true,true': [0.04620051903159734, 2.362176648138631e-18], 'true,false,true': [2.0185873175002846e-16, 0.0], 'true,false': [0.03600929842836256, 0.09956017334283249]}, {'': [0.07298909618173427, nan], 'true,false,false': [0.2474539180203688, -3.48761159568112e-18], 'true': [0.03663090448106874, 0.07997503269857609], 'true,false': [0.014050042020044277, 0.09001370481206324], 'true,true': [0.03370637446447246, -2.523234146875356e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true,true;genre(A, F).;true;true
5;true;genre(B, E).;true;true
5;false,true;genre(B, I).;true;true
5;false;genre(A, H).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;true,false;genre(A, E).;true;true
8;false;genre(A, F).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 6,32e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.1418510649004885;  // std dev = 0,000, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.12544463852839174;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.11231637819360672;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.1015963294878365;  // std dev = 0,000, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( female(A) )
%   | then return -0.09269127618926079;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926082;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.25517224256948967;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.08518475138839679;  // std dev = 1,49e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( genre(A, F) )
%   | then return -0.08518475138839679;  // std dev = 3,61e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839676;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.08518475138839678;  // std dev = 2,36e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109162;  // std dev = 3,07e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.07877675473109166;  // std dev = 1,67e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109165;  // std dev = 1,05e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.07877675473109168;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.07877675473109169;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.08907346592973758;  // std dev = 0,814, 66,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=47 */
%   | | | else return 0.12450928329309098;  // std dev = 0,716, 94,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.06842697784420268;  // std dev = 2,79e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.12114802438826035;  // std dev = 0,542, 49,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=42 */
%   | | | else return -0.061546107392802106;  // std dev = 0,576, 225,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.07712259057248881;  // std dev = 0,809, 67,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=47 */
%   | | | else return 0.11404363231590998;  // std dev = 0,639, 92,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else return -0.06419184008202615;  // std dev = 1,32e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( movie(D, B) )
%   | | then if ( director(B), female(A) )
%   | | | then return 0.0900982059042927;  // std dev = 0,655, 54,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=42 */
%   | | | else return -0.05829280270744376;  // std dev = 0,588, 250,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065458
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.575 seconds
Total inference time: 4.437 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069361
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.762 seconds
Refined model CLL: -0.069361


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065458
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.567 seconds
Total inference time: 4.437 seconds
AUC ROC: 1.0
Total revision time: 15.567
Best scored revision CLL: -0.069361


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 04:42:12
{'Learning time': 15.567, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'Inference time': 4.437, 'parameter': {'Learning time': 3.978, 'F1': 0.944039, 'Precision': [0.937198, 0.5], 'Recall': 0.95098, 'Inference time': 3.772, 'CLL': -0.223563, 'AUC ROC': 0.993632, 'AUC PR': 0.960741}, 'CLL': -0.065458, 'AUC ROC': 1.0, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.1418510649004881;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.1254446385283918;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.11231637819360682;  // std dev = 0,000, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4,08e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.10159632948783645;  // std dev = 0,000, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.0926912761892607;  // std dev = 1,01e-07, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.08518475138839679;  // std dev = 8,16e-08, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.07877675473109146;  // std dev = 5,16e-08, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.07324622576333686;  // std dev = 8,82e-08, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2,11e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.0684269778442029;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06419184008202623;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.444 seconds
Total inference time: 3.018 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 04:42:23
{'Learning time': 6.444, 'CLL': -0.063555, 'Recall': 1.0, 'Inference time': 3.018, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.14185106490048813;  // std dev = 0,000, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.155326
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.192 seconds
Total inference time: 1.952 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 04:42:27
{'Learning time': 2.192, 'CLL': -0.155326, 'Recall': 0.0, 'Inference time': 1.952, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,true,true;author(G, E), title(G, F).;false;false
1;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), venue(G, A).;false;false
2;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;true,true;haswordauthor(F, C).;false;true
3;true,false,true;author(J, I), venue(J, A).;false;false
3;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
3;false,true;title(M, L), venue(M, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,false;haswordtitle(G, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false;haswordvenue(B, K), haswordtitle(L, K).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;true,true;haswordtitle(F, D).;true;true
4;true,false,true;haswordtitle(J, C).;false;false
4;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordvenue(A, D).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true,true;samebib(J, K), venue(K, B).;false;false
5;false,true;title(J, I), venue(J, A).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;true,true;author(F, E), venue(F, B).;true;true
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false,true;title(L, K), venue(L, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;false,true;haswordauthor(I, G).;false;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true,true;haswordtitle(F, D).;true;false
6;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;title(K, J), venue(K, B).;false;false
7;false,true,false;title(H, E), venue(H, A).;false;false
7;false,true;haswordauthor(F, D).;true;true
7;false,true,true;author(G, F), venue(G, A).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false;title(G, D), venue(G, A).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true;venue(E, B), title(E, D).;true;true
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, A).;false;true
9;false,true;title(I, H), venue(I, B).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4502541982574076;  // std dev = 4,284, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(G, A) )
%   | | | then return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3785036512032688;  // std dev = 4,324, 77,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.33347512360279075;  // std dev = 4,199, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11829208595726878;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360624;  // std dev = 6,05e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6542485197164004;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.34575148028359953;  // std dev = 3,65e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.10105219671798182;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1015963294878363;  // std dev = 2,24e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.18865015481620512;  // std dev = 0,376, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09262352453743432;  // std dev = 0,001, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4488961623857315;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.3111242968200045;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(A, H) )
%   | | then if ( genre(B, I) )
%   | | | then return -0.09644078575428866;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08476768666993988;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08519003130847806;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.14812086910897593;  // std dev = 0,277, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07899893237861803;  // std dev = 0,002, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06567181398848393;  // std dev = 2,538, 77,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07458735517237675;  // std dev = 0,012, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07323538547038787;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2957080143436285;  // std dev = 1,15e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06841748905542096;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.2906560403748719;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06801315959991526;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.29065604037487175;  // std dev = 4,71e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06841748905542089;  // std dev = 2,11e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.23802672829854593;  // std dev = 4,21e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06732345624607869;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, E) )
%   | | then return -0.13211158834928619;  // std dev = 0,187, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.23453906729634552;  // std dev = 2,58e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06418346805024142;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.974863
   AUC PR    = 0.856178
   CLL	      = -0.117948
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 3.512 seconds
Total inference time: 4.451 seconds
AUC ROC: 0.974863


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112511
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 2.186 seconds
Parameter learned model CLL: -0.112511


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, F)', 'false,true,false': 'movie(G, A)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [4.284, 31, 45], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 5, 0], 'false,true,false,true': [5.37e-08, 50, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 4, 0], 'true': [4.324, 32, 45], 'false,true,false': [0.0, 52, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.199, 29, 45], 'false,true,true': [0.016, 5, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [6.05e-08, 75, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)'}, {'true,true,false': [3.65e-08, 27, 0], 'false,true,true': [2.63e-09, 6, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false,true,false': [2.24e-08, 45, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,true': [0.376, 30, 45], 'false,true': [0.001, 74, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,false': 'movie(D, A)', 'false,true,true': 'genre(B, I)', 'false,true': 'genre(A, H)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'true': 'movie(D, B)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 45], 'true,true,false,true': [0.0, 28, 0], 'false,true,false': [0.0, 70, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,true': [0.277, 22, 45], 'false,true': [0.002, 73, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [2.538, 32, 45], 'false,true,true': [0.012, 11, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 62, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false': 'genre(A, F)'}, {'true,false,true,false': [0.0, 8, 0], 'true,true,true': [1.15e-07, 0, 45], 'false': [0.0, 0, 0], 'true,false,false,false': [2.11e-08, 59, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,true,false,false': [1.86e-09, 5, 0], 'true,false,false,true': [4.71e-08, 25, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,true,false': [0.011, 4, 0], 'true,false,false,true': [2.58e-08, 24, 0], 'true,true,true': [4.21e-08, 0, 45], 'true,false,false,false': [0.0, 46, 0], 'true,false,true': [0.187, 5, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.24151662049861528, 6.055761952500853e-17], 'false,true,true': [nan, -2.7755575615628915e-18], 'false,true,false': [5.773159728050814e-17, nan], 'false,true': [-2.7755575615628915e-18, 5.773159728050814e-17], 'false': [6.055761952500853e-17, nan]}, {'': [0.24287400910777426, -2.577303450022685e-17], 'false,true': [0.0, -3.416070845000482e-17], 'false': [-2.577303450022685e-17, nan]}, {'': [0.23831263696128485, 5.440055655483999e-06], 'false,true,false': [nan, 4.884981308350689e-17], 'false,true': [5.356362491504285e-05, 4.884981308350689e-17], 'false': [5.440055655483999e-06, nan]}, {'': [0.23437499999999942, 3.073499702891761e-08], 'true,true': [-3.9474596431116675e-16, 4.9343245538895844e-17], 'true': [0.23437499999999942, nan], 'false,true': [1.1564823173178713e-18, 1.1102230246251566e-17], 'false': [3.073499702891761e-08, nan]}, {'': [0.14158500865262813, 2.6289821669483865e-08], 'true': [0.14158500865262813, nan], 'false': [2.6289821669483865e-08, nan]}, {'': [0.13657631525581423, 1.6809872460399334e-06], 'true,true,false': [0.0, nan], 'true': [0.13657631525581423, nan], 'false,true,true': [0.0, 0.0], 'false,true': [2.1801798757284385e-05, -3.3306690738754695e-17], 'true,true,true': [nan, -1.9737298215558337e-16], 'true,true': [-1.9737298215558337e-16, 0.0], 'false': [1.6809872460399334e-06, nan]}, {'': [0.07695224300131472, 2.4814425682014087e-06], 'true': [0.07695224300131472, nan], 'false': [2.4814425682014087e-06, nan]}, {'': [0.08364995803262387, 2.1734135252257686e-06], 'false,true,false': [nan, -8.953411488912552e-19], 'false,true': [1.2871165654662494e-05, -8.953411488912552e-19], 'false': [2.1734135252257686e-06, nan]}, {'': [0.0457695349076046, nan], 'true,true,false': [nan, 6.938893903907229e-19], 'true': [0.01193286440030522, 0.010271020568682688], 'true,false,false': [8.881784197001253e-17, 7.526935760170553e-18], 'true,true': [2.9605947323337506e-16, 6.938893903907229e-19], 'true,false,true': [0.0, -1.734723475976807e-18], 'true,false': [0.009832036831690231, 0.010324576416742958]}, {'': [0.033775245971052775, nan], 'true,true': [3.947459643111668e-17, 2.957857760999341e-05], 'true': [0.0069924072209372025, 0.006574631795572783], 'true,false,false': [2.7755575615628914e-17, -6.033820786006285e-18], 'true,false': [0.006994258962300192, 0.006538615782597376]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(B, E).;true;true
3;false;genre(A, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
5;false,true;genre(B, I).;true;true
5;false;genre(A, H).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(A, F).;true;true
8;false,false;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3889421555868816;  // std dev = 0,167, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, E) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.32543865673898736;  // std dev = 0,003, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.09269127618926104;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.25427490823730275;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.25973053032635973;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839686;  // std dev = 2,28e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.21203167173556975;  // std dev = 0,002, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07969218282499246;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.1762087766746964;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.17958940207965854;  // std dev = 6,97e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( genre(A, D) )
%   | then return -0.07558097745137626;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.11693385989492616;  // std dev = 0,083, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.06827180926812264;  // std dev = 0,000179, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06842697784420264;  // std dev = 2,11e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.08056671617920526;  // std dev = 0,095, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else return 0.11703838288876782;  // std dev = 0,067, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06400616948359099;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.995335
   AUC PR    = 0.736885
   CLL	      = -0.081812
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 4.425 seconds
Total inference time: 4.125 seconds
AUC ROC: 0.995335


Results scoring model
   AUC ROC   = 0.998684
   AUC PR    = 0.897867
   CLL	      = -0.069923
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 2.702 seconds
Refined model CLL: -0.069923


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.995335
   AUC PR    = 0.736885
   CLL	      = -0.081812
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 12.825000000000001 seconds
Total inference time: 4.125 seconds
AUC ROC: 0.995335
Total revision time: 12.825000000000001
Best scored revision CLL: -0.069923


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 04:42:50
{'Learning time': 12.825000000000001, 'F1': 0.853165, 'Precision': [0.743929, 0.5], 'Recall': 1.0, 'Inference time': 4.125, 'parameter': {'Learning time': 3.512, 'F1': 0.816446, 'Precision': [0.80814, 0.5], 'Recall': 0.824926, 'Inference time': 4.451, 'CLL': -0.117948, 'AUC ROC': 0.974863, 'AUC PR': 0.856178}, 'CLL': -0.081812, 'AUC ROC': 0.995335, 'AUC PR': 0.736885}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 6,83e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11379332589051738;  // std dev = 0,114, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10146160110419729;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09257845777169395;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08662703231503724;  // std dev = 0,161, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07858308623407152;  // std dev = 2,58e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.18571317643556665;  // std dev = 0,080, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.2015138736221461;  // std dev = 0,284, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17886985770929492;  // std dev = 0,007, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09469844099587053;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07336328365618101;  // std dev = 0,021, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06826174089098945;  // std dev = 3,33e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15408795235512432;  // std dev = 0,006, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08688558865950342;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06404603138054583;  // std dev = 1,83e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13505557420128295;  // std dev = 0,005, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08023527889971639;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068247
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.002 seconds
Total inference time: 4.55 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 04:42:59
{'Learning time': 4.002, 'CLL': -0.068247, 'Recall': 1.0, 'Inference time': 4.55, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.995302
   AUC PR    = 0.743929
   CLL	      = -0.16604
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.358 seconds
Total inference time: 2.959 seconds
AUC ROC: 0.995302


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 04:43:03
{'Learning time': 1.358, 'CLL': -0.16604, 'Recall': 0.0, 'Inference time': 2.959, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.995302, 'AUC PR': 0.743929}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,true,true;author(G, E), title(G, F).;false;false
1;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), venue(G, A).;false;false
2;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,false;author(G, E), venue(G, B).;false;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;true,true;haswordauthor(F, C).;false;true
3;true,false,true;author(J, I), venue(J, A).;false;false
3;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
3;false,true;title(M, L), venue(M, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,false;haswordtitle(G, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false;haswordvenue(B, K), haswordtitle(L, K).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;true,true;haswordtitle(F, D).;true;true
4;true,false,true;haswordtitle(J, C).;false;false
4;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordvenue(A, D).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true,true;samebib(J, K), venue(K, B).;false;false
5;false,true;title(J, I), venue(J, A).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;true,true;author(F, E), venue(F, B).;true;true
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false,true;title(L, K), venue(L, B).;false;false
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;false,true;haswordauthor(I, G).;false;false
6;true,true,true;haswordtitle(F, C).;false;false
6;true,true;haswordtitle(F, D).;true;false
6;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;title(K, J), venue(K, B).;false;false
7;false,true,false;title(H, E), venue(H, A).;false;false
7;false,true;haswordauthor(F, D).;true;true
7;false,true,true;author(G, F), venue(G, A).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false;title(G, D), venue(G, A).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true;venue(E, B), title(E, D).;true;true
9;false,true,false;haswordtitle(H, J), haswordauthor(K, J).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, A).;false;true
9;false,true;title(I, H), venue(I, B).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.46625704320762096;  // std dev = 4,199, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.45322379563496673;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3497869353449309;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6296538758152307;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.08463183847048338;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1657040636394924;  // std dev = 0,431, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09332434399585283;  // std dev = 0,027, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.43422694723111743;  // std dev = 9,42e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1037273212701071;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(A, H) )
%   | | then if ( genre(B, I) )
%   | | | then return -0.10334298174098965;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.10334298174098965;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08513543043805162;  // std dev = 1,05e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.13785346628151401;  // std dev = 0,381, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07873440206624062;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06854272508706037;  // std dev = 3,326, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08764797250844672;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0732094837570398;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2879730520932568;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06839481593402441;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.41411225374656285;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08088778447372613;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.056969396603705605;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.0683948159340244;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.23268319604057827;  // std dev = 5,58e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.0725256236596093;  // std dev = 0,012, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, E) )
%   | | then return -0.07507443414983711;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return 0.016305512966030257;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.06416346284549239;  // std dev = 1,58e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.982257
   AUC PR    = 0.888508
   CLL	      = -0.186789
   Precision = 0.808989 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.831169


Total learning time: 23.405 seconds
Total inference time: 3.458 seconds
AUC ROC: 0.982257


Results scoring model
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.188468
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total scoring time: 2.265 seconds
Parameter learned model CLL: -0.188468


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'movie(F, A)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [6.14e-08, 60, 0], 'true': [4.199, 29, 45], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 0, 0], 'true': [3.901, 23, 45], 'false,true,false': [0.0, 56, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.009, 25, 45], 'false,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [3.33e-08, 52, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)'}, {'true,true,false': [2.673, 25, 10], 'false,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 35], 'false,true,false': [3.94e-08, 57, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,true': [0.431, 30, 45], 'false,true': [0.027, 62, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,false': 'movie(D, A)', 'false,true,true': 'genre(B, I)', 'false,true': 'genre(A, H)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'true': 'movie(D, B)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [9.42e-08, 0, 35], 'true,true,false,true': [2.673, 25, 10], 'false,true,false': [1.05e-08, 63, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,true': [0.381, 23, 45], 'false,true': [0.0, 62, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [3.326, 29, 45], 'false,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false': 'genre(A, F)'}, {'true,false,true,false': [0.0, 3, 0], 'true,true,true': [0.0, 0, 35], 'false': [0.0, 0, 0], 'true,false,false,false': [0.0, 61, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false,false,true': [2.535, 18, 10]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,false': 'genre(A, E)'}, {'true,true,false': [0.012, 2, 0], 'true,false,false,true': [2.415, 14, 10], 'true,true,true': [5.58e-08, 0, 35], 'true,false,false,false': [1.58e-08, 51, 0], 'true,false,true': [0.0, 2, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.23831263696128588, 6.29126380620922e-17], 'false,true,false': [6.29126380620922e-17, nan], 'false,true': [nan, 6.29126380620922e-17], 'false': [6.29126380620922e-17, nan]}, {'': [0.223832179930796, -3.766828119263924e-17], 'false,true': [nan, -3.766828119263924e-17], 'false': [-3.766828119263924e-17, nan]}, {'': [0.22959183673469483, 5.7856481353890256e-05], 'false,true,false': [nan, 2.1350442781253012e-17], 'false,true': [0.0, 2.1350442781253012e-17], 'false': [5.7856481353890256e-05, nan]}, {'': [0.22959183673469422, 2.7015237594489132e-05], 'true,true': [-1.0150610510858574e-16, 0.20408163265306137], 'true': [0.22959183673469422, nan], 'false,true': [0.0, 2.7268635692547703e-17], 'false': [2.7015237594489132e-05, nan]}, {'': [0.18541505153192725, 1.2023245432289978e-05], 'true': [0.18541505153192725, nan], 'false': [1.2023245432289978e-05, nan]}, {'': [0.1743895150762027, 1.4383912011227448e-05], 'true,true,false': [0.20408163265306145, nan], 'true': [0.1743895150762027, nan], 'false,true,true': [0.0, 0.0], 'false,true': [2.3129646346357427e-18, 1.76225876924628e-18], 'true,true,true': [nan, 2.5376526277146434e-16], 'true,true': [2.5376526277146434e-16, 0.20408163265306145], 'false': [1.4383912011227448e-05, nan]}, {'': [0.14486338725530598, 0.0], 'true': [0.14486338725530598, nan], 'false': [0.0, nan]}, {'': [0.14949340953868992, 2.8166329394853037e-06], 'false,true,false': [nan, -1.0022846750088219e-17], 'false,true': [0.0, -1.0022846750088219e-17], 'false': [2.8166329394853037e-06, nan]}, {'': [0.07620483800478486, nan], 'true,true,false': [nan, 0.0], 'true': [0.011689499034006076, 0.07142379592016718], 'true,false,false': [0.22959183673469383, -4.550094363217854e-18], 'true,true': [-7.612957883143931e-17, 0.0], 'true,false,true': [-3.700743415417188e-17, 0.0], 'true,false': [0.02775963673054092, 0.07225928794548639]}, {'': [0.06798322374864584, nan], 'true,false,false': [0.24305555555555547, 4.89804275569922e-18], 'true': [0.00476686936294553, 0.0771639968408557], 'true,false': [0.0, 0.07918679349820829], 'true,true': [8.881784197001253e-17, 6.992573348114928e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(B, E).;true;true
3;false;genre(A, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
5;false,true;genre(B, I).;true;true
5;false;genre(A, H).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(A, F).;true;true
8;false,false;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.12544463852839155;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360626;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(A) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( genre(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.09269127618926103;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 3,73e-09, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.202540663622121;  // std dev = 0,223, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09344290892538198;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253573;  // std dev = 3,73e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.21700471258013057;  // std dev = 0,003, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(A) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.08112526528245166;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527747;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.1823959433018693;  // std dev = 0,003, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( genre(A, D) )
%   | then return -0.07966762921394438;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07323397498925258;  // std dev = 0,000216, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.14045658943045572;  // std dev = 0,051, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.14608646081838011;  // std dev = 0,051, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.07401850225166681;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B) )
%   | | | then return 0.11534318196440567;  // std dev = 0,285, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.06842363604521037;  // std dev = 0,000209, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13543938037796566;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.11705321643571347;  // std dev = 0,067, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06779109592484603;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419035930448569;  // std dev = 0,000139, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return 0.07667764147092755;  // std dev = 0,362, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.997126
   AUC PR    = 0.889346
   CLL	      = -0.085982
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.442 seconds
Total inference time: 3.812 seconds
AUC ROC: 0.997126


Results scoring model
   AUC ROC   = 0.999506
   AUC PR    = 0.971941
   CLL	      = -0.067934
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 2.052 seconds
Refined model CLL: -0.067934


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.997126
   AUC PR    = 0.889346
   CLL	      = -0.085982
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 31.164 seconds
Total inference time: 3.812 seconds
AUC ROC: 0.997126
Total revision time: 31.164
Best scored revision CLL: -0.067934


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 04:43:43
{'Learning time': 31.164, 'F1': 0.852086, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'Inference time': 3.812, 'parameter': {'Learning time': 23.405, 'F1': 0.831169, 'Precision': [0.808989, 0.5], 'Recall': 0.854599, 'Inference time': 3.458, 'CLL': -0.186789, 'AUC ROC': 0.982257, 'AUC PR': 0.888508}, 'CLL': -0.085982, 'AUC ROC': 0.997126, 'AUC PR': 0.889346}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283916;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7,45e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5,77e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39494358791282524;  // std dev = 0,106, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32312537959315174;  // std dev = 0,017, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14466098847084777;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( female(A) )
%   | then return 0.2387113348940431;  // std dev = 0,077, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2590220352204025;  // std dev = 4,21e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 2,58e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return 0.21228039592922612;  // std dev = 0,001, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17894457071372144;  // std dev = 0,001, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18894237888100993;  // std dev = 0,000424, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0744371849627038;  // std dev = 0,115, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15414437007646217;  // std dev = 0,000988, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16162103116312634;  // std dev = 0,000250, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06835109948508249;  // std dev = 2,89e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.16468316448010223;  // std dev = 0,528, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06381688336898349;  // std dev = 0,005, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.13509944369010216;  // std dev = 0,000885, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07407193112731428;  // std dev = 0,227, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080197
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.704 seconds
Total inference time: 3.74 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 04:43:50
{'Learning time': 2.704, 'CLL': -0.080197, 'Recall': 1.0, 'Inference time': 3.74, 'F1': 0.852086, 'Precision': [0.742291, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.995191
   AUC PR    = 0.742291
   CLL	      = -0.166516
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.135 seconds
Total inference time: 1.663 seconds
AUC ROC: 0.995191


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 04:43:53
{'Learning time': 1.135, 'CLL': -0.166516, 'Recall': 0.0, 'Inference time': 1.663, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.995191, 'AUC PR': 0.742291}


