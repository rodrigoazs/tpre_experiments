Starting experiment #5 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21015190245855758;  // std dev = 0,478, 8.088,000 (wgt'ed) examples reached here.  /* #neg=5.241 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8236661764788223;  // std dev = 1,702, 87,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | | else return -0.13849536020250133;  // std dev = 0,998, 298,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.15226658215833588;  // std dev = 3,254, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.055431311814068;  // std dev = 4,380, 243,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.01343576435403984;  // std dev = 6,400, 366,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=47 */
%   | | | else return -0.1067633456022421;  // std dev = 1,389, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.7851401849266644;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.45962698844572664;  // std dev = 3,804, 62,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=39 */
%   | | | else return -0.00576890598242629;  // std dev = 4,752, 165,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=27 */
%   | | else return 0.1909550907414865;  // std dev = 0,480, 7.659,000 (wgt'ed) examples reached here.  /* #neg=4.899 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), title(K, J) )
%   | | | then return 0.3557253077400584;  // std dev = 0,987, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07009540673310156;  // std dev = 2,898, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | else return -0.008316735853866395;  // std dev = 0,300, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.09975050807866677;  // std dev = 0,429, 67,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | else return -0.0069505524497856675;  // std dev = 0,321, 977,000 (wgt'ed) examples reached here.  /* #neg=843 #pos=134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.23880588100564434;  // std dev = 5,913, 154,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=69 */
%   | | | else return 0.8314049091565305;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.0563195320793815;  // std dev = 0,318, 93,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
%   | else return 0.16152360240938507;  // std dev = 0,480, 7.677,000 (wgt'ed) examples reached here.  /* #neg=4.917 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.6270031358276263;  // std dev = 2,846, 92,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=83 */
%   | | | else return -0.12692492052035131;  // std dev = 0,067, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
%   | | else if ( haswordauthor(K, G) )
%   | | | then return 0.14355911247357445;  // std dev = 3,184, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.044369106019395255;  // std dev = 4,553, 254,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=23 */
%   | else return -0.02751530070567973;  // std dev = 0,315, 439,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=49 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13705381677960818;  // std dev = 0,480, 7.864,000 (wgt'ed) examples reached here.  /* #neg=5.017 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5318423867394161;  // std dev = 2,115, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.10996193797971217;  // std dev = 0,993, 310,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1288781290210311;  // std dev = 3,167, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.05422163946008875;  // std dev = 4,408, 279,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0023128759171215612;  // std dev = 6,358, 336,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=47 */
%   | | | else return -0.08804237284386683;  // std dev = 1,390, 51,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=2 */
%   | | else return -0.12268935494206745;  // std dev = 0,011, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10653147837866522;  // std dev = 0,478, 7.989,000 (wgt'ed) examples reached here.  /* #neg=5.142 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.1610263155093945;  // std dev = 0,545, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08752145262922914;  // std dev = 3,204, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.016591402538644266;  // std dev = 4,789, 363,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=83 */
%   | | | else return -0.04109396063195284;  // std dev = 4,391, 255,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.010964258863209673;  // std dev = 6,405, 371,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=47 */
%   | | | else return -0.07883694409663079;  // std dev = 1,389, 52,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=2 */
%   | | else return -0.10986137708652384;  // std dev = 0,010, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09070873926716502;  // std dev = 0,479, 7.889,000 (wgt'ed) examples reached here.  /* #neg=5.042 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.1070255487980833;  // std dev = 3,159, 50,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return -0.018833377501329168;  // std dev = 4,934, 494,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=83 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.05352415135256675;  // std dev = 4,122, 120,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=21 */
%   | | | else return -0.12064944250839398;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.012731586392398042;  // std dev = 0,323, 411,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=49 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.675413749707561;  // std dev = 1,013, 45,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | | else return -0.28633221189511743;  // std dev = 0,076, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.5842981833838145;  // std dev = 0,138, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.044960526011261354;  // std dev = 4,519, 111,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=27 */
%   | else return 0.06924718555752132;  // std dev = 0,478, 7.722,000 (wgt'ed) examples reached here.  /* #neg=4.962 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return 0.002036702969592863;  // std dev = 0,276, 677,000 (wgt'ed) examples reached here.  /* #neg=556 #pos=121 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.011240369612572621;  // std dev = 6,417, 380,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=47 */
%   | | | else return -0.07061313854379778;  // std dev = 1,389, 54,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=2 */
%   | | else return -0.09840578318641802;  // std dev = 0,010, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.3265307702991098;  // std dev = 1,370, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.0048070313547443145;  // std dev = 5,808, 208,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=61 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.47804126531735375;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4350057236312671;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.0596854422062948;  // std dev = 0,480, 7.614,000 (wgt'ed) examples reached here.  /* #neg=4.854 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return 0.0021711566359101943;  // std dev = 0,282, 662,000 (wgt'ed) examples reached here.  /* #neg=541 #pos=121 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.0027470601928301845;  // std dev = 6,370, 345,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=47 */
%   | | | else return -0.06653329349672987;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=2 */
%   | | else return -0.09012045318951449;  // std dev = 0,009, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then if ( author(F, D), title(F, E) )
%   | | | then return 0.32141353538824674;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08643519920670965;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return 0.38632705436410103;  // std dev = 0,059, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.04683576326037312;  // std dev = 0,479, 7.806,000 (wgt'ed) examples reached here.  /* #neg=4.980 #pos=2.826 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then if ( author(J, H), venue(J, A) )
%   | | | then return 0.05731172578379866;  // std dev = 0,568, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09653779465310862;  // std dev = 3,090, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else if ( author(K, H), venue(K, A) )
%   | | | then return 0.3545915349886945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12983922801990708;  // std dev = 0,085, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.012416602254870752;  // std dev = 0,281, 1.067,000 (wgt'ed) examples reached here.  /* #neg=916 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.024634230542713065;  // std dev = 0,474, 7.442,000 (wgt'ed) examples reached here.  /* #neg=4.833 #pos=2.609 */
%   | | else return 0.028827642872729188;  // std dev = 0,362, 722,000 (wgt'ed) examples reached here.  /* #neg=587 #pos=135 */
%   | else if ( title(F, D), venue(F, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.1311720043772955;  // std dev = 4,662, 139,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=27 */
%   | | | else return -0.07879752438680075;  // std dev = 0,845, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3965991423370318;  // std dev = 4,588, 106,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=78 */
%   | | | else return 0.030364520968232115;  // std dev = 4,183, 202,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=49 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return 0.07854015444535156;  // std dev = 0,312, 274,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=81 */
%   | | else return 0.022158092903106903;  // std dev = 0,340, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else return 0.4822281091175409;  // std dev = 0,342, 40,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=31 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
1;true;haswordauthor(D, C).;false;true
1;false,true,true;author(K, I), title(K, J).;false;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,false,true;author(G, F), venue(G, A).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true;haswordtitle(F, D).;true;false
2;true,true,true;haswordtitle(F, C).;false;false
2;false,true,false;haswordauthor(K, G).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true,true;samebib(I, J), venue(J, A).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
2;false,true;title(I, H), venue(I, B).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true;title(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,false;title(H, E), venue(H, A).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;author(G, F), title(G, E).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
5;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
5;false,true,true;haswordauthor(G, D).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true;author(F, E), venue(F, B).;true;true
6;true,true,true;samebib(F, G), venue(G, A).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordvenue(B, D).;false;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true;haswordtitle(F, C).;true;true
7;true,true,true;haswordvenue(B, D).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;haswordauthor(G, C).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true;haswordtitle(E, C).;true;false
8;true,true,true;author(F, D), title(F, E).;false;false
8;false,true,false;author(K, H), venue(K, A).;false;false
8;true;haswordauthor(D, C).;true;false
8;false,true,true;author(J, H), venue(J, A).;false;false
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;false,true;haswordtitle(I, G).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;false,true;title(I, H), venue(I, B).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.48736241824558046;  // std dev = 4,557, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.2120458159583457;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.45462085070832015;  // std dev = 4,320, 84,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.12564718700212105;  // std dev = 0,002, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.37837842703177454;  // std dev = 0,467, 83,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.12723315393384144;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11229618541100891;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11229618541100889;  // std dev = 4,17e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23304707727715673;  // std dev = 4,641, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10157968626970747;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10157968626970759;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2195851716744107;  // std dev = 4,339, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0926773407766035;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0926773407766035;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13956081896064942;  // std dev = 4,518, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08517292440330329;  // std dev = 2,79e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.47189097786602824;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.523698263247876;  // std dev = 0,161, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.07876659901600738;  // std dev = 1,05e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.07777134193225389;  // std dev = 3,443, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07323741565232277;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07407797661826247;  // std dev = 0,358, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06841926613898872;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06841926613898866;  // std dev = 1,49e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3071496814630857;  // std dev = 0,105, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06418503599486776;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3238148427579369;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06418503599486776;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.4355372220989701;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.06418503599486772;  // std dev = 2,79e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979497
   AUC PR    = 0.867039
   CLL	      = -0.155445
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 1.585 seconds
Total inference time: 3.241 seconds
AUC ROC: 0.979497


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.159719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.425 seconds
Parameter learned model CLL: -0.159719


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false': [8.33e-09, 79, 0], 'true': [4.557, 33, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, A)', 'true': 'movie(D, B)'}, {'true,true,false': [4.32, 28, 56], 'true,true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.002, 81, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, G)'}, {'false,true,true,true': [0.0, 1, 0], 'true,true': [0.467, 27, 56], 'false,true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [4.17e-09, 75, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.86e-09, 3, 0], 'false,true,false': [0.0, 74, 0], 'true': [4.641, 35, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 61, 0], 'true': [4.339, 30, 56], 'false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [4.518, 33, 56], 'false,true,true': [2.79e-08, 69, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'movie(D, B)', 'false': 'movie(G, B)'}, {'true,true,true,false': [1.03e-07, 0, 56], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.161, 37, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [1.05e-08, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [3.443, 33, 56], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.0, 82, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.49e-08, 71, 0], 'true': [0.358, 31, 56], 'false,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)', 'true,false,true': 'movie(C, B)'}, {'true,false,false,true': [0.0, 42, 0], 'true,true,true': [0.105, 5, 0], 'true,false,false,false': [2.79e-08, 74, 0], 'true,true,false': [2.63e-09, 5, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 3, 0], 'true,false,true,true': [1.03e-07, 0, 56]}]]
[{'': [0.23330387577326067, 7.401486830834377e-17], 'false': [7.401486830834377e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 7.307797124114954e-17]}, {'': [0.22714981070849252, 3.28207073679248e-06], 'true,true': [0.0, 0.22222222222222363], 'false': [3.28207073679248e-06, nan], 'true': [0.22714981070849252, nan]}, {'': [0.21771446678364187, 2.85994099808833e-06], 'false,true,true': [0.0, 0.0], 'false': [2.85994099808833e-06, nan], 'true': [0.21771446678364187, nan], 'false,true': [5.577825716302463e-05, 1.7763568394002505e-17]}, {'': [0.23668639053254525, -2.451141742678917e-17], 'false': [-2.451141742678917e-17, nan], 'false,true,true': [nan, 1.1564823173178713e-18], 'false,true': [1.1564823173178713e-18, -2.250452076942885e-17]}, {'': [0.21895180379763346, 0.0], 'false': [0.0, nan], 'false,true': [0.0, -3.640075490574284e-18]}, {'': [0.22934086058947012, 1.12631321338784e-17], 'false': [1.12631321338784e-17, nan], 'false,true': [1.12631321338784e-17, nan]}, {'': [0.23773524194295198, 1.5419764230904951e-18], 'true,true': [1.9032394707859825e-16, 0.0007003725822459454], 'true,true,true': [nan, 1.9032394707859825e-16], 'true': [0.23773524194295198, nan], 'true,true,false': [0.0007003725822459454, nan], 'false': [1.5419764230904951e-18, nan]}, {'': [0.1331868757960464, -1.692413147294446e-17], 'true,true': [0.1331868757960464, nan], 'false': [-1.692413147294446e-17, nan], 'true': [0.1331868757960464, nan]}, {'': [0.12845442179675334, 2.960594732333751e-18], 'false': [2.960594732333751e-18, nan], 'false,true,false': [nan, 3.1273888017610044e-18], 'false,true': [0.0, 3.1273888017610044e-18]}, {'': [0.07782607251524881, nan], 'true,true': [0.002191137240375063, 1.3877787807814458e-18], 'true,false': [0.007265549035693397, 0.03185202159291851], 'true': [0.01585352335706174, 0.0800431551484706], 'true,false,false': [-1.2688263138573217e-16, 1.050210969240013e-17], 'true,false,true': [1.9032394707859825e-16, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
2;false,true;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false;genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.12544463852839147;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A), female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.1027874460106997;  // std dev = 0,003, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.09259115234909078;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.10246938598634271;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.08509977064028722;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08614002467226507;  // std dev = 0,008, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 9,13e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(A) )
%   | | | then return -0.07870377839176439;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07862838314777797;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0731829153856918;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1295419654097122;  // std dev = 0,178, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07324622576333704;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06837155825326835;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.06492444290519665;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06480931823851009;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06517044583522807;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1340070300080109;  // std dev = 4,47e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06418749350433611;  // std dev = 9,34e-05, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.06332301307229422;  // std dev = 0,010, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077054
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.644 seconds
Total inference time: 3.452 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064066
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 2.034 seconds
Refined model CLL: -0.064066


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077054
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 9.687999999999999 seconds
Total inference time: 3.452 seconds
AUC ROC: 1.0
Total revision time: 9.687999999999999
Best scored revision CLL: -0.064066


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 04:06:12
{'F1': 0.847854, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter': {'F1': 0.900506, 'AUC ROC': 0.979497, 'AUC PR': 0.867039, 'CLL': -0.155445, 'Learning time': 1.585, 'Recall': 0.819018, 'Inference time': 3.241, 'Precision': [1.0, 0.5]}, 'CLL': -0.077054, 'Learning time': 9.687999999999999, 'Recall': 1.0, 'Inference time': 3.452, 'Precision': [0.735892, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 5,58e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7,74e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else return 0.7263798063385707;  // std dev = 0,002, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8,43e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( female(A) )
%   | then return 0.5267539964822306;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5285489150394473;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783665;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.431010223442041;  // std dev = 0,004, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.5692787197481819;  // std dev = 0,000916, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926085;  // std dev = 7,22e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3298772167125245;  // std dev = 0,003, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.4277771641250408;  // std dev = 0,000835, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26141686367337424;  // std dev = 0,003, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3279852700788209;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08758871691998518;  // std dev = 0,242, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07860247316475903;  // std dev = 5,96e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21415929215881518;  // std dev = 0,003, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.25959399980821013;  // std dev = 0,000656, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07309501604671888;  // std dev = 3,65e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1803181981188983;  // std dev = 0,002, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.21318749595076059;  // std dev = 0,000873, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15518348777694685;  // std dev = 0,002, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17949872882024617;  // std dev = 0,000674, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06829460485958537;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return -0.3101043934580352;  // std dev = 0,592, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06386437546113725;  // std dev = 0,018, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13590875218001672;  // std dev = 0,002, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15464560080203243;  // std dev = 0,000472, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.086299
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.717 seconds
Total inference time: 2.799 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 04:06:17
{'F1': 0.847854, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Precision': [0.735892, 0.5], 'CLL': -0.086299, 'Learning time': 2.717, 'Inference time': 2.799, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 6,66e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.166977
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.988 seconds
Total inference time: 1.9 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 04:06:21
{'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Precision': [nan, 0.5], 'CLL': -0.166977, 'Learning time': 0.988, 'Inference time': 1.9, 'Recall': 0.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
1;true;haswordauthor(D, C).;false;true
1;false,true,true;author(K, I), title(K, J).;false;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,false,true;author(G, F), venue(G, A).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true;haswordtitle(F, D).;true;false
2;true,true,true;haswordtitle(F, C).;false;false
2;false,true,false;haswordauthor(K, G).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true,true;samebib(I, J), venue(J, A).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
2;false,true;title(I, H), venue(I, B).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true;title(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,false;title(H, E), venue(H, A).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;author(G, F), title(G, E).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
5;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
5;false,true,true;haswordauthor(G, D).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true;author(F, E), venue(F, B).;true;true
6;true,true,true;samebib(F, G), venue(G, A).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordvenue(B, D).;false;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true;haswordtitle(F, C).;true;true
7;true,true,true;haswordvenue(B, D).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;haswordauthor(G, C).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true;haswordtitle(E, C).;true;false
8;true,true,true;author(F, D), title(F, E).;false;false
8;false,true,false;author(K, H), venue(K, A).;false;false
8;true;haswordauthor(D, C).;true;false
8;false,true,true;author(J, H), venue(J, A).;false;false
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;false,true;haswordtitle(I, G).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;false,true;title(I, H), venue(I, B).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.49551157246215044;  // std dev = 4,586, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21341059110966049;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.5115894088903378;  // std dev = 3,994, 80,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.33875459690268644;  // std dev = 0,472, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.1272556476027624;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360625;  // std dev = 6,59e-09, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.29577909290212295;  // std dev = 4,271, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10159632948783615;  // std dev = 6,59e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18056396657186935;  // std dev = 4,545, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09570392482161807;  // std dev = 0,020, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926108;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15948550057433641;  // std dev = 4,379, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08516800300174929;  // std dev = 0,000553, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.454703496761411;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.5391627122999942;  // std dev = 0,175, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.07894673610297616;  // std dev = 0,018, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.07942538869259613;  // std dev = 3,409, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07337426861258377;  // std dev = 0,017, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08905596194647324;  // std dev = 0,351, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07022198677763689;  // std dev = 0,015, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0684090501694268;  // std dev = 3,16e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.28618257862170315;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06388681863739189;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.30898496017293947;  // std dev = 1,33e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06417602224497332;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.4528908388244414;  // std dev = 1,19e-07, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.0641760222449733;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978798
   AUC PR    = 0.865522
   CLL	      = -0.161398
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 1.871 seconds
Total inference time: 3.08 seconds
AUC ROC: 0.978798


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.156915
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.844 seconds
Parameter learned model CLL: -0.156915


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 3, 0], 'false,true,false': [8.33e-09, 78, 0], 'true': [4.586, 33, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, A)', 'true': 'movie(D, B)'}, {'true,true,false': [3.994, 22, 58], 'true,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.0, 95, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, G)'}, {'false,true,true,true': [0.0, 2, 0], 'true,true': [0.472, 32, 58], 'false,true,true,false': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [6.59e-09, 69, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 9, 0], 'false,true,false': [6.59e-09, 78, 0], 'true': [4.271, 27, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 74, 0], 'true': [4.545, 33, 58], 'false,true,true': [0.02, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [4.379, 30, 58], 'false,true,true': [0.000553, 84, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'movie(D, B)', 'false': 'movie(G, B)'}, {'true,true,true,false': [0.0, 0, 58], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.175, 29, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [0.018, 95, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [3.409, 32, 58], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.017, 107, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.16e-08, 75, 0], 'true': [0.351, 27, 58], 'false,true,true': [0.015, 8, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)', 'true,false,true': 'movie(C, B)'}, {'true,false,false,true': [1.19e-07, 39, 0], 'true,true,true': [0.0, 4, 0], 'true,false,false,false': [0.0, 73, 0], 'true,true,false': [3.73e-09, 10, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 8, 0], 'true,false,true,true': [1.33e-07, 0, 58]}]]
[{'': [0.2311315058567802, 7.401486830834377e-17], 'false': [7.401486830834377e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 7.401486830834377e-17]}, {'': [0.20332266422801623, -1.402386978473882e-17], 'true,true': [0.0, 0.19937500000000216], 'false': [-1.402386978473882e-17, nan], 'true': [0.20332266422801623, nan]}, {'': [0.2223246519870446, 5.440055655481224e-06], 'false,true,true': [0.0, -1.5419764230904951e-18], 'false': [5.440055655481224e-06, nan], 'true': [0.2223246519870446, nan], 'false,true': [3.320059395560278e-05, 4.344350965924526e-17]}, {'': [0.21456097273736097, 3.317907889684376e-17], 'false': [3.317907889684376e-17, nan], 'false,true,true': [nan, -6.1679056923619804e-18], 'false,true': [-6.1679056923619804e-18, 4.554761126667309e-17]}, {'': [0.2270312878983577, 5.422667731383686e-06], 'false': [5.422667731383686e-06, nan], 'false,true': [5.445631069225798e-05, -1.50030138462859e-18]}, {'': [0.21785583616969417, 3.6466099465456583e-09], 'false': [3.6466099465456583e-09, nan], 'false,true': [3.6466099465456583e-09, nan]}, {'': [0.21985560532172896, 3.3857930193772596e-06], 'true,true': [-1.5313421029312505e-16, 0.0010534549557947475], 'true,true,true': [nan, -1.5313421029312505e-16], 'true': [0.21985560532172896, nan], 'true,true,false': [0.0010534549557947475, nan], 'false': [3.3857930193772596e-06, nan]}, {'': [0.12916277802662515, 2.639981067292848e-06], 'true,true': [0.12916277802662515, nan], 'false': [2.639981067292848e-06, nan], 'true': [0.12916277802662515, nan]}, {'': [0.12327065153798132, 2.9977027712975463e-06], 'false': [2.9977027712975463e-06, nan], 'false,true,false': [nan, 1.3322676295501878e-17], 'false,true': [2.8131221241249962e-05, 1.3322676295501878e-17]}, {'': [0.07293349412073512, nan], 'true,true': [0.0, 1.3877787807814458e-18], 'true,false': [0.014832780331217571, 0.034293642136884885], 'true': [0.010084776511633158, 0.0771526122472789], 'true,false,false': [3.643808901333847e-16, 0.0], 'true,false,true': [3.062684205862501e-16, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
2;false,true;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false;genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.12544463852839147;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783633;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.0851847513883968;  // std dev = 1,83e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( female(A) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.07324622576333704;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420268;  // std dev = 2,24e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.16004733214462505;  // std dev = 0,235, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.11950467365995959;  // std dev = 0,330, 41,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999579
   AUC PR    = 0.986436
   CLL	      = -0.079128
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.385 seconds
Total inference time: 3.198 seconds
AUC ROC: 0.999579


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064973
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 2.458 seconds
Refined model CLL: -0.064973


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999579
   AUC PR    = 0.986436
   CLL	      = -0.079128
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 9.558 seconds
Total inference time: 3.198 seconds
AUC ROC: 0.999579
Total revision time: 9.558
Best scored revision CLL: -0.064973


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 04:06:37
{'F1': 0.848168, 'AUC ROC': 0.999579, 'AUC PR': 0.986436, 'parameter': {'F1': 0.89983, 'AUC ROC': 0.978798, 'AUC PR': 0.865522, 'CLL': -0.161398, 'Learning time': 1.871, 'Recall': 0.817901, 'Inference time': 3.08, 'Precision': [1.0, 0.5]}, 'CLL': -0.079128, 'Learning time': 9.558, 'Recall': 1.0, 'Inference time': 3.198, 'Precision': [0.736364, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048768;  // std dev = 6,32e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( female(A) )
%   | then return 0.7194734122109542;  // std dev = 5,96e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.6978088468073818;  // std dev = 0,134, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8,02e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.5405956329485367;  // std dev = 0,124, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4233358791722725;  // std dev = 0,032, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.3326720956445179;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926085;  // std dev = 7,22e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32466818619978716;  // std dev = 0,029, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.26367561595007855;  // std dev = 0,009, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6,14e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25787385597810397;  // std dev = 0,025, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.21419963851492244;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2116665868745533;  // std dev = 0,022, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18276934423497404;  // std dev = 0,008, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08103388565378113;  // std dev = 0,142, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17849675176028373;  // std dev = 0,019, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.15810814664300013;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07707688558077642;  // std dev = 0,480, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06803993138089466;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15380621981606452;  // std dev = 0,017, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13530194967529832;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1348365123354952;  // std dev = 0,015, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12154112700981899;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06457761253141175;  // std dev = 0,077, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077893
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.578 seconds
Total inference time: 2.759 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 04:06:43
{'F1': 0.848168, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Precision': [0.736364, 0.5], 'CLL': -0.077893, 'Learning time': 2.578, 'Inference time': 2.759, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.994636
   AUC PR    = 0.736364
   CLL	      = -0.169152
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.091 seconds
Total inference time: 1.764 seconds
AUC ROC: 0.994636


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 04:06:46
{'F1': nan, 'AUC ROC': 0.994636, 'AUC PR': 0.736364, 'Precision': [nan, 0.5], 'CLL': -0.169152, 'Learning time': 1.091, 'Inference time': 1.764, 'Recall': 0.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
1;true;haswordauthor(D, C).;false;true
1;false,true,true;author(K, I), title(K, J).;false;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,false,true;author(G, F), venue(G, A).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true;haswordtitle(F, D).;true;false
2;true,true,true;haswordtitle(F, C).;false;false
2;false,true,false;haswordauthor(K, G).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true,true;samebib(I, J), venue(J, A).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
2;false,true;title(I, H), venue(I, B).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true;title(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,false;title(H, E), venue(H, A).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;author(G, F), title(G, E).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
5;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
5;false,true,true;haswordauthor(G, D).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true;author(F, E), venue(F, B).;true;true
6;true,true,true;samebib(F, G), venue(G, A).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordvenue(B, D).;false;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true;haswordtitle(F, C).;true;true
7;true,true,true;haswordvenue(B, D).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;haswordauthor(G, C).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true;haswordtitle(E, C).;true;false
8;true,true,true;author(F, D), title(F, E).;false;false
8;false,true,false;author(K, H), venue(K, A).;false;false
8;true;haswordauthor(D, C).;true;false
8;false,true,true;author(J, H), venue(J, A).;false;false
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;false,true;haswordtitle(I, G).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;false,true;title(I, H), venue(I, B).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5298470483070559;  // std dev = 7,644, 265,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.1418510649004881;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21923107040458498;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.5546819730736734;  // std dev = 6,344, 230,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.125444638528392;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3705738381107285;  // std dev = 0,448, 259,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.11231637819360633;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360617;  // std dev = 3,33e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.11231637819360674;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2924011748330603;  // std dev = 7,082, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783626;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.10159632948783658;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20966736309435438;  // std dev = 7,240, 260,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.09269127618926053;  // std dev = 6,99e-08, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1959501721900227;  // std dev = 6,722, 247,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08518475138839678;  // std dev = 1,03e-07, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.39632737291054493;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.4126256538154941;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.09785059875431856;  // std dev = 4,944, 104,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.07877675473109144;  // std dev = 5,58e-08, 252,000 (wgt'ed) examples reached here.  /* #neg=252 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.0870676024524801;  // std dev = 6,473, 255,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07324622576333692;  // std dev = 1,03e-07, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.058859154663706885;  // std dev = 0,408, 259,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842697784420265;  // std dev = 2,17e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420261;  // std dev = 6,50e-08, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3927426546696015;  // std dev = 0,138, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2866574112265243;  // std dev = 2,23e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.16147539308318914;  // std dev = 5,250, 112,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=49 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.263761
   Precision = 0.069012 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.129114


Total learning time: 2.495 seconds
Total inference time: 3.415 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.214437
   Precision = 0.226752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.369678


Total scoring time: 2.044 seconds
Parameter learned model CLL: -0.214437


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 5, 0], 'false,true,true,false': [5.16e-08, 49, 0], 'false,true,false': [0.0, 266, 0], 'true': [7.644, 87, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, A)', 'true': 'movie(D, B)'}, {'true,true,false': [6.344, 52, 178], 'true,true,true': [0.0, 13, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.0, 296, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, G)'}, {'false,true,true,true': [3.73e-09, 6, 0], 'true,true': [0.448, 81, 178], 'false,true,true,false': [3.33e-08, 43, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 225, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 6, 0], 'false,true,true,false': [0.0, 40, 0], 'false,true,false': [0.0, 240, 0], 'true': [7.082, 79, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [6.99e-08, 202, 0], 'true': [7.24, 82, 178], 'false,true,true': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [6.722, 69, 178], 'false,true,true': [1.03e-07, 291, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'movie(D, B)', 'false': 'movie(G, B)'}, {'true,true,true,false': [0.0, 0, 129], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false,true': [4.944, 55, 49], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 9, 0], 'false,true': [5.58e-08, 252, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [6.473, 77, 178], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [1.03e-07, 285, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.5e-08, 223, 0], 'true': [0.408, 81, 178], 'false,true,true': [2.17e-08, 51, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)', 'true,false,true': 'movie(C, B)'}, {'true,false,false,true': [5.25, 63, 49], 'true,true,true': [0.138, 23, 0], 'true,false,false,false': [0.0, 185, 0], 'true,true,false': [0.0, 42, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 37, 0], 'true,false,true,true': [2.23e-07, 0, 129]}]]
[{'': [0.2205197579209737, 8.326672684688674e-17], 'false': [8.326672684688674e-17, nan], 'false,true,true': [-2.7755575615628915e-18, 5.437827059388522e-17], 'false,true': [5.756711979537848e-17, -7.011934892369409e-17]}, {'': [0.1959389659435409, -8.401687753920104e-17], 'true,true': [-2.5620531337503614e-17, 0.17497164461247872], 'false': [-8.401687753920104e-17, nan], 'true': [0.1959389659435409, nan]}, {'': [0.20039683603183828, -1.1021192069271627e-16], 'false,true,true': [2.3129646346357427e-18, 2.581914010756178e-17], 'false': [-1.1021192069271627e-16, nan], 'true': [0.20039683603183828, nan], 'false,true': [2.0391851472706958e-17, -7.105427357601002e-17]}, {'': [0.19515474772441332, -5.74521005750081e-17], 'false': [-5.74521005750081e-17, nan], 'false,true,true': [-1.1564823173178713e-18, -5.551115123125783e-18], 'false,true': [7.240584943207542e-18, -7.401486830834377e-17]}, {'': [0.20161561720385762, 4.020560747613736e-17], 'false': [4.020560747613736e-17, nan], 'false,true': [-1.4893235696191125e-17, 2.41830757839143e-17]}, {'': [0.18292285836477953, 3.6625914214438153e-17], 'false': [3.6625914214438153e-17, nan], 'false,true': [3.6625914214438153e-17, nan]}, {'': [0.17509740296026166, 1.2335811384723961e-17], 'true,true': [0.03989520081708327, 0.2350298608939381], 'true,true,true': [-4.9343245538895844e-17, -6.609699867535816e-16], 'true': [0.17509740296026166, nan], 'true,true,false': [0.2350298608939381, nan], 'false': [1.2335811384723961e-17, nan]}, {'': [0.16431984399045213, 3.739698609263685e-17], 'true,true': [0.16431984399045213, nan], 'false': [3.739698609263685e-17, nan], 'true': [0.16431984399045213, nan]}, {'': [0.16682654386577164, -3.241527079197537e-17], 'false': [-3.241527079197537e-17, nan], 'false,true,false': [nan, 1.8918598625899528e-17], 'false,true': [9.25185853854297e-18, 1.8918598625899528e-17]}, {'': [0.08644406625347999, nan], 'true,true': [0.0008254537529078159, -2.64338815386942e-18], 'true,false': [0.021321431846683808, 0.09502611341545007], 'true': [0.0249726720574454, 0.0906075213044421], 'true,false,false': [0.24609374999999936, -3.600723323108616e-18], 'true,false,true': [3.855658256062559e-16, -1.50030138462859e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
0;false,true;genre(B, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
2;false,true;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
3;false,true;genre(B, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true,true;genre(A, F).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false;genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 6,66e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.1418510649004884;  // std dev = 0,000, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.12544463852839186;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360633;  // std dev = 3,16e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.1123163781936063;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360629;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360628;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.11231637819360679;  // std dev = 0,000, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783628;  // std dev = 1,49e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783626;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( female(A) )
%   | | then return -0.0926912761892609;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926089;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.09269127618926087;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839683;  // std dev = 2,95e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.08518475138839679;  // std dev = 2,08e-09, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839675;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.08518475138839675;  // std dev = 2,08e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.08518475138839676;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return 0.20975771563253554;  // std dev = 4,71e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.20975771563253565;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253545;  // std dev = 5,96e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.0787767547310918;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07877675473109148;  // std dev = 6,45e-09, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else return -0.07877675473109166;  // std dev = 2,46e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.07877675473109158;  // std dev = 4,75e-09, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420267;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06842697784420267;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.06842697784420271;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420261;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420261;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.06842697784420261;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.08799657802282386;  // std dev = 1,085, 168,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=129 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.07454736898099983;  // std dev = 0,760, 70,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=49 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.774 seconds
Total inference time: 3.39 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067245
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.205 seconds
Refined model CLL: -0.067245


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.517999999999999 seconds
Total inference time: 3.39 seconds
AUC ROC: 1.0
Total revision time: 11.517999999999999
Best scored revision CLL: -0.067245


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 04:07:05
{'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter': {'F1': 0.129114, 'AUC ROC': 0.993692, 'AUC PR': 0.961008, 'CLL': -0.263761, 'Learning time': 2.495, 'Recall': 1.0, 'Inference time': 3.415, 'Precision': [0.069012, 0.5]}, 'CLL': -0.064085, 'Learning time': 11.517999999999999, 'Recall': 1.0, 'Inference time': 3.39, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.14185106490048813;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.1254446385283918;  // std dev = 0,000, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4,71e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.11231637819360679;  // std dev = 0,000, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783624;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10159632948783655;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926065;  // std dev = 0,000, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.08518475138839678;  // std dev = 8,16e-08, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07877675473109146;  // std dev = 6,32e-08, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07324622576333686;  // std dev = 8,94e-08, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06842697784420285;  // std dev = 0,000, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06419184008202625;  // std dev = 0,000, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.497 seconds
Total inference time: 2.333 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 04:07:11
{'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.063555, 'Learning time': 3.497, 'Inference time': 2.333, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.14185106490048804;  // std dev = 0,000, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.155326
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.269 seconds
Total inference time: 1.902 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 04:07:15
{'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Precision': [nan, 0.5], 'CLL': -0.155326, 'Learning time': 1.269, 'Inference time': 1.902, 'Recall': 0.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
1;true;haswordauthor(D, C).;false;true
1;false,true,true;author(K, I), title(K, J).;false;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,false,true;author(G, F), venue(G, A).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true;haswordtitle(F, D).;true;false
2;true,true,true;haswordtitle(F, C).;false;false
2;false,true,false;haswordauthor(K, G).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true,true;samebib(I, J), venue(J, A).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
2;false,true;title(I, H), venue(I, B).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true;title(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,false;title(H, E), venue(H, A).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;author(G, F), title(G, E).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
5;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
5;false,true,true;haswordauthor(G, D).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true;author(F, E), venue(F, B).;true;true
6;true,true,true;samebib(F, G), venue(G, A).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordvenue(B, D).;false;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true;haswordtitle(F, C).;true;true
7;true,true,true;haswordvenue(B, D).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;haswordauthor(G, C).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true;haswordtitle(E, C).;true;false
8;true,true,true;author(F, D), title(F, E).;false;false
8;false,true,false;author(K, H), venue(K, A).;false;false
8;true;haswordauthor(D, C).;true;false
8;false,true,true;author(J, H), venue(J, A).;false;false
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;false,true;haswordtitle(I, G).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;false,true;title(I, H), venue(I, B).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5399671169176945;  // std dev = 3,784, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048768;  // std dev = 7,21e-09, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.2209682316326267;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4128345852687828;  // std dev = 4,059, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.12544463852839155;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.298123546922595;  // std dev = 0,485, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360632;  // std dev = 4,17e-09, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3075260324124547;  // std dev = 3,823, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783624;  // std dev = 4,75e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2654978141679381;  // std dev = 3,630, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18632070454024227;  // std dev = 3,721, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08542444753550256;  // std dev = 0,018, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.44762537951522674;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.5273021436287003;  // std dev = 0,287, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.0787593615035593;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.0800920465774364;  // std dev = 2,976, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07323113700230914;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1185353675186739;  // std dev = 0,334, 62,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0714052216365609;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06841377021550912;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3409519307897307;  // std dev = 0,113, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06400075108886873;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.29806638709924316;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06418018685301928;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.4704333026916393;  // std dev = 2,98e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06418018685301928;  // std dev = 2,17e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978805
   AUC PR    = 0.865091
   CLL	      = -0.163955
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 1.49 seconds
Total inference time: 3.532 seconds
AUC ROC: 0.978805


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.171707
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.674 seconds
Parameter learned model CLL: -0.171707


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.0, 7, 0], 'false,true,false': [7.21e-09, 50, 0], 'true': [3.784, 21, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, A)', 'true': 'movie(D, B)'}, {'true,true,false': [4.059, 26, 45], 'true,true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.0, 66, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, F)', 'false': 'movie(E, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, G)'}, {'false,true,true,true': [0.0, 0, 0], 'true,true': [0.485, 31, 45], 'false,true,true,false': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [4.17e-09, 49, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 5, 0], 'false,true,false': [4.75e-09, 52, 0], 'true': [3.823, 22, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 59, 0], 'true': [3.63, 19, 45], 'false,true,true': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.721, 20, 45], 'false,true,true': [0.018, 76, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'movie(D, B)', 'false': 'movie(G, B)'}, {'true,true,true,false': [0.0, 0, 45], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.287, 25, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [0.0, 49, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [2.976, 24, 45], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.0, 61, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 67, 0], 'true': [0.334, 17, 45], 'false,true,true': [0.013, 5, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)', 'true,false,true': 'movie(C, B)'}, {'true,false,false,true': [2.98e-08, 22, 0], 'true,true,true': [0.113, 6, 0], 'true,false,false,false': [2.17e-08, 55, 0], 'true,true,false': [1.86e-09, 6, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 7, 0], 'true,false,true,true': [0.0, 0, 45]}]]
[{'': [0.21694214876033094, 6.29126380620922e-17], 'false': [6.29126380620922e-17, nan], 'false,true,true': [0.0, -7.93016446160826e-18], 'false,true': [-1.1102230246251566e-17, 5.773159728050814e-17]}, {'': [0.23831263696128543, -3.027880976250427e-17], 'true,true': [0.0, 0.2320968061892479], 'false': [-3.027880976250427e-17, nan], 'true': [0.23831263696128543, nan]}, {'': [0.23502143857118002, 2.62416351275037e-17], 'false,true,true': [nan, 0.0], 'false': [2.62416351275037e-17, nan], 'true': [0.23502143857118002, nan], 'false,true': [0.0, 1.586032892321652e-17]}, {'': [0.2181561816323038, 2.7268635692547703e-17], 'false': [2.7268635692547703e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 2.1350442781253012e-17]}, {'': [0.20586423332508158, -1.6570492904853082e-18], 'false': [-1.6570492904853082e-18, nan], 'false,true': [0.0, -1.8817339400426382e-18]}, {'': [0.21301775147928975, 4.309068220310104e-06], 'false': [4.309068220310104e-06, nan], 'false,true': [4.309068220310104e-06, nan]}, {'': [0.2194019723720868, -6.797283824235652e-18], 'true,true': [0.0, 0.0033003027524160446], 'true,true,true': [nan, 0.0], 'true': [0.2194019723720868, nan], 'true,true,false': [0.0033003027524160446, nan], 'false': [-6.797283824235652e-18, nan]}, {'': [0.12838580184977152, -3.640075490574284e-18], 'true,true': [0.12838580184977152, nan], 'false': [-3.640075490574284e-18, nan], 'true': [0.12838580184977152, nan]}, {'': [0.11175020976656046, 3.064060059413614e-06], 'false': [3.064060059413614e-06, nan], 'false,true,false': [nan, -4.14262322621327e-18], 'false,true': [3.579512641805269e-05, -4.14262322621327e-18]}, {'': [0.06934429136395148, nan], 'true,true': [0.002124168917906714, 5.782411586589357e-19], 'true,false': [0.015286654144654936, 0.033681957985425996], 'true': [0.020237573443378135, 0.0706636373425281], 'true,false,false': [4.0371746350005693e-17, 8.57899609937621e-18], 'true,false,true': [-2.8619082412559593e-16, -9.912705577010326e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
0;false,true;genre(B, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false;genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A) )
%   | then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.12872592380281067;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.11393585485611532;  // std dev = 0,005, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.11198964535733906;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(A, D) )
%   | then return -0.1030105962723705;  // std dev = 0,004, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.10144860788345937;  // std dev = 4,56e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then return -0.09232451344715246;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.09256757634768319;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12142698910007911;  // std dev = 0,453, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 1,32e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.08507975845153762;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08717669004696538;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07618644745273835;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.07868659170775612;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.078342861441073;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then return -0.07135472770317032;  // std dev = 0,000826, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.1554977401567769;  // std dev = 0,463, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07324622576333704;  // std dev = 9,13e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.07316800405375512;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07286969369100581;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06854764934133528;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06685349680312637;  // std dev = 0,003, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.18097328539415874;  // std dev = 0,414, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.06809729088348083;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.06835850458247156;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return -0.05176028639641671;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06390087734753441;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F) )
%   | then if ( movie(D, B) )
%   | | then return 0.11783246244539707;  // std dev = 0,054, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return -0.06352139521838504;  // std dev = 0,004, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071393
   Precision = 0.870801 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930939


Total learning time: 3.724 seconds
Total inference time: 3.644 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065356
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.93 seconds
Refined model CLL: -0.065356


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071393
   Precision = 0.870801 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930939


Total learning time: 8.818 seconds
Total inference time: 3.644 seconds
AUC ROC: 1.0
Total revision time: 8.818
Best scored revision CLL: -0.065356


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 04:07:32
{'F1': 0.930939, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter': {'F1': 0.904065, 'AUC ROC': 0.978805, 'AUC PR': 0.865091, 'CLL': -0.163955, 'Learning time': 1.49, 'Recall': 0.824926, 'Inference time': 3.532, 'Precision': [1.0, 0.5]}, 'CLL': -0.071393, 'Learning time': 8.818, 'Recall': 1.0, 'Inference time': 3.644, 'Precision': [0.870801, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 8,16e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839147;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5408515929432428;  // std dev = 0,097, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   else return -0.11231637819360625;  // std dev = 6,32e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42104770526022717;  // std dev = 7,30e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17851455070811847;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783617;  // std dev = 5,27e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32310875557213287;  // std dev = 1,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15381874450080454;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25680710261018963;  // std dev = 5,96e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13484561892400784;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08512741374313593;  // std dev = 0,005, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07878091588056281;  // std dev = 4,71e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21091189342722136;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11987409107934319;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324983553045966;  // std dev = 3,07e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17794257056890841;  // std dev = 2,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10779187779675078;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15338538666419135;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09785495377442481;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06825707897227626;  // std dev = 0,012, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13450766241584441;  // std dev = 3,94e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08954982935635424;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06411172979552397;  // std dev = 0,008, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066571
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.347 seconds
Total inference time: 2.703 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 04:07:37
{'F1': 1.0, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.066571, 'Learning time': 2.347, 'Inference time': 2.703, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.8025933795439559;  // std dev = 0,229, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */


Results
   AUC ROC   = 0.953933
   AUC PR    = 0.242522
   CLL	      = -0.183928
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.996 seconds
Total inference time: 1.613 seconds
AUC ROC: 0.953933


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 04:07:40
{'F1': nan, 'AUC ROC': 0.953933, 'AUC PR': 0.242522, 'Precision': [nan, 0.5], 'CLL': -0.183928, 'Learning time': 0.996, 'Inference time': 1.613, 'Recall': 0.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
1;true;haswordauthor(D, C).;false;true
1;false,true,true;author(K, I), title(K, J).;false;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,false,true;author(G, F), venue(G, A).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true;haswordtitle(F, D).;true;false
2;true,true,true;haswordtitle(F, C).;false;false
2;false,true,false;haswordauthor(K, G).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true,true;samebib(I, J), venue(J, A).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
2;false,true;title(I, H), venue(I, B).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true;title(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,false;title(H, E), venue(H, A).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;author(G, F), title(G, E).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
5;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
5;false,true,true;haswordauthor(G, D).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true;author(F, E), venue(F, B).;true;true
6;true,true,true;samebib(F, G), venue(G, A).;false;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;true,true,false;haswordvenue(B, D).;false;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true;haswordtitle(F, C).;true;true
7;true,true,true;haswordvenue(B, D).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;true,true,false;haswordauthor(G, C).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true;haswordtitle(E, C).;true;false
8;true,true,true;author(F, D), title(F, E).;false;false
8;false,true,false;author(K, H), venue(K, A).;false;false
8;true;haswordauthor(D, C).;true;false
8;false,true,true;author(J, H), venue(J, A).;false;false
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;false,true;haswordtitle(I, G).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;false
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;true,false;title(F, D), venue(F, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;false,true;title(I, H), venue(I, B).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4581489350995129;  // std dev = 4,243, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.2072058164229513;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.5304991016098362;  // std dev = 3,436, 61,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.1265761162092258;  // std dev = 0,004, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.31739752463395715;  // std dev = 0,484, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11267747232273236;  // std dev = 0,003, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24166964440250277;  // std dev = 4,114, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1271300368171203;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1151427582629673;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10166678134271318;  // std dev = 0,001, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16273878650060722;  // std dev = 4,243, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10392111517574078;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09303935282328933;  // std dev = 0,017, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16770586629761208;  // std dev = 3,985, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08556188512721082;  // std dev = 0,019, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4804699767017858;  // std dev = 1,12e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.2669110863093803;  // std dev = 2,729, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.07937893854818173;  // std dev = 0,022, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.10315087961451111;  // std dev = 3,429, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07374742761116342;  // std dev = 0,020, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0737205136036364;  // std dev = 0,416, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07606835741904443;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06862124983971188;  // std dev = 0,013, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.32091178788985275;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07089156022658621;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3239886835241545;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.07106506608515357;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.16369674295867723;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return -0.06397676743101155;  // std dev = 1,83e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983069
   AUC PR    = 0.891379
   CLL	      = -0.202354
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.9216


Total learning time: 1.504 seconds
Total inference time: 3.879 seconds
AUC ROC: 0.983069


Results scoring model
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.209926
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total scoring time: 1.632 seconds
Parameter learned model CLL: -0.209926


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [8.12e-09, 66, 0], 'true': [4.243, 30, 45], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, A)', 'true': 'movie(D, B)'}, {'true,true,false': [3.436, 16, 45], 'true,true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.004, 58, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'true': 'movie(D, B)', 'false,true': 'genre(B, F)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.484, 27, 45], 'false,false': [0.0, 0, 0], 'false,true,false': [0.003, 63, 0], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 5, 0], 'false,true,false': [0.001, 52, 0], 'true': [4.114, 28, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.017, 62, 0], 'true': [4.243, 30, 45], 'false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.985, 25, 45], 'false,true,true': [0.019, 73, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true,false': 'movie(D, B)', 'false': 'movie(G, B)'}, {'true,true,true,false': [1.12e-07, 0, 35], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false,true': [2.729, 31, 10], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [0.022, 80, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'false': 'movie(E, B)', 'true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [3.429, 25, 45], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.02, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.013, 55, 0], 'true': [0.416, 25, 45], 'false,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)', 'true,false,true': 'movie(C, B)'}, {'true,false,false,true': [2.582, 20, 10], 'true,true,true': [0.0, 4, 0], 'true,false,false,false': [1.83e-08, 64, 0], 'true,true,false': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,true,true': [0.0, 0, 35]}]]
[{'': [0.2400000000000003, 6.728624391667616e-17], 'false': [6.728624391667616e-17, nan], 'false,true': [nan, 6.728624391667616e-17]}, {'': [0.20408163265306067, 1.728326352002393e-05], 'true,true': [0.0, 0.19349637194302552], 'false': [1.728326352002393e-05, nan], 'true': [0.20408163265306067, nan]}, {'': [0.2343750000000001, 6.848413785673489e-06], 'false': [6.848413785673489e-06, nan], 'true': [0.2343750000000001, nan], 'false,true': [nan, 6.848413785673489e-06]}, {'': [0.2318961044864071, 2.6223637060377178e-05], 'false': [2.6223637060377178e-05, nan], 'false,true,true': [0.0, -2.7755575615628915e-18], 'false,true': [1.9957617657615872e-05, 2.176959244245034e-06]}, {'': [0.2399999999999995, 6.298659470803182e-06], 'false': [6.298659470803182e-06, nan], 'false,true': [0.0, 4.52068326218766e-06]}, {'': [0.22683031505690984, 4.771654599472105e-06], 'false': [4.771654599472105e-06, nan], 'false,true': [4.771654599472105e-06, nan]}, {'': [0.23676621968939104, 6.15551406349113e-06], 'true,true': [3.552713678800501e-16, 0.18164364710268668], 'true,true,true': [nan, 3.552713678800501e-16], 'true': [0.23676621968939104, nan], 'true,true,false': [0.18164364710268668, nan], 'false': [6.15551406349113e-06, nan]}, {'': [0.16802042986764157, 5.346430492878436e-06], 'true,true': [0.16802042986764157, nan], 'false': [5.346430492878436e-06, nan], 'true': [0.16802042986764157, nan]}, {'': [0.17312661337187185, 6.223276045946105e-06], 'false': [6.223276045946105e-06, nan], 'false,true,false': [nan, 2.915917852188497e-06], 'false,true': [0.0, 2.915917852188497e-06]}, {'': [0.08697280610823208, nan], 'true,true': [0.0, 0.0], 'true,false': [0.004214784936584115, 0.07308276231593523], 'true': [0.013891136497953685, 0.08747749826324215], 'true,false,false': [0.22222222222222232, 5.204170427930421e-18], 'true,false,true': [-6.344131569286608e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
3;false,true;genre(B, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false;genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11328884192210899;  // std dev = 0,018, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10217573876783317;  // std dev = 0,012, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783617;  // std dev = 5,05e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(B) )
%   | | then return -0.09379292820416961;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09256084675405434;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.08505008302929652;  // std dev = 8,30e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0871004285046223;  // std dev = 0,004, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 2,24e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.20975771563253542;  // std dev = 9,13e-09, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0786313485606216;  // std dev = 0,000152, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08039379869386257;  // std dev = 0,012, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( director(A) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07312981472453205;  // std dev = 0,000161, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07287179666517704;  // std dev = 0,000161, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08182679648610787;  // std dev = 7,56e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07324622576333704;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0684778848083747;  // std dev = 0,001, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( female(A) )
%   | | then return 0.1527438580936709;  // std dev = 3,23e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.1527438580936709;  // std dev = 4,17e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.0688687670941906;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.12329357757071181;  // std dev = 0,045, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B) )
%   | | | then return 0.10097388499300493;  // std dev = 0,256, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.06412749269106048;  // std dev = 0,001, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999707
   AUC PR    = 0.989873
   CLL	      = -0.080378
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.642 seconds
Total inference time: 3.778 seconds
AUC ROC: 0.999707


Results scoring model
   AUC ROC   = 0.999946
   AUC PR    = 0.997367
   CLL	      = -0.066495
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.63 seconds
Refined model CLL: -0.066495


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999707
   AUC PR    = 0.989873
   CLL	      = -0.080378
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 7.408 seconds
Total inference time: 3.778 seconds
AUC ROC: 0.999707
Total revision time: 7.408
Best scored revision CLL: -0.066495


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 04:07:56
{'F1': 0.852086, 'AUC ROC': 0.999707, 'AUC PR': 0.989873, 'parameter': {'F1': 0.9216, 'AUC ROC': 0.983069, 'AUC PR': 0.891379, 'CLL': -0.202354, 'Learning time': 1.504, 'Recall': 0.854599, 'Inference time': 3.879, 'Precision': [1.0, 0.5]}, 'CLL': -0.080378, 'Learning time': 7.408, 'Recall': 1.0, 'Inference time': 3.778, 'Precision': [0.742291, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839147;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( female(A) )
%   | then return 0.5019518115510934;  // std dev = 0,181, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 4,83e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42418082192032025;  // std dev = 0,044, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17871008146836076;  // std dev = 0,010, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32525087124465757;  // std dev = 0,039, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14879873631199342;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0932970502463414;  // std dev = 0,063, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08513755630100654;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25827621317564037;  // std dev = 0,034, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13430039218315715;  // std dev = 0,010, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07873622764569708;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21195344357465146;  // std dev = 0,030, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11918463618667094;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07321106754497558;  // std dev = 4,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17870876806704755;  // std dev = 0,026, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10808235620285885;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06839620233385005;  // std dev = 2,98e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1539681251054117;  // std dev = 0,023, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09614171699335937;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06416468613108015;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13496365242364278;  // std dev = 0,021, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08962415417450117;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076637
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.322 seconds
Total inference time: 2.693 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 04:08:01
{'F1': 0.852086, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Precision': [0.742291, 0.5], 'CLL': -0.076637, 'Learning time': 2.322, 'Inference time': 2.693, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 8,02e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.16469
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.879 seconds
Total inference time: 1.776 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 04:08:04
{'F1': nan, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Precision': [nan, 0.5], 'CLL': -0.16469, 'Learning time': 0.879, 'Inference time': 1.776, 'Recall': 0.0}


