Starting experiment #1 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.14185106490048904;  // std dev = 0,000, 682,000 (wgt'ed) examples reached here.  /* #neg=682 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839144;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.12544463852839235;  // std dev = 0,000, 719,000 (wgt'ed) examples reached here.  /* #neg=719 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.1123163781936067;  // std dev = 0,000, 718,000 (wgt'ed) examples reached here.  /* #neg=718 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1015963294878362;  // std dev = 4,47e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.10159632948783516;  // std dev = 4,36e-07, 697,000 (wgt'ed) examples reached here.  /* #neg=697 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.09269127618926204;  // std dev = 0,000, 708,000 (wgt'ed) examples reached here.  /* #neg=708 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.08518475138839675;  // std dev = 1,33e-07, 698,000 (wgt'ed) examples reached here.  /* #neg=698 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0787767547310917;  // std dev = 3,07e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.07877675473109282;  // std dev = 0,000, 711,000 (wgt'ed) examples reached here.  /* #neg=711 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.0732462257633364;  // std dev = 2,68e-07, 725,000 (wgt'ed) examples reached here.  /* #neg=725 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420267;  // std dev = 2,98e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.06842697784420258;  // std dev = 1,83e-07, 712,000 (wgt'ed) examples reached here.  /* #neg=712 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.0641918400820253;  // std dev = 2,53e-07, 714,000 (wgt'ed) examples reached here.  /* #neg=714 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 31946

Target test facts examples: 35095
Target test pos	 examples: 2649
Target test neg examples: 218007

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.1189351287716072;  // std dev = 14,180, 1.043,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=272 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.11235241682710347;  // std dev = 14,098, 1.010,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=272 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.08838617466157547;  // std dev = 14,180, 1.043,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=272 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.08181242802024065;  // std dev = 14,118, 1.018,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=272 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.07178922319955565;  // std dev = 14,093, 1.008,000 (wgt'ed) examples reached here.  /* #neg=736 #pos=272 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.0710000882087483;  // std dev = 13,987, 969,000 (wgt'ed) examples reached here.  /* #neg=697 #pos=272 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.05165606743157515;  // std dev = 14,059, 995,000 (wgt'ed) examples reached here.  /* #neg=723 #pos=272 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.04595171882343016;  // std dev = 14,026, 983,000 (wgt'ed) examples reached here.  /* #neg=711 #pos=272 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.02818092058919769;  // std dev = 14,118, 1.018,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=272 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.03309515097588689;  // std dev = 14,021, 981,000 (wgt'ed) examples reached here.  /* #neg=709 #pos=272 */


Results
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.299018
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 2.972 seconds
Total inference time: 14.14 seconds
AUC ROC: 0.575311


Results scoring model
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.296879
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 3.555 seconds
Parameter learned model CLL: -0.296879


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 96], 'false': [14.18, 771, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.88e-07, 0, 96], 'false': [14.098, 738, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.09e-07, 0, 96], 'false': [14.18, 771, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.23e-07, 0, 96], 'false': [14.118, 746, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 96], 'false': [14.093, 736, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 96], 'false': [13.987, 697, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.26e-07, 0, 96], 'false': [14.059, 723, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 96], 'false': [14.026, 711, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 96], 'false': [14.118, 746, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 96], 'false': [14.021, 709, 272]}]]
[{'': [1.1842378929335002e-15, 0.1927767548621193]}, {'': [3.7007434154171886e-16, 0.1967807077737438]}, {'': [1.7393494052460785e-15, 0.1927767548621086]}, {'': [5.181040781584064e-16, 0.19579976918414693]}, {'': [1.850371707708594e-17, 0.19702695893171465]}, {'': [-4.625929269271486e-17, 0.20190827947060228]}, {'': [1.6653345369377348e-16, 0.19863740814625658]}, {'': [6.013708050052931e-17, 0.20013888184591]}, {'': [-6.013708050052931e-17, 0.19579976918416309]}, {'': [1.3877787807814457e-17, 0.2003904979524328]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1790731969737053;  // std dev = 0,467, 779,000 (wgt'ed) examples reached here.  /* #neg=529 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.06036958341900618;  // std dev = 3,179, 135,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.027379704330281595;  // std dev = 3,023, 65,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.154616002245161;  // std dev = 0,466, 782,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.03410566104491492;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.033150737711019576;  // std dev = 3,143, 109,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=11 */
%   | | | else return -0.010565296580850307;  // std dev = 2,940, 75,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1253871120920254;  // std dev = 0,464, 799,000 (wgt'ed) examples reached here.  /* #neg=549 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.12819920912166335;  // std dev = 0,017, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.03516342940706005;  // std dev = 3,153, 116,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.020612276087419282;  // std dev = 3,032, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.12429011751240772;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09493926137013466;  // std dev = 0,459, 827,000 (wgt'ed) examples reached here.  /* #neg=577 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.11502243047340024;  // std dev = 0,014, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.03965278920461077;  // std dev = 3,168, 127,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.02046364043020284;  // std dev = 3,028, 66,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | | | else return -0.11138152821577661;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08832467062601015;  // std dev = 0,463, 802,000 (wgt'ed) examples reached here.  /* #neg=552 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.10378847435346954;  // std dev = 0,016, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 2.2101116525403327E-4;  // std dev = 3,105, 90,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.02588701447626383;  // std dev = 3,013, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | | | else return -0.10082530174116738;  // std dev = 1,05e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.053647267244114595;  // std dev = 0,455, 854,000 (wgt'ed) examples reached here.  /* #neg=604 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.0955167451055303;  // std dev = 0,009, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.023846010087523073;  // std dev = 3,148, 112,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.012090783581423094;  // std dev = 3,032, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.090635884160911;  // std dev = 0,012, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08748492510583167;  // std dev = 0,473, 743,000 (wgt'ed) examples reached here.  /* #neg=493 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.02713969561656008;  // std dev = 3,154, 124,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=11 */
%   | | | else return -0.10913414763669106;  // std dev = 0,046, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.010434257762493274;  // std dev = 3,033, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.08332955196605814;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05317321046194544;  // std dev = 0,466, 784,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.010647718560452098;  // std dev = 3,129, 108,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=11 */
%   | | | else return -0.10098271914031852;  // std dev = 0,053, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.009071779236608181;  // std dev = 3,033, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.07784198996871794;  // std dev = 0,008, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06532295440372173;  // std dev = 0,474, 732,000 (wgt'ed) examples reached here.  /* #neg=482 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.027495882118675232;  // std dev = 3,161, 130,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=11 */
%   | | | else return -0.09271530431343321;  // std dev = 0,056, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.06275529959258772;  // std dev = 0,953, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.017024635926458007;  // std dev = 2,866, 61,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.020334129921319236;  // std dev = 0,462, 807,000 (wgt'ed) examples reached here.  /* #neg=557 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.08013491793010026;  // std dev = 0,040, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.02397080599444881;  // std dev = 3,163, 125,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0022199685976621386;  // std dev = 3,040, 69,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | | else return -0.07113492503786642;  // std dev = 0,015, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.608829
   AUC PR    = 0.170405
   CLL	      = -0.323059
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 24.672 seconds
Total inference time: 136.792 seconds
AUC ROC: 0.608829


Results scoring model
   AUC ROC   = 0.69614
   AUC PR    = 0.283696
   CLL	      = -0.299601
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 11.225 seconds
Refined model CLL: -0.299601


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.299018
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 42.424 seconds
Total inference time: 14.14 seconds
AUC ROC: 0.575311
Total revision time: 42.424
Best scored revision CLL: -0.296879


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:20
{'Learning time': 42.424, 'F1': 0.261811, 'Precision': [1.0, 0.5], 'Recall': 0.150623, 'Inference time': 14.14, 'parameter': {'Learning time': 2.972, 'F1': 0.261811, 'Precision': [1.0, 0.5], 'Recall': 0.150623, 'Inference time': 14.14, 'CLL': -0.299018, 'AUC ROC': 0.575311, 'AUC PR': 0.168925}, 'CLL': -0.299018, 'AUC ROC': 0.575311, 'AUC PR': 0.168925}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.8371699141204876;  // std dev = 2,424, 286,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=280 */
%   | | | else return -0.08460598439959348;  // std dev = 5,493, 559,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=32 */
%   | | else if ( title(G, D), venue(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.7748156017661786;  // std dev = 0,276, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then return -0.05168713047425816;  // std dev = 0,286, 122,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=11 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.03002393509951237;  // std dev = 3,018, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6992978336116356;  // std dev = 2,613, 287,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=280 */
%   | | | else return -0.06761690496284975;  // std dev = 5,471, 500,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.13186071590308848;  // std dev = 1,97e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.591876605527581;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.6925029655650506;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then return -0.06234159689947537;  // std dev = 0,261, 150,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=11 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.050883265903135806;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.5479605388984515;  // std dev = 2,216, 285,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=280 */
%   | | | else return -0.06691233202877973;  // std dev = 5,491, 560,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=32 */
%   | | else if ( title(G, D), venue(G, B) )
%   | | | then return -0.1182124244343781;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.46227544306085255;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.5389334064522184;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then return -0.04391353711978466;  // std dev = 0,278, 130,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=11 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.12301194621820868;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.4083894376368168;  // std dev = 2,424, 286,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=280 */
%   | | | else return -0.054716903212126036;  // std dev = 5,476, 515,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.11072281821926623;  // std dev = 1,97e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.4142333687464459;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.4486190225813081;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then return -0.04511848577096778;  // std dev = 0,269, 140,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=11 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.020179536030711053;  // std dev = 2,985, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return -0.11832976779663323;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.302264681350292;  // std dev = 2,953, 289,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=280 */
%   | | | else return -0.046231839614494556;  // std dev = 5,468, 490,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=32 */
%   | | else return 0.017254904790444604;  // std dev = 0,209, 50,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | else return 0.341892710446827;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | then return -0.11888193724411703;  // std dev = 1,83e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.02566159826106618;  // std dev = 0,291, 118,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=11 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.08829341751020095;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 8.496301110021966E-4;  // std dev = 2,871, 60,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=10 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.23542661837893608;  // std dev = 3,107, 290,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=280 */
%   | | | else return -0.0461467156622618;  // std dev = 5,481, 527,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=32 */
%   | | else return 0.1545652715913377;  // std dev = 0,241, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | else return 0.2260999299641748;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return -0.03357533426982711;  // std dev = 0,273, 135,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=11 */
%   | | else return -0.11344876138117392;  // std dev = 0,013, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.020078028344061152;  // std dev = 2,983, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | | else return -0.10353190151574555;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08522290066618854;  // std dev = 0,000324, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04060303898689908;  // std dev = 0,240, 870,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return -0.0225671036487054;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.09106925998765837;  // std dev = 0,343, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.7333381918756134;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.11178945882051208;  // std dev = 0,031, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else return -0.10307730011511192;  // std dev = 0,015, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.002232414257245539;  // std dev = 3,008, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | | else return -0.13125393597023088;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0788095127390209;  // std dev = 0,000301, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.17469834399525472;  // std dev = 3,525, 293,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=280 */
%   | | | else return -0.04476001728465582;  // std dev = 5,480, 515,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=32 */
%   | | else return -0.008392769986828684;  // std dev = 0,239, 45,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then return -0.038170527641884555;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.16574807170783018;  // std dev = 0,214, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.09725039511666436;  // std dev = 0,100, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.014866754887843817;  // std dev = 0,266, 112,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.01916510890874956;  // std dev = 0,391, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else return -0.07324141263619365;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.1561644273941442;  // std dev = 3,107, 290,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=280 */
%   | | | else return -0.04266701109248903;  // std dev = 5,485, 536,000 (wgt'ed) examples reached here.  /* #neg=504 #pos=32 */
%   | | else return 0.09027986215119785;  // std dev = 0,225, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else return 0.14936807281274253;  // std dev = 0,202, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | then return -0.09051429597236058;  // std dev = 0,092, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.02540243032841998;  // std dev = 0,248, 131,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=11 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return -0.004571351278211973;  // std dev = 3,016, 65,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return -0.11910669373186784;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06849297904139728;  // std dev = 0,000243, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.0163432897274804;  // std dev = 0,235, 886,000 (wgt'ed) examples reached here.  /* #neg=562 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return -0.21986198051299563;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.11844535626224166;  // std dev = 0,219, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.5582089786135008;  // std dev = 1,709, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return -0.17017955231146722;  // std dev = 0,149, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.0810477712792425;  // std dev = 0,044, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.004076237003525719;  // std dev = 2,815, 91,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=11 */
%   | | | else return -0.09232951103120947;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06421037153407194;  // std dev = 0,000251, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.97344
   AUC PR    = 0.40253
   CLL	      = -0.144661
   Precision = 0.308609 at threshold = 0.5
   Recall    = 0.9094
   F1        = 0.460832


Total learning time: 222.356 seconds
Total inference time: 4262.441 seconds
AUC ROC: 0.97344


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 01:18:05
{'Learning time': 222.356, 'CLL': -0.144661, 'Recall': 0.9094, 'Inference time': 4262.441, 'F1': 0.460832, 'Precision': [0.308609, 0.5], 'AUC ROC': 0.97344, 'AUC PR': 0.40253}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.8303711573217307;  // std dev = 2,789, 288,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=280 */
%   | | | else return -0.08192597126752924;  // std dev = 5,485, 534,000 (wgt'ed) examples reached here.  /* #neg=502 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then if ( haswordtitle(M, N), haswordvenue(B, N) )
%   | | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( title(P, M), venue(P, B) )
%   | | | then return -0.053141387481132826;  // std dev = 3,166, 124,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, Q), haswordtitle(R, Q) )
%   | | then return 0.027379704330281595;  // std dev = 0,375, 65,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.946444
   AUC PR    = 0.390675
   CLL	      = -0.160389
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 27.142 seconds
Total inference time: 581.478 seconds
AUC ROC: 0.946444


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 01:28:14
{'Learning time': 27.142, 'CLL': -0.160389, 'Recall': 0.0, 'Inference time': 581.478, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.946444, 'AUC PR': 0.390675}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 64082

Target test facts examples: 33542
Target test pos	 examples: 2246
Target test neg examples: 185871

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.1562301488433716;  // std dev = 21,654, 2.241,000 (wgt'ed) examples reached here.  /* #neg=1.573 #pos=668 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.1334917427777973;  // std dev = 21,694, 2.261,000 (wgt'ed) examples reached here.  /* #neg=1.593 #pos=668 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.12510333500792858;  // std dev = 21,531, 2.183,000 (wgt'ed) examples reached here.  /* #neg=1.515 #pos=668 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.09856856965583849;  // std dev = 21,643, 2.236,000 (wgt'ed) examples reached here.  /* #neg=1.568 #pos=668 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.08845581480195977;  // std dev = 21,548, 2.191,000 (wgt'ed) examples reached here.  /* #neg=1.523 #pos=668 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.06298817061582529;  // std dev = 21,704, 2.266,000 (wgt'ed) examples reached here.  /* #neg=1.598 #pos=668 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.05093385865575104;  // std dev = 21,714, 2.271,000 (wgt'ed) examples reached here.  /* #neg=1.603 #pos=668 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.05683920263656203;  // std dev = 21,476, 2.158,000 (wgt'ed) examples reached here.  /* #neg=1.490 #pos=668 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.044243517848346084;  // std dev = 21,503, 2.170,000 (wgt'ed) examples reached here.  /* #neg=1.502 #pos=668 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.03485837059063435;  // std dev = 21,514, 2.175,000 (wgt'ed) examples reached here.  /* #neg=1.507 #pos=668 */


Results
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.336362
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total learning time: 4.788 seconds
Total inference time: 11.537 seconds
AUC ROC: 0.587266


Results scoring model
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.336883
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total scoring time: 5.001 seconds
Parameter learned model CLL: -0.336883


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 103], 'false': [21.654, 1573, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.694, 1593, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.3e-07, 0, 103], 'false': [21.531, 1515, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.6e-07, 0, 103], 'false': [21.643, 1568, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.548, 1523, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.704, 1598, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.46e-07, 0, 103], 'false': [21.714, 1603, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 103], 'false': [21.476, 1490, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.503, 1502, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.83e-08, 0, 103], 'false': [21.514, 1507, 668]}]]
[{'': [1.9315724855614373e-15, 0.20922880375684827]}, {'': [-3.4492365813597096e-16, 0.2081570447960988]}, {'': [1.793603022307049e-15, 0.2123643554732683]}, {'': [6.553549504583448e-16, 0.20949753745026678]}, {'': [-2.4144656069517967e-16, 0.21192959622170848]}, {'': [-5.1738548720395646e-17, 0.20788991726190748]}, {'': [2.0695419488158259e-16, 0.2076231216217674]}, {'': [2.5869274360197823e-17, 0.21372722657937093]}, {'': [-1.2503482607428947e-16, 0.21307226740853394]}, {'': [4.527123013034619e-17, 0.21279978861145368]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7081489350995123;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.10613677918620204;  // std dev = 0,982, 28,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | else return 0.17835618898551767;  // std dev = 0,467, 1.930,000 (wgt'ed) examples reached here.  /* #neg=1.312 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.06648226843284555;  // std dev = 3,979, 96,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=20 */
%   | | | else return -0.036587907005750875;  // std dev = 2,317, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | | else return -0.07591699896642175;  // std dev = 0,248, 91,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15003752015010532;  // std dev = 0,463, 2.018,000 (wgt'ed) examples reached here.  /* #neg=1.382 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.08515594148206505;  // std dev = 3,911, 85,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | | else return -0.0010916984103805745;  // std dev = 2,276, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else return -0.06056940315020185;  // std dev = 0,259, 83,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.46866368214170195;  // std dev = 2,415, 26,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return -0.14550929625978484;  // std dev = 0,986, 22,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06495141334257248;  // std dev = 3,265, 71,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | | else return 0.13313083587280078;  // std dev = 20,202, 1.876,000 (wgt'ed) examples reached here.  /* #neg=1.276 #pos=600 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.08866951873554121;  // std dev = 3,873, 80,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | | else return -0.012325952740423932;  // std dev = 2,291, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.042701036698688445;  // std dev = 2,345, 72,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=6 */
%   | | | else return -0.12603437003202186;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10573068739272216;  // std dev = 0,462, 2.029,000 (wgt'ed) examples reached here.  /* #neg=1.393 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.08946708622540436;  // std dev = 3,839, 76,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return -0.010872244419178603;  // std dev = 2,291, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | else return -0.05528213994155375;  // std dev = 0,248, 91,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5199000243209034;  // std dev = 1,799, 21,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return -0.1407336417689082;  // std dev = 0,980, 25,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else return 0.0920716295799131;  // std dev = 0,464, 1.948,000 (wgt'ed) examples reached here.  /* #neg=1.330 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.06625616761053482;  // std dev = 3,865, 79,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | | else return -0.027457912578123307;  // std dev = 2,315, 56,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | | else return -0.05369032633539084;  // std dev = 0,241, 97,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07316705085635217;  // std dev = 0,462, 2.011,000 (wgt'ed) examples reached here.  /* #neg=1.375 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.03269801385428243;  // std dev = 3,925, 87,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | | else return -0.022343437524933202;  // std dev = 2,312, 55,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
%   | | else return -0.05184687202319363;  // std dev = 0,234, 103,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05976135550115649;  // std dev = 0,462, 2.010,000 (wgt'ed) examples reached here.  /* #neg=1.374 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.025679649101380993;  // std dev = 3,669, 90,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | | | else return -0.02651034343020033;  // std dev = 2,721, 52,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.042110856466152424;  // std dev = 2,371, 95,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=6 */
%   | | | else return -0.09767403177505687;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05226459354138617;  // std dev = 0,463, 1.986,000 (wgt'ed) examples reached here.  /* #neg=1.350 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.0514774021178127;  // std dev = 3,859, 79,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | | else return -0.01405373903905888;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else return -0.02993929319654837;  // std dev = 0,258, 84,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04960148741686696;  // std dev = 0,466, 1.938,000 (wgt'ed) examples reached here.  /* #neg=1.302 #pos=636 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.12947364383577983;  // std dev = 0,129, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.009112837603283134;  // std dev = 4,549, 136,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=26 */
%   | | | else return -0.02445467772812466;  // std dev = 2,357, 81,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.026379969952889267;  // std dev = 0,462, 2.015,000 (wgt'ed) examples reached here.  /* #neg=1.379 #pos=636 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.02591588306335009;  // std dev = 3,901, 84,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return -0.027352003516281486;  // std dev = 2,363, 87,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.03289060883232322;  // std dev = 2,326, 61,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=6 */
%   | | | else return -0.08506727584079908;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.633858
   AUC PR    = 0.198653
   CLL	      = -0.32213
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total learning time: 41.662 seconds
Total inference time: 109.024 seconds
AUC ROC: 0.633858


Results scoring model
   AUC ROC   = 0.632185
   AUC PR    = 0.16427
   CLL	      = -0.330112
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total scoring time: 13.696 seconds
Refined model CLL: -0.330112


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.633858
   AUC PR    = 0.198653
   CLL	      = -0.32213
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total learning time: 65.147 seconds
Total inference time: 109.024 seconds
AUC ROC: 0.633858
Total revision time: 65.147
Best scored revision CLL: -0.330112


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:31:21
{'Learning time': 65.147, 'F1': 0.297195, 'Precision': [1.0, 0.5], 'Recall': 0.174533, 'Inference time': 109.024, 'parameter': {'Learning time': 4.788, 'F1': 0.297195, 'Precision': [1.0, 0.5], 'Recall': 0.174533, 'Inference time': 11.537, 'CLL': -0.336362, 'AUC ROC': 0.587266, 'AUC PR': 0.193231}, 'CLL': -0.32213, 'AUC ROC': 0.633858, 'AUC PR': 0.198653}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12399392204334482;  // std dev = 0,991, 56,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
%   | else return 0.20517648464034827;  // std dev = 0,476, 2.069,000 (wgt'ed) examples reached here.  /* #neg=1.351 #pos=718 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | then return 0.1113134920615375;  // std dev = 0,435, 79,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | else return -0.03840278903841875;  // std dev = 0,305, 58,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=6 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.07802127766644512;  // std dev = 0,244, 94,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5658519484401642;  // std dev = 1,081, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.12741685370936387;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.03651067349745035;  // std dev = 1,548, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | else return 0.19047324584169265;  // std dev = 0,480, 1.999,000 (wgt'ed) examples reached here.  /* #neg=1.281 #pos=718 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.07660948431668364;  // std dev = 0,422, 86,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
%   | | else return -0.009580726959286162;  // std dev = 0,334, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | else return -0.06443450085278171;  // std dev = 0,252, 88,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16171251763254732;  // std dev = 0,477, 2.057,000 (wgt'ed) examples reached here.  /* #neg=1.318 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.06358461164671049;  // std dev = 0,421, 87,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else return -0.01846277039068014;  // std dev = 0,322, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then return -0.0641538216657646;  // std dev = 0,240, 98,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=6 */
%   | | else return -0.11854455592074037;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13304022501310026;  // std dev = 0,476, 2.065,000 (wgt'ed) examples reached here.  /* #neg=1.326 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7828990975453417;  // std dev = 0,948, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.15435311387186257;  // std dev = 0,179, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return 0.09608373842589994;  // std dev = 0,443, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else return -0.05096234258223697;  // std dev = 0,251, 89,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5011072746698031;  // std dev = 0,081, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.2532702244604869;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.14720939181212803;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08932299114438122;  // std dev = 1,550, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | else return 0.10802828953119166;  // std dev = 0,479, 2.017,000 (wgt'ed) examples reached here.  /* #neg=1.299 #pos=718 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.06175074275493653;  // std dev = 0,400, 79,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | else return -0.009602161230440612;  // std dev = 0,290, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.04877338259894874;  // std dev = 0,246, 93,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=6 */
%   | | else return -0.10194549412829072;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08754232843397905;  // std dev = 0,474, 2.073,000 (wgt'ed) examples reached here.  /* #neg=1.334 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.03720904382143656;  // std dev = 0,392, 84,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | else return -0.006821923131620562;  // std dev = 0,289, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then return -0.02514828385746662;  // std dev = 0,276, 72,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=6 */
%   | | else return -0.09298355274039587;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06856214290880791;  // std dev = 0,474, 2.082,000 (wgt'ed) examples reached here.  /* #neg=1.343 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7002182734904009;  // std dev = 0,199, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.14292653656997695;  // std dev = 0,214, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.015230428399666181;  // std dev = 0,389, 48,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | else return -0.029601369452002424;  // std dev = 0,265, 79,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.28478231797368087;  // std dev = 0,174, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return -0.148329577172956;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0812960003331608;  // std dev = 1,530, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | else return 0.060600328913531204;  // std dev = 0,480, 1.989,000 (wgt'ed) examples reached here.  /* #neg=1.271 #pos=718 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.5391502362621052;  // std dev = 0,241, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.12040062881294476;  // std dev = 0,198, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.02396163611987857;  // std dev = 0,380, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.031009824750135813;  // std dev = 0,259, 83,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=6 */
%   | | else return -0.08314807854926506;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordtitle(D, E), haswordvenue(B, E) )
%   | then if ( title(F, D), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6395293700901886;  // std dev = 5,336, 728,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=701 */
%   | | | else return -0.3088048760403615;  // std dev = 0,941, 1.288,000 (wgt'ed) examples reached here.  /* #neg=1.288 */
%   | | else return 0.06410865074783338;  // std dev = 0,370, 99,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
%   | else return 0.056584262780189486;  // std dev = 0,338, 97,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=18 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.5438704204931849;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.6867275633503277;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.010939013163302251;  // std dev = 0,194, 42,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordtitle(D, E), haswordvenue(B, E) )
%   | then if ( title(F, D), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4941327745256278;  // std dev = 5,025, 725,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=701 */
%   | | | else return -0.24644503403657284;  // std dev = 0,888, 1.366,000 (wgt'ed) examples reached here.  /* #neg=1.366 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.5616623135442826;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.00439368626174916;  // std dev = 3,181, 93,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=21 */
%   | else return 0.033221324507367145;  // std dev = 0,321, 109,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.483035517548046;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.5245145469387875;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return -0.021584219629871157;  // std dev = 0,214, 41,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else return -0.07625099205985336;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.947617
   AUC PR    = 0.411348
   CLL	      = -0.250363
   Precision = 0.434262 at threshold = 0.5
   Recall    = 0.839715
   F1        = 0.572469


Total learning time: 734.847 seconds
Total inference time: 2486.002 seconds
AUC ROC: 0.947617


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 02:25:03
{'Learning time': 734.847, 'CLL': -0.250363, 'Recall': 0.839715, 'Inference time': 2486.002, 'F1': 0.572469, 'Precision': [0.434262, 0.5], 'AUC ROC': 0.947617, 'AUC PR': 0.411348}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.220581500082342;  // std dev = 0,481, 2.039,000 (wgt'ed) examples reached here.  /* #neg=1.300 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.12481560176617883;  // std dev = 0,442, 75,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | else return -0.014191490432402592;  // std dev = 0,334, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then return -0.07663367359613985;  // std dev = 0,247, 92,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.554792
   AUC PR    = 0.013437
   CLL	      = -0.200747
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 7.836 seconds
Total inference time: 15.625 seconds
AUC ROC: 0.554792


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 02:25:27
{'Learning time': 7.836, 'CLL': -0.200747, 'Recall': 0.0, 'Inference time': 15.625, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.554792, 'AUC PR': 0.013437}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 50581

Target test facts examples: 33252
Target test pos	 examples: 2436
Target test neg examples: 199372

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.14938760579437138;  // std dev = 18,483, 1.655,000 (wgt'ed) examples reached here.  /* #neg=1.173 #pos=482 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.13486084734149673;  // std dev = 18,422, 1.629,000 (wgt'ed) examples reached here.  /* #neg=1.147 #pos=482 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.10444567028151998;  // std dev = 18,570, 1.694,000 (wgt'ed) examples reached here.  /* #neg=1.212 #pos=482 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.10040479728053472;  // std dev = 18,415, 1.626,000 (wgt'ed) examples reached here.  /* #neg=1.144 #pos=482 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.07628665447764413;  // std dev = 18,517, 1.670,000 (wgt'ed) examples reached here.  /* #neg=1.188 #pos=482 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.06656946213653755;  // std dev = 18,474, 1.651,000 (wgt'ed) examples reached here.  /* #neg=1.169 #pos=482 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.0483364754580264;  // std dev = 18,557, 1.688,000 (wgt'ed) examples reached here.  /* #neg=1.206 #pos=482 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.047657979247049925;  // std dev = 18,451, 1.641,000 (wgt'ed) examples reached here.  /* #neg=1.159 #pos=482 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.027353395378690915;  // std dev = 18,598, 1.707,000 (wgt'ed) examples reached here.  /* #neg=1.225 #pos=482 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.025978577721255416;  // std dev = 18,548, 1.684,000 (wgt'ed) examples reached here.  /* #neg=1.202 #pos=482 */


Results
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.318204
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 4.002 seconds
Total inference time: 12.045 seconds
AUC ROC: 0.581281


Results scoring model
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.317508
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 4.444 seconds
Parameter learned model CLL: -0.317508


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 99], 'false': [18.483, 1173, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.19e-07, 0, 99], 'false': [18.422, 1147, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-07, 0, 99], 'false': [18.57, 1212, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 99], 'false': [18.415, 1144, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 99], 'false': [18.517, 1188, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 99], 'false': [18.474, 1169, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.37e-07, 0, 99], 'false': [18.557, 1206, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.99e-08, 0, 99], 'false': [18.451, 1159, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 99], 'false': [18.598, 1225, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.5e-08, 0, 99], 'false': [18.548, 1202, 482]}]]
[{'': [1.4354398702224246e-15, 0.20641870738673554]}, {'': [1.4354398702224247e-16, 0.20833790252714712]}, {'': [1.794299837778031e-15, 0.20357425122906656]}, {'': [6.100619448445304e-16, 0.20856046198838168]}, {'': [0.0, 0.2053196600810264]}, {'': [-4.485749594445077e-17, 0.20671281579250414]}, {'': [1.8840148296669324e-16, 0.20400906313875378]}, {'': [4.9343245538895844e-17, 0.20744993930293668]}, {'': [-1.1214373986112693e-16, 0.20263575772115955]}, {'': [4.261462114722823e-17, 0.2042995130923439]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.20950028645086372;  // std dev = 0,477, 37,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else return 0.17374660273799136;  // std dev = 0,465, 1.372,000 (wgt'ed) examples reached here.  /* #neg=939 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.11621345122854462;  // std dev = 3,445, 62,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return -0.0418510649004878;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.010464203586619036;  // std dev = 3,954, 137,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=18 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1513789930671107;  // std dev = 0,465, 1.412,000 (wgt'ed) examples reached here.  /* #neg=966 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.21687706324692513;  // std dev = 3,163, 43,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return -0.04821121281815897;  // std dev = 1,363, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.11131014227918114;  // std dev = 1,222, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.02575569641392358;  // std dev = 3,762, 140,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12885984404672116;  // std dev = 0,465, 1.415,000 (wgt'ed) examples reached here.  /* #neg=969 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.11620173757429382;  // std dev = 3,334, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.04205408767590872;  // std dev = 1,362, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010929406678515252;  // std dev = 3,959, 141,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=18 */
%   | | | else return -0.12486441517352488;  // std dev = 0,014, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.15898537809923097;  // std dev = 0,483, 35,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else return 0.10498808509827788;  // std dev = 0,463, 1.390,000 (wgt'ed) examples reached here.  /* #neg=957 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.06419649529803513;  // std dev = 3,411, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return -0.053250647934877764;  // std dev = 1,372, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.13620794861517974;  // std dev = 6,45e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.017713797385931616;  // std dev = 3,979, 150,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08505377795334969;  // std dev = 0,462, 1.440,000 (wgt'ed) examples reached here.  /* #neg=994 #pos=446 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.04450701232636091;  // std dev = 0,328, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.024884709025586794;  // std dev = 3,494, 74,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   | | | else return 0.004150971858052435;  // std dev = 3,934, 129,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07165563582614026;  // std dev = 0,463, 1.432,000 (wgt'ed) examples reached here.  /* #neg=986 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.05036946858615503;  // std dev = 3,412, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return -0.042478443683761045;  // std dev = 1,364, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.007356300797218878;  // std dev = 3,958, 140,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=18 */
%   | | | else return -0.10979497830967704;  // std dev = 0,025, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.029918773059092085;  // std dev = 0,450, 46,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else return 0.058970141648048466;  // std dev = 0,463, 1.387,000 (wgt'ed) examples reached here.  /* #neg=954 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.07606734776598685;  // std dev = 3,332, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.03136241167585123;  // std dev = 1,360, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.005472388602951287;  // std dev = 3,932, 128,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=18 */
%   | | | else return -0.10030833892431619;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6968122396528605;  // std dev = 3,659, 351,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=337 */
%   | | | else return -0.23984456363359447;  // std dev = 3,954, 669,000 (wgt'ed) examples reached here.  /* #neg=653 #pos=16 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.25113569505586175;  // std dev = 1,134, 276,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=1 */
%   | | | else return 0.36631070330041016;  // std dev = 6,244, 168,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 5.502305200812171E-4;  // std dev = 3,898, 127,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=18 */
%   | | | else return -0.054304299741438695;  // std dev = 1,592, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | else return 0.0753663495120582;  // std dev = 0,330, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.07742183835627252;  // std dev = 0,389, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else return 0.03504904137511962;  // std dev = 0,396, 1.358,000 (wgt'ed) examples reached here.  /* #neg=925 #pos=433 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return -0.03672729414103049;  // std dev = 0,284, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.015754487561899764;  // std dev = 3,906, 120,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=18 */
%   | | | else return 4.014777687917922E-4;  // std dev = 2,930, 73,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.022945536342953758;  // std dev = 0,388, 1.440,000 (wgt'ed) examples reached here.  /* #neg=994 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04056234915787078;  // std dev = 2,728, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.006999063235686831;  // std dev = 1,274, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.007988771231640514;  // std dev = 3,955, 141,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=18 */
%   | | | else return -0.09254946510349561;  // std dev = 0,020, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.958053
   AUC PR    = 0.585635
   CLL	      = -0.260692
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 53.276 seconds
Total inference time: 527.285 seconds
AUC ROC: 0.958053


Results scoring model
   AUC ROC   = 0.94538
   AUC PR    = 0.49688
   CLL	      = -0.265496
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 25.448 seconds
Refined model CLL: -0.265496


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.958053
   AUC PR    = 0.585635
   CLL	      = -0.260692
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 87.17 seconds
Total inference time: 527.285 seconds
AUC ROC: 0.958053
Total revision time: 87.17
Best scored revision CLL: -0.265496


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:35:55
{'Learning time': 87.17, 'F1': 0.279661, 'Precision': [1.0, 0.5], 'Recall': 0.162562, 'Inference time': 527.285, 'parameter': {'Learning time': 4.002, 'F1': 0.279661, 'Precision': [1.0, 0.5], 'Recall': 0.162562, 'Inference time': 12.045, 'CLL': -0.318204, 'AUC ROC': 0.581281, 'AUC PR': 0.181212}, 'CLL': -0.260692, 'AUC ROC': 0.958053, 'AUC PR': 0.585635}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21158602978173824;  // std dev = 0,478, 1.542,000 (wgt'ed) examples reached here.  /* #neg=997 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.007397283387882608;  // std dev = 3,721, 119,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=16 */
%   | | | else return -0.07042249347191638;  // std dev = 1,363, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return 0.15039284276643416;  // std dev = 0,466, 50,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | else return 0.19025678834468296;  // std dev = 0,480, 1.470,000 (wgt'ed) examples reached here.  /* #neg=941 #pos=529 */
%   else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | then if ( title(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.13000587233017538;  // std dev = 0,153, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0.03433038309826525;  // std dev = 0,357, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.007410166456457091;  // std dev = 3,688, 109,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=16 */
%   | | | else return -0.07682107674291731;  // std dev = 1,378, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.40814802462682687;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.22750286333650396;  // std dev = 0,493, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then return 0.07848704298201975;  // std dev = 0,447, 47,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else return 0.1597276367200147;  // std dev = 0,479, 1.442,000 (wgt'ed) examples reached here.  /* #neg=926 #pos=516 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return 0.08703932143813915;  // std dev = 0,316, 52,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else return -0.06842123157562131;  // std dev = 0,249, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.03346604072454462;  // std dev = 3,630, 92,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | | else return -0.07086805511738084;  // std dev = 1,381, 33,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13232009155998556;  // std dev = 0,479, 1.527,000 (wgt'ed) examples reached here.  /* #neg=982 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5337830330721146;  // std dev = 4,21e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.12710332581399889;  // std dev = 0,209, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1217520974735598;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.17122290821763117;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.1350614844257305;  // std dev = 0,038, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.010482891887671618;  // std dev = 3,949, 138,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=18 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.3771130529014319;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0996001206691091;  // std dev = 2,944, 39,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else return -0.03955361376523481;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.09724692841034137;  // std dev = 0,476, 1.529,000 (wgt'ed) examples reached here.  /* #neg=1.000 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return 0.04047319732357765;  // std dev = 0,235, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return -0.03566418701294319;  // std dev = 0,256, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.12001190859250846;  // std dev = 0,049, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.024770342117664997;  // std dev = 3,981, 159,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=18 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08360894731703994;  // std dev = 0,477, 1.554,000 (wgt'ed) examples reached here.  /* #neg=1.009 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7995412540781214;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.13993949569930172;  // std dev = 0,038, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.1224819754299581;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0.21962051107428046;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -1.7711493845588844E-4;  // std dev = 1,950, 62,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return -0.047342098672067325;  // std dev = 1,273, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08491279195462165;  // std dev = 0,482, 1.478,000 (wgt'ed) examples reached here.  /* #neg=933 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.28092994492809337;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.11801647113980603;  // std dev = 0,248, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.10149704625292745;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.1588804953506616;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.10137258838580149;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.007310050511492368;  // std dev = 3,452, 133,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=18 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.052024356609132655;  // std dev = 0,478, 1.542,000 (wgt'ed) examples reached here.  /* #neg=997 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6218196138436349;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.12051850841119038;  // std dev = 0,066, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.11575532604041354;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.1487876473059396;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.015355266894124925;  // std dev = 1,648, 75,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.02521344482351519;  // std dev = 1,211, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return -0.07246586766458817;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.37313287168919373;  // std dev = 0,814, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06379463057491697;  // std dev = 0,486, 34,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | else return 0.04844511029917144;  // std dev = 0,480, 1.467,000 (wgt'ed) examples reached here.  /* #neg=938 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then return -0.011381346539304176;  // std dev = 0,231, 61,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | else if ( title(J, H), venue(J, B) )
%   | | | then return -0.10299066780148156;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.13076163181938902;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return -0.08295923604364581;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.018417503355130996;  // std dev = 2,930, 145,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=18 */
%   | | | else return -0.06847673831369697;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5161399187628372;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0189727874100592;  // std dev = 0,468, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else return 0.03560289794665005;  // std dev = 0,480, 1.474,000 (wgt'ed) examples reached here.  /* #neg=945 #pos=529 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.6001622021625155;  // std dev = 6,66e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.10692976595600812;  // std dev = 0,068, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return -0.06054139582431297;  // std dev = 0,225, 35,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return -0.02825832818813278;  // std dev = 1,907, 73,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | | else return 0.02857012244389038;  // std dev = 1,182, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return -0.06423574196964407;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.598841
   AUC PR    = 0.035618
   CLL	      = -0.368999
   Precision = 0.24618 at threshold = 0.5
   Recall    = 0.059524
   F1        = 0.095868


Total learning time: 66.935 seconds
Total inference time: 350.854 seconds
AUC ROC: 0.598841


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 02:42:53
{'Learning time': 66.935, 'CLL': -0.368999, 'Recall': 0.059524, 'Inference time': 350.854, 'F1': 0.095868, 'Precision': [0.24618, 0.5], 'AUC ROC': 0.598841, 'AUC PR': 0.035618}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20930872891394037;  // std dev = 0,477, 1.552,000 (wgt'ed) examples reached here.  /* #neg=1.007 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.7470378239884012;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.021414241221961363;  // std dev = 3,659, 98,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=16 */
%   | | | else return -0.08470820775763062;  // std dev = 1,373, 35,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.551045
   AUC PR    = 0.01971
   CLL	      = -0.200836
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 7.772 seconds
Total inference time: 43.229 seconds
AUC ROC: 0.551045


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 02:43:44
{'Learning time': 7.772, 'CLL': -0.200836, 'Recall': 0.0, 'Inference time': 43.229, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.551045, 'AUC PR': 0.01971}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 67804

Target test facts examples: 34429
Target test pos	 examples: 2270
Target test neg examples: 182149

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.1521024234716003;  // std dev = 21,124, 2.150,000 (wgt'ed) examples reached here.  /* #neg=1.518 #pos=632 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.13700141138605085;  // std dev = 21,057, 2.118,000 (wgt'ed) examples reached here.  /* #neg=1.486 #pos=632 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.11465915114124356;  // std dev = 21,101, 2.139,000 (wgt'ed) examples reached here.  /* #neg=1.507 #pos=632 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.09202725691123803;  // std dev = 21,176, 2.176,000 (wgt'ed) examples reached here.  /* #neg=1.544 #pos=632 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.0794063884618778;  // std dev = 21,140, 2.158,000 (wgt'ed) examples reached here.  /* #neg=1.526 #pos=632 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.0734308105347544;  // std dev = 21,025, 2.103,000 (wgt'ed) examples reached here.  /* #neg=1.471 #pos=632 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.05330542322721859;  // std dev = 21,130, 2.153,000 (wgt'ed) examples reached here.  /* #neg=1.521 #pos=632 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.04439916768150487;  // std dev = 21,116, 2.146,000 (wgt'ed) examples reached here.  /* #neg=1.514 #pos=632 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.045910226499387766;  // std dev = 20,967, 2.076,000 (wgt'ed) examples reached here.  /* #neg=1.444 #pos=632 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.03239135294778642;  // std dev = 21,036, 2.108,000 (wgt'ed) examples reached here.  /* #neg=1.476 #pos=632 */


Results
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.329545
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total learning time: 6.564 seconds
Total inference time: 12.314 seconds
AUC ROC: 0.5837


Results scoring model
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.328615
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total scoring time: 6.035 seconds
Parameter learned model CLL: -0.328615


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.19e-07, 0, 115], 'false': [21.124, 1518, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.057, 1486, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.62e-07, 0, 115], 'false': [21.101, 1507, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.26e-07, 0, 115], 'false': [21.176, 1544, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.84e-07, 0, 115], 'false': [21.14, 1526, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.025, 1471, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.76e-07, 0, 115], 'false': [21.13, 1521, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.116, 1514, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [20.967, 1444, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 115], 'false': [21.036, 1476, 632]}]]
[{'': [3.3364615418300357e-15, 0.20754483504595506]}, {'': [-1.0503675224279742e-15, 0.20935530784740727]}, {'': [1.853589745461131e-15, 0.20816550357885458]}, {'': [9.267948727305654e-16, 0.20608509948098777]}, {'': [2.934850430313457e-16, 0.20709457921512928]}, {'': [-4.633974363652827e-17, 0.2102089513226416]}, {'': [2.703151712130816e-16, 0.20737587557000325]}, {'': [-2.703151712130816e-17, 0.207770324555366]}, {'': [-1.5832745742480493e-16, 0.21175300062000274]}, {'': [5.0201388939572296e-17, 0.2099240626653955]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16694239113222714;  // std dev = 0,462, 1.956,000 (wgt'ed) examples reached here.  /* #neg=1.352 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.047338124288701565;  // std dev = 3,369, 74,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | | | else return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.010926712877290126;  // std dev = 3,053, 72,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13798527570342675;  // std dev = 0,459, 2.004,000 (wgt'ed) examples reached here.  /* #neg=1.400 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.006134381692135025;  // std dev = 3,442, 91,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | | else return 0.10593276395882106;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return -0.01939152775574423;  // std dev = 0,329, 89,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11806243709110227;  // std dev = 0,459, 1.879,000 (wgt'ed) examples reached here.  /* #neg=1.313 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5311240960282149;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return 0.6293383817425013;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.024353788152176946;  // std dev = 3,403, 81,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=14 */
%   | | | else return 0.0906869712173244;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 6.503625640961128E-4;  // std dev = 0,348, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08943278510251625;  // std dev = 0,453, 2.063,000 (wgt'ed) examples reached here.  /* #neg=1.459 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.01708331035308639;  // std dev = 3,412, 83,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return 0.13739846823610094;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02262290656058051;  // std dev = 3,114, 93,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=11 */
%   | | | else return -0.12340296897704783;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08592580934455284;  // std dev = 0,459, 1.873,000 (wgt'ed) examples reached here.  /* #neg=1.307 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4632601577734783;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return 0.551549050289309;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.0013759734403927524;  // std dev = 3,442, 94,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=14 */
%   | | | else return 0.012865067730491269;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.001023821158397367;  // std dev = 3,053, 72,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return -0.11066216297453009;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07197856058585995;  // std dev = 0,460, 1.867,000 (wgt'ed) examples reached here.  /* #neg=1.301 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3589645942097606;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return 0.36845269645258233;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.02895453193354334;  // std dev = 3,367, 80,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=14 */
%   | | | else return -0.04834055485393388;  // std dev = 1,637, 28,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else return 0.043514268826689476;  // std dev = 0,397, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05898479517729282;  // std dev = 0,457, 1.952,000 (wgt'ed) examples reached here.  /* #neg=1.348 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.00137119474275077;  // std dev = 3,437, 90,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
%   | | | else return 0.07676641123790069;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.007083125873582059;  // std dev = 3,085, 82,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
%   | | | else return -0.1042244536818832;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05452520430348321;  // std dev = 0,462, 1.827,000 (wgt'ed) examples reached here.  /* #neg=1.261 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.21064409874581352;  // std dev = 2,553, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.3108264824675864;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.01189387531912185;  // std dev = 3,411, 83,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return 0.13817295175225053;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.006631624298708957;  // std dev = 0,354, 75,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03984002516599657;  // std dev = 0,461, 1.852,000 (wgt'ed) examples reached here.  /* #neg=1.286 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16009996587941105;  // std dev = 2,539, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.2848194876418314;  // std dev = 1,348, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.003772133737806981;  // std dev = 3,419, 92,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=14 */
%   | | | else return -0.02014727120344739;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else return 0.013149373853672599;  // std dev = 0,380, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.017230985706039394;  // std dev = 0,454, 1.946,000 (wgt'ed) examples reached here.  /* #neg=1.380 #pos=566 */
%   | | else if ( title(F, E), venue(F, B) )
%   | | | then return 0.01455787235085842;  // std dev = 4,136, 121,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=33 */
%   | | | else return 0.08519443718756868;  // std dev = 1,933, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then return 0.06815411393386113;  // std dev = 0,390, 73,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | else return -0.24485436539441532;  // std dev = 0,514, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.633098
   AUC PR    = 0.203452
   CLL	      = -0.313811
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 89.082 seconds
Total inference time: 145.712 seconds
AUC ROC: 0.633098


Results scoring model
   AUC ROC   = 0.621198
   AUC PR    = 0.190633
   CLL	      = -0.323153
   Precision = 0.222384 at threshold = 0.5
   Recall    = 0.204819
   F1        = 0.21324


Total scoring time: 16.715 seconds
Refined model CLL: -0.323153


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.633098
   AUC PR    = 0.203452
   CLL	      = -0.313811
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 118.396 seconds
Total inference time: 145.712 seconds
AUC ROC: 0.633098
Total revision time: 118.396
Best scored revision CLL: -0.323153


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:48:23
{'Learning time': 118.396, 'F1': 0.280928, 'Precision': [0.522782, 0.5], 'Recall': 0.19207, 'Inference time': 145.712, 'parameter': {'Learning time': 6.564, 'F1': 0.286792, 'Precision': [1.0, 0.5], 'Recall': 0.167401, 'Inference time': 12.314, 'CLL': -0.329545, 'AUC ROC': 0.5837, 'AUC PR': 0.186484}, 'CLL': -0.313811, 'AUC ROC': 0.633098, 'AUC PR': 0.203452}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.19631801964177845;  // std dev = 0,473, 1.999,000 (wgt'ed) examples reached here.  /* #neg=1.323 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.4581489350995123;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.6706489350995123;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else return 0.8055173561521439;  // std dev = 0,223, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( title(K, I), venue(K, B) )
%   | | | then return 0.7331489350995123;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.14185106490048766;  // std dev = 7,60e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return 0.058148935099512224;  // std dev = 0,400, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.01089868394810672;  // std dev = 0,337, 84,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.17342999361243475;  // std dev = 0,474, 1.983,000 (wgt'ed) examples reached here.  /* #neg=1.307 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.5927941835770488;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.5424724186538795;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5682191205391258;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.7299724186538793;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then return 0.009854617573835312;  // std dev = 0,317, 89,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | | else return 0.12364930524082697;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.015529546725112203;  // std dev = 0,331, 88,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.14527891352239497;  // std dev = 0,473, 1.998,000 (wgt'ed) examples reached here.  /* #neg=1.322 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.49634401335359296;  // std dev = 1,615, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.3456398302863574;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.44921440988959843;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.2800303943409795;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then return 0.02969995497812939;  // std dev = 0,336, 77,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | else return 0.06531621193022145;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return 0.02075596727015273;  // std dev = 0,366, 69,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.11646416316091639;  // std dev = 0,471, 2.029,000 (wgt'ed) examples reached here.  /* #neg=1.353 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.3137111495541728;  // std dev = 2,114, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.15935472696340208;  // std dev = 1,563, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.30377144204343376;  // std dev = 1,542, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.4961200355953491;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return -0.004924583649039632;  // std dev = 0,341, 38,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | else return 0.007486662907866716;  // std dev = 0,356, 74,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | else return 0.015297708938461258;  // std dev = 0,329, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.09457313135220384;  // std dev = 0,471, 2.038,000 (wgt'ed) examples reached here.  /* #neg=1.362 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.2728670232980877;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.17194431524877002;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | else return 0.30408375533820686;  // std dev = 0,297, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( title(K, I), venue(K, B) )
%   | | | then return 0.6677938358605003;  // std dev = 0,963, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.1310214818255962;  // std dev = 0,008, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return 0.09823433245553868;  // std dev = 0,446, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.015635292502764284;  // std dev = 0,332, 87,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | else return -0.10300115499903247;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.08351375583733446;  // std dev = 0,473, 1.999,000 (wgt'ed) examples reached here.  /* #neg=1.323 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.17174524959880513;  // std dev = 1,988, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return -0.052091486422510686;  // std dev = 1,756, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.1298603377650362;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.3066720976118458;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.5195249509240701;  // std dev = 0,967, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.11664106776691022;  // std dev = 0,008, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0.11115645900963034;  // std dev = 0,458, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return -0.004901099840299657;  // std dev = 0,340, 82,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.06283366065283842;  // std dev = 0,472, 2.026,000 (wgt'ed) examples reached here.  /* #neg=1.350 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.23837217254285473;  // std dev = 1,567, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.14140131814769502;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.031850050324786904;  // std dev = 1,870, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.24556710997596576;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.672199479257209;  // std dev = 1,553, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.14495355372879506;  // std dev = 0,143, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.042400746430016734;  // std dev = 0,178, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else return 0.005296791687340027;  // std dev = 0,261, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.055093522080656106;  // std dev = 0,473, 1.997,000 (wgt'ed) examples reached here.  /* #neg=1.321 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.04474003671840133;  // std dev = 2,288, 26,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return -0.09132409266815193;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.11091871183996345;  // std dev = 1,734, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.03628246000593188;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, B) )
%   | | then return 0.015510310850775219;  // std dev = 0,332, 81,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=14 */
%   | | else return -0.03552191425749607;  // std dev = 0,188, 25,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return -0.01829312952705449;  // std dev = 0,223, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | else return -0.09389995347485032;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.10526455702995877;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.10526455702995893;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.2947354429700411;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.14088928912388723;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( haswordtitle(I, C) )
%   | | then return 0.059397890363299295;  // std dev = 0,478, 1.875,000 (wgt'ed) examples reached here.  /* #neg=1.211 #pos=664 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.06621738788451217;  // std dev = 2,693, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return 0.2634428991959184;  // std dev = 0,174, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return -0.12475355840607624;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.007019989023593814;  // std dev = 0,269, 178,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.028109427914093994;  // std dev = 0,472, 2.018,000 (wgt'ed) examples reached here.  /* #neg=1.342 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.19879585937435254;  // std dev = 1,680, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return -0.06831717970161061;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.03403699255738649;  // std dev = 1,863, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.15873260159110458;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then return -0.018850568718358416;  // std dev = 0,249, 98,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return 4.450687058794494E-4;  // std dev = 2,719, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
%   | | | else return -0.12969427109361487;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08565817847496145;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.610893
   AUC PR    = 0.039775
   CLL	      = -0.345601
   Precision = 0.198693 at threshold = 0.5
   Recall    = 0.06696
   F1        = 0.100165


Total learning time: 157.441 seconds
Total inference time: 268.198 seconds
AUC ROC: 0.610893


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 02:55:29
{'Learning time': 157.441, 'CLL': -0.345601, 'Recall': 0.06696, 'Inference time': 268.198, 'F1': 0.100165, 'Precision': [0.198693, 0.5], 'AUC ROC': 0.610893, 'AUC PR': 0.039775}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1951379680008034;  // std dev = 0,473, 2.006,000 (wgt'ed) examples reached here.  /* #neg=1.330 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.5640312880406888;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.724815601766179;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.724815601766179;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.6359267128772901;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return 0.23314893509951226;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return -0.01685106490048768;  // std dev = 0,331, 88,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */


Results
   AUC ROC   = 0.563755
   AUC PR    = 0.034329
   CLL	      = -0.198082
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.615 seconds
Total inference time: 38.71 seconds
AUC ROC: 0.563755


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 02:56:29
{'Learning time': 20.615, 'CLL': -0.198082, 'Recall': 0.0, 'Inference time': 38.71, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.563755, 'AUC PR': 0.034329}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 35540

Target test facts examples: 33914
Target test pos	 examples: 2467
Target test neg examples: 214413

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.1587269697815883;  // std dev = 18,092, 1.557,000 (wgt'ed) examples reached here.  /* #neg=1.089 #pos=468 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.13279005164227758;  // std dev = 18,163, 1.586,000 (wgt'ed) examples reached here.  /* #neg=1.118 #pos=468 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.11188574327763336;  // std dev = 18,189, 1.597,000 (wgt'ed) examples reached here.  /* #neg=1.129 #pos=468 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.09524436967821856;  // std dev = 18,182, 1.594,000 (wgt'ed) examples reached here.  /* #neg=1.126 #pos=468 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.08741480157220864;  // std dev = 18,082, 1.553,000 (wgt'ed) examples reached here.  /* #neg=1.085 #pos=468 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.06607696950260929;  // std dev = 18,163, 1.586,000 (wgt'ed) examples reached here.  /* #neg=1.118 #pos=468 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.07427153545838557;  // std dev = 17,903, 1.485,000 (wgt'ed) examples reached here.  /* #neg=1.017 #pos=468 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.050562708492659536;  // std dev = 18,031, 1.533,000 (wgt'ed) examples reached here.  /* #neg=1.065 #pos=468 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.03613980846491682;  // std dev = 18,092, 1.557,000 (wgt'ed) examples reached here.  /* #neg=1.089 #pos=468 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.021338699183715396;  // std dev = 18,192, 1.598,000 (wgt'ed) examples reached here.  /* #neg=1.130 #pos=468 */


Results
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.331416
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total learning time: 4.394 seconds
Total inference time: 14.717 seconds
AUC ROC: 0.583705


Results scoring model
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.334721
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total scoring time: 3.964 seconds
Parameter learned model CLL: -0.334721


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.092, 1089, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 82], 'false': [18.163, 1118, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.48e-07, 0, 82], 'false': [18.189, 1129, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 82], 'false': [18.182, 1126, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.082, 1085, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.163, 1118, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [17.903, 1017, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 82], 'false': [18.031, 1065, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.092, 1089, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 82], 'false': [18.192, 1130, 468]}]]
[{'': [-6.932124251318051e-16, 0.21023087974872187]}, {'': [8.665155314147563e-16, 0.20800859983877013]}, {'': [1.4730764034050857e-15, 0.20717147720229515]}, {'': [1.2997732971221344e-16, 0.20739945435282417]}, {'': [-3.4660621256590254e-16, 0.21053906009971046]}, {'': [-5.415722071342227e-17, 0.20800859983876285]}, {'': [-1.408087738548979e-16, 0.21583103764920655]}, {'': [2.166288828536891e-17, 0.21208558484381462]}, {'': [-5.144935967775116e-17, 0.2102308797487402]}, {'': [4.06179155350667e-17, 0.20709554026388904]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6200536970042743;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.016851064900487683;  // std dev = 2,646, 64,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.16584124279181983;  // std dev = 3,721, 65,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.18881560176617415;  // std dev = 15,779, 1.125,000 (wgt'ed) examples reached here.  /* #neg=753 #pos=372 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.010195718725242851;  // std dev = 4,695, 171,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=26 */
%   | | | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.15602127552504427;  // std dev = 3,135, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.037253412711452674;  // std dev = 3,139, 67,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5268429106668969;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.01705059571948255;  // std dev = 2,597, 51,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | | else return 0.16041374412611545;  // std dev = 0,469, 1.200,000 (wgt'ed) examples reached here.  /* #neg=808 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.8513588679714896;  // std dev = 0,016, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17948818259352056;  // std dev = 2,855, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.08023366132435003;  // std dev = 3,349, 201,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=12 */
%   | | | else return 0.09102828782575376;  // std dev = 4,252, 98,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14041778083041306;  // std dev = 0,468, 1.259,000 (wgt'ed) examples reached here.  /* #neg=843 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.70981217477409;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11779734948198091;  // std dev = 2,933, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.05908186845181528;  // std dev = 3,326, 171,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=12 */
%   | | | else return 0.04061061354025441;  // std dev = 4,359, 116,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3875952545842385;  // std dev = 2,550, 27,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return -0.020752124443610243;  // std dev = 2,527, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05235915999584784;  // std dev = 3,353, 73,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return 0.12180400428464452;  // std dev = 15,737, 1.113,000 (wgt'ed) examples reached here.  /* #neg=741 #pos=372 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.34832917810877784;  // std dev = 0,885, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16836378435183602;  // std dev = 2,791, 34,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.05028247775279513;  // std dev = 3,324, 164,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=12 */
%   | | | else return 0.05928427130887685;  // std dev = 4,290, 104,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.7742944721911564;  // std dev = 0,174, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06611555704394202;  // std dev = 3,615, 66,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else return 0.09180886990741487;  // std dev = 0,465, 1.206,000 (wgt'ed) examples reached here.  /* #neg=814 #pos=392 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.15912253131465753;  // std dev = 1,628, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.06927226252216463;  // std dev = 2,889, 46,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.031077085487284817;  // std dev = 4,428, 217,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=24 */
%   | | | else return 0.012955403684136014;  // std dev = 3,048, 62,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0698087877157542;  // std dev = 0,462, 1.299,000 (wgt'ed) examples reached here.  /* #neg=883 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17395614535502577;  // std dev = 1,570, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.043833339703114836;  // std dev = 2,969, 46,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09688816027982738;  // std dev = 3,037, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return -0.03570096694814611;  // std dev = 4,412, 226,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05694044253332937;  // std dev = 0,462, 1.300,000 (wgt'ed) examples reached here.  /* #neg=884 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.24078516049800158;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1364993639060968;  // std dev = 2,772, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.08304803070815626;  // std dev = 3,136, 49,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return -0.029874910236095155;  // std dev = 4,401, 227,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.017916348928003895;  // std dev = 3,480, 69,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return 0.6744952770507172;  // std dev = 0,328, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.04529152478624107;  // std dev = 3,161, 64,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.05785468823067955;  // std dev = 15,755, 1.118,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=372 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.04506337626340377;  // std dev = 4,300, 107,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=26 */
%   | | | else return -0.1232696281951706;  // std dev = 0,215, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.04355991466967739;  // std dev = 4,305, 137,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=26 */
%   | | | else return -0.20861023251820082;  // std dev = 0,162, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.694043280834112;  // std dev = 2,837, 432,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=425 */
%   | | | else return -0.25313416088646445;  // std dev = 3,231, 994,000 (wgt'ed) examples reached here.  /* #neg=987 #pos=7 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return -0.2797156703554914;  // std dev = 0,068, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.10253737760173495;  // std dev = 0,041, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.42021783854989353;  // std dev = 0,894, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.729351938401967;  // std dev = 0,071, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.19033786908960945;  // std dev = 0,928, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.07210137899023447;  // std dev = 4,153, 89,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5412617442437015;  // std dev = 2,546, 430,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=425 */
%   | | | else return -0.20831054095300044;  // std dev = 3,095, 998,000 (wgt'ed) examples reached here.  /* #neg=991 #pos=7 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return -0.23292791518311387;  // std dev = 3,33e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.09479471066547991;  // std dev = 0,046, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.2037478473788918;  // std dev = 1,162, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.39610971973643244;  // std dev = 0,936, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.041931042446582634;  // std dev = 4,291, 98,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
%   | | | else return -0.1713660152621573;  // std dev = 0,090, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.933122
   AUC PR    = 0.519987
   CLL	      = -0.224462
   Precision = 0.371429 at threshold = 0.5
   Recall    = 0.869477
   F1        = 0.520505


Total learning time: 151.014 seconds
Total inference time: 1223.854 seconds
AUC ROC: 0.933122


Results scoring model
   AUC ROC   = 0.976821
   AUC PR    = 0.749636
   CLL	      = -0.212635
   Precision = 0.620519 at threshold = 0.5
   Recall    = 0.912727
   F1        = 0.738779


Total scoring time: 44.005 seconds
Refined model CLL: -0.212635


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.933122
   AUC PR    = 0.519987
   CLL	      = -0.224462
   Precision = 0.371429 at threshold = 0.5
   Recall    = 0.869477
   F1        = 0.520505


Total learning time: 203.377 seconds
Total inference time: 1223.854 seconds
AUC ROC: 0.933122
Total revision time: 203.377
Best scored revision CLL: -0.212635


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 03:20:32
{'Learning time': 203.377, 'F1': 0.520505, 'Precision': [0.371429, 0.5], 'Recall': 0.869477, 'Inference time': 1223.854, 'parameter': {'Learning time': 4.394, 'F1': 0.286806, 'Precision': [1.0, 0.5], 'Recall': 0.16741, 'Inference time': 14.717, 'CLL': -0.331416, 'AUC ROC': 0.583705, 'AUC PR': 0.185174}, 'CLL': -0.224462, 'AUC ROC': 0.933122, 'AUC PR': 0.519987}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.6081489350995123;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return -0.03768439823382107;  // std dev = 2,116, 48,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | else return 0.22781718154500505;  // std dev = 0,483, 1.266,000 (wgt'ed) examples reached here.  /* #neg=798 #pos=468 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordauthor(H, I), haswordvenue(A, I) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( author(J, H), venue(J, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15083186192878065;  // std dev = 2,913, 41,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.06956190827398163;  // std dev = 0,259, 166,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=12 */
%   | | else return 0.061538765607986406;  // std dev = 0,403, 118,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1967955210057531;  // std dev = 0,480, 1.349,000 (wgt'ed) examples reached here.  /* #neg=851 #pos=498 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.851542296246336;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1434925285163289;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.11268493918535795;  // std dev = 0,439, 45,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.133592421534126;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0.02872671837773868;  // std dev = 4,395, 138,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=24 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.07355056914081487;  // std dev = 3,020, 53,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return -0.14950849184564138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18701783226245527;  // std dev = 0,485, 1.280,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.5082975502160305;  // std dev = 0,889, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return -0.1659609412745019;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.14005989123866291;  // std dev = 2,846, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.03987273930304286;  // std dev = 3,248, 130,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=12 */
%   | | | else return -0.13531438463273615;  // std dev = 0,049, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.07952763102329494;  // std dev = 4,213, 99,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
%   | | | else return -0.14794296080072486;  // std dev = 0,052, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7447074951506116;  // std dev = 0,206, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.22803266254972326;  // std dev = 0,041, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.09651006361315109;  // std dev = 1,846, 33,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.7105417742386692;  // std dev = 0,171, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1486843939106116;  // std dev = 0,484, 1.226,000 (wgt'ed) examples reached here.  /* #neg=758 #pos=468 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then return 0.07145709224826056;  // std dev = 0,442, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.06099233511779312;  // std dev = 0,242, 185,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.036412893031975514;  // std dev = 4,302, 114,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=24 */
%   | | | else return -0.1332416810221217;  // std dev = 0,032, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10428001124421346;  // std dev = 0,475, 1.359,000 (wgt'ed) examples reached here.  /* #neg=861 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.2439979904464332;  // std dev = 1,146, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.16500667854235831;  // std dev = 0,473, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return -0.10929932681381771;  // std dev = 0,058, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.014512141497652249;  // std dev = 3,228, 110,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.05830557638215849;  // std dev = 4,233, 100,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
%   | | | else return -0.11228859089007853;  // std dev = 0,043, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07007406687872117;  // std dev = 0,471, 1.412,000 (wgt'ed) examples reached here.  /* #neg=914 #pos=498 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.7786539035861965;  // std dev = 0,445, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.17850901217639126;  // std dev = 0,249, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else return -0.11444386725018271;  // std dev = 0,246, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.022328068626564543;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.21635706573923041;  // std dev = 2,542, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01124991705760711;  // std dev = 3,226, 108,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=12 */
%   | | | else return -0.10604885863699363;  // std dev = 0,041, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5408877780504547;  // std dev = 0,247, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.22407969425645308;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.5325986135792979;  // std dev = 0,260, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12017345093098679;  // std dev = 1,777, 34,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.3332133897405613;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return -0.1376245065261065;  // std dev = 2,114, 47,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | | else return 0.08569993065272874;  // std dev = 0,486, 1.173,000 (wgt'ed) examples reached here.  /* #neg=725 #pos=448 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.1083232432943247;  // std dev = 0,463, 39,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | else return -0.023641872279499498;  // std dev = 0,287, 290,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.4208204500087025;  // std dev = 0,229, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.07239574909678013;  // std dev = 2,924, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | else return 0.5378663037935133;  // std dev = 0,243, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.20000008851398596;  // std dev = 1,471, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return -0.07227861482950823;  // std dev = 1,774, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else return 0.05955718833750449;  // std dev = 0,484, 1.198,000 (wgt'ed) examples reached here.  /* #neg=750 #pos=448 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then return 0.03406489753198649;  // std dev = 0,427, 48,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.03864052523023715;  // std dev = 0,248, 174,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=12 */
%   | | else return 0.02663763127460567;  // std dev = 0,334, 110,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6483789309385113;  // std dev = 0,133, 500,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=494 */
%   | | else return -0.28402522334580144;  // std dev = 0,111, 947,000 (wgt'ed) examples reached here.  /* #neg=940 #pos=7 */
%   | else return -0.11667324787091699;  // std dev = 0,237, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordauthor(H, G) )
%   | | then return 0.1960207427741617;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.43336042538356434;  // std dev = 1,222, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.6671999184372832;  // std dev = 0,049, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.05231354239060089;  // std dev = 3,459, 95,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | | | else return -0.16953092957756496;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09565528135832746;  // std dev = 0,036, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.24594650929700076;  // std dev = 0,271, 21,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else return -0.047512412168400915;  // std dev = 0,231, 53,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else return 0.03406060687933587;  // std dev = 0,381, 1.220,000 (wgt'ed) examples reached here.  /* #neg=752 #pos=468 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( title(J, H), venue(J, B) )
%   | | | then return 0.6110734853859792;  // std dev = 0,549, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.16547614372449657;  // std dev = 0,395, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else return -0.08234713527762591;  // std dev = 0,257, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.0426341061134944;  // std dev = 3,600, 118,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=26 */
%   | | | else return -0.09649755567623142;  // std dev = 0,010, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.1288561739891779;  // std dev = 0,075, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.943744
   AUC PR    = 0.360637
   CLL	      = -0.301034
   Precision = 0.495798 at threshold = 0.5
   Recall    = 0.023916
   F1        = 0.04563


Total learning time: 121.669 seconds
Total inference time: 631.863 seconds
AUC ROC: 0.943744


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 03:33:06
{'Learning time': 121.669, 'CLL': -0.301034, 'Recall': 0.023916, 'Inference time': 631.863, 'F1': 0.04563, 'Precision': [0.495798, 0.5], 'AUC ROC': 0.943744, 'AUC PR': 0.360637}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.035468086177083476;  // std dev = 2,114, 47,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.5399671169176942;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | | else return 0.0052077586289240585;  // std dev = 2,065, 34,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else return 0.22900986225182532;  // std dev = 0,483, 1.208,000 (wgt'ed) examples reached here.  /* #neg=760 #pos=448 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then if ( author(N, M), venue(N, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25814893509951237;  // std dev = 0,490, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else if ( haswordvenue(A, P), haswordtitle(Q, P) )
%   | | then if ( haswordtitle(Q, R), haswordvenue(B, R) )
%   | | | then return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return -0.027565350614773387;  // std dev = 3,260, 105,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=12 */
%   | | else if ( haswordvenue(B, S), haswordtitle(T, S) )
%   | | | then return 0.10304689428318518;  // std dev = 4,257, 98,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.560384
   AUC PR    = 0.020234
   CLL	      = -0.200416
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.623 seconds
Total inference time: 45.283 seconds
AUC ROC: 0.560384


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 03:34:02
{'Learning time': 9.623, 'CLL': -0.200416, 'Recall': 0.0, 'Inference time': 45.283, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.560384, 'AUC PR': 0.020234}


