Starting experiment #5 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.141851064900489;  // std dev = 0,000, 687,000 (wgt'ed) examples reached here.  /* #neg=687 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.12544463852839238;  // std dev = 0,000, 698,000 (wgt'ed) examples reached here.  /* #neg=698 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360626;  // std dev = 4,71e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.11231637819360656;  // std dev = 0,000, 702,000 (wgt'ed) examples reached here.  /* #neg=702 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10159632948783513;  // std dev = 4,50e-07, 727,000 (wgt'ed) examples reached here.  /* #neg=727 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.09269127618926198;  // std dev = 0,000, 723,000 (wgt'ed) examples reached here.  /* #neg=723 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.08518475138839675;  // std dev = 1,40e-07, 755,000 (wgt'ed) examples reached here.  /* #neg=755 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.0787767547310928;  // std dev = 0,000, 699,000 (wgt'ed) examples reached here.  /* #neg=699 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07324622576333648;  // std dev = 2,53e-07, 721,000 (wgt'ed) examples reached here.  /* #neg=721 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2,47e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.0684269778442026;  // std dev = 1,83e-07, 719,000 (wgt'ed) examples reached here.  /* #neg=719 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06419184008202536;  // std dev = 2,49e-07, 672,000 (wgt'ed) examples reached here.  /* #neg=672 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 31946

Target test facts examples: 35095
Target test pos	 examples: 2649
Target test neg examples: 218007

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.12879570126866172;  // std dev = 14,085, 1.005,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=272 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.11957084442128667;  // std dev = 14,015, 979,000 (wgt'ed) examples reached here.  /* #neg=707 #pos=272 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.0884602735893468;  // std dev = 14,156, 1.033,000 (wgt'ed) examples reached here.  /* #neg=761 #pos=272 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.082664290967571;  // std dev = 14,085, 1.005,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=272 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.06998905239966048;  // std dev = 14,082, 1.004,000 (wgt'ed) examples reached here.  /* #neg=732 #pos=272 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.05374494456594965;  // std dev = 14,128, 1.022,000 (wgt'ed) examples reached here.  /* #neg=750 #pos=272 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.04461523805108726;  // std dev = 14,128, 1.022,000 (wgt'ed) examples reached here.  /* #neg=750 #pos=272 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.039987782676860636;  // std dev = 14,098, 1.010,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=272 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.0203834486296123;  // std dev = 14,218, 1.059,000 (wgt'ed) examples reached here.  /* #neg=787 #pos=272 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.02137588970503819;  // std dev = 14,173, 1.040,000 (wgt'ed) examples reached here.  /* #neg=768 #pos=272 */


Results
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.291077
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 3.81 seconds
Total inference time: 17.267 seconds
AUC ROC: 0.575311


Results scoring model
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.288887
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 5.42 seconds
Parameter learned model CLL: -0.288887


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.085, 733, 272], 'true': [3.37e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.015, 707, 272], 'true': [1.88e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.156, 761, 272], 'true': [4.09e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.085, 733, 272], 'true': [2.23e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.082, 732, 272], 'true': [4.21e-08, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.128, 750, 272], 'true': [0.0, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.128, 750, 272], 'true': [1.26e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.098, 738, 272], 'true': [7.6e-08, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.218, 787, 272], 'true': [0.0, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.173, 768, 272], 'true': [3.65e-08, 0, 96]}]]
[{'': [1.1842378929335002e-15, 0.19739709413133494]}, {'': [3.7007434154171886e-16, 0.2006425017293679]}, {'': [1.7393494052460785e-15, 0.19397819675772088]}, {'': [5.181040781584064e-16, 0.1973970941313352]}, {'': [1.850371707708594e-17, 0.19752067427501954]}, {'': [-4.625929269271486e-17, 0.1953117520230132]}, {'': [1.6653345369377348e-16, 0.19531175202300022]}, {'': [6.013708050052931e-17, 0.19678070777374174]}, {'': [-6.013708050052931e-17, 0.19087617177642827]}, {'': [1.3877787807814457e-17, 0.19313609467454965]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1652742422248147;  // std dev = 0,461, 814,000 (wgt'ed) examples reached here.  /* #neg=564 #pos=250 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -8.254238748466371E-4;  // std dev = 3,074, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0565797470710303;  // std dev = 3,172, 129,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14931599217493388;  // std dev = 0,464, 800,000 (wgt'ed) examples reached here.  /* #neg=550 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.12757150519393184;  // std dev = 0,026, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.045671314282314815;  // std dev = 3,165, 123,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04496643417312842;  // std dev = 2,991, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12672080679316886;  // std dev = 0,463, 803,000 (wgt'ed) examples reached here.  /* #neg=553 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.11704570825311605;  // std dev = 0,027, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0425523234233559;  // std dev = 3,169, 126,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03065311580283463;  // std dev = 3,006, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10610554275899765;  // std dev = 0,463, 805,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.10398145115179024;  // std dev = 0,024, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.034957168166390905;  // std dev = 3,164, 122,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.008967307093885497;  // std dev = 3,038, 69,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08041018073029006;  // std dev = 0,459, 826,000 (wgt'ed) examples reached here.  /* #neg=576 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return -0.0385690281861798;  // std dev = 0,268, 140,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.02882406818474631;  // std dev = 3,000, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.11146238644553999;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.07323910609177517;  // std dev = 0,462, 804,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=249 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return -0.02411236734071714;  // std dev = 3,154, 123,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=11 */
%   | | | else return -0.11509743672383516;  // std dev = 0,022, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.024791771701521234;  // std dev = 3,001, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.09193199584600398;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.050422222034383395;  // std dev = 0,458, 829,000 (wgt'ed) examples reached here.  /* #neg=580 #pos=249 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return -0.08891023725148657;  // std dev = 0,016, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.012139772132290828;  // std dev = 3,140, 108,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=11 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.005132237572473574;  // std dev = 3,048, 72,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0460013621388523;  // std dev = 0,460, 820,000 (wgt'ed) examples reached here.  /* #neg=570 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.009593201415088102;  // std dev = 3,136, 109,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=11 */
%   | | | else return -0.10284062585862451;  // std dev = 0,020, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.02832502140727879;  // std dev = 2,989, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04356794013049587;  // std dev = 0,463, 802,000 (wgt'ed) examples reached here.  /* #neg=552 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.014340447862769709;  // std dev = 3,144, 117,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=11 */
%   | | | else return -0.08998226408689437;  // std dev = 0,033, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 2.982816628288122E-4;  // std dev = 3,033, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04141849624585715;  // std dev = 0,465, 787,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.07741955922002354;  // std dev = 0,011, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.01818206015076052;  // std dev = 3,157, 120,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.015721564295744755;  // std dev = 3,005, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.609273
   AUC PR    = 0.170424
   CLL	      = -0.311474
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 35.073 seconds
Total inference time: 166.543 seconds
AUC ROC: 0.609273


Results scoring model
   AUC ROC   = 0.698684
   AUC PR    = 0.283886
   CLL	      = -0.290565
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 12.945 seconds
Refined model CLL: -0.290565


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.291077
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 57.248 seconds
Total inference time: 17.267 seconds
AUC ROC: 0.575311
Total revision time: 57.248
Best scored revision CLL: -0.288887


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:04:09
{'F1': 0.261811, 'AUC ROC': 0.575311, 'AUC PR': 0.168925, 'parameter': {'F1': 0.261811, 'AUC ROC': 0.575311, 'AUC PR': 0.168925, 'CLL': -0.291077, 'Learning time': 3.81, 'Recall': 0.150623, 'Inference time': 17.267, 'Precision': [1.0, 0.5]}, 'CLL': -0.291077, 'Learning time': 57.248, 'Recall': 0.150623, 'Inference time': 17.267, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.8303711573217307;  // std dev = 2,789, 288,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=280 */
%   | | | else return -0.08214957236317459;  // std dev = 5,485, 536,000 (wgt'ed) examples reached here.  /* #neg=504 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.7748156017661786;  // std dev = 0,276, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then return -0.05851773156715433;  // std dev = 0,276, 132,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=11 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.04780410751330547;  // std dev = 2,986, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6872448247964904;  // std dev = 3,253, 291,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=280 */
%   | | | else return -0.06939706624004562;  // std dev = 5,477, 510,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.657810671461647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then return 0.33598122643461614;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.6859812264346159;  // std dev = 0,218, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.05630448740044562;  // std dev = 0,269, 140,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0687913505510536;  // std dev = 0,411, 51,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.14056639300839946;  // std dev = 0,358, 935,000 (wgt'ed) examples reached here.  /* #neg=589 #pos=346 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then return -0.1284400695410324;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.02367816477912767;  // std dev = 3,138, 105,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=11 */
%   | | | else return -0.1284400695410324;  // std dev = 6,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.023682691314932988;  // std dev = 3,003, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.13318808488768913;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13176356951250426;  // std dev = 0,351, 896,000 (wgt'ed) examples reached here.  /* #neg=550 #pos=346 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then return -0.11473496193772868;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.036381803265141566;  // std dev = 3,165, 123,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=11 */
%   | | | else return -0.11473496193772868;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.07302843568395967;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.012488853580155125;  // std dev = 2,873, 59,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.4849696330182986;  // std dev = 2,216, 285,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=280 */
%   | | | else return -0.09837569233482298;  // std dev = 5,488, 544,000 (wgt'ed) examples reached here.  /* #neg=512 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.14246498755346756;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0.44522080526026786;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.4844541686305158;  // std dev = 0,208, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then return -0.03548559348139318;  // std dev = 0,276, 132,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=11 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.0471249523201015;  // std dev = 2,952, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.11985975156713614;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09303851423948231;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.33260599652391953;  // std dev = 3,773, 295,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=280 */
%   | | | else return -0.08599262387616646;  // std dev = 5,489, 546,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=32 */
%   | | else return 0.027625959042734155;  // std dev = 0,291, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then return 0.08311118753512706;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.30185765473654474;  // std dev = 0,294, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.026541016552573692;  // std dev = 0,284, 124,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=11 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.019261586801873426;  // std dev = 2,993, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return -0.10778018551986436;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0860022495290395;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.28402864062524874;  // std dev = 2,613, 287,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=280 */
%   | | | else return -0.07524056388678653;  // std dev = 5,486, 545,000 (wgt'ed) examples reached here.  /* #neg=513 #pos=32 */
%   | | else return 0.11466665480383617;  // std dev = 0,269, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then return -0.037601907907932074;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.27751661591391635;  // std dev = 0,218, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.039347098672941595;  // std dev = 0,258, 152,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=11 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.011002434765975184;  // std dev = 3,002, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.09784525325031733;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07904164584287472;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.03604699610233546;  // std dev = 0,258, 848,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return -0.1304595195271628;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.2498730385312248;  // std dev = 0,236, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | then return -0.09454420463554053;  // std dev = 9,13e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( title(J, H), venue(J, A) )
%   | | | then return -0.014786817653620374;  // std dev = 3,152, 114,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=11 */
%   | | | else return -0.10901442878771077;  // std dev = 0,016, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.038029774899364724;  // std dev = 2,943, 54,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return -0.15156438676253264;  // std dev = 0,072, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07314924011071013;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.02491792541426427;  // std dev = 0,259, 870,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.29598399455883995;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1602424297594025;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16442613417109822;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then return -0.019228119653449532;  // std dev = 0,283, 125,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=11 */
%   | | else return -0.09246957952136195;  // std dev = 0,009, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return 0.030965490426099845;  // std dev = 2,952, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.08900061116647154;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06834207780794466;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.023537937998813804;  // std dev = 0,247, 854,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=312 */
%   | | else return 0.0837833808237978;  // std dev = 0,259, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else return 0.18102506834111284;  // std dev = 0,218, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | then if ( title(H, G), venue(H, A) )
%   | | then if ( samebib(H, I), venue(I, B) )
%   | | | then return 0.7354012967612902;  // std dev = 0,959, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.16971563035608694;  // std dev = 0,226, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.0953149175102709;  // std dev = 0,115, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return -0.009090073850256135;  // std dev = 3,147, 112,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=11 */
%   | | | else return -0.0952074755498866;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06411692743183783;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.948765
   AUC PR    = 0.348096
   CLL	      = -0.172749
   Precision = 0.308697 at threshold = 0.5
   Recall    = 0.909777
   F1        = 0.460979


Total learning time: 194.447 seconds
Total inference time: 3883.243 seconds
AUC ROC: 0.948765


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 01:12:07
{'F1': 0.460979, 'AUC ROC': 0.948765, 'AUC PR': 0.348096, 'Precision': [0.308697, 0.5], 'CLL': -0.172749, 'Learning time': 194.447, 'Inference time': 3883.243, 'Recall': 0.909777}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.8371699141204876;  // std dev = 2,424, 286,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=280 */
%   | | | else return -0.08324300629242938;  // std dev = 5,489, 546,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.6081489350995123;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then if ( title(N, M), venue(N, B) )
%   | | then if ( samebib(N, P), venue(P, A) )
%   | | | then return 0.7748156017661789;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(A, Q), haswordtitle(R, Q) )
%   | | then if ( title(S, R), venue(S, B) )
%   | | | then return -0.042751965801388576;  // std dev = 3,148, 111,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.956638
   AUC PR    = 0.325006
   CLL	      = -0.159283
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 36.253 seconds
Total inference time: 749.706 seconds
AUC ROC: 0.956638


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 01:25:14
{'F1': nan, 'AUC ROC': 0.956638, 'AUC PR': 0.325006, 'Precision': [nan, 0.5], 'CLL': -0.159283, 'Learning time': 36.253, 'Inference time': 749.706, 'Recall': 0.0}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 64082

Target test facts examples: 33542
Target test pos	 examples: 2246
Target test neg examples: 185871

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.1754886025579396;  // std dev = 21,355, 2.105,000 (wgt'ed) examples reached here.  /* #neg=1.437 #pos=668 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.13988309472222335;  // std dev = 21,555, 2.194,000 (wgt'ed) examples reached here.  /* #neg=1.526 #pos=668 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.12712871747247184;  // std dev = 21,440, 2.142,000 (wgt'ed) examples reached here.  /* #neg=1.474 #pos=668 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.09995857742078254;  // std dev = 21,553, 2.193,000 (wgt'ed) examples reached here.  /* #neg=1.525 #pos=668 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.07828847337652728;  // std dev = 21,629, 2.229,000 (wgt'ed) examples reached here.  /* #neg=1.561 #pos=668 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.06748669304240405;  // std dev = 21,583, 2.207,000 (wgt'ed) examples reached here.  /* #neg=1.539 #pos=668 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.06272291913704289;  // std dev = 21,465, 2.153,000 (wgt'ed) examples reached here.  /* #neg=1.485 #pos=668 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.05317881146324517;  // std dev = 21,429, 2.137,000 (wgt'ed) examples reached here.  /* #neg=1.469 #pos=668 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.03722993090863426;  // std dev = 21,516, 2.176,000 (wgt'ed) examples reached here.  /* #neg=1.508 #pos=668 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.023343088677846163;  // std dev = 21,616, 2.223,000 (wgt'ed) examples reached here.  /* #neg=1.555 #pos=668 */


Results
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.339873
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total learning time: 6.288 seconds
Total inference time: 14.066 seconds
AUC ROC: 0.587266


Results scoring model
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.34039
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total scoring time: 6.429 seconds
Parameter learned model CLL: -0.34039


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.355, 1437, 668], 'true': [4.46e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.555, 1526, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.44, 1474, 668], 'true': [4.3e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.553, 1525, 668], 'true': [2.6e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.629, 1561, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.583, 1539, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.465, 1485, 668], 'true': [1.46e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.429, 1469, 668], 'true': [5.16e-08, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.516, 1508, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.616, 1555, 668], 'true': [6.83e-08, 0, 103]}]]
[{'': [1.9315724855614373e-15, 0.2166352029158013]}, {'': [-3.4492365813597096e-16, 0.21176673932138615]}, {'': [1.793603022307049e-15, 0.2146026166457728]}, {'': [6.553549504583448e-16, 0.21182101405022663]}, {'': [-2.4144656069517967e-16, 0.2098742845089775]}, {'': [-5.1738548720395646e-17, 0.21106217827732127]}, {'': [2.0695419488158259e-16, 0.21400053371774883]}, {'': [2.5869274360197823e-17, 0.21487664473502563]}, {'': [-1.2503482607428947e-16, 0.21274532331313195]}, {'': [4.527123013034619e-17, 0.2101976858706623]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1783906269424076;  // std dev = 0,467, 1.986,000 (wgt'ed) examples reached here.  /* #neg=1.350 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.05092001943686177;  // std dev = 3,594, 83,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=16 */
%   | | | else return 0.21529179224236947;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06076998381940661;  // std dev = 2,348, 74,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.150336744302905;  // std dev = 0,465, 2.017,000 (wgt'ed) examples reached here.  /* #neg=1.381 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.0723899470556218;  // std dev = 3,924, 86,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
%   | | | else return 0.003993150652322405;  // std dev = 2,258, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return -0.06919661864217344;  // std dev = 0,247, 92,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.46709689611829275;  // std dev = 2,426, 26,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return -0.14828771926632262;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else return 0.13800113638670167;  // std dev = 0,468, 1.903,000 (wgt'ed) examples reached here.  /* #neg=1.285 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.05794579706599807;  // std dev = 3,934, 88,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=20 */
%   | | | else return -0.04077848846701939;  // std dev = 2,315, 55,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.07197137441679101;  // std dev = 2,381, 110,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=6 */
%   | | | else return -0.1267542767704385;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4997145964359089;  // std dev = 2,227, 24,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return -0.191518781954969;  // std dev = 0,994, 55,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=1 */
%   | | else return 0.11838041988062974;  // std dev = 0,468, 1.888,000 (wgt'ed) examples reached here.  /* #neg=1.270 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.0816087762603021;  // std dev = 3,853, 77,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | | else return 0.005884139018253232;  // std dev = 2,260, 40,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.05430623506800103;  // std dev = 2,369, 93,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=6 */
%   | | | else return -0.11337503335843013;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09574329723561913;  // std dev = 0,466, 1.961,000 (wgt'ed) examples reached here.  /* #neg=1.325 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.04883260614619241;  // std dev = 3,904, 84,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return -0.04430545807385399;  // std dev = 2,324, 60,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.05326492978464899;  // std dev = 2,374, 100,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=6 */
%   | | | else return -0.10246821217283135;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.49168455334127115;  // std dev = 1,747, 21,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return -0.17130540142405523;  // std dev = 0,991, 43,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   | | else return 0.07121491802250883;  // std dev = 0,465, 1.946,000 (wgt'ed) examples reached here.  /* #neg=1.328 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.042139411938069346;  // std dev = 3,644, 84,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | | | else return -0.040353686742694565;  // std dev = 2,733, 53,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0396497702316489;  // std dev = 2,364, 88,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=6 */
%   | | | else return -0.09342082135143087;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.030988383881520913;  // std dev = 0,351, 63,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.022505993308114043;  // std dev = 3,304, 64,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.056666630681492525;  // std dev = 20,254, 1.897,000 (wgt'ed) examples reached here.  /* #neg=1.297 #pos=600 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.09549209210482301;  // std dev = 3,762, 68,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return -0.038957355525159235;  // std dev = 2,317, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | | else return -0.03416992709076595;  // std dev = 0,255, 86,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.32630593771558836;  // std dev = 1,966, 22,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return -0.14638564915933744;  // std dev = 0,989, 38,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
%   | | else return 0.04265612379996999;  // std dev = 0,463, 1.974,000 (wgt'ed) examples reached here.  /* #neg=1.356 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.0508962717197969;  // std dev = 3,834, 76,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return -0.03076192481640801;  // std dev = 2,314, 55,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
%   | | else return -0.03588489353986772;  // std dev = 0,247, 92,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.041127733205701435;  // std dev = 0,463, 1.982,000 (wgt'ed) examples reached here.  /* #neg=1.346 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.045307715597441615;  // std dev = 3,827, 75,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | | else return -0.03237613719163045;  // std dev = 2,320, 58,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03038865454428941;  // std dev = 2,365, 89,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=6 */
%   | | | else return -0.0804654464198507;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.029672010249861488;  // std dev = 20,110, 1.915,000 (wgt'ed) examples reached here.  /* #neg=1.310 #pos=605 */
%   | | | else return 0.054501277733325894;  // std dev = 4,317, 93,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | else return 0.052598474496741474;  // std dev = 0,341, 101,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.6355616246187789;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.010951676178796544;  // std dev = 0,325, 50,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */


Results
   AUC ROC   = 0.64124
   AUC PR    = 0.20168
   CLL	      = -0.325392
   Precision = 0.281059 at threshold = 0.5
   Recall    = 0.184328
   F1        = 0.22264


Total learning time: 77.819 seconds
Total inference time: 417.444 seconds
AUC ROC: 0.64124


Results scoring model
   AUC ROC   = 0.648782
   AUC PR    = 0.179717
   CLL	      = -0.330297
   Precision = 0.40678 at threshold = 0.5
   Recall    = 0.155642
   F1        = 0.225141


Total scoring time: 48.664 seconds
Refined model CLL: -0.330297


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.64124
   AUC PR    = 0.20168
   CLL	      = -0.325392
   Precision = 0.281059 at threshold = 0.5
   Recall    = 0.184328
   F1        = 0.22264


Total learning time: 139.2 seconds
Total inference time: 417.444 seconds
AUC ROC: 0.64124
Total revision time: 139.2
Best scored revision CLL: -0.330297


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:34:47
{'F1': 0.22264, 'AUC ROC': 0.64124, 'AUC PR': 0.20168, 'parameter': {'F1': 0.297195, 'AUC ROC': 0.587266, 'AUC PR': 0.193231, 'CLL': -0.339873, 'Learning time': 6.288, 'Recall': 0.174533, 'Inference time': 14.066, 'Precision': [1.0, 0.5]}, 'CLL': -0.325392, 'Learning time': 139.2, 'Recall': 0.184328, 'Inference time': 417.444, 'Precision': [0.281059, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20788864167783194;  // std dev = 0,477, 2.113,000 (wgt'ed) examples reached here.  /* #neg=1.374 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.12130682983635427;  // std dev = 0,440, 76,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | else return 0.008148935099512315;  // std dev = 0,357, 40,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | else return -0.07042249347191626;  // std dev = 0,258, 84,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8309129490629984;  // std dev = 5,96e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1690870509370016;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.1690870509370016;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06194419379414441;  // std dev = 1,637, 28,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | else return 0.19537995413914044;  // std dev = 0,481, 1.970,000 (wgt'ed) examples reached here.  /* #neg=1.252 #pos=718 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.10939807441596827;  // std dev = 0,442, 75,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | else return -0.03570307028455656;  // std dev = 0,309, 56,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.05849284408716358;  // std dev = 0,263, 80,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=6 */
%   | | else return -0.1334928440871636;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6816138648428892;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14664031103089653;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.1466403110308965;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07722824983762853;  // std dev = 1,658, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else return 0.1555336003531508;  // std dev = 0,478, 2.029,000 (wgt'ed) examples reached here.  /* #neg=1.311 #pos=718 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.06297721301898103;  // std dev = 0,424, 85,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | else return -0.005196569825562529;  // std dev = 0,340, 45,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | else return -0.05700930962801414;  // std dev = 0,255, 86,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11813467014182574;  // std dev = 0,472, 2.155,000 (wgt'ed) examples reached here.  /* #neg=1.416 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.08518154270918214;  // std dev = 0,442, 75,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.004577578570123207;  // std dev = 2,280, 45,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | | else return -0.13791091190345658;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then return -0.05685889547565287;  // std dev = 0,244, 94,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=6 */
%   | | else return -0.11295315212869489;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09620828344350561;  // std dev = 0,471, 2.159,000 (wgt'ed) examples reached here.  /* #neg=1.420 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.05551649686618987;  // std dev = 0,433, 80,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | else return -0.023876073787564674;  // std dev = 0,317, 53,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then return -0.05228359753005928;  // std dev = 0,242, 96,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=6 */
%   | | else return -0.10212092034746875;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7213087776357361;  // std dev = 0,262, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.2532215769342244;  // std dev = 0,078, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.2636943112333797;  // std dev = 1,49e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.061440251084593146;  // std dev = 1,516, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return 0.08860507412823264;  // std dev = 0,474, 2.037,000 (wgt'ed) examples reached here.  /* #neg=1.319 #pos=718 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.046671551461916386;  // std dev = 0,433, 80,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | else return -0.019178120661646373;  // std dev = 0,319, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | else return -0.046905872962615947;  // std dev = 0,242, 96,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordtitle(D, E), haswordvenue(B, E) )
%   | then if ( title(F, D), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.666410067034823;  // std dev = 5,580, 732,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=701 */
%   | | | else return -0.27644326825936694;  // std dev = 0,713, 1.304,000 (wgt'ed) examples reached here.  /* #neg=1.304 */
%   | | else return 0.12253465641539656;  // std dev = 0,467, 84,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | else return 0.04893380837881404;  // std dev = 0,339, 102,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.7187459848139414;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.004018688859205579;  // std dev = 0,343, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else return -0.08924369436585795;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.39788079932566656;  // std dev = 0,225, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.16916738136040535;  // std dev = 0,057, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.1726455674248561;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.21285548225361103;  // std dev = 1,074, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.0012529632951868476;  // std dev = 0,223, 55,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else return 0.056887888864916844;  // std dev = 0,388, 1.940,000 (wgt'ed) examples reached here.  /* #neg=1.240 #pos=700 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | then return 0.03666585109302643;  // std dev = 0,442, 74,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | else return -0.002054517510984839;  // std dev = 0,337, 46,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | else return -0.044557825501415654;  // std dev = 0,247, 92,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.046920477375927916;  // std dev = 0,381, 2.027,000 (wgt'ed) examples reached here.  /* #neg=1.288 #pos=739 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.1321393710989402;  // std dev = 0,119, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return -0.007321633339097281;  // std dev = 3,589, 93,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
%   | | | else return 0.035953336237765005;  // std dev = 2,659, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else return -0.028572857674030294;  // std dev = 0,266, 78,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.024408692742708384;  // std dev = 0,376, 2.123,000 (wgt'ed) examples reached here.  /* #neg=1.384 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.014089976040263075;  // std dev = 0,434, 78,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | else return -0.028110901768737328;  // std dev = 0,304, 58,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return -0.04141822906936256;  // std dev = 2,373, 98,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=6 */
%   | | | else return -0.10282984662757724;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0768966441370782;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.910402
   AUC PR    = 0.366431
   CLL	      = -0.280705
   Precision = 0.890909 at threshold = 0.5
   Recall    = 0.021817
   F1        = 0.04259


Total learning time: 507.065 seconds
Total inference time: 1443.027 seconds
AUC ROC: 0.910402


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 02:07:17
{'F1': 0.04259, 'AUC ROC': 0.910402, 'AUC PR': 0.366431, 'Precision': [0.890909, 0.5], 'CLL': -0.280705, 'Learning time': 507.065, 'Inference time': 1443.027, 'Recall': 0.021817}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20722782031443407;  // std dev = 0,477, 2.117,000 (wgt'ed) examples reached here.  /* #neg=1.378 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.07792915487973198;  // std dev = 0,414, 91,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=20 */
%   | | else return 0.020311097261674484;  // std dev = 0,369, 37,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.05734402264696657;  // std dev = 2,344, 71,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.554805
   AUC PR    = 0.013437
   CLL	      = -0.198955
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.357 seconds
Total inference time: 18.369 seconds
AUC ROC: 0.554805


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 02:07:46
{'F1': nan, 'AUC ROC': 0.554805, 'AUC PR': 0.013437, 'Precision': [nan, 0.5], 'CLL': -0.198955, 'Learning time': 9.357, 'Inference time': 18.369, 'Recall': 0.0}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 50581

Target test facts examples: 33252
Target test pos	 examples: 2436
Target test neg examples: 199372

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.14420234756241535;  // std dev = 18,551, 1.685,000 (wgt'ed) examples reached here.  /* #neg=1.203 #pos=482 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.1344743042469912;  // std dev = 18,437, 1.635,000 (wgt'ed) examples reached here.  /* #neg=1.153 #pos=482 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.11338657673236532;  // std dev = 18,465, 1.647,000 (wgt'ed) examples reached here.  /* #neg=1.165 #pos=482 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.10620413345694282;  // std dev = 18,332, 1.592,000 (wgt'ed) examples reached here.  /* #neg=1.110 #pos=482 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.07032455197254213;  // std dev = 18,575, 1.696,000 (wgt'ed) examples reached here.  /* #neg=1.214 #pos=482 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.06355441672224715;  // std dev = 18,506, 1.665,000 (wgt'ed) examples reached here.  /* #neg=1.183 #pos=482 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.05683859444104408;  // std dev = 18,446, 1.639,000 (wgt'ed) examples reached here.  /* #neg=1.157 #pos=482 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.06168929278199907;  // std dev = 18,245, 1.558,000 (wgt'ed) examples reached here.  /* #neg=1.076 #pos=482 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.033832757752447935;  // std dev = 18,458, 1.644,000 (wgt'ed) examples reached here.  /* #neg=1.162 #pos=482 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.0307091506465392;  // std dev = 18,413, 1.625,000 (wgt'ed) examples reached here.  /* #neg=1.143 #pos=482 */


Results
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.326958
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 4.523 seconds
Total inference time: 13.957 seconds
AUC ROC: 0.581281


Results scoring model
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.326286
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 5.348 seconds
Parameter learned model CLL: -0.326286


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.551, 1203, 482], 'true': [3.77e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.437, 1153, 482], 'true': [1.19e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.465, 1165, 482], 'true': [4.21e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.332, 1110, 482], 'true': [2.46e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.575, 1214, 482], 'true': [0.0, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.506, 1183, 482], 'true': [0.0, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.446, 1157, 482], 'true': [1.37e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.245, 1076, 482], 'true': [6.99e-08, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.458, 1162, 482], 'true': [0.0, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.413, 1143, 482], 'true': [6.5e-08, 0, 99]}]]
[{'': [1.4354398702224246e-15, 0.2042268576812162]}, {'': [1.4354398702224247e-16, 0.20789346201685924]}, {'': [1.794299837778031e-15, 0.20700734975075014]}, {'': [6.100619448445304e-16, 0.21109788894217751]}, {'': [0.0, 0.20342954565683122]}, {'': [-4.485749594445077e-17, 0.20568532496459796]}, {'': [1.8840148296669324e-16, 0.2075976772693779]}, {'': [4.9343245538895844e-17, 0.21366057995423646]}, {'': [-1.1214373986112693e-16, 0.20722852694454238]}, {'': [4.261462114722823e-17, 0.2086346982248482]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.26439893509951234;  // std dev = 0,491, 32,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.24050187627598293;  // std dev = 2,834, 34,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.16972163539624333;  // std dev = 17,004, 1.348,000 (wgt'ed) examples reached here.  /* #neg=928 #pos=420 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.2137044906550679;  // std dev = 3,211, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return -0.0418510649004878;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.016851064900487652;  // std dev = 3,969, 144,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.11509339218796172;  // std dev = 0,453, 45,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else return 0.15602858618889315;  // std dev = 0,467, 1.352,000 (wgt'ed) examples reached here.  /* #neg=919 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.08406252263132345;  // std dev = 3,455, 63,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return -0.04159442220197976;  // std dev = 1,345, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.017363169786719923;  // std dev = 3,974, 147,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11782649010027592;  // std dev = 0,460, 1.464,000 (wgt'ed) examples reached here.  /* #neg=1.018 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.08909372277333852;  // std dev = 3,415, 59,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return -0.0367555235791096;  // std dev = 1,345, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014449331633662176;  // std dev = 3,973, 146,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=18 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10377780097759003;  // std dev = 0,462, 1.443,000 (wgt'ed) examples reached here.  /* #neg=997 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.10055691213785295;  // std dev = 3,355, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.05397902912375696;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0035049977194498527;  // std dev = 3,936, 129,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=18 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09077723410517044;  // std dev = 0,464, 1.422,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.07365924165691742;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return -0.05397947628448643;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.004089398082490824;  // std dev = 3,952, 136,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=18 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07066198716393773;  // std dev = 0,462, 1.441,000 (wgt'ed) examples reached here.  /* #neg=995 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.04419649465316999;  // std dev = 3,376, 66,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return -0.0693783687512765;  // std dev = 1,431, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02131153698609825;  // std dev = 3,992, 157,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=18 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07127965227845774;  // std dev = 0,468, 1.380,000 (wgt'ed) examples reached here.  /* #neg=934 #pos=446 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.052170985240407454;  // std dev = 0,327, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.019897384223713274;  // std dev = 3,479, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.002287458622652166;  // std dev = 3,941, 135,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6736238662205691;  // std dev = 4,737, 358,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=334 */
%   | | | else return -0.22948931672714587;  // std dev = 4,075, 775,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=16 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.24471965040379934;  // std dev = 2,035, 290,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=4 */
%   | | | else return 0.3564671252867475;  // std dev = 6,320, 170,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.568291637809165;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.06816661510263577;  // std dev = 3,558, 65,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return -0.07829791325125694;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.04242927259469841;  // std dev = 0,383, 37,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else return 0.03642963951710361;  // std dev = 0,396, 1.359,000 (wgt'ed) examples reached here.  /* #neg=926 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.05284075233499461;  // std dev = 3,340, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.06977442465061333;  // std dev = 1,378, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.006818002791922298;  // std dev = 3,508, 132,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=18 */
%   | | | else return -0.07343422740009535;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.13752779362300363;  // std dev = 0,400, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.034433403583841185;  // std dev = 2,363, 39,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.02671529098926541;  // std dev = 14,434, 1.322,000 (wgt'ed) examples reached here.  /* #neg=902 #pos=420 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.017404742727559944;  // std dev = 3,401, 59,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return -0.03178976538373327;  // std dev = 1,356, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0022105759881341273;  // std dev = 3,535, 138,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=18 */
%   | | | else return -0.06859151376679015;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.956311
   AUC PR    = 0.591114
   CLL	      = -0.266706
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 65.594 seconds
Total inference time: 515.909 seconds
AUC ROC: 0.956311


Results scoring model
   AUC ROC   = 0.94551
   AUC PR    = 0.502847
   CLL	      = -0.269727
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 25.281 seconds
Refined model CLL: -0.269727


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.956311
   AUC PR    = 0.591114
   CLL	      = -0.266706
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 100.74599999999998 seconds
Total inference time: 515.909 seconds
AUC ROC: 0.956311
Total revision time: 100.74599999999998
Best scored revision CLL: -0.269727


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:18:18
{'F1': 0.279661, 'AUC ROC': 0.956311, 'AUC PR': 0.591114, 'parameter': {'F1': 0.279661, 'AUC ROC': 0.581281, 'AUC PR': 0.181212, 'CLL': -0.326958, 'Learning time': 4.523, 'Recall': 0.162562, 'Inference time': 13.957, 'Precision': [1.0, 0.5]}, 'CLL': -0.266706, 'Learning time': 100.74599999999998, 'Recall': 0.162562, 'Inference time': 515.909, 'Precision': [1.0, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20773200116749965;  // std dev = 0,477, 1.559,000 (wgt'ed) examples reached here.  /* #neg=1.014 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.0803711573217344;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.008517731567154319;  // std dev = 3,724, 120,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=16 */
%   | | | else return -0.07288554765910848;  // std dev = 1,365, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19719839624474184;  // std dev = 0,482, 1.488,000 (wgt'ed) examples reached here.  /* #neg=943 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6606498827991895;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.12889090406751688;  // std dev = 0,153, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.24808102275960012;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.008585961763816093;  // std dev = 3,726, 121,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=16 */
%   | | | else return -0.059134119471763044;  // std dev = 1,361, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.4014003431439999;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.220755181853677;  // std dev = 0,493, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else return 0.1590744472684047;  // std dev = 0,479, 1.479,000 (wgt'ed) examples reached here.  /* #neg=950 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( title(J, H), venue(J, A) )
%   | | | then return 0.5698406851003871;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.12075428826638294;  // std dev = 0,175, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.03833287974459182;  // std dev = 0,278, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.0021666662852130986;  // std dev = 3,711, 118,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=16 */
%   | | | else return -0.06598631131056623;  // std dev = 1,379, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.3298120602815503;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.07032068930985828;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return 0.13535255340093805;  // std dev = 0,483, 35,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else return 0.12636478145749935;  // std dev = 0,477, 1.468,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=516 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then return 0.02523382401247344;  // std dev = 0,245, 62,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | else return -0.0372852083448479;  // std dev = 0,259, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, A) )
%   | | | then return 0.002208631814932558;  // std dev = 3,703, 114,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=16 */
%   | | | else return -0.07293262419542909;  // std dev = 1,385, 38,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=2 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6601263217231078;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1448996480234729;  // std dev = 0,491, 32,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else return 0.10360228351004652;  // std dev = 0,477, 1.506,000 (wgt'ed) examples reached here.  /* #neg=977 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return 0.027094186350035566;  // std dev = 0,243, 61,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | else if ( title(J, H), venue(J, A) )
%   | | | then return -0.10499526155527004;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.1578373572399788;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.02761376548328839;  // std dev = 3,642, 98,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=16 */
%   | | | else return -0.06186812705130952;  // std dev = 1,390, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0871733959451896;  // std dev = 0,478, 1.532,000 (wgt'ed) examples reached here.  /* #neg=987 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.25767973881999073;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.10534775619887607;  // std dev = 2,89e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.0955299783500872;  // std dev = 9,13e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.30048502847109787;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.01361442126452501;  // std dev = 3,667, 104,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=16 */
%   | | | else return -0.04868334195928406;  // std dev = 1,382, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07244668091984727;  // std dev = 0,479, 1.520,000 (wgt'ed) examples reached here.  /* #neg=975 #pos=545 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return 0.02830981783451612;  // std dev = 0,370, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.024303591578819953;  // std dev = 1,543, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return -0.034008557358676694;  // std dev = 1,189, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0015584199372576284;  // std dev = 3,701, 117,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=16 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06073769296325756;  // std dev = 0,480, 1.506,000 (wgt'ed) examples reached here.  /* #neg=961 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.2902870965152359;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.10026363700008988;  // std dev = 0,094, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.08490867601974282;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.04023165034496902;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.1330506052371385;  // std dev = 0,066, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.014413342787094828;  // std dev = 3,958, 149,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=18 */
%   | | | else return -0.07514863934459004;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6515616625241176;  // std dev = 0,200, 413,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=396 */
%   | | else return -0.27196750439265405;  // std dev = 0,153, 740,000 (wgt'ed) examples reached here.  /* #neg=724 #pos=16 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.28895703718404403;  // std dev = 0,122, 297,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=4 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3587759092301601;  // std dev = 6,506, 192,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=129 */
%   | | | else return 0.13200390306471374;  // std dev = 1,404, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return -0.0015521704954415442;  // std dev = 0,237, 60,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | else return 0.10376411286165756;  // std dev = 0,374, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | then return 0.6668303395508978;  // std dev = 0,067, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.07116107682888081;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.5040631343783977;  // std dev = 0,195, 411,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=396 */
%   | | else return -0.21774255094031078;  // std dev = 0,152, 736,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=16 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.22985252999794628;  // std dev = 0,127, 263,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=4 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3217985058739791;  // std dev = 6,046, 180,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=129 */
%   | | | else return 0.16425344182940038;  // std dev = 1,351, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.41993166640273966;  // std dev = 0,873, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5099073109796929;  // std dev = 0,066, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return -0.06613145861764386;  // std dev = 0,289, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.003036393876790998;  // std dev = 0,198, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */


Results
   AUC ROC   = 0.980482
   AUC PR    = 0.418256
   CLL	      = -0.242396
   Precision = 0.430828 at threshold = 0.5
   Recall    = 0.929392
   F1        = 0.58874


Total learning time: 115.9 seconds
Total inference time: 1136.418 seconds
AUC ROC: 0.980482


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 02:39:11
{'F1': 0.58874, 'AUC ROC': 0.980482, 'AUC PR': 0.418256, 'Precision': [0.430828, 0.5], 'CLL': -0.242396, 'Learning time': 115.9, 'Inference time': 1136.418, 'Recall': 0.929392}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2002541982574071;  // std dev = 0,474, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | else return 0.2068635033262707;  // std dev = 0,477, 1.517,000 (wgt'ed) examples reached here.  /* #neg=988 #pos=529 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.6581489350995123;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.14185106490048766;  // std dev = 7,15e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( title(K, H), venue(K, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return 0.16003572755234255;  // std dev = 3,342, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.024204006076958388;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.583878
   AUC PR    = 0.029773
   CLL	      = -0.198823
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 11.154 seconds
Total inference time: 58.83 seconds
AUC ROC: 0.583878


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 02:40:21
{'F1': nan, 'AUC ROC': 0.583878, 'AUC PR': 0.029773, 'Precision': [nan, 0.5], 'CLL': -0.198823, 'Learning time': 11.154, 'Inference time': 58.83, 'Recall': 0.0}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 67804

Target test facts examples: 34429
Target test pos	 examples: 2270
Target test neg examples: 182149

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.14872364774318544;  // std dev = 21,174, 2.175,000 (wgt'ed) examples reached here.  /* #neg=1.543 #pos=632 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.13972951082008037;  // std dev = 21,023, 2.102,000 (wgt'ed) examples reached here.  /* #neg=1.470 #pos=632 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.11392903017518824;  // std dev = 21,114, 2.145,000 (wgt'ed) examples reached here.  /* #neg=1.513 #pos=632 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.10161584572589875;  // std dev = 21,036, 2.108,000 (wgt'ed) examples reached here.  /* #neg=1.476 #pos=632 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.0822934624293798;  // std dev = 21,076, 2.127,000 (wgt'ed) examples reached here.  /* #neg=1.495 #pos=632 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.07019689233833178;  // std dev = 21,045, 2.112,000 (wgt'ed) examples reached here.  /* #neg=1.480 #pos=632 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.05601573679122272;  // std dev = 21,068, 2.123,000 (wgt'ed) examples reached here.  /* #neg=1.491 #pos=632 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.05001313560115968;  // std dev = 21,002, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.460 #pos=632 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.03718197370932346;  // std dev = 21,051, 2.115,000 (wgt'ed) examples reached here.  /* #neg=1.483 #pos=632 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.030785797584637023;  // std dev = 21,038, 2.109,000 (wgt'ed) examples reached here.  /* #neg=1.477 #pos=632 */


Results
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.331087
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total learning time: 5.805 seconds
Total inference time: 12.946 seconds
AUC ROC: 0.5837


Results scoring model
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.330164
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total scoring time: 6.437 seconds
Parameter learned model CLL: -0.330164


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.174, 1543, 632], 'true': [6.19e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.023, 1470, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.114, 1513, 632], 'true': [4.62e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.036, 1476, 632], 'true': [3.26e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.076, 1495, 632], 'true': [1.84e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.045, 1480, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.068, 1491, 632], 'true': [1.76e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.002, 1460, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.051, 1483, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.038, 1477, 632], 'true': [7.6e-08, 0, 115]}]]
[{'': [3.3364615418300357e-15, 0.20614104901570612]}, {'': [-1.0503675224279742e-15, 0.21026596934095101]}, {'': [1.853589745461131e-15, 0.20782673426031978]}, {'': [9.267948727305654e-16, 0.20992406266538485]}, {'': [2.934850430313457e-16, 0.20884461959419293]}, {'': [-4.633974363652827e-17, 0.20969639577594507]}, {'': [2.703151712130816e-16, 0.2090714510279068]}, {'': [-2.703151712130816e-17, 0.21083687652861458]}, {'': [-1.5832745742480493e-16, 0.20952578955898915]}, {'': [5.0201388939572296e-17, 0.20986712549187636]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.164260346673331;  // std dev = 0,461, 1.849,000 (wgt'ed) examples reached here.  /* #neg=1.283 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.7510060779566546;  // std dev = 1,637, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0.47719655414713136;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.01199508894566621;  // std dev = 3,442, 91,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | | else return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.009320944418559959;  // std dev = 3,089, 83,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3036210640591566;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.051240111678204095;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return 0.14636223386603514;  // std dev = 0,461, 1.908,000 (wgt'ed) examples reached here.  /* #neg=1.314 #pos=594 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.019473196239787664;  // std dev = 3,424, 86,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=14 */
%   | | | else return 0.06855588555220968;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01245799304450214;  // std dev = 3,096, 86,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=11 */
%   | | | else return -0.14072021577107618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12232819686941282;  // std dev = 0,461, 1.847,000 (wgt'ed) examples reached here.  /* #neg=1.281 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4257757292608074;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return 0.5290132033301991;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.0037777301558432987;  // std dev = 2,243, 37,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.0316943352617155;  // std dev = 3,008, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | else return -0.006154531521021497;  // std dev = 0,339, 83,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0920663147712985;  // std dev = 0,456, 1.917,000 (wgt'ed) examples reached here.  /* #neg=1.351 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3311623531371155;  // std dev = 2,774, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | | else return 0.43196927188667433;  // std dev = 1,541, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.14971509178922737;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.03719172666309216;  // std dev = 3,708, 90,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | | | else return 0.0038695193097600788;  // std dev = 3,069, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08191495797730948;  // std dev = 0,456, 1.972,000 (wgt'ed) examples reached here.  /* #neg=1.368 #pos=604 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.013973043461296132;  // std dev = 3,482, 107,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=14 */
%   | | | else return -0.03934585511565297;  // std dev = 1,632, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04265564945701521;  // std dev = 2,971, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | | else return -0.1242999342125266;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07067465535823936;  // std dev = 0,457, 1.954,000 (wgt'ed) examples reached here.  /* #neg=1.350 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.036507815680286326;  // std dev = 3,357, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | | else return 0.1993785156290278;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.013229127597773952;  // std dev = 0,329, 89,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05399295275739418;  // std dev = 0,458, 1.888,000 (wgt'ed) examples reached here.  /* #neg=1.322 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.25359454541412313;  // std dev = 2,596, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.34260772227473574;  // std dev = 1,289, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.062483938458099304;  // std dev = 3,300, 69,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | | else return -0.02479634387156852;  // std dev = 1,619, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else return 0.02032169894236311;  // std dev = 0,386, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04571574186804099;  // std dev = 0,456, 1.955,000 (wgt'ed) examples reached here.  /* #neg=1.351 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.0315573654094981;  // std dev = 2,254, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.014438821064214137;  // std dev = 3,001, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | else return 0.01258434415682655;  // std dev = 0,361, 71,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03872535040560381;  // std dev = 0,460, 1.866,000 (wgt'ed) examples reached here.  /* #neg=1.300 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.15952412437907704;  // std dev = 2,449, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return 0.05705241783648067;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.0424324686708733;  // std dev = 2,163, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return -0.013261970034025997;  // std dev = 3,090, 84,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=11 */
%   | | else return -0.022234606418775758;  // std dev = 0,353, 75,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.019689325826583497;  // std dev = 0,455, 1.939,000 (wgt'ed) examples reached here.  /* #neg=1.373 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2249958484288747;  // std dev = 1,859, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0.07102444574958391;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.0010697760981094367;  // std dev = 2,215, 34,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.005383620829854372;  // std dev = 3,017, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | else return -0.014153228469634854;  // std dev = 0,334, 86,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=11 */


Results
   AUC ROC   = 0.643252
   AUC PR    = 0.208861
   CLL	      = -0.308612
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 94.13300000000001 seconds
Total inference time: 148.281 seconds
AUC ROC: 0.643252


Results scoring model
   AUC ROC   = 0.62415
   AUC PR    = 0.191584
   CLL	      = -0.321522
   Precision = 0.222384 at threshold = 0.5
   Recall    = 0.204819
   F1        = 0.21324


Total scoring time: 17.665 seconds
Refined model CLL: -0.321522


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.643252
   AUC PR    = 0.208861
   CLL	      = -0.308612
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 124.04000000000002 seconds
Total inference time: 148.281 seconds
AUC ROC: 0.643252
Total revision time: 124.04000000000002
Best scored revision CLL: -0.321522


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:45:08
{'F1': 0.280928, 'AUC ROC': 0.643252, 'AUC PR': 0.208861, 'parameter': {'F1': 0.286792, 'AUC ROC': 0.5837, 'AUC PR': 0.186484, 'CLL': -0.331087, 'Learning time': 5.805, 'Recall': 0.167401, 'Inference time': 12.946, 'Precision': [1.0, 0.5]}, 'CLL': -0.308612, 'Learning time': 124.04000000000002, 'Recall': 0.19207, 'Inference time': 148.281, 'Precision': [0.522782, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2033991904621222;  // std dev = 0,475, 1.958,000 (wgt'ed) examples reached here.  /* #neg=1.282 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.588918165868743;  // std dev = 2,262, 26,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return 0.40360348055405776;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.7867203636709409;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.03996711691769416;  // std dev = 0,386, 33,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else return 0.05814893509951237;  // std dev = 0,400, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return -0.00261055857137374;  // std dev = 0,346, 79,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.16324050794674863;  // std dev = 0,471, 2.038,000 (wgt'ed) examples reached here.  /* #neg=1.362 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.5341058084796236;  // std dev = 1,747, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.39101988909498997;  // std dev = 2,217, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.6622329172201352;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then return -0.14816126908204538;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( haswordtitle(M, N), haswordvenue(A, N) )
%   | | | then return 0.019880445191221934;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.01510113699116603;  // std dev = 3,032, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | else return -0.00738723888284795;  // std dev = 0,341, 82,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.20742434978777752;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.03872949636606885;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return 0.474091016454444;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.1436268814333367;  // std dev = 0,472, 1.975,000 (wgt'ed) examples reached here.  /* #neg=1.311 #pos=664 */
%   | | else return 0.4888657757998219;  // std dev = 0,360, 51,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=43 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( title(L, J), venue(L, B) )
%   | | | then return 0.7827856144727342;  // std dev = 0,965, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.14984027723747662;  // std dev = 0,033, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return 0.22570642687888226;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return -0.004835922796118118;  // std dev = 0,343, 81,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.12299489510257951;  // std dev = 0,473, 1.994,000 (wgt'ed) examples reached here.  /* #neg=1.318 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.1453847682440815;  // std dev = 2,614, 30,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return 0.21355604373305695;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.5820503947475276;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.43376945799640776;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.7204771390084712;  // std dev = 0,004, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.13236755750133514;  // std dev = 0,006, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return 0.06971917100240195;  // std dev = 0,433, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return -0.010643176382271143;  // std dev = 0,336, 85,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.09992732005208434;  // std dev = 0,473, 2.003,000 (wgt'ed) examples reached here.  /* #neg=1.327 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.2999626735583966;  // std dev = 1,798, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return 0.08557990553676538;  // std dev = 1,582, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.3042799229476076;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.33175512125884843;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return -0.030911847274227106;  // std dev = 0,301, 42,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | else return -0.015144362013125127;  // std dev = 0,254, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return 0.005958856422125821;  // std dev = 0,352, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
%   | | else return -0.1387779856831374;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.08583042557612813;  // std dev = 0,474, 1.977,000 (wgt'ed) examples reached here.  /* #neg=1.301 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.18274502537512038;  // std dev = 1,881, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.0893357683780884;  // std dev = 1,884, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.22487097499620526;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.26269408593988197;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.028207191912296578;  // std dev = 0,344, 29,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else return -0.009605117283100198;  // std dev = 0,268, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.015896208745990226;  // std dev = 0,329, 89,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=11 */
%   | | else return -0.12300730895221315;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06048537118242764;  // std dev = 0,468, 2.099,000 (wgt'ed) examples reached here.  /* #neg=1.380 #pos=719 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then return -0.02737535535717856;  // std dev = 0,305, 40,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | else return -0.008182779787578743;  // std dev = 0,336, 85,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=11 */
%   | else return -0.005241674251385321;  // std dev = 0,269, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.05766854070472686;  // std dev = 0,475, 1.972,000 (wgt'ed) examples reached here.  /* #neg=1.296 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.3398153709843361;  // std dev = 0,965, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.14585335523235496;  // std dev = 1,540, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020227713452501506;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.2050228135351749;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return -0.049801013401287196;  // std dev = 0,301, 45,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | else return 0.006912478520908571;  // std dev = 0,272, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | else return 0.0015435387882564047;  // std dev = 0,344, 80,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordvenue(B, F) )
%   | | then return 0.3532165709532242;  // std dev = 0,752, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09631353461860312;  // std dev = 2,327, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.11996598697964789;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.04818599436596125;  // std dev = 0,475, 1.925,000 (wgt'ed) examples reached here.  /* #neg=1.261 #pos=664 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0987976645726561;  // std dev = 2,345, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | | else return 0.05455728590291696;  // std dev = 1,924, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then return -0.1508004039010297;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 6.548731267443523E-4;  // std dev = 0,295, 94,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=17 */
%   | | else return -0.01445531025915108;  // std dev = 0,325, 91,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.023646406868894985;  // std dev = 0,470, 2.044,000 (wgt'ed) examples reached here.  /* #neg=1.368 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.021907943013251857;  // std dev = 1,877, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.14613652656063536;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.15461571337026436;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -7.395646720887253E-4;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, B) )
%   | | then if ( title(M, K), venue(M, A) )
%   | | | then return 0.5253033591968799;  // std dev = 2,141, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return -0.14046204091790437;  // std dev = 0,126, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return -0.027946818540550023;  // std dev = 0,224, 25,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | else return -0.008852151983730775;  // std dev = 0,248, 69,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */


Results
   AUC ROC   = 0.600565
   AUC PR    = 0.039057
   CLL	      = -0.344076
   Precision = 0.177686 at threshold = 0.5
   Recall    = 0.037885
   F1        = 0.062455


Total learning time: 149.463 seconds
Total inference time: 265.838 seconds
AUC ROC: 0.600565


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 02:52:04
{'F1': 0.062455, 'AUC ROC': 0.600565, 'AUC PR': 0.039057, 'Precision': [0.177686, 0.5], 'CLL': -0.344076, 'Learning time': 149.463, 'Inference time': 265.838, 'Recall': 0.037885}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1944673430597063;  // std dev = 0,472, 2.010,000 (wgt'ed) examples reached here.  /* #neg=1.334 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.5367203636709408;  // std dev = 2,471, 28,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.7867203636709409;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, B) )
%   | | then if ( title(M, K), venue(M, A) )
%   | | | then return 0.6359267128772901;  // std dev = 1,764, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return -0.05851773156715445;  // std dev = 0,276, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | then return 0.019913640981865297;  // std dev = 0,368, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.598963
   AUC PR    = 0.03749
   CLL	      = -0.195594
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 21.576 seconds
Total inference time: 59.927 seconds
AUC ROC: 0.598963


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 02:53:27
{'F1': nan, 'AUC ROC': 0.598963, 'AUC PR': 0.03749, 'Precision': [nan, 0.5], 'CLL': -0.195594, 'Learning time': 21.576, 'Inference time': 59.927, 'Recall': 0.0}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 35540

Target test facts examples: 33914
Target test pos	 examples: 2467
Target test neg examples: 214413

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.1552917922423645;  // std dev = 18,137, 1.575,000 (wgt'ed) examples reached here.  /* #neg=1.107 #pos=468 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.14167651188581226;  // std dev = 18,054, 1.542,000 (wgt'ed) examples reached here.  /* #neg=1.074 #pos=468 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.12612364012995184;  // std dev = 17,995, 1.519,000 (wgt'ed) examples reached here.  /* #neg=1.051 #pos=468 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.09868639240062048;  // std dev = 18,097, 1.559,000 (wgt'ed) examples reached here.  /* #neg=1.091 #pos=468 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.07872485890216918;  // std dev = 18,144, 1.578,000 (wgt'ed) examples reached here.  /* #neg=1.110 #pos=468 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.06407644332947057;  // std dev = 18,156, 1.583,000 (wgt'ed) examples reached here.  /* #neg=1.115 #pos=468 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.07391099058049079;  // std dev = 17,878, 1.476,000 (wgt'ed) examples reached here.  /* #neg=1.008 #pos=468 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.053529645401861656;  // std dev = 17,963, 1.507,000 (wgt'ed) examples reached here.  /* #neg=1.039 #pos=468 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.03971120628693505;  // std dev = 18,008, 1.524,000 (wgt'ed) examples reached here.  /* #neg=1.056 #pos=468 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.02419842663713697;  // std dev = 18,107, 1.563,000 (wgt'ed) examples reached here.  /* #neg=1.095 #pos=468 */


Results
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.337171
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total learning time: 4.976 seconds
Total inference time: 15.873 seconds
AUC ROC: 0.583705


Results scoring model
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.340398
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total scoring time: 4.635 seconds
Parameter learned model CLL: -0.340398


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.137, 1107, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.054, 1074, 468], 'true': [2.67e-07, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.995, 1051, 468], 'true': [3.48e-07, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.097, 1091, 468], 'true': [1.03e-07, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.144, 1110, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.156, 1115, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.878, 1008, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [17.963, 1039, 468], 'true': [4.21e-08, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.008, 1056, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.107, 1095, 468], 'true': [5.77e-08, 0, 82]}]]
[{'': [-6.932124251318051e-16, 0.2088489795918198]}, {'': [8.665155314147563e-16, 0.21138851458765887]}, {'': [1.4730764034050857e-15, 0.2131734045951339]}, {'': [1.2997732971221344e-16, 0.2100769353885033]}, {'': [-3.4660621256590254e-16, 0.20861946825888375]}, {'': [-5.415722071342227e-17, 0.20823747580198598]}, {'': [-1.408087738548979e-16, 0.21653777513383335]}, {'': [2.166288828536891e-17, 0.21410898664010541]}, {'': [-5.144935967775116e-17, 0.2127844255688452]}, {'': [4.06179155350667e-17, 0.2097693421406323]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18314893509950742;  // std dev = 0,468, 1.280,000 (wgt'ed) examples reached here.  /* #neg=864 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.14981560176617903;  // std dev = 3,149, 48,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.07288554765910835;  // std dev = 3,343, 174,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=12 */
%   | | | else return 0.08672036367094033;  // std dev = 4,303, 105,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.041256946941083575;  // std dev = 3,778, 87,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
%   | | | else return 0.8343603952169459;  // std dev = 4,21e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.15619947567671744;  // std dev = 0,467, 1.218,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=392 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.0905434546912924;  // std dev = 0,428, 66,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.23718084894770713;  // std dev = 2,902, 35,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return -0.03766616291215987;  // std dev = 4,428, 218,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14370318351927014;  // std dev = 0,470, 1.254,000 (wgt'ed) examples reached here.  /* #neg=838 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.027072640536322138;  // std dev = 4,541, 151,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=26 */
%   | | | else return -0.13079579843413078;  // std dev = 0,084, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.11195106057628142;  // std dev = 4,346, 96,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
%   | | | else return -0.16275434243122508;  // std dev = 0,051, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10641273393755564;  // std dev = 3,510, 57,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.7439421414104044;  // std dev = 0,155, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1313635475987406;  // std dev = 0,474, 1.146,000 (wgt'ed) examples reached here.  /* #neg=754 #pos=392 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.13093283736014513;  // std dev = 0,037, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0.03183014943718324;  // std dev = 4,518, 145,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=26 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.14450662072910236;  // std dev = 4,193, 82,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | | else return -0.13609610981633377;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4680025021496055;  // std dev = 2,185, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.09018563546621751;  // std dev = 2,329, 57,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=8 */
%   | | else return 0.10750677677176389;  // std dev = 0,474, 1.147,000 (wgt'ed) examples reached here.  /* #neg=755 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.053199588088529134;  // std dev = 4,398, 107,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=26 */
%   | | | else return -0.12985501145459916;  // std dev = 0,220, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.1974623026275577;  // std dev = 2,894, 35,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return -0.014194896818086583;  // std dev = 3,234, 103,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0770405112613333;  // std dev = 0,467, 1.258,000 (wgt'ed) examples reached here.  /* #neg=842 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.08041402164386507;  // std dev = 1,185, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.10063975095429682;  // std dev = 3,079, 46,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.07028705830659418;  // std dev = 3,104, 45,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return -0.011599886047844342;  // std dev = 4,280, 172,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.36158879325208365;  // std dev = 2,183, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.07348253563206363;  // std dev = 2,309, 51,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | | else return 0.06608835339926218;  // std dev = 0,471, 1.170,000 (wgt'ed) examples reached here.  /* #neg=778 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.4076375310634239;  // std dev = 1,143, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.14822095146321093;  // std dev = 2,691, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03791457597259914;  // std dev = 3,272, 143,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=12 */
%   | | | else return 0.015659795798248898;  // std dev = 4,292, 111,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.46774292005404355;  // std dev = 1,344, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.09917109197359893;  // std dev = 2,382, 69,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07371997936980783;  // std dev = 3,492, 55,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.038491731318754094;  // std dev = 15,900, 1.161,000 (wgt'ed) examples reached here.  /* #neg=789 #pos=372 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.11397394383900035;  // std dev = 0,482, 40,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.051651755811537074;  // std dev = 3,308, 179,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=12 */
%   | | | else return 0.029589163097524615;  // std dev = 4,238, 104,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.034492820028448945;  // std dev = 0,463, 1.278,000 (wgt'ed) examples reached here.  /* #neg=862 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.006398069619284762;  // std dev = 4,483, 160,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=26 */
%   | | | else return -0.1123123554156492;  // std dev = 0,209, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.050087850036722725;  // std dev = 4,307, 96,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
%   | | | else return -0.13844007340186426;  // std dev = 0,123, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7054569969236746;  // std dev = 0,254, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.27342976003941954;  // std dev = 0,148, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.21696515936892197;  // std dev = 1,082, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.08104688769895645;  // std dev = 3,305, 53,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.004214757767296359;  // std dev = 2,918, 70,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.030247746737995046;  // std dev = 15,821, 1.137,000 (wgt'ed) examples reached here.  /* #neg=765 #pos=372 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.04663387864411918;  // std dev = 3,103, 109,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=12 */
%   | | | else return 0.0017894952851342627;  // std dev = 4,280, 139,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=24 */


Results
   AUC ROC   = 0.632093
   AUC PR    = 0.192055
   CLL	      = -0.337455
   Precision = 0.270254 at threshold = 0.5
   Recall    = 0.177138
   F1        = 0.214006


Total learning time: 40.26 seconds
Total inference time: 106.72200000000001 seconds
AUC ROC: 0.632093


Results scoring model
   AUC ROC   = 0.692662
   AUC PR    = 0.214586
   CLL	      = -0.321606
   Precision = 0.415966 at threshold = 0.5
   Recall    = 0.18
   F1        = 0.251269


Total scoring time: 12.503 seconds
Refined model CLL: -0.321606


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.632093
   AUC PR    = 0.192055
   CLL	      = -0.337455
   Precision = 0.270254 at threshold = 0.5
   Recall    = 0.177138
   F1        = 0.214006


Total learning time: 62.373999999999995 seconds
Total inference time: 106.72200000000001 seconds
AUC ROC: 0.632093
Total revision time: 62.373999999999995
Best scored revision CLL: -0.321606


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:56:33
{'F1': 0.214006, 'AUC ROC': 0.632093, 'AUC PR': 0.192055, 'parameter': {'F1': 0.286806, 'AUC ROC': 0.583705, 'AUC PR': 0.185174, 'CLL': -0.337171, 'Learning time': 4.976, 'Recall': 0.16741, 'Inference time': 15.873, 'Precision': [1.0, 0.5]}, 'CLL': -0.337455, 'Learning time': 62.373999999999995, 'Recall': 0.177138, 'Inference time': 106.72200000000001, 'Precision': [0.270254, 0.5]}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.05413176665487368;  // std dev = 2,136, 57,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
%   | else return 0.23435472288085793;  // std dev = 0,484, 1.244,000 (wgt'ed) examples reached here.  /* #neg=776 #pos=468 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then return 0.1914822684328457;  // std dev = 0,471, 48,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.06443171006177797;  // std dev = 0,267, 155,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.10304689428318518;  // std dev = 4,257, 98,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18941571875002317;  // std dev = 0,477, 1.374,000 (wgt'ed) examples reached here.  /* #neg=876 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.03320549123154838;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.33320549123154836;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.15752981555587298;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.13418733580318604;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return -0.026079227695078106;  // std dev = 3,271, 111,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0925590543356742;  // std dev = 4,250, 97,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18312325418554837;  // std dev = 0,483, 1.294,000 (wgt'ed) examples reached here.  /* #neg=796 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.11425387769360287;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return -0.18984957134308;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.23180197388841972;  // std dev = 2,832, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.029486678396318366;  // std dev = 3,276, 123,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=12 */
%   | | | else return -0.12945379912962912;  // std dev = 0,027, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.09350118399746604;  // std dev = 4,212, 92,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.74584754136128;  // std dev = 0,203, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.23270383612900572;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.12214895958878164;  // std dev = 1,881, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return 0.5940367632241366;  // std dev = 0,900, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.1301673526872364;  // std dev = 0,478, 1.292,000 (wgt'ed) examples reached here.  /* #neg=824 #pos=468 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.018612478808095523;  // std dev = 0,314, 212,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=26 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.3181830869801306;  // std dev = 0,987, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.13060325820585966;  // std dev = 2,989, 42,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.043946102759654375;  // std dev = 2,914, 50,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11948360846932574;  // std dev = 0,477, 1.319,000 (wgt'ed) examples reached here.  /* #neg=821 #pos=498 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.8184135074280067;  // std dev = 0,267, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.13528397670027684;  // std dev = 0,444, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else return -0.11605969426974282;  // std dev = 0,073, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.09573417797859207;  // std dev = 4,280, 89,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | | | else return -0.19011820573291624;  // std dev = 0,017, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11219697116256312;  // std dev = 0,013, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08998070943420261;  // std dev = 0,475, 1.341,000 (wgt'ed) examples reached here.  /* #neg=843 #pos=498 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7309524157271763;  // std dev = 0,149, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17472954873241245;  // std dev = 0,115, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.10503613752979657;  // std dev = 0,011, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.01584294910663879;  // std dev = 3,016, 53,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.4073859311327678;  // std dev = 0,753, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08004229760412154;  // std dev = 2,163, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.06066341274424488;  // std dev = 3,043, 108,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=11 */
%   | | | else return -0.02942966140430646;  // std dev = 2,727, 120,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06823667785812118;  // std dev = 0,474, 1.356,000 (wgt'ed) examples reached here.  /* #neg=858 #pos=498 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return 0.004982503839656396;  // std dev = 0,295, 153,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=26 */
%   | | else return -0.09880376941908735;  // std dev = 0,033, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.06911382350223912;  // std dev = 4,247, 93,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   | | | else return -0.17287380497301413;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.2790787718001868;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09844153029306368;  // std dev = 0,021, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.656501343623791;  // std dev = 0,137, 503,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=494 */
%   | | else return -0.2693116149704687;  // std dev = 0,108, 995,000 (wgt'ed) examples reached here.  /* #neg=988 #pos=7 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1666371815779458;  // std dev = 0,102, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( haswordtitle(D, H), haswordvenue(B, H) )
%   | | | then return 0.3575354456752837;  // std dev = 1,006, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.16564849599966688;  // std dev = 0,090, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.6240581995553464;  // std dev = 0,103, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.09707934664708064;  // std dev = 4,127, 81,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return -0.16346172956212035;  // std dev = 0,113, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.12934440354481946;  // std dev = 0,061, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.030208776598174728;  // std dev = 0,376, 1.359,000 (wgt'ed) examples reached here.  /* #neg=861 #pos=498 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -1.946147606513374E-4;  // std dev = 0,354, 79,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return -0.010039328463397657;  // std dev = 3,046, 59,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return -0.08495244038686818;  // std dev = 0,139, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -3.5666316374624795E-5;  // std dev = 2,816, 134,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=24 */
%   | | | else return -0.0755029211228933;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.4980870486692012;  // std dev = 0,126, 501,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=494 */
%   | | else return -0.22904825062663342;  // std dev = 0,101, 982,000 (wgt'ed) examples reached here.  /* #neg=975 #pos=7 */
%   | else return -0.08066657249195812;  // std dev = 0,207, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, G) )
%   | | | then return 0.26774391493606114;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21753555783402198;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5385841374956385;  // std dev = 0,068, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return 0.08045710660595123;  // std dev = 0,451, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.004467686110927216;  // std dev = 3,029, 56,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | | else return -0.10603310227551248;  // std dev = 0,149, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.951019
   AUC PR    = 0.340047
   CLL	      = -0.24979
   Precision = 0.360977 at threshold = 0.5
   Recall    = 0.880422
   F1        = 0.512023


Total learning time: 172.989 seconds
Total inference time: 1097.888 seconds
AUC ROC: 0.951019


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 03:17:45
{'F1': 0.512023, 'AUC ROC': 0.951019, 'AUC PR': 0.340047, 'Precision': [0.360977, 0.5], 'CLL': -0.24979, 'Learning time': 172.989, 'Inference time': 1097.888, 'Recall': 0.880422}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.030739953789376617;  // std dev = 2,108, 45,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2395670280090429;  // std dev = 0,486, 1.227,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=468 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(L, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1824732594238367;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then if ( haswordtitle(N, P), haswordvenue(B, P) )
%   | | | then return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.025346210531555634;  // std dev = 3,256, 103,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=12 */
%   | | else if ( haswordvenue(B, Q), haswordtitle(R, Q) )
%   | | | then return 0.11621345122854393;  // std dev = 4,220, 93,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.556039
   AUC PR    = 0.019027
   CLL	      = -0.201864
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.783 seconds
Total inference time: 43.876 seconds
AUC ROC: 0.556039


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 03:18:38
{'F1': nan, 'AUC ROC': 0.556039, 'AUC PR': 0.019027, 'Precision': [nan, 0.5], 'CLL': -0.201864, 'Learning time': 8.783, 'Inference time': 43.876, 'Recall': 0.0}


