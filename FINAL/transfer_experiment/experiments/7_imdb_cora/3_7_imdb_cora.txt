Starting experiment #3 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.14185106490048896;  // std dev = 0,000, 678,000 (wgt'ed) examples reached here.  /* #neg=678 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.1254446385283924;  // std dev = 0,000, 723,000 (wgt'ed) examples reached here.  /* #neg=723 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360628;  // std dev = 4,59e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.11231637819360693;  // std dev = 0,000, 764,000 (wgt'ed) examples reached here.  /* #neg=764 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783617;  // std dev = 5,05e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.10159632948783523;  // std dev = 4,15e-07, 672,000 (wgt'ed) examples reached here.  /* #neg=672 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.09269127618926191;  // std dev = 0,000, 661,000 (wgt'ed) examples reached here.  /* #neg=661 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.08518475138839675;  // std dev = 1,23e-07, 680,000 (wgt'ed) examples reached here.  /* #neg=680 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109169;  // std dev = 3,16e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.07877675473109282;  // std dev = 0,000, 710,000 (wgt'ed) examples reached here.  /* #neg=710 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07324622576333649;  // std dev = 2,49e-07, 717,000 (wgt'ed) examples reached here.  /* #neg=717 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2,24e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420253;  // std dev = 1,87e-07, 700,000 (wgt'ed) examples reached here.  /* #neg=700 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06419184008202525;  // std dev = 2,26e-07, 767,000 (wgt'ed) examples reached here.  /* #neg=767 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 31946

Target test facts examples: 35095
Target test pos	 examples: 2649
Target test neg examples: 218007

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.1274558657925768;  // std dev = 14,098, 1.010,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=272 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.10702193806644451;  // std dev = 14,138, 1.026,000 (wgt'ed) examples reached here.  /* #neg=754 #pos=272 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.10051115885392554;  // std dev = 14,059, 995,000 (wgt'ed) examples reached here.  /* #neg=723 #pos=272 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.08187173915233636;  // std dev = 14,095, 1.009,000 (wgt'ed) examples reached here.  /* #neg=737 #pos=272 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.0714947120769554;  // std dev = 14,072, 1.000,000 (wgt'ed) examples reached here.  /* #neg=728 #pos=272 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.06562274953465046;  // std dev = 14,015, 979,000 (wgt'ed) examples reached here.  /* #neg=707 #pos=272 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.04432699786945925;  // std dev = 14,113, 1.016,000 (wgt'ed) examples reached here.  /* #neg=744 #pos=272 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.033675223623668045;  // std dev = 14,141, 1.027,000 (wgt'ed) examples reached here.  /* #neg=755 #pos=272 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.03753434005649176;  // std dev = 14,045, 990,000 (wgt'ed) examples reached here.  /* #neg=718 #pos=272 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.02929527792410239;  // std dev = 14,059, 995,000 (wgt'ed) examples reached here.  /* #neg=723 #pos=272 */


Results
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.297977
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 6.175 seconds
Total inference time: 21.431 seconds
AUC ROC: 0.575311


Results scoring model
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.295832
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 6.622 seconds
Parameter learned model CLL: -0.295832


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 96], 'false': [14.098, 738, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.88e-07, 0, 96], 'false': [14.138, 754, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.09e-07, 0, 96], 'false': [14.059, 723, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.23e-07, 0, 96], 'false': [14.095, 737, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 96], 'false': [14.072, 728, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 96], 'false': [14.015, 707, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.26e-07, 0, 96], 'false': [14.113, 744, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 96], 'false': [14.141, 755, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 96], 'false': [14.045, 718, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 96], 'false': [14.059, 723, 272]}]]
[{'': [1.1842378929335002e-15, 0.1967807077737492]}, {'': [3.7007434154171886e-16, 0.19482537836902894]}, {'': [1.7393494052460785e-15, 0.19863740814625364]}, {'': [5.181040781584064e-16, 0.1969037827049118]}, {'': [1.850371707708594e-17, 0.1980160000000035]}, {'': [-4.625929269271486e-17, 0.2006425017293756]}, {'': [1.6653345369377348e-16, 0.19604439208878247]}, {'': [6.013708050052931e-17, 0.19470404246019252]}, {'': [-6.013708050052931e-17, 0.19926129986736082]}, {'': [1.3877787807814457e-17, 0.19863740814625114]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16603070849852236;  // std dev = 0,462, 812,000 (wgt'ed) examples reached here.  /* #neg=562 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.04363677918620196;  // std dev = 3,150, 112,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.027379704330281595;  // std dev = 3,023, 65,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15157412756823163;  // std dev = 0,464, 794,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.041216032196742546;  // std dev = 3,154, 116,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=11 */
%   | | | else return -0.13537984390640123;  // std dev = 0,011, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0054681593508233775;  // std dev = 3,057, 73,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12782519741142845;  // std dev = 0,464, 799,000 (wgt'ed) examples reached here.  /* #neg=549 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.11931180571254005;  // std dev = 0,018, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.03878320866640241;  // std dev = 3,158, 119,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.05410315379394382;  // std dev = 2,966, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.12179090908711432;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return 0.10966716086652606;  // std dev = 0,464, 791,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=249 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return -0.10886581936158835;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.02046422466907289;  // std dev = 3,134, 103,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=11 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.03367201116580065;  // std dev = 2,992, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08628762703196913;  // std dev = 0,462, 808,000 (wgt'ed) examples reached here.  /* #neg=558 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.03453741351662132;  // std dev = 3,158, 126,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=11 */
%   | | | else return -0.10705441604827692;  // std dev = 0,049, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.023149883079678205;  // std dev = 3,003, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07416997045407835;  // std dev = 0,464, 799,000 (wgt'ed) examples reached here.  /* #neg=549 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.0957139106861742;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.02176343171517347;  // std dev = 3,146, 111,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.005339538365366751;  // std dev = 3,049, 71,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=11 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05503988464052514;  // std dev = 0,461, 813,000 (wgt'ed) examples reached here.  /* #neg=563 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.02715745006638912;  // std dev = 3,156, 124,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=11 */
%   | | | else return -0.09588103769754786;  // std dev = 0,034, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.004627296441029853;  // std dev = 3,032, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.046799965169412906;  // std dev = 0,462, 807,000 (wgt'ed) examples reached here.  /* #neg=557 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.08161428986522548;  // std dev = 0,033, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.028159187050130745;  // std dev = 3,165, 127,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04353042028331386;  // std dev = 2,960, 54,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06169290954885823;  // std dev = 0,471, 749,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.004846126936857859;  // std dev = 3,109, 96,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=11 */
%   | | | else return -0.08308281967681228;  // std dev = 0,069, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04143130077752933;  // std dev = 2,952, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.028286932556507938;  // std dev = 0,463, 800,000 (wgt'ed) examples reached here.  /* #neg=550 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.07977399969536261;  // std dev = 9,13e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.02565709925516381;  // std dev = 3,164, 127,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.00548470419919079;  // std dev = 3,008, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.609192
   AUC PR    = 0.170423
   CLL	      = -0.318241
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 41.257 seconds
Total inference time: 277.06 seconds
AUC ROC: 0.609192


Results scoring model
   AUC ROC   = 0.698689
   AUC PR    = 0.283886
   CLL	      = -0.29694
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 19.359 seconds
Refined model CLL: -0.29694


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.297977
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 73.41300000000001 seconds
Total inference time: 21.431 seconds
AUC ROC: 0.575311
Total revision time: 73.41300000000001
Best scored revision CLL: -0.295832


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:27
{'F1': 0.261811, 'parameter': {'F1': 0.261811, 'Precision': [1.0, 0.5], 'Inference time': 21.431, 'AUC PR': 0.168925, 'CLL': -0.297977, 'Learning time': 6.175, 'AUC ROC': 0.575311, 'Recall': 0.150623}, 'Precision': [1.0, 0.5], 'Inference time': 21.431, 'AUC PR': 0.168925, 'CLL': -0.297977, 'Learning time': 73.41300000000001, 'AUC ROC': 0.575311, 'Recall': 0.150623}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.8236661764788189;  // std dev = 3,107, 290,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=280 */
%   | | | else return -0.08043071941104471;  // std dev = 5,480, 521,000 (wgt'ed) examples reached here.  /* #neg=489 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.762910839861417;  // std dev = 0,294, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.0597615126616817;  // std dev = 0,275, 134,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.019913640981865297;  // std dev = 0,368, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.691897402794757;  // std dev = 3,107, 290,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=280 */
%   | | | else return -0.07697608625704441;  // std dev = 5,498, 578,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.661767910919359;  // std dev = 0,279, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then return -0.059388386260884454;  // std dev = 0,264, 146,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=11 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.033126884009704115;  // std dev = 3,008, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | | else return -0.14429247082900562;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.5462432904250485;  // std dev = 2,613, 287,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=280 */
%   | | | else return -0.06279558385302698;  // std dev = 5,482, 525,000 (wgt'ed) examples reached here.  /* #neg=493 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.30536643674628466;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then return 0.26375725625868063;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5927441513508077;  // std dev = 5,16e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.056988651686702564;  // std dev = 0,257, 155,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.044920770311895376;  // std dev = 0,394, 57,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.4037777230800916;  // std dev = 2,953, 289,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=280 */
%   | | | else return -0.06125164265070246;  // std dev = 5,497, 573,000 (wgt'ed) examples reached here.  /* #neg=541 #pos=32 */
%   | | else return 0.05329994589328992;  // std dev = 0,257, 45,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then return 0.2026037360505124;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.39585739561757544;  // std dev = 0,218, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.0414391021054994;  // std dev = 0,272, 137,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=11 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.02322016877517096;  // std dev = 3,008, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | | else return -0.13245113434236533;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.07555077140531195;  // std dev = 0,275, 825,000 (wgt'ed) examples reached here.  /* #neg=513 #pos=312 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.11091250212349134;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.4659804595483407;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return 0.017977947949855005;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3325374914096465;  // std dev = 0,230, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.04044662223051348;  // std dev = 0,266, 143,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=11 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.0065670460842154115;  // std dev = 3,057, 73,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | | else return -0.1179581925999465;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.28166003037185067;  // std dev = 3,392, 292,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=280 */
%   | | | else return -0.05855489371250744;  // std dev = 5,484, 537,000 (wgt'ed) examples reached here.  /* #neg=505 #pos=32 */
%   | | else return 0.0015109454472578881;  // std dev = 0,230, 44,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then return 0.07033106259275539;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.23647653699320278;  // std dev = 0,220, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return -0.031154528311927027;  // std dev = 0,275, 134,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=11 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.02394422351875367;  // std dev = 3,003, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.10622758178085202;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.24009300543395481;  // std dev = 2,613, 287,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=280 */
%   | | | else return -0.05674372665404355;  // std dev = 5,497, 572,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=32 */
%   | | else return 0.09705113572591643;  // std dev = 0,222, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else return 0.20185832408532356;  // std dev = 0,237, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return -0.0145008678542759;  // std dev = 0,294, 115,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=11 */
%   | | else return -0.11015304176731934;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.026872071375898313;  // std dev = 2,992, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return -0.09655565174557205;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.24381267147547891;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( haswordtitle(F, C) )
%   | | then return 0.03949959353413164;  // std dev = 0,247, 832,000 (wgt'ed) examples reached here.  /* #neg=509 #pos=323 */
%   | | else return 0.06753165478596936;  // std dev = 0,373, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | then return -0.10838252334416859;  // std dev = 0,009, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( title(J, H), venue(J, B) )
%   | | | then return -0.016302715955915825;  // std dev = 3,160, 119,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=11 */
%   | | | else return -0.09981050570425685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return -0.16320537580074224;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03856252895346599;  // std dev = 2,957, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.02792799491172566;  // std dev = 0,252, 851,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.12141584108813626;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14374035096852847;  // std dev = 0,248, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.809496910908925;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.10551739382810355;  // std dev = 0,039, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return -0.09773735722774524;  // std dev = 0,022, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.01790021227960583;  // std dev = 2,992, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return -0.09161376772412792;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.026994007546017603;  // std dev = 0,242, 863,000 (wgt'ed) examples reached here.  /* #neg=539 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.35382298852239025;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07950597520528965;  // std dev = 0,296, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | then return -0.09638408515283518;  // std dev = 0,105, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( title(J, H), venue(J, B) )
%   | | | then return -0.013107725941153444;  // std dev = 2,796, 114,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=11 */
%   | | | else return -0.08281805713797882;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.034247196876791966;  // std dev = 2,955, 54,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return -0.1276666639677726;  // std dev = 0,106, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06315249661921117;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.961287
   AUC PR    = 0.354552
   CLL	      = -0.158345
   Precision = 0.308697 at threshold = 0.5
   Recall    = 0.909777
   F1        = 0.460979


Total learning time: 253.353 seconds
Total inference time: 4606.701 seconds
AUC ROC: 0.961287


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 01:27:28
{'Inference time': 4606.701, 'F1': 0.460979, 'Learning time': 253.353, 'Precision': [0.308697, 0.5], 'AUC PR': 0.354552, 'CLL': -0.158345, 'Recall': 0.909777, 'AUC ROC': 0.961287}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.8236661764788189;  // std dev = 3,107, 290,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=280 */
%   | | | else return -0.08078236261041175;  // std dev = 5,481, 524,000 (wgt'ed) examples reached here.  /* #neg=492 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( title(M, K), venue(M, B) )
%   | | | then return -0.04619889098744419;  // std dev = 3,154, 115,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | then return -0.07042249347191636;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else return 0.03672036367094094;  // std dev = 0,383, 56,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */


Results
   AUC ROC   = 0.94025
   AUC PR    = 0.22828
   CLL	      = -0.160814
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 34.338 seconds
Total inference time: 690.074 seconds
AUC ROC: 0.94025


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 01:39:32
{'Inference time': 690.074, 'F1': nan, 'Learning time': 34.338, 'Precision': [nan, 0.5], 'AUC PR': 0.22828, 'CLL': -0.160814, 'Recall': 0.0, 'AUC ROC': 0.94025}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 64082

Target test facts examples: 33542
Target test pos	 examples: 2246
Target test neg examples: 185871

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.1572980618348409;  // std dev = 21,637, 2.233,000 (wgt'ed) examples reached here.  /* #neg=1.565 #pos=668 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.1460203365579282;  // std dev = 21,498, 2.168,000 (wgt'ed) examples reached here.  /* #neg=1.500 #pos=668 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.1113521549314315;  // std dev = 21,712, 2.270,000 (wgt'ed) examples reached here.  /* #neg=1.602 #pos=668 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.10417358722035207;  // std dev = 21,557, 2.195,000 (wgt'ed) examples reached here.  /* #neg=1.527 #pos=668 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.07887706370876889;  // std dev = 21,682, 2.255,000 (wgt'ed) examples reached here.  /* #neg=1.587 #pos=668 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.07633903233669677;  // std dev = 21,509, 2.173,000 (wgt'ed) examples reached here.  /* #neg=1.505 #pos=668 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.05531353778784918;  // std dev = 21,621, 2.225,000 (wgt'ed) examples reached here.  /* #neg=1.557 #pos=668 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.051842425163933656;  // std dev = 21,514, 2.175,000 (wgt'ed) examples reached here.  /* #neg=1.507 #pos=668 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.031360852873868625;  // std dev = 21,676, 2.252,000 (wgt'ed) examples reached here.  /* #neg=1.584 #pos=668 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.03528200345326812;  // std dev = 21,520, 2.178,000 (wgt'ed) examples reached here.  /* #neg=1.510 #pos=668 */


Results
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.335328
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total learning time: 6.456 seconds
Total inference time: 14.029 seconds
AUC ROC: 0.587266


Results scoring model
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.33585
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total scoring time: 6.295 seconds
Parameter learned model CLL: -0.33585


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 103], 'false': [21.637, 1565, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.498, 1500, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.3e-07, 0, 103], 'false': [21.712, 1602, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.6e-07, 0, 103], 'false': [21.557, 1527, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.682, 1587, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.509, 1505, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.46e-07, 0, 103], 'false': [21.621, 1557, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 103], 'false': [21.514, 1507, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.676, 1584, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.83e-08, 0, 103], 'false': [21.52, 1510, 668]}]]
[{'': [1.9315724855614373e-15, 0.20965892670882008]}, {'': [-3.4492365813597096e-16, 0.21318132923026817]}, {'': [1.793603022307049e-15, 0.20767645403561058]}, {'': [6.553549504583448e-16, 0.21171247554754963]}, {'': [-2.4144656069517967e-16, 0.20847803108147672]}, {'': [-5.1738548720395646e-17, 0.21290874979273997]}, {'': [2.0695419488158259e-16, 0.21008983714178991]}, {'': [2.5869274360197823e-17, 0.21279978861142965]}, {'': [-1.2503482607428947e-16, 0.208638699683583]}, {'': [4.527123013034619e-17, 0.2126364235054443]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1923580785572057;  // std dev = 0,472, 1.903,000 (wgt'ed) examples reached here.  /* #neg=1.267 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.11455919150976858;  // std dev = 3,856, 78,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return -0.021851064900487705;  // std dev = 2,298, 50,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | | else return -0.07443533456340903;  // std dev = 0,251, 89,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15707762769298356;  // std dev = 0,468, 1.963,000 (wgt'ed) examples reached here.  /* #neg=1.327 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.10003389684695503;  // std dev = 3,856, 78,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return -0.030120998974967485;  // std dev = 2,312, 55,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.060740194378235315;  // std dev = 2,359, 83,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=6 */
%   | | | else return -0.13302935100474134;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12462532349634292;  // std dev = 0,464, 2.022,000 (wgt'ed) examples reached here.  /* #neg=1.386 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.11982397852195929;  // std dev = 3,769, 69,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return -0.015641520346710295;  // std dev = 2,298, 50,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | | else return -0.06024476719311411;  // std dev = 0,248, 91,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11416198634284391;  // std dev = 0,468, 1.963,000 (wgt'ed) examples reached here.  /* #neg=1.327 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.034607307289667585;  // std dev = 3,944, 90,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=20 */
%   | | | else return -0.006158517811769492;  // std dev = 2,288, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04561052665278485;  // std dev = 2,357, 81,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=6 */
%   | | | else return -0.11227513341844493;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4789465481789031;  // std dev = 2,227, 24,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return -0.18938678515443028;  // std dev = 0,980, 25,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else return 0.08527716596574396;  // std dev = 0,464, 1.964,000 (wgt'ed) examples reached here.  /* #neg=1.346 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.07732355432716545;  // std dev = 3,820, 74,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | | else return -0.017721246533149024;  // std dev = 2,304, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | | else return -0.05496180873612347;  // std dev = 0,237, 100,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.079520313711406;  // std dev = 0,467, 1.960,000 (wgt'ed) examples reached here.  /* #neg=1.324 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.044726055860283866;  // std dev = 3,873, 80,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | | else return 0.0052893438262838904;  // std dev = 2,276, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else return -0.043411860443383896;  // std dev = 0,248, 91,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.05034071487429868;  // std dev = 20,381, 1.947,000 (wgt'ed) examples reached here.  /* #neg=1.342 #pos=605 */
%   | | | else return 0.08879486978667318;  // std dev = 4,274, 88,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   | | else return 0.06741427378126369;  // std dev = 0,368, 89,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.597337316542416;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.011179250290865342;  // std dev = 2,268, 42,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | | else return -0.09293125158123804;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4695276462712543;  // std dev = 2,106, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return -0.24979620974493594;  // std dev = 0,999, 42,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | | else return 0.0595075854323453;  // std dev = 0,468, 1.869,000 (wgt'ed) examples reached here.  /* #neg=1.251 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.025414427956149233;  // std dev = 3,629, 84,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | | | else return -0.023367917616332515;  // std dev = 2,676, 44,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else return -0.045333557610924675;  // std dev = 0,248, 91,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.039744152739679885;  // std dev = 0,464, 1.973,000 (wgt'ed) examples reached here.  /* #neg=1.337 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.04600247425574967;  // std dev = 3,809, 73,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return -0.030556758172404296;  // std dev = 2,317, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.10742440918560085;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.048676631456715365;  // std dev = 2,376, 103,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04227452289886184;  // std dev = 0,468, 1.909,000 (wgt'ed) examples reached here.  /* #neg=1.273 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.0275945973999043;  // std dev = 3,648, 101,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=16 */
%   | | | else return 0.048723837453567106;  // std dev = 2,678, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else return -0.03353727548969523;  // std dev = 0,253, 87,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=6 */


Results
   AUC ROC   = 0.642224
   AUC PR    = 0.206092
   CLL	      = -0.33098
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total learning time: 74.263 seconds
Total inference time: 396.178 seconds
AUC ROC: 0.642224


Results scoring model
   AUC ROC   = 0.647871
   AUC PR    = 0.182279
   CLL	      = -0.337862
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total scoring time: 47.333 seconds
Refined model CLL: -0.337862


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.335328
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total learning time: 134.347 seconds
Total inference time: 14.029 seconds
AUC ROC: 0.587266
Total revision time: 134.347
Best scored revision CLL: -0.33585


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:48:39
{'F1': 0.297195, 'parameter': {'F1': 0.297195, 'Precision': [1.0, 0.5], 'Inference time': 14.029, 'AUC PR': 0.193231, 'CLL': -0.335328, 'Learning time': 6.456, 'AUC ROC': 0.587266, 'Recall': 0.174533}, 'Precision': [1.0, 0.5], 'Inference time': 14.029, 'AUC PR': 0.193231, 'CLL': -0.335328, 'Learning time': 134.347, 'AUC ROC': 0.587266, 'Recall': 0.174533}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.2171489350995073;  // std dev = 0,480, 2.000,000 (wgt'ed) examples reached here.  /* #neg=1.282 #pos=718 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.12841920536978244;  // std dev = 0,444, 74,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | else return 0.020311097261674484;  // std dev = 0,369, 37,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.07208362304002257;  // std dev = 0,255, 86,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18689652405858043;  // std dev = 0,478, 2.065,000 (wgt'ed) examples reached here.  /* #neg=1.326 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.12750075404326924;  // std dev = 0,452, 70,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | else return -0.01668197808222545;  // std dev = 0,334, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return -0.061872242595983534;  // std dev = 2,360, 84,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=6 */
%   | | | else return -0.13330081402455504;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.742526211415031;  // std dev = 0,223, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return -0.19845884956640214;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08718974405184249;  // std dev = 1,605, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.4153994902673643;  // std dev = 1,930, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | | else return -0.13953742541550118;  // std dev = 0,954, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else return 0.14773303965219733;  // std dev = 0,476, 2.022,000 (wgt'ed) examples reached here.  /* #neg=1.322 #pos=700 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | then return 0.09432733076746112;  // std dev = 0,444, 74,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | else return 0.007706590357177631;  // std dev = 0,357, 40,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | else return -0.05804434195887274;  // std dev = 0,252, 88,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13283182455516399;  // std dev = 0,475, 2.069,000 (wgt'ed) examples reached here.  /* #neg=1.330 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.05687395311516391;  // std dev = 0,431, 81,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | else return -0.01280178084642061;  // std dev = 0,337, 46,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | else return -0.06410596388658554;  // std dev = 0,229, 108,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.618545471821731;  // std dev = 0,153, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.3727127614796826;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1367006966124613;  // std dev = 0,245, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | else return 0.10022943832860508;  // std dev = 0,474, 2.066,000 (wgt'ed) examples reached here.  /* #neg=1.348 #pos=718 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | then return 0.08676570831446208;  // std dev = 0,452, 70,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | else return -0.02628807931164405;  // std dev = 0,319, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.04358814631696998;  // std dev = 0,255, 86,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=6 */
%   | | else return -0.10070225259252626;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.515300297782749;  // std dev = 0,198, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.2111306477263983;  // std dev = 0,130, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.1595700355149649;  // std dev = 1,49e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.016906663878211308;  // std dev = 1,532, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return 0.08807240536621253;  // std dev = 0,475, 2.026,000 (wgt'ed) examples reached here.  /* #neg=1.308 #pos=718 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.04002655830725576;  // std dev = 0,435, 79,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | else if ( title(L, J), venue(L, A) )
%   | | | then return -0.03324287727389729;  // std dev = 2,317, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | | | else return -0.13850603516863413;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0489731671993494;  // std dev = 0,236, 101,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0701069435394788;  // std dev = 0,471, 2.085,000 (wgt'ed) examples reached here.  /* #neg=1.346 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.026985663800998955;  // std dev = 0,431, 81,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.0012535492217629692;  // std dev = 2,280, 45,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | | else return -0.12279114729746611;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.03348548426003531;  // std dev = 0,256, 85,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordtitle(D, E), haswordvenue(B, E) )
%   | then if ( title(F, D), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6550200124387912;  // std dev = 5,060, 725,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=701 */
%   | | | else return -0.29221819300542157;  // std dev = 0,904, 1.365,000 (wgt'ed) examples reached here.  /* #neg=1.365 */
%   | | else return 0.08185139949373511;  // std dev = 0,454, 92,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
%   | else return 0.06871202043685784;  // std dev = 0,347, 92,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=18 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.5020294899135637;  // std dev = 0,400, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return 0.7020294899135636;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return -0.13444094446668792;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.004173153014957644;  // std dev = 0,333, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordtitle(D, E), haswordvenue(B, E) )
%   | then if ( title(F, D), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.49232869817350444;  // std dev = 5,773, 734,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=701 */
%   | | | else return -0.2368481390556639;  // std dev = 0,654, 1.312,000 (wgt'ed) examples reached here.  /* #neg=1.312 */
%   | | else return 0.0644666371262066;  // std dev = 0,452, 93,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | else return 0.06224311303484499;  // std dev = 0,353, 89,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return 0.13844548448295127;  // std dev = 0,391, 54,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | else return 0.4347236803928461;  // std dev = 0,569, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordtitle(D, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(A, E) )
%   | | then return 0.013026796547030614;  // std dev = 0,304, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.312 #pos=708 */
%   | | else return -0.03273804708580042;  // std dev = 0,409, 99,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=22 */
%   | else return 0.030656190387052515;  // std dev = 0,331, 104,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then return 0.47699295752038456;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.4305096053143952;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.007887604740514063;  // std dev = 0,345, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */


Results
   AUC ROC   = 0.92955
   AUC PR    = 0.425543
   CLL	      = -0.236049
   Precision = 0.44417 at threshold = 0.5
   Recall    = 0.800534
   F1        = 0.571338


Total learning time: 977.512 seconds
Total inference time: 2834.337 seconds
AUC ROC: 0.92955


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 02:52:11
{'Inference time': 2834.337, 'F1': 0.571338, 'Learning time': 977.512, 'Precision': [0.44417, 0.5], 'AUC PR': 0.425543, 'CLL': -0.236049, 'Recall': 0.800534, 'AUC ROC': 0.92955}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20855196971306822;  // std dev = 0,477, 2.109,000 (wgt'ed) examples reached here.  /* #neg=1.370 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.09344305274657101;  // std dev = 0,424, 85,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | else return -0.00548742853685133;  // std dev = 0,343, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | else return -0.0773349358682296;  // std dev = 0,246, 93,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=6 */


Results
   AUC ROC   = 0.554762
   AUC PR    = 0.013437
   CLL	      = -0.198984
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.364 seconds
Total inference time: 18.261 seconds
AUC ROC: 0.554762


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 02:52:40
{'Inference time': 18.261, 'F1': nan, 'Learning time': 9.364, 'Precision': [nan, 0.5], 'AUC PR': 0.013437, 'CLL': -0.198984, 'Recall': 0.0, 'AUC ROC': 0.554762}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 50581

Target test facts examples: 33252
Target test pos	 examples: 2436
Target test neg examples: 199372

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.14454228031638197;  // std dev = 18,546, 1.683,000 (wgt'ed) examples reached here.  /* #neg=1.201 #pos=482 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.12653207513144848;  // std dev = 18,539, 1.680,000 (wgt'ed) examples reached here.  /* #neg=1.198 #pos=482 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.11828203313664487;  // std dev = 18,415, 1.626,000 (wgt'ed) examples reached here.  /* #neg=1.144 #pos=482 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.0918005325884884;  // std dev = 18,526, 1.674,000 (wgt'ed) examples reached here.  /* #neg=1.192 #pos=482 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.08469468206335082;  // std dev = 18,425, 1.630,000 (wgt'ed) examples reached here.  /* #neg=1.148 #pos=482 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.06230500990936433;  // std dev = 18,528, 1.675,000 (wgt'ed) examples reached here.  /* #neg=1.193 #pos=482 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.05192808484387644;  // std dev = 18,519, 1.671,000 (wgt'ed) examples reached here.  /* #neg=1.189 #pos=482 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.049497223774606795;  // std dev = 18,427, 1.631,000 (wgt'ed) examples reached here.  /* #neg=1.149 #pos=482 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.038758171785800724;  // std dev = 18,446, 1.639,000 (wgt'ed) examples reached here.  /* #neg=1.157 #pos=482 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.03131933391306995;  // std dev = 18,446, 1.639,000 (wgt'ed) examples reached here.  /* #neg=1.157 #pos=482 */


Results
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.322917
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 5.73 seconds
Total inference time: 14.65 seconds
AUC ROC: 0.581281


Results scoring model
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.322234
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 5.761 seconds
Parameter learned model CLL: -0.322234


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 99], 'false': [18.546, 1201, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.19e-07, 0, 99], 'false': [18.539, 1198, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-07, 0, 99], 'false': [18.415, 1144, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 99], 'false': [18.526, 1192, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 99], 'false': [18.425, 1148, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 99], 'false': [18.528, 1193, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.37e-07, 0, 99], 'false': [18.519, 1189, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.99e-08, 0, 99], 'false': [18.427, 1149, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 99], 'false': [18.446, 1157, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.5e-08, 0, 99], 'false': [18.446, 1157, 482]}]]
[{'': [1.4354398702224246e-15, 0.2043721970323455]}, {'': [1.4354398702224247e-16, 0.2045904195011332]}, {'': [1.794299837778031e-15, 0.20856046198840178]}, {'': [6.100619448445304e-16, 0.20502762754277135]}, {'': [0.0, 0.2082637660431169]}, {'': [-4.485749594445077e-17, 0.20495468924036353]}, {'': [1.8840148296669324e-16, 0.2052466101600797]}, {'': [4.9343245538895844e-17, 0.20818965468630915]}, {'': [-1.1214373986112693e-16, 0.20759767726940073]}, {'': [4.261462114722823e-17, 0.20759767726940354]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.20950028645086372;  // std dev = 0,477, 37,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else return 0.16611479569694693;  // std dev = 0,462, 1.406,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.2059750220560341;  // std dev = 3,230, 46,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return -0.05851773156715447;  // std dev = 1,354, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.006909265678024765;  // std dev = 3,914, 121,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14975136604705735;  // std dev = 0,464, 1.424,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.07733548208027673;  // std dev = 3,473, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | | else return -0.03963782073377896;  // std dev = 1,345, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.009848164584933143;  // std dev = 3,906, 118,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13224317516218548;  // std dev = 0,465, 1.406,000 (wgt'ed) examples reached here.  /* #neg=960 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.1337759648302879;  // std dev = 3,314, 51,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.05031737189196547;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01056987070896924;  // std dev = 3,950, 135,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=18 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10640432417850818;  // std dev = 0,463, 1.429,000 (wgt'ed) examples reached here.  /* #neg=983 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.07532058747036122;  // std dev = 3,404, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.008613367586430871;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.023400644882173378;  // std dev = 3,982, 151,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=18 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.15125124303382695;  // std dev = 0,486, 34,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else return 0.08691181222138605;  // std dev = 0,463, 1.395,000 (wgt'ed) examples reached here.  /* #neg=962 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.07801918039316101;  // std dev = 3,368, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.008016227680623522;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.0030885260842322417;  // std dev = 3,928, 126,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0762388688151468;  // std dev = 0,465, 1.412,000 (wgt'ed) examples reached here.  /* #neg=966 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.08746945434453558;  // std dev = 3,314, 51,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.0195220091771483;  // std dev = 1,338, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08818802857657952;  // std dev = 1,238, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.011411624005912505;  // std dev = 3,732, 126,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.06814282395121556;  // std dev = 0,474, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.08026906371481173;  // std dev = 2,944, 39,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.06463618423926748;  // std dev = 16,928, 1.322,000 (wgt'ed) examples reached here.  /* #neg=902 #pos=420 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.033927852078069934;  // std dev = 3,404, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return -0.031759573277907745;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.004360161657580562;  // std dev = 3,943, 133,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=18 */
%   | | | else return -0.08429966218640551;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.052274371534856603;  // std dev = 0,466, 1.401,000 (wgt'ed) examples reached here.  /* #neg=955 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04269808123583844;  // std dev = 3,368, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.03929142150083296;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02304464296505917;  // std dev = 3,989, 154,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=18 */
%   | | | else return -0.0780162130897047;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04510773276505291;  // std dev = 0,467, 1.387,000 (wgt'ed) examples reached here.  /* #neg=941 #pos=446 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.014274086895392566;  // std dev = 3,684, 106,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=16 */
%   | | | else return -0.06966784715053412;  // std dev = 1,368, 30,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.028857331349081566;  // std dev = 3,752, 99,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=18 */
%   | | | else return -0.07328574055667127;  // std dev = 0,007, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03143348197789098;  // std dev = 0,465, 1.407,000 (wgt'ed) examples reached here.  /* #neg=961 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.05688959160654789;  // std dev = 3,328, 52,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return -0.02535881795251988;  // std dev = 1,351, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.11985791593759318;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.00620379425305362;  // std dev = 3,949, 141,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=18 */


Results
   AUC ROC   = 0.619877
   AUC PR    = 0.18248
   CLL	      = -0.33063
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 34.82 seconds
Total inference time: 82.868 seconds
AUC ROC: 0.619877


Results scoring model
   AUC ROC   = 0.624757
   AUC PR    = 0.191133
   CLL	      = -0.326294
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 11.962 seconds
Refined model CLL: -0.326294


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.322917
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 58.272999999999996 seconds
Total inference time: 14.65 seconds
AUC ROC: 0.581281
Total revision time: 58.272999999999996
Best scored revision CLL: -0.322234


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:55:17
{'F1': 0.279661, 'parameter': {'F1': 0.279661, 'Precision': [1.0, 0.5], 'Inference time': 14.65, 'AUC PR': 0.181212, 'CLL': -0.322917, 'Learning time': 5.73, 'AUC ROC': 0.581281, 'Recall': 0.162562}, 'Precision': [1.0, 0.5], 'Inference time': 14.65, 'AUC PR': 0.181212, 'CLL': -0.322917, 'Learning time': 58.272999999999996, 'AUC ROC': 0.581281, 'Recall': 0.162562}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22172465224427054;  // std dev = 0,481, 1.499,000 (wgt'ed) examples reached here.  /* #neg=954 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.00909233132592746;  // std dev = 3,686, 106,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=16 */
%   | | | else return -0.07288554765910848;  // std dev = 1,365, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1954698776444925;  // std dev = 0,482, 1.487,000 (wgt'ed) examples reached here.  /* #neg=942 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.608362301099843;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.12544463852839147;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.1570669878174392;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.14101082006864846;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 2.5646564390265688E-5;  // std dev = 3,927, 128,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16669186697501773;  // std dev = 0,482, 1.484,000 (wgt'ed) examples reached here.  /* #neg=939 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.4714968927829649;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.13309157839780536;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.006956985571058542;  // std dev = 3,684, 108,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=16 */
%   | | | else return -0.06416587591707236;  // std dev = 1,370, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else return -0.11193072076881207;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1396221359536351;  // std dev = 0,482, 1.480,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.40672909541990504;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.12499368330840352;  // std dev = 0,595, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.44425936995635934;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.010684487064072774;  // std dev = 3,674, 105,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=16 */
%   | | | else return -0.05230327754789373;  // std dev = 1,366, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return -0.10163153559125249;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10964787661424562;  // std dev = 0,481, 1.498,000 (wgt'ed) examples reached here.  /* #neg=953 #pos=545 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return 0.04432758295585442;  // std dev = 0,382, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.041148207142631295;  // std dev = 1,619, 52,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return -0.052636161793416354;  // std dev = 1,154, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.1255329741533053;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0012435163773525362;  // std dev = 3,701, 117,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.32448991159532053;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.11842930553471427;  // std dev = 0,489, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | else return 0.07575153178123795;  // std dev = 0,477, 1.506,000 (wgt'ed) examples reached here.  /* #neg=977 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.29875595384785913;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.10495428213792388;  // std dev = 0,414, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( title(K, H), venue(K, A) )
%   | | | then return -0.08835848754546836;  // std dev = 5,27e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.10267513091735711;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return -0.056095844391456214;  // std dev = 0,286, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.00918423295200802;  // std dev = 0,332, 125,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07041788744975654;  // std dev = 0,480, 1.507,000 (wgt'ed) examples reached here.  /* #neg=962 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6982718689521414;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.141748184636657;  // std dev = 0,053, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.1280817355411314;  // std dev = 0,000302, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.04743820824814563;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.011106663662521693;  // std dev = 1,649, 63,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return -0.04461271730040161;  // std dev = 1,141, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.09182862547002257;  // std dev = 0,000102, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.055894091418329066;  // std dev = 0,480, 1.506,000 (wgt'ed) examples reached here.  /* #neg=961 #pos=545 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.03196435111298905;  // std dev = 0,134, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.007327574041952962;  // std dev = 3,227, 103,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=16 */
%   | | | else return -0.044427541094354615;  // std dev = 1,350, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.010240822979442243;  // std dev = 0,209, 76,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return 0.05988578580967123;  // std dev = 0,484, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | else return 0.039581727125528404;  // std dev = 0,479, 1.481,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=529 */
%   else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | then if ( title(H, G), venue(H, A) )
%   | | then if ( samebib(H, I), venue(I, B) )
%   | | | then return 0.6873346920784106;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.12550882739065852;  // std dev = 0,051, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( title(J, G), venue(J, B) )
%   | | | then return -0.11001582153236807;  // std dev = 0,000260, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.04712168634445677;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.003768183647607559;  // std dev = 1,556, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return -0.03862011461472253;  // std dev = 1,145, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.08261827316538774;  // std dev = 0,011, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6263630012122162;  // std dev = 0,205, 414,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=396 */
%   | | else return -0.2804203432574912;  // std dev = 0,159, 728,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=16 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.3006159785652323;  // std dev = 0,127, 278,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=4 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.33869915463047706;  // std dev = 6,574, 194,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=129 */
%   | | | else return 0.3417965219844535;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.04727346254299752;  // std dev = 0,226, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else return -0.026031508244277798;  // std dev = 0,342, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | then return 0.6686132973486275;  // std dev = 0,059, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.07575988467963193;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.979702
   AUC PR    = 0.375601
   CLL	      = -0.296996
   Precision = 0.238655 at threshold = 0.5
   Recall    = 0.058292
   F1        = 0.093698


Total learning time: 87.803 seconds
Total inference time: 760.534 seconds
AUC ROC: 0.979702


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 03:09:26
{'Inference time': 760.534, 'F1': 0.093698, 'Learning time': 87.803, 'Precision': [0.238655, 0.5], 'AUC PR': 0.375601, 'CLL': -0.296996, 'Recall': 0.058292, 'AUC ROC': 0.979702}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2052826930612908;  // std dev = 0,476, 1.570,000 (wgt'ed) examples reached here.  /* #neg=1.025 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.7470378239884012;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.007681645379886196;  // std dev = 3,689, 107,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=16 */
%   | | | else return -0.07288554765910848;  // std dev = 1,365, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.575391
   AUC PR    = 0.021809
   CLL	      = -0.198673
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.094 seconds
Total inference time: 44.822 seconds
AUC ROC: 0.575391


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 03:10:20
{'Inference time': 44.822, 'F1': nan, 'Learning time': 9.094, 'Precision': [nan, 0.5], 'AUC PR': 0.021809, 'CLL': -0.198673, 'Recall': 0.0, 'AUC ROC': 0.575391}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 67804

Target test facts examples: 34429
Target test pos	 examples: 2270
Target test neg examples: 182149

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.15598116884126034;  // std dev = 21,066, 2.122,000 (wgt'ed) examples reached here.  /* #neg=1.490 #pos=632 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.12457242604885349;  // std dev = 21,235, 2.206,000 (wgt'ed) examples reached here.  /* #neg=1.574 #pos=632 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.1231389388026333;  // std dev = 20,993, 2.088,000 (wgt'ed) examples reached here.  /* #neg=1.456 #pos=632 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.10928959304082835;  // std dev = 20,917, 2.054,000 (wgt'ed) examples reached here.  /* #neg=1.422 #pos=632 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.07368330893932379;  // std dev = 21,182, 2.179,000 (wgt'ed) examples reached here.  /* #neg=1.547 #pos=632 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.06621553272508149;  // std dev = 21,103, 2.140,000 (wgt'ed) examples reached here.  /* #neg=1.508 #pos=632 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.05458767058378062;  // std dev = 21,099, 2.138,000 (wgt'ed) examples reached here.  /* #neg=1.506 #pos=632 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.050961344099902106;  // std dev = 21,002, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.460 #pos=632 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.03283312568544163;  // std dev = 21,128, 2.152,000 (wgt'ed) examples reached here.  /* #neg=1.520 #pos=632 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.022947356067498918;  // std dev = 21,180, 2.178,000 (wgt'ed) examples reached here.  /* #neg=1.546 #pos=632 */


Results
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.326814
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total learning time: 5.937 seconds
Total inference time: 13.152 seconds
AUC ROC: 0.5837


Results scoring model
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.325873
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total scoring time: 6.472 seconds
Parameter learned model CLL: -0.325873


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.19e-07, 0, 115], 'false': [21.066, 1490, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.235, 1574, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.62e-07, 0, 115], 'false': [20.993, 1456, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.26e-07, 0, 115], 'false': [20.917, 1422, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.84e-07, 0, 115], 'false': [21.182, 1547, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.103, 1508, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.76e-07, 0, 115], 'false': [21.099, 1506, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.002, 1460, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.128, 1520, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 115], 'false': [21.18, 1546, 632]}]]
[{'': [3.3364615418300357e-15, 0.20912819428613524]}, {'': [-1.0503675224279742e-15, 0.20441407222860647]}, {'': [1.853589745461131e-15, 0.211065603851967]}, {'': [9.267948727305654e-16, 0.21301775147926955]}, {'': [2.934850430313457e-16, 0.2059173457010931]}, {'': [-4.633974363652827e-17, 0.2081090051533066]}, {'': [2.703151712130816e-16, 0.20822201667716989]}, {'': [-2.703151712130816e-17, 0.21083687652864308]}, {'': [-1.5832745742480493e-16, 0.20743218031813834]}, {'': [5.0201388939572296e-17, 0.20597324779641654]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1738833836097007;  // std dev = 0,465, 1.913,000 (wgt'ed) examples reached here.  /* #neg=1.309 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.007085105312278315;  // std dev = 3,452, 94,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=14 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.0060485957646851975;  // std dev = 0,343, 81,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.13542509501977198;  // std dev = 0,458, 1.888,000 (wgt'ed) examples reached here.  /* #neg=1.322 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5300814038709987;  // std dev = 2,764, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | | else return 0.7642083879979821;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.030123785610308183;  // std dev = 3,403, 81,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=14 */
%   | | | else return 0.005566594525129219;  // std dev = 1,569, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.005313898006906891;  // std dev = 3,083, 81,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
%   | | | else return -0.1411163671427093;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.10778431033945635;  // std dev = 0,455, 1.941,000 (wgt'ed) examples reached here.  /* #neg=1.375 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.5289928915275721;  // std dev = 2,235, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.3663518534879685;  // std dev = 2,239, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.018264764740698766;  // std dev = 3,420, 85,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=14 */
%   | | | else return 0.09926486158854987;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.001233030324186767;  // std dev = 3,077, 79,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | | | else return -0.12486281930401762;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10491772388732573;  // std dev = 0,459, 1.951,000 (wgt'ed) examples reached here.  /* #neg=1.347 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.023978692365744313;  // std dev = 2,197, 32,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.04355196547457768;  // std dev = 2,982, 57,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.002532417187812278;  // std dev = 3,071, 77,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
%   | | | else return -0.11184544809300652;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07674555758188514;  // std dev = 0,456, 1.921,000 (wgt'ed) examples reached here.  /* #neg=1.355 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3688152536331299;  // std dev = 2,571, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.2789759860481727;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.012046998640540763;  // std dev = 3,421, 87,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=14 */
%   | | | else return -0.03598640002697702;  // std dev = 1,628, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.00984105603161058;  // std dev = 3,032, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.10120805495177117;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08078866553123294;  // std dev = 0,461, 1.899,000 (wgt'ed) examples reached here.  /* #neg=1.295 #pos=604 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.03199708822588629;  // std dev = 2,276, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | | else return -9.933069731108675E-4;  // std dev = 3,074, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
%   | | else return 0.008887127673744695;  // std dev = 0,370, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.048711362752864557;  // std dev = 0,456, 1.921,000 (wgt'ed) examples reached here.  /* #neg=1.355 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.18056309421233113;  // std dev = 2,750, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | | else return 0.35393125041372786;  // std dev = 1,580, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.004259605021958984;  // std dev = 3,449, 94,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=14 */
%   | | | else return 0.025510926351502778;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.022343960345961894;  // std dev = 3,112, 92,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return -0.09311383505023936;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04360915492934762;  // std dev = 0,458, 1.895,000 (wgt'ed) examples reached here.  /* #neg=1.329 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.22156702921089522;  // std dev = 2,333, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | | else return 0.17567651759021552;  // std dev = 1,914, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.007106135106570454;  // std dev = 2,225, 35,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | | else return 0.02118344054415087;  // std dev = 3,008, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.012704687419785922;  // std dev = 3,099, 87,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.08554325660840618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.038259874668852265;  // std dev = 0,459, 1.876,000 (wgt'ed) examples reached here.  /* #neg=1.310 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1025024465217522;  // std dev = 2,766, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | | else return 0.09228783464928976;  // std dev = 1,897, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.011358556841311217;  // std dev = 3,424, 89,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | | | else return -0.05487030419749023;  // std dev = 1,653, 34,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | else return 0.002689269508528273;  // std dev = 0,365, 69,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.0312522080563802;  // std dev = 0,459, 1.873,000 (wgt'ed) examples reached here.  /* #neg=1.307 #pos=566 */
%   | | else if ( title(F, E), venue(F, B) )
%   | | | then return 0.02525432838011491;  // std dev = 4,153, 121,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=33 */
%   | | | else return 0.004179184411323381;  // std dev = 2,155, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then return 0.10022824121815274;  // std dev = 0,405, 64,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | else return -0.2203603222441975;  // std dev = 0,489, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.636346
   AUC PR    = 0.205082
   CLL	      = -0.309405
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 105.411 seconds
Total inference time: 165.934 seconds
AUC ROC: 0.636346


Results scoring model
   AUC ROC   = 0.621377
   AUC PR    = 0.190958
   CLL	      = -0.322401
   Precision = 0.222384 at threshold = 0.5
   Recall    = 0.204819
   F1        = 0.21324


Total scoring time: 18.175 seconds
Refined model CLL: -0.322401


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.636346
   AUC PR    = 0.205082
   CLL	      = -0.309405
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 135.995 seconds
Total inference time: 165.934 seconds
AUC ROC: 0.636346
Total revision time: 135.995
Best scored revision CLL: -0.322401


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 03:15:37
{'F1': 0.280928, 'parameter': {'F1': 0.286792, 'Precision': [1.0, 0.5], 'Inference time': 13.152, 'AUC PR': 0.186484, 'CLL': -0.326814, 'Learning time': 5.937, 'AUC ROC': 0.5837, 'Recall': 0.167401}, 'Precision': [0.522782, 0.5], 'Inference time': 165.934, 'AUC PR': 0.205082, 'CLL': -0.309405, 'Learning time': 135.995, 'AUC ROC': 0.636346, 'Recall': 0.19207}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1988747415511202;  // std dev = 0,474, 1.984,000 (wgt'ed) examples reached here.  /* #neg=1.308 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.588918165868743;  // std dev = 2,262, 26,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.7581489350995123;  // std dev = 0,300, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( title(K, I), venue(K, A) )
%   | | | then return 0.7331489350995123;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.011416282291792127;  // std dev = 0,337, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0826387310178797;  // std dev = 0,417, 49,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1645256459339817;  // std dev = 0,471, 2.034,000 (wgt'ed) examples reached here.  /* #neg=1.358 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.44210747934173245;  // std dev = 2,004, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.5351961935078232;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.6677784409329396;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.7392070123615109;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.6740814197256598;  // std dev = 1,570, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.14947102011526392;  // std dev = 0,038, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0.1116759758915756;  // std dev = 0,387, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else return -0.009540443181214268;  // std dev = 0,299, 81,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.14458091604129752;  // std dev = 0,473, 2.008,000 (wgt'ed) examples reached here.  /* #neg=1.332 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.41460674361744504;  // std dev = 2,027, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return 0.18329898433077085;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.4753197972722536;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.5750887498568714;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.6189092645924268;  // std dev = 1,317, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.13130825119772707;  // std dev = 0,042, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0.11989423001675514;  // std dev = 0,394, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return -0.01525821315815059;  // std dev = 0,296, 84,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.12215101616511594;  // std dev = 0,473, 2.002,000 (wgt'ed) examples reached here.  /* #neg=1.326 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.3454980993295784;  // std dev = 1,897, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return 0.14237226082115484;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.47854547753793625;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.4323070241307178;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.5423121366368122;  // std dev = 0,971, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.11735387688609387;  // std dev = 0,033, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0.10205201070922643;  // std dev = 0,390, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return -0.02892222308946744;  // std dev = 0,283, 95,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.10522636064573407;  // std dev = 0,474, 1.976,000 (wgt'ed) examples reached here.  /* #neg=1.300 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.2550639585530829;  // std dev = 2,108, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.37537778521351217;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.21717282699192886;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.16409288660836138;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.5187756736095888;  // std dev = 1,738, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return -0.12623604669369037;  // std dev = 0,145, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return -0.042756948477117564;  // std dev = 0,179, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | else return -0.02666076227711971;  // std dev = 0,230, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0819225394288419;  // std dev = 0,470, 2.074,000 (wgt'ed) examples reached here.  /* #neg=1.355 #pos=719 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.01506094891090646;  // std dev = 0,258, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else return -0.01946806696818916;  // std dev = 0,238, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then return -0.02804266798148001;  // std dev = 0,259, 89,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=11 */
%   | | else return -0.11688832153667765;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.06837315499521157;  // std dev = 0,474, 1.984,000 (wgt'ed) examples reached here.  /* #neg=1.308 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.12030544298527036;  // std dev = 2,114, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.19322081200817973;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.16342719003956266;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.11206390192726919;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, B) )
%   | | then return 1.0795758127347251E-4;  // std dev = 0,234, 77,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | else return -0.018428119586303186;  // std dev = 0,274, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.011832871468933349;  // std dev = 0,272, 79,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | | else return -0.10535220662841238;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.055622401201732785;  // std dev = 0,471, 2.048,000 (wgt'ed) examples reached here.  /* #neg=1.329 #pos=719 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.4191404692838822;  // std dev = 0,970, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.10115372307353349;  // std dev = 0,033, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return -0.06314483380958297;  // std dev = 0,260, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else return -0.015262682725941527;  // std dev = 0,265, 84,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.03655102253828668;  // std dev = 0,472, 2.023,000 (wgt'ed) examples reached here.  /* #neg=1.347 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.1483406062360935;  // std dev = 1,997, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return 0.030154873504066797;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.1691542534190589;  // std dev = 1,265, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.24629826525286572;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then return -0.0523699689061537;  // std dev = 0,207, 102,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=14 */
%   | | else return 0.12508594472882503;  // std dev = 0,344, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.006761127319623374;  // std dev = 0,292, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.02753820859100859;  // std dev = 0,471, 2.031,000 (wgt'ed) examples reached here.  /* #neg=1.355 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03367155585070233;  // std dev = 2,337, 27,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.10654056508956766;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.12971012142834132;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.20346910921451;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, B) )
%   | | then return 0.009634730902756086;  // std dev = 0,295, 79,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=14 */
%   | | else return -0.04940873254332967;  // std dev = 0,192, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return -0.019079768329771592;  // std dev = 0,195, 66,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | | else return -0.0950931743121275;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.621909
   AUC PR    = 0.044382
   CLL	      = -0.341362
   Precision = 0.198693 at threshold = 0.5
   Recall    = 0.06696
   F1        = 0.100165


Total learning time: 155.105 seconds
Total inference time: 332.57 seconds
AUC ROC: 0.621909


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 03:23:46
{'Inference time': 332.57, 'F1': 0.100165, 'Learning time': 155.105, 'Precision': [0.198693, 0.5], 'AUC PR': 0.044382, 'CLL': -0.341362, 'Recall': 0.06696, 'AUC ROC': 0.621909}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.20696214459383136;  // std dev = 0,477, 1.938,000 (wgt'ed) examples reached here.  /* #neg=1.262 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.7152917922423694;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.5423594614153018;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.724815601766179;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.7914822684328456;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0.10814893509951223;  // std dev = 0,433, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return 0.00883386660636166;  // std dev = 0,358, 73,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */


Results
   AUC ROC   = 0.598657
   AUC PR    = 0.042349
   CLL	      = -0.198913
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.137 seconds
Total inference time: 39.138 seconds
AUC ROC: 0.598657


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 03:24:46
{'Inference time': 39.138, 'F1': nan, 'Learning time': 20.137, 'Precision': [nan, 0.5], 'AUC PR': 0.042349, 'CLL': -0.198913, 'Recall': 0.0, 'AUC ROC': 0.598657}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 35540

Target test facts examples: 33914
Target test pos	 examples: 2467
Target test neg examples: 214413

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.15435146674507697;  // std dev = 18,149, 1.580,000 (wgt'ed) examples reached here.  /* #neg=1.112 #pos=468 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.13601199330464148;  // std dev = 18,129, 1.572,000 (wgt'ed) examples reached here.  /* #neg=1.104 #pos=468 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.11766719544572903;  // std dev = 18,117, 1.567,000 (wgt'ed) examples reached here.  /* #neg=1.099 #pos=468 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.09377253428260687;  // std dev = 18,192, 1.598,000 (wgt'ed) examples reached here.  /* #neg=1.130 #pos=468 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.07531463447618378;  // std dev = 18,231, 1.615,000 (wgt'ed) examples reached here.  /* #neg=1.147 #pos=468 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.07725786106226612;  // std dev = 18,039, 1.536,000 (wgt'ed) examples reached here.  /* #neg=1.068 #pos=468 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.04320925308151723;  // std dev = 18,299, 1.645,000 (wgt'ed) examples reached here.  /* #neg=1.177 #pos=468 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.05052015735097978;  // std dev = 18,102, 1.561,000 (wgt'ed) examples reached here.  /* #neg=1.093 #pos=468 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.03922777873532338;  // std dev = 18,124, 1.570,000 (wgt'ed) examples reached here.  /* #neg=1.102 #pos=468 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.03411982017553857;  // std dev = 18,092, 1.557,000 (wgt'ed) examples reached here.  /* #neg=1.089 #pos=468 */


Results
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.327978
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total learning time: 4.948 seconds
Total inference time: 16.098 seconds
AUC ROC: 0.583705


Results scoring model
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.331329
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total scoring time: 4.864 seconds
Parameter learned model CLL: -0.331329


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.149, 1112, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 82], 'false': [18.129, 1104, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.48e-07, 0, 82], 'false': [18.117, 1099, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 82], 'false': [18.192, 1130, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.231, 1147, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.039, 1068, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.299, 1177, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 82], 'false': [18.102, 1093, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.124, 1102, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 82], 'false': [18.092, 1089, 468]}]]
[{'': [-6.932124251318051e-16, 0.20846659189230798]}, {'': [8.665155314147563e-16, 0.20907872501603744]}, {'': [1.4730764034050857e-15, 0.20946214786547165]}, {'': [1.2997732971221344e-16, 0.20709554026389393]}, {'': [-3.4660621256590254e-16, 0.20580893136137196]}, {'': [-5.415722071342227e-17, 0.21185302734374886]}, {'': [-1.408087738548979e-16, 0.20355909498248986]}, {'': [2.166288828536891e-17, 0.2099230892662885]}, {'': [-5.144935967775116e-17, 0.20923201752604523]}, {'': [4.06179155350667e-17, 0.21023087974873128]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.14847151574467365;  // std dev = 3,574, 62,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1996123497336538;  // std dev = 0,474, 1.148,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.16584124279182005;  // std dev = 2,882, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.06590169781188006;  // std dev = 3,330, 158,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=12 */
%   | | | else return 0.06327714022771695;  // std dev = 4,368, 117,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.668251549978293;  // std dev = 1,582, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.026453769535022136;  // std dev = 2,587, 56,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
%   | | else return 0.16733511242538376;  // std dev = 0,472, 1.169,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.36887697659770574;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.14443085832463715;  // std dev = 2,882, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0630107256765971;  // std dev = 3,339, 169,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=12 */
%   | | | else return 0.0976930096149439;  // std dev = 4,250, 97,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13445593899159217;  // std dev = 0,467, 1.269,000 (wgt'ed) examples reached here.  /* #neg=853 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordvenue(A, G) )
%   | | | then return -0.18396257182007572;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.20333616452639144;  // std dev = 3,060, 40,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.05945527692446282;  // std dev = 3,345, 178,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=12 */
%   | | | else return 0.08482556615030243;  // std dev = 4,250, 97,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11767225565305109;  // std dev = 0,468, 1.251,000 (wgt'ed) examples reached here.  /* #neg=835 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4895913139893576;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.029628304384545633;  // std dev = 3,006, 49,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04900108748831801;  // std dev = 3,338, 168,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=12 */
%   | | | else return 0.02890996231543171;  // std dev = 4,372, 118,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08702394823559612;  // std dev = 0,465, 1.289,000 (wgt'ed) examples reached here.  /* #neg=873 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24404827403267548;  // std dev = 1,507, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.057124802563078725;  // std dev = 2,951, 52,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.07587488300943918;  // std dev = 3,038, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return -0.03457682558937588;  // std dev = 4,405, 223,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0824150069716749;  // std dev = 0,469, 1.246,000 (wgt'ed) examples reached here.  /* #neg=830 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.13001304032112979;  // std dev = 1,311, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06566470468428438;  // std dev = 2,885, 40,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04834194226960687;  // std dev = 3,345, 186,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=12 */
%   | | | else return 0.019434303807074914;  // std dev = 4,372, 119,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.29112955765347065;  // std dev = 2,662, 29,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return -0.03174247392419308;  // std dev = 2,212, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else return 0.062289109493045516;  // std dev = 0,467, 1.193,000 (wgt'ed) examples reached here.  /* #neg=801 #pos=392 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.12872165673093988;  // std dev = 1,615, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.046231899042424175;  // std dev = 2,951, 51,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.06128097029584402;  // std dev = 3,009, 41,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return -0.02610228784246796;  // std dev = 4,394, 221,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7178036570831297;  // std dev = 1,312, 426,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=425 */
%   | | | else return -0.24759748820013006;  // std dev = 3,146, 973,000 (wgt'ed) examples reached here.  /* #neg=966 #pos=7 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return -0.2790464855854412;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11362688602352765;  // std dev = 0,212, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.18409078162125503;  // std dev = 4,328, 86,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=34 */
%   | | | else return -0.1797699965232554;  // std dev = 0,030, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.098366266544517;  // std dev = 0,741, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.03184711448596663;  // std dev = 0,869, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.0494387416546903;  // std dev = 2,543, 75,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | | else return 0.5664750609398241;  // std dev = 0,340, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03150376513870259;  // std dev = 0,376, 1.173,000 (wgt'ed) examples reached here.  /* #neg=781 #pos=392 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.1891715286049697;  // std dev = 1,322, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.008365319275248188;  // std dev = 2,984, 55,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.029637923921046354;  // std dev = 3,039, 94,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=12 */
%   | | | else return 0.011302470759931729;  // std dev = 3,608, 152,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5489174233004168;  // std dev = 2,367, 429,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=425 */
%   | | | else return -0.22546993788570527;  // std dev = 2,689, 938,000 (wgt'ed) examples reached here.  /* #neg=931 #pos=7 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.2316188974668129;  // std dev = 0,049, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.08892183561385701;  // std dev = 0,157, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0871320899306114;  // std dev = 3,800, 124,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | | | else return -0.09591610660296852;  // std dev = 0,013, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10184612796967303;  // std dev = 0,751, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.0476938317694606;  // std dev = 0,765, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */


Results
   AUC ROC   = 0.950198
   AUC PR    = 0.533371
   CLL	      = -0.221713
   Precision = 0.394425 at threshold = 0.5
   Recall    = 0.848804
   F1        = 0.53858


Total learning time: 150.46699999999998 seconds
Total inference time: 1061.742 seconds
AUC ROC: 0.950198


Results scoring model
   AUC ROC   = 0.992187
   AUC PR    = 0.78268
   CLL	      = -0.210433
   Precision = 0.706997 at threshold = 0.5
   Recall    = 0.881818
   F1        = 0.78479


Total scoring time: 48.781 seconds
Refined model CLL: -0.210433


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.950198
   AUC PR    = 0.533371
   CLL	      = -0.221713
   Precision = 0.394425 at threshold = 0.5
   Recall    = 0.848804
   F1        = 0.53858


Total learning time: 209.06 seconds
Total inference time: 1061.742 seconds
AUC ROC: 0.950198
Total revision time: 209.06
Best scored revision CLL: -0.210433


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 03:46:14
{'F1': 0.53858, 'parameter': {'F1': 0.286806, 'Precision': [1.0, 0.5], 'Inference time': 16.098, 'AUC PR': 0.185174, 'CLL': -0.327978, 'Learning time': 4.948, 'AUC ROC': 0.583705, 'Recall': 0.16741}, 'Precision': [0.394425, 0.5], 'Inference time': 1061.742, 'AUC PR': 0.533371, 'CLL': -0.221713, 'Learning time': 209.06, 'AUC ROC': 0.950198, 'Recall': 0.848804}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.5399671169176942;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | | else return -0.04569721874664157;  // std dev = 2,126, 52,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
%   | else return 0.21540084349645397;  // std dev = 0,479, 1.310,000 (wgt'ed) examples reached here.  /* #neg=842 #pos=468 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then return 0.18467954734441033;  // std dev = 0,469, 49,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.041010728766033885;  // std dev = 3,285, 119,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.15083186192877987;  // std dev = 4,120, 82,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21457034273237263;  // std dev = 0,484, 1.294,000 (wgt'ed) examples reached here.  /* #neg=796 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.8341487515469819;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14184105923928955;  // std dev = 0,462, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return -0.029655015401279298;  // std dev = 3,265, 117,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=12 */
%   | | | else return -0.13534736334258277;  // std dev = 0,021, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.07877859021075334;  // std dev = 4,271, 100,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6742082623623668;  // std dev = 4,21e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.37580554506535546;  // std dev = 2,511, 26,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | | else return -0.04006876723112179;  // std dev = 2,045, 31,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | else return 0.1603056562510519;  // std dev = 0,479, 1.292,000 (wgt'ed) examples reached here.  /* #neg=824 #pos=468 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.35259925406284665;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return -0.186414339267628;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.18858566073237176;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.05311739550869599;  // std dev = 0,260, 162,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=12 */
%   | | else return 0.06842549507028461;  // std dev = 0,424, 101,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6754522613054179;  // std dev = 0,308, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.2921102867306201;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.10997356390197807;  // std dev = 1,635, 49,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=5 */
%   | | | else return 0.6846462436657773;  // std dev = 0,393, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.14433835851003257;  // std dev = 0,483, 1.251,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=468 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return -0.030183564658642786;  // std dev = 0,325, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.13314067644363797;  // std dev = 0,469, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.04603117183511993;  // std dev = 0,262, 160,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=12 */
%   | | else return 0.05122426737365842;  // std dev = 0,418, 105,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12347164071646978;  // std dev = 0,478, 1.305,000 (wgt'ed) examples reached here.  /* #neg=807 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.25968887831171966;  // std dev = 1,156, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return -0.15576567504174313;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12346733777931694;  // std dev = 2,763, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.2676032210421062;  // std dev = 1,298, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.050392430022241884;  // std dev = 2,875, 48,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.05408487058638772;  // std dev = 3,191, 178,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=11 */
%   | | | else return -0.0043851561933991616;  // std dev = 2,991, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.007603337204373232;  // std dev = 3,262, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.024261964388735777;  // std dev = 1,165, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.539161533583413;  // std dev = 0,219, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08302866482880665;  // std dev = 0,476, 1.290,000 (wgt'ed) examples reached here.  /* #neg=822 #pos=468 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then return 0.03758055368430637;  // std dev = 0,412, 112,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=26 */
%   | | else return -0.12288091399927113;  // std dev = 0,244, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.05960787167209405;  // std dev = 4,322, 112,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=26 */
%   | | | else return -0.10658724075907959;  // std dev = 0,010, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.1646679754695359;  // std dev = 0,060, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06335713964844898;  // std dev = 0,472, 1.375,000 (wgt'ed) examples reached here.  /* #neg=877 #pos=498 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7700353173576874;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21490487225178467;  // std dev = 0,091, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.11268143248158392;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.019522921988811344;  // std dev = 2,972, 56,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.25559656350087656;  // std dev = 0,880, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10651161578679161;  // std dev = 2,586, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.03885732262269936;  // std dev = 3,157, 153,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=11 */
%   | | | else return -0.0070125104059424025;  // std dev = 2,979, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07314512676677776;  // std dev = 0,478, 1.291,000 (wgt'ed) examples reached here.  /* #neg=793 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.12237740755788103;  // std dev = 1,201, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.12523058769406764;  // std dev = 0,477, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return -0.09315178037570451;  // std dev = 0,017, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.0049852776738798866;  // std dev = 3,203, 111,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.047723200494086564;  // std dev = 4,166, 96,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | | | else return -0.11139017686595531;  // std dev = 0,010, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6418168427780941;  // std dev = 0,163, 506,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=494 */
%   | | else return -0.28546523948225716;  // std dev = 0,111, 1.016,000 (wgt'ed) examples reached here.  /* #neg=1.009 #pos=7 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.1807518321746399;  // std dev = 0,112, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0.34593781041771804;  // std dev = 0,378, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( title(K, I), venue(K, B) )
%   | | | then return 0.7148106288549448;  // std dev = 0,769, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.1973558383549112;  // std dev = 0,907, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | else return -0.17660387615432369;  // std dev = 0,032, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | then return 0.5746813748920527;  // std dev = 0,181, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.1311513109866669;  // std dev = 0,065, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then return -0.055218430173635535;  // std dev = 0,226, 85,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | else return 0.1622426181440671;  // std dev = 0,288, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.03728011921345696;  // std dev = 0,385, 1.214,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=468 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( title(J, H), venue(J, A) )
%   | | | then return 0.5838500506288887;  // std dev = 1,190, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return -0.11236511433579983;  // std dev = 0,847, 151,000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else return -0.08877477052555019;  // std dev = 0,109, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.03781566254055945;  // std dev = 3,465, 93,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   | | | else return -0.1556089668986813;  // std dev = 0,016, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.10207870100675309;  // std dev = 0,139, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.953973
   AUC PR    = 0.354298
   CLL	      = -0.303019
   Precision = 0.353191 at threshold = 0.5
   Recall    = 0.033644
   F1        = 0.061436


Total learning time: 131.037 seconds
Total inference time: 720.259 seconds
AUC ROC: 0.953973


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 04:00:26
{'Inference time': 720.259, 'F1': 0.061436, 'Learning time': 131.037, 'Precision': [0.353191, 0.5], 'AUC PR': 0.354298, 'CLL': -0.303019, 'Recall': 0.033644, 'AUC ROC': 0.953973}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22298409993467225;  // std dev = 0,481, 1.365,000 (wgt'ed) examples reached here.  /* #neg=867 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.13721870254137283;  // std dev = 0,449, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.0426775111814794;  // std dev = 3,288, 121,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.09577269747574936;  // std dev = 4,278, 101,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.54841
   AUC PR    = 0.012616
   CLL	      = -0.200354
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 7.995 seconds
Total inference time: 29.87 seconds
AUC ROC: 0.54841


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 04:01:05
{'Inference time': 29.87, 'F1': nan, 'Learning time': 7.995, 'Precision': [nan, 0.5], 'AUC PR': 0.012616, 'CLL': -0.200354, 'Recall': 0.0, 'AUC ROC': 0.54841}


