Starting experiment #2 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.14185106490048893;  // std dev = 0,000, 685,000 (wgt'ed) examples reached here.  /* #neg=685 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.12544463852839235;  // std dev = 0,000, 675,000 (wgt'ed) examples reached here.  /* #neg=675 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1123163781936066;  // std dev = 0,000, 711,000 (wgt'ed) examples reached here.  /* #neg=711 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783627;  // std dev = 1,97e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.10159632948783512;  // std dev = 4,56e-07, 728,000 (wgt'ed) examples reached here.  /* #neg=728 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.09269127618926204;  // std dev = 0,000, 708,000 (wgt'ed) examples reached here.  /* #neg=708 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 7,45e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.08518475138839675;  // std dev = 1,43e-07, 753,000 (wgt'ed) examples reached here.  /* #neg=753 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109172;  // std dev = 1,83e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07877675473109275;  // std dev = 0,000, 690,000 (wgt'ed) examples reached here.  /* #neg=690 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,29e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07324622576333656;  // std dev = 2,28e-07, 677,000 (wgt'ed) examples reached here.  /* #neg=677 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06842697784420251;  // std dev = 1,90e-07, 691,000 (wgt'ed) examples reached here.  /* #neg=691 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.06419184008202526;  // std dev = 2,56e-07, 735,000 (wgt'ed) examples reached here.  /* #neg=735 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 31946

Target test facts examples: 35095
Target test pos	 examples: 2649
Target test neg examples: 218007

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.15315978108649234;  // std dev = 13,848, 922,000 (wgt'ed) examples reached here.  /* #neg=650 #pos=272 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.11100862973362419;  // std dev = 14,067, 998,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=272 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.09567639905817371;  // std dev = 14,064, 997,000 (wgt'ed) examples reached here.  /* #neg=725 #pos=272 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.08976099881002812;  // std dev = 13,982, 967,000 (wgt'ed) examples reached here.  /* #neg=695 #pos=272 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.06164736018430833;  // std dev = 14,116, 1.017,000 (wgt'ed) examples reached here.  /* #neg=745 #pos=272 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.05566327354374439;  // std dev = 14,074, 1.001,000 (wgt'ed) examples reached here.  /* #neg=729 #pos=272 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.048275235193898064;  // std dev = 14,053, 993,000 (wgt'ed) examples reached here.  /* #neg=721 #pos=272 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.04083652932800649;  // std dev = 14,043, 989,000 (wgt'ed) examples reached here.  /* #neg=717 #pos=272 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.02121005083749809;  // std dev = 14,160, 1.035,000 (wgt'ed) examples reached here.  /* #neg=763 #pos=272 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.021953925866568295;  // std dev = 14,116, 1.017,000 (wgt'ed) examples reached here.  /* #neg=745 #pos=272 */


Results
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.298069
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 4.584 seconds
Total inference time: 17.12 seconds
AUC ROC: 0.575311


Results scoring model
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.295924
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 5.221 seconds
Parameter learned model CLL: -0.295924


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 96], 'false': [13.848, 650, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.88e-07, 0, 96], 'false': [14.067, 726, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.09e-07, 0, 96], 'false': [14.064, 725, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.23e-07, 0, 96], 'false': [13.982, 695, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 96], 'false': [14.116, 745, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 96], 'false': [14.074, 729, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.26e-07, 0, 96], 'false': [14.053, 721, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 96], 'false': [14.043, 717, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 96], 'false': [14.16, 763, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 96], 'false': [14.116, 745, 272]}]]
[{'': [1.1842378929335002e-15, 0.20797944673703]}, {'': [3.7007434154171886e-16, 0.19826426399893488]}, {'': [1.7393494052460785e-15, 0.19838854577775777]}, {'': [5.181040781584064e-16, 0.20216257489929287]}, {'': [1.850371707708594e-17, 0.19592202952945414]}, {'': [-4.625929269271486e-17, 0.19789201807183854]}, {'': [1.6653345369377348e-16, 0.19888666790393053]}, {'': [6.013708050052931e-17, 0.1993863744874064]}, {'': [-6.013708050052931e-17, 0.19373707671124313]}, {'': [1.3877787807814457e-17, 0.19592202952945986]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16679091040814958;  // std dev = 0,462, 810,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.047023478693591116;  // std dev = 3,155, 116,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.006797583748160992;  // std dev = 3,060, 74,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14563226354185946;  // std dev = 0,462, 809,000 (wgt'ed) examples reached here.  /* #neg=559 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.04692937981577944;  // std dev = 3,163, 125,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=11 */
%   | | | else return -0.13468302289922388;  // std dev = 0,014, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.014462310638890068;  // std dev = 3,045, 70,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12022098798174367;  // std dev = 0,460, 821,000 (wgt'ed) examples reached here.  /* #neg=571 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.060564639649418134;  // std dev = 3,196, 159,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=11 */
%   | | | else return -0.11835462722802163;  // std dev = 0,012, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03586909360260944;  // std dev = 3,003, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.07804738650543382;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.09373449668884691;  // std dev = 0,457, 839,000 (wgt'ed) examples reached here.  /* #neg=590 #pos=249 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return -0.04735708091938408;  // std dev = 3,185, 146,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=11 */
%   | | | else return -0.10782224339430313;  // std dev = 0,008, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.04070654271563211;  // std dev = 2,986, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.12404335584807914;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else return 0.11336203155753567;  // std dev = 0,471, 750,000 (wgt'ed) examples reached here.  /* #neg=501 #pos=249 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return -0.031184073368862954;  // std dev = 3,166, 127,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=11 */
%   | | | else return -0.09830423544852133;  // std dev = 0,008, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.020420390271214003;  // std dev = 3,013, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07741074669970853;  // std dev = 0,464, 794,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.09975282250343273;  // std dev = 0,048, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.027972428769626603;  // std dev = 3,166, 127,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.020554692669758956;  // std dev = 3,008, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05606369077178932;  // std dev = 0,462, 811,000 (wgt'ed) examples reached here.  /* #neg=561 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.09586304048214846;  // std dev = 0,021, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.01112195968311739;  // std dev = 3,142, 109,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.023730932752090914;  // std dev = 2,997, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03808141383601174;  // std dev = 0,458, 831,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.08588854345732627;  // std dev = 0,031, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.009837338619211416;  // std dev = 3,140, 110,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.001367916515491993;  // std dev = 3,032, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.08703992311608633;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.053473215312913186;  // std dev = 0,468, 767,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=249 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return -0.03288818074152832;  // std dev = 3,181, 147,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=11 */
%   | | | else return -0.08441119792243035;  // std dev = 0,061, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.017330142790205044;  // std dev = 3,003, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.02583757274852276;  // std dev = 0,461, 815,000 (wgt'ed) examples reached here.  /* #neg=565 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.02385465673524769;  // std dev = 3,173, 134,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=11 */
%   | | | else return -0.08024664136773667;  // std dev = 0,032, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.005955608068416857;  // std dev = 3,041, 69,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.609275
   AUC PR    = 0.170424
   CLL	      = -0.311946
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 38.182 seconds
Total inference time: 201.403 seconds
AUC ROC: 0.609275


Results scoring model
   AUC ROC   = 0.698689
   AUC PR    = 0.283886
   CLL	      = -0.29118
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 14.456 seconds
Refined model CLL: -0.29118


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.609275
   AUC PR    = 0.170424
   CLL	      = -0.311946
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 62.443 seconds
Total inference time: 201.403 seconds
AUC ROC: 0.609275
Total revision time: 62.443
Best scored revision CLL: -0.29118


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 05:21:43
{'Learning time': 62.443, 'F1': 0.261811, 'Precision': [1.0, 0.5], 'Recall': 0.150623, 'Inference time': 201.403, 'parameter': {'Learning time': 4.584, 'F1': 0.261811, 'Precision': [1.0, 0.5], 'Recall': 0.150623, 'Inference time': 17.12, 'CLL': -0.298069, 'AUC ROC': 0.575311, 'AUC PR': 0.168925}, 'CLL': -0.311946, 'AUC ROC': 0.609275, 'AUC PR': 0.170424}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return 0.10814893509951223;  // std dev = 0,433, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return 0.23383349150695554;  // std dev = 0,484, 913,000 (wgt'ed) examples reached here.  /* #neg=570 #pos=343 */
%   else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | then if ( title(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.5914822684328456;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return -0.14185106490048782;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.06569610491083312;  // std dev = 2,952, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20182583927071138;  // std dev = 0,484, 924,000 (wgt'ed) examples reached here.  /* #neg=578 #pos=346 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.047274663360177036;  // std dev = 2,847, 122,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.00530104977355943;  // std dev = 3,067, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1647372008971752;  // std dev = 0,482, 940,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=346 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.03080635324203872;  // std dev = 2,838, 107,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.1256368791735704;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.727432337657787;  // std dev = 3,393, 292,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=280 */
%   | | | else return -0.1759955406102218;  // std dev = 5,497, 578,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=32 */
%   | | else if ( title(G, D), venue(G, B) )
%   | | | then return -0.23154576479243477;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.7684542352075655;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then return 0.36845423520756526;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7206148267539348;  // std dev = 0,219, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.041477613111724446;  // std dev = 0,250, 131,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.014499092457278108;  // std dev = 0,381, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.5749018476819461;  // std dev = 3,393, 292,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=280 */
%   | | | else return -0.14353396662405998;  // std dev = 5,489, 552,000 (wgt'ed) examples reached here.  /* #neg=520 #pos=32 */
%   | | else if ( title(G, D), venue(G, B) )
%   | | | then return -0.19291968355608688;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.5292249843489844;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.5464964429921991;  // std dev = 0,281, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then return -0.04072372595889297;  // std dev = 0,243, 140,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=11 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.002557999404985876;  // std dev = 3,016, 66,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | | | else return -0.14634636173842686;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.4638501254223315;  // std dev = 1,723, 283,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=280 */
%   | | | else return -0.1197778960884974;  // std dev = 5,484, 540,000 (wgt'ed) examples reached here.  /* #neg=508 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.17958922864709023;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.4755006969774564;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then return 0.17068654637910044;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.2331294561735182;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.42800129521487823;  // std dev = 0,975, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return -0.03659258909245178;  // std dev = 0,321, 92,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | else return -0.019552903342625518;  // std dev = 0,267, 114,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.3411502816648595;  // std dev = 2,424, 286,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=280 */
%   | | | else return -0.10546740848800351;  // std dev = 5,491, 567,000 (wgt'ed) examples reached here.  /* #neg=535 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.15463222625206155;  // std dev = 1,49e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0.1604119883201627;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else return 0.3305403956276739;  // std dev = 0,262, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then return -0.03368768624375978;  // std dev = 0,246, 138,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=11 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return -6.52092304304888E-4;  // std dev = 3,034, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | | else return -0.1250776189700196;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08367333370836795;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.036415550445714685;  // std dev = 0,265, 825,000 (wgt'ed) examples reached here.  /* #neg=513 #pos=312 */
%   | | else return -0.04492453219495995;  // std dev = 0,236, 49,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then return 0.04606710475959201;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.09724355648986047;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2488634187139161;  // std dev = 0,974, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.03263137410620547;  // std dev = 0,241, 144,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return 0.003919918866485096;  // std dev = 3,026, 66,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | | | else return -0.09243348605168845;  // std dev = 0,025, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07747737634048102;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.025880602352941724;  // std dev = 0,265, 924,000 (wgt'ed) examples reached here.  /* #neg=578 #pos=346 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return -0.02512341393866488;  // std dev = 0,246, 138,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=11 */
%   | | else return -0.09710020444079326;  // std dev = 0,018, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.003959957260586272;  // std dev = 3,025, 66,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | | | else return -0.1005466632187235;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07211783956304099;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.013419738984351018;  // std dev = 0,269, 866,000 (wgt'ed) examples reached here.  /* #neg=554 #pos=312 */
%   | | else return 0.06631503294611993;  // std dev = 0,235, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then return 0.069884680896106;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.17836577890904048;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1936232560653459;  // std dev = 0,974, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.022590198503433932;  // std dev = 0,248, 137,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return 0.025313991325105516;  // std dev = 2,986, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | | else return -0.08607754283001373;  // std dev = 0,034, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06743836726197179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.947561
   AUC PR    = 0.388149
   CLL	      = -0.191023
   Precision = 0.308609 at threshold = 0.5
   Recall    = 0.9094
   F1        = 0.460832


Total learning time: 187.763 seconds
Total inference time: 2877.624 seconds
AUC ROC: 0.947561


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 06:12:49
{'Learning time': 187.763, 'CLL': -0.191023, 'Recall': 0.9094, 'Inference time': 2877.624, 'F1': 0.460832, 'Precision': [0.308609, 0.5], 'AUC ROC': 0.947561, 'AUC PR': 0.388149}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.8236661764788189;  // std dev = 3,107, 290,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=280 */
%   | | | else return -0.08356326890777395;  // std dev = 5,490, 549,000 (wgt'ed) examples reached here.  /* #neg=517 #pos=32 */
%   | | else if ( title(G, D), venue(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8025933795439567;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then if ( haswordtitle(M, N), haswordvenue(B, N) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( title(P, M), venue(P, B) )
%   | | | then return -0.035054948395633306;  // std dev = 3,135, 103,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, Q), haswordtitle(R, Q) )
%   | | then if ( title(S, R), venue(S, A) )
%   | | | then return 0.10259337954395681;  // std dev = 2,883, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.938495
   AUC PR    = 0.215557
   CLL	      = -0.160957
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 33.07 seconds
Total inference time: 665.96 seconds
AUC ROC: 0.938495


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 06:24:29
{'Learning time': 33.07, 'CLL': -0.160957, 'Recall': 0.0, 'Inference time': 665.96, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.938495, 'AUC PR': 0.215557}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 64082

Target test facts examples: 33542
Target test pos	 examples: 2246
Target test neg examples: 185871

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.15676315056665077;  // std dev = 21,645, 2.237,000 (wgt'ed) examples reached here.  /* #neg=1.569 #pos=668 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.1394189383207294;  // std dev = 21,602, 2.216,000 (wgt'ed) examples reached here.  /* #neg=1.548 #pos=668 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.12260994126006919;  // std dev = 21,555, 2.194,000 (wgt'ed) examples reached here.  /* #neg=1.526 #pos=668 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.10434710994218824;  // std dev = 21,544, 2.189,000 (wgt'ed) examples reached here.  /* #neg=1.521 #pos=668 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.08513782946098876;  // std dev = 21,574, 2.203,000 (wgt'ed) examples reached here.  /* #neg=1.535 #pos=668 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.06999693101542052;  // std dev = 21,578, 2.205,000 (wgt'ed) examples reached here.  /* #neg=1.537 #pos=668 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.0629963653118176;  // std dev = 21,489, 2.164,000 (wgt'ed) examples reached here.  /* #neg=1.496 #pos=668 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.05459725372775179;  // std dev = 21,436, 2.140,000 (wgt'ed) examples reached here.  /* #neg=1.472 #pos=668 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.030751729135970223;  // std dev = 21,641, 2.235,000 (wgt'ed) examples reached here.  /* #neg=1.567 #pos=668 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.023475549570546473;  // std dev = 21,660, 2.244,000 (wgt'ed) examples reached here.  /* #neg=1.576 #pos=668 */


Results
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.335928
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total learning time: 5.706 seconds
Total inference time: 13.461 seconds
AUC ROC: 0.587266


Results scoring model
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.336449
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total scoring time: 5.959 seconds
Parameter learned model CLL: -0.336449


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 103], 'false': [21.645, 1569, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.602, 1548, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.3e-07, 0, 103], 'false': [21.555, 1526, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.6e-07, 0, 103], 'false': [21.544, 1521, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.574, 1535, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.578, 1537, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.46e-07, 0, 103], 'false': [21.489, 1496, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 103], 'false': [21.436, 1472, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.641, 1567, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.83e-08, 0, 103], 'false': [21.66, 1576, 668]}]]
[{'': [1.9315724855614373e-15, 0.20944376578808507]}, {'': [-3.4492365813597096e-16, 0.2105755320674073]}, {'': [1.793603022307049e-15, 0.21176673932138412]}, {'': [6.553549504583448e-16, 0.2120382217578879]}, {'': [-2.4144656069517967e-16, 0.2112787642155903]}, {'': [-5.1738548720395646e-17, 0.21117044852709604]}, {'': [2.0695419488158259e-16, 0.21339957154718076]}, {'': [2.5869274360197823e-17, 0.21471220193904275]}, {'': [-1.2503482607428947e-16, 0.209551321512055]}, {'': [4.527123013034619e-17, 0.2090677139434669]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1821428220073015;  // std dev = 0,468, 1.963,000 (wgt'ed) examples reached here.  /* #neg=1.327 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.09911279052119894;  // std dev = 3,896, 83,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | | else return -0.0168510649004877;  // std dev = 2,291, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | else return -0.08415875720817997;  // std dev = 0,233, 104,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1621655478874869;  // std dev = 0,469, 1.941,000 (wgt'ed) examples reached here.  /* #neg=1.305 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.09256415430063271;  // std dev = 3,881, 81,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | | else return -0.04606214937855664;  // std dev = 2,332, 64,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=6 */
%   | | else return -0.07068743018401649;  // std dev = 0,240, 98,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.46471899007750245;  // std dev = 2,426, 26,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return -0.1634861381276261;  // std dev = 0,987, 39,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
%   | | else return 0.1263399112696257;  // std dev = 0,465, 1.959,000 (wgt'ed) examples reached here.  /* #neg=1.341 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.07127367259570612;  // std dev = 3,904, 84,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return -0.00936385432501208;  // std dev = 2,291, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | else return -0.06086799680361053;  // std dev = 0,243, 95,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5792799941537317;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.14150877340803272;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | | else return 0.1275181224070274;  // std dev = 0,473, 1.835,000 (wgt'ed) examples reached here.  /* #neg=1.217 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.045257605040966584;  // std dev = 3,944, 90,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=20 */
%   | | | else return -0.00827846651364976;  // std dev = 2,291, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.053733093862424655;  // std dev = 2,370, 94,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=6 */
%   | | | else return -0.11756288109646713;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08749462057260174;  // std dev = 0,464, 1.995,000 (wgt'ed) examples reached here.  /* #neg=1.359 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.07950495102201634;  // std dev = 3,839, 76,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return -0.019117529494692215;  // std dev = 2,307, 53,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=6 */
%   | | else return -0.04226253329367559;  // std dev = 0,255, 86,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07042467979846416;  // std dev = 0,464, 2.000,000 (wgt'ed) examples reached here.  /* #neg=1.364 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.03668452520207768;  // std dev = 3,918, 86,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
%   | | | else return -0.023002624327034427;  // std dev = 2,315, 56,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | | else return -0.03805702229396824;  // std dev = 0,255, 86,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05748869278711476;  // std dev = 0,463, 2.002,000 (wgt'ed) examples reached here.  /* #neg=1.366 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05064087362211931;  // std dev = 3,610, 80,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | | | else return -6.837976962216651E-5;  // std dev = 2,679, 45,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | else return -0.0497546783863062;  // std dev = 0,227, 110,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3584380275704159;  // std dev = 1,799, 21,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return -0.15195971508668085;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | | else return 0.0430452853507821;  // std dev = 0,464, 1.964,000 (wgt'ed) examples reached here.  /* #neg=1.346 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.05437505470875654;  // std dev = 3,843, 77,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | | else return -0.01330645296499786;  // std dev = 2,298, 50,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03457607442211578;  // std dev = 2,368, 92,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=6 */
%   | | | else return -0.09420401470523292;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.028764987280077956;  // std dev = 20,268, 1.955,000 (wgt'ed) examples reached here.  /* #neg=1.351 #pos=604 */
%   | | | else return 0.08606843324957643;  // std dev = 4,328, 91,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | else return 0.07133533117204763;  // std dev = 0,347, 94,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=18 */
%   | else return 0.11325779764615039;  // std dev = 0,404, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.01715053992401446;  // std dev = 0,456, 2.014,000 (wgt'ed) examples reached here.  /* #neg=1.404 #pos=610 */
%   | | else if ( title(F, E), venue(F, B) )
%   | | | then return 0.04480235612485834;  // std dev = 4,493, 149,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=30 */
%   | | | else return 0.014503849850400576;  // std dev = 2,716, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.6194577585450521;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.1452834203281052;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0020115265294095856;  // std dev = 2,264, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */


Results
   AUC ROC   = 0.640813
   AUC PR    = 0.204067
   CLL	      = -0.321605
   Precision = 0.280785 at threshold = 0.5
   Recall    = 0.184773
   F1        = 0.222879


Total learning time: 81.225 seconds
Total inference time: 182.634 seconds
AUC ROC: 0.640813


Results scoring model
   AUC ROC   = 0.636163
   AUC PR    = 0.178344
   CLL	      = -0.327217
   Precision = 0.401338 at threshold = 0.5
   Recall    = 0.155642
   F1        = 0.224299


Total scoring time: 21.224 seconds
Refined model CLL: -0.327217


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.640813
   AUC PR    = 0.204067
   CLL	      = -0.321605
   Precision = 0.280785 at threshold = 0.5
   Recall    = 0.184773
   F1        = 0.222879


Total learning time: 114.11399999999999 seconds
Total inference time: 182.634 seconds
AUC ROC: 0.640813
Total revision time: 114.11399999999999
Best scored revision CLL: -0.327217


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:29:41
{'Learning time': 114.11399999999999, 'F1': 0.222879, 'Precision': [0.280785, 0.5], 'Recall': 0.184773, 'Inference time': 182.634, 'parameter': {'Learning time': 5.706, 'F1': 0.297195, 'Precision': [1.0, 0.5], 'Recall': 0.174533, 'Inference time': 13.461, 'CLL': -0.335928, 'AUC ROC': 0.587266, 'AUC PR': 0.193231}, 'CLL': -0.321605, 'AUC ROC': 0.640813, 'AUC PR': 0.204067}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.12057446915580684;  // std dev = 0,989, 47,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
%   | else return 0.22095843484685446;  // std dev = 0,481, 1.979,000 (wgt'ed) examples reached here.  /* #neg=1.261 #pos=718 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.10506251534642576;  // std dev = 0,431, 81,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | else return 0.0044903985141464585;  // std dev = 0,353, 41,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07869317016364558;  // std dev = 0,243, 95,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19124582716911143;  // std dev = 0,479, 2.041,000 (wgt'ed) examples reached here.  /* #neg=1.302 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.08583623952076351;  // std dev = 0,428, 83,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | else return -0.051489466815370484;  // std dev = 0,287, 66,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06579355736327427;  // std dev = 2,366, 90,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=6 */
%   | | else return -0.13253905083332923;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.679310563142989;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5288957560032407;  // std dev = 1,058, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return 0.3049103808005213;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12289569616234076;  // std dev = 0,986, 36,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
%   | else return 0.16013986147698173;  // std dev = 0,480, 1.995,000 (wgt'ed) examples reached here.  /* #neg=1.277 #pos=718 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.10355683900860772;  // std dev = 0,444, 74,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | else return -0.020841010544622382;  // std dev = 0,319, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | else return -0.06224369633139062;  // std dev = 0,242, 96,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5365087794620973;  // std dev = 0,079, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.22763575346630593;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06789579662757192;  // std dev = 0,241, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else return 0.14581467351414762;  // std dev = 0,483, 1.928,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=718 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | then return 0.09617772689781329;  // std dev = 0,448, 72,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | else return -0.008791841281782781;  // std dev = 0,331, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | else return -0.04317517781325384;  // std dev = 0,263, 80,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09978132181372969;  // std dev = 0,474, 2.091,000 (wgt'ed) examples reached here.  /* #neg=1.352 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.0668239278418753;  // std dev = 0,440, 76,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | else return 0.0035874190090731425;  // std dev = 0,343, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return -0.10382933073806999;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.05459090030809873;  // std dev = 0,236, 101,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.38010334444320476;  // std dev = 0,075, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.21236291191698564;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09139493822154827;  // std dev = 0,216, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | else return 0.07320765086585547;  // std dev = 0,476, 2.077,000 (wgt'ed) examples reached here.  /* #neg=1.359 #pos=718 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | then return 0.07068556276549331;  // std dev = 0,448, 72,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | else return -0.01318984125006999;  // std dev = 0,325, 50,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.04985331409066675;  // std dev = 2,376, 103,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=6 */
%   | | | else return -0.10866055257613066;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10236285668893493;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06504069645199119;  // std dev = 0,473, 2.094,000 (wgt'ed) examples reached here.  /* #neg=1.355 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.010945559683033547;  // std dev = 0,421, 87,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else return -0.016289808451697668;  // std dev = 0,319, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | else return -0.037592937507350405;  // std dev = 0,248, 91,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordtitle(D, E), haswordvenue(B, E) )
%   | then if ( title(F, D), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6562897885058936;  // std dev = 5,083, 725,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=701 */
%   | | | else return -0.2963512973220685;  // std dev = 0,970, 1.359,000 (wgt'ed) examples reached here.  /* #neg=1.359 */
%   | | else if ( haswordvenue(A, E) )
%   | | | then return 0.5881562502169975;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.033331398769220984;  // std dev = 3,924, 82,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | else if ( title(H, D), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.7660194510618594;  // std dev = 0,401, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.10536317728934042;  // std dev = 0,280, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.09528479175573475;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then return 0.6437118057725528;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.00399757246037918;  // std dev = 0,330, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03853824962461621;  // std dev = 0,378, 2.054,000 (wgt'ed) examples reached here.  /* #neg=1.315 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return 0.010701367614916212;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=17 */
%   | | else return -0.03095304872451495;  // std dev = 0,397, 46,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return -0.07803474680158837;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.02596167517682209;  // std dev = 2,121, 81,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=6 */
%   | | else return -0.08987228228021989;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5158793815497167;  // std dev = 0,373, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.2443301829858494;  // std dev = 0,043, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.24943562052882695;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.02191237115151457;  // std dev = 1,263, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return 0.03172937521117484;  // std dev = 0,375, 1.997,000 (wgt'ed) examples reached here.  /* #neg=1.279 #pos=718 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then return -0.1320518847385031;  // std dev = 0,163, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.010254405176512138;  // std dev = 3,585, 121,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=17 */
%   | | | else return -0.029721983594781228;  // std dev = 2,684, 46,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | else return -0.0288084167073246;  // std dev = 0,302, 59,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=6 */


Results
   AUC ROC   = 0.909473
   AUC PR    = 0.415641
   CLL	      = -0.294437
   Precision = 0.890909 at threshold = 0.5
   Recall    = 0.021817
   F1        = 0.04259


Total learning time: 531.545 seconds
Total inference time: 1611.703 seconds
AUC ROC: 0.909473


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 07:05:25
{'Learning time': 531.545, 'CLL': -0.294437, 'Recall': 0.021817, 'Inference time': 1611.703, 'F1': 0.04259, 'Precision': [0.890909, 0.5], 'AUC ROC': 0.909473, 'AUC PR': 0.415641}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.04185106490048778;  // std dev = 1,643, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | else return 0.2114953917924207;  // std dev = 0,478, 2.032,000 (wgt'ed) examples reached here.  /* #neg=1.314 #pos=718 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.1321215378392382;  // std dev = 0,446, 73,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | else return -0.014191490432402592;  // std dev = 0,334, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( haswordauthor(N, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06956190827398166;  // std dev = 2,359, 83,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.562504
   AUC PR    = 0.02539
   CLL	      = -0.198447
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 14.192 seconds
Total inference time: 31.497 seconds
AUC ROC: 0.562504


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 07:06:11
{'Learning time': 14.192, 'CLL': -0.198447, 'Recall': 0.0, 'Inference time': 31.497, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.562504, 'AUC PR': 0.02539}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 50581

Target test facts examples: 33252
Target test pos	 examples: 2436
Target test neg examples: 199372

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.14746466139002354;  // std dev = 18,508, 1.666,000 (wgt'ed) examples reached here.  /* #neg=1.184 #pos=482 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.140860448125889;  // std dev = 18,347, 1.598,000 (wgt'ed) examples reached here.  /* #neg=1.116 #pos=482 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.11537808896308174;  // std dev = 18,420, 1.628,000 (wgt'ed) examples reached here.  /* #neg=1.146 #pos=482 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.09949422952196416;  // std dev = 18,396, 1.618,000 (wgt'ed) examples reached here.  /* #neg=1.136 #pos=482 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.08393329623560224;  // std dev = 18,386, 1.614,000 (wgt'ed) examples reached here.  /* #neg=1.132 #pos=482 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.06204491124426866;  // std dev = 18,483, 1.655,000 (wgt'ed) examples reached here.  /* #neg=1.173 #pos=482 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.050197926032805554;  // std dev = 18,492, 1.659,000 (wgt'ed) examples reached here.  /* #neg=1.177 #pos=482 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.04790832709413935;  // std dev = 18,401, 1.620,000 (wgt'ed) examples reached here.  /* #neg=1.138 #pos=482 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.03537826665440495;  // std dev = 18,446, 1.639,000 (wgt'ed) examples reached here.  /* #neg=1.157 #pos=482 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.019492548479457437;  // std dev = 18,564, 1.691,000 (wgt'ed) examples reached here.  /* #neg=1.209 #pos=482 */


Results
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.323561
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 5.362 seconds
Total inference time: 14.018 seconds
AUC ROC: 0.581281


Results scoring model
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.32288
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 5.838 seconds
Parameter learned model CLL: -0.32288


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 99], 'false': [18.508, 1184, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.19e-07, 0, 99], 'false': [18.347, 1116, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-07, 0, 99], 'false': [18.42, 1146, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 99], 'false': [18.396, 1136, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 99], 'false': [18.386, 1132, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 99], 'false': [18.483, 1173, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.37e-07, 0, 99], 'false': [18.492, 1177, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.99e-08, 0, 99], 'false': [18.401, 1138, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 99], 'false': [18.446, 1157, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.5e-08, 0, 99], 'false': [18.564, 1209, 482]}]]
[{'': [1.4354398702224246e-15, 0.2056121368114902]}, {'': [1.4354398702224247e-16, 0.2106481662779413]}, {'': [1.794299837778031e-15, 0.20841206406316054]}, {'': [6.100619448445304e-16, 0.20915504040606359]}, {'': [0.0, 0.20945291278759845]}, {'': [-4.485749594445077e-17, 0.20641870738673285]}, {'': [1.8840148296669324e-16, 0.2061250286580365]}, {'': [4.9343245538895844e-17, 0.20900624904741363]}, {'': [-1.1214373986112693e-16, 0.2075976772694004]}, {'': [4.261462114722823e-17, 0.2037915272037306]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1599080690643247;  // std dev = 0,459, 1.478,000 (wgt'ed) examples reached here.  /* #neg=1.032 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.19857446701440598;  // std dev = 3,249, 47,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return -0.05851773156715447;  // std dev = 1,354, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.013279636329059083;  // std dev = 3,961, 140,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=18 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.1986585571999434;  // std dev = 0,480, 36,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else return 0.13051091022955202;  // std dev = 0,455, 1.478,000 (wgt'ed) examples reached here.  /* #neg=1.045 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.1399098364328025;  // std dev = 3,328, 52,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return -0.05154258263854086;  // std dev = 1,354, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.02103692097286659;  // std dev = 3,982, 151,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12258177249277623;  // std dev = 0,460, 1.468,000 (wgt'ed) examples reached here.  /* #neg=1.022 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.09747867287970169;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return -0.048974076310976555;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0023865050536949896;  // std dev = 3,945, 133,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=18 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.1937151163087494;  // std dev = 0,489, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else return 0.12028678684545857;  // std dev = 0,467, 1.351,000 (wgt'ed) examples reached here.  /* #neg=918 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.14424112343695397;  // std dev = 3,230, 46,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return -0.04357158665887633;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.007945279490757996;  // std dev = 3,958, 139,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=18 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08370865446602552;  // std dev = 0,460, 1.466,000 (wgt'ed) examples reached here.  /* #neg=1.020 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05295595613866877;  // std dev = 3,356, 62,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return -0.06839779798061332;  // std dev = 1,440, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.021117852916320942;  // std dev = 3,990, 156,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=18 */
%   | | | else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06913384402800184;  // std dev = 0,460, 1.465,000 (wgt'ed) examples reached here.  /* #neg=1.019 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.09767900845936507;  // std dev = 3,258, 48,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return -0.021430445968980746;  // std dev = 1,356, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.004429168878708757;  // std dev = 3,938, 130,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=18 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06379549368241601;  // std dev = 0,463, 1.431,000 (wgt'ed) examples reached here.  /* #neg=985 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06927472048620242;  // std dev = 3,232, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08507199674857294;  // std dev = 1,473, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.04727089501529457;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.01830335967875547;  // std dev = 3,757, 141,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.08717141325940908;  // std dev = 0,481, 36,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else return 0.05697914050322506;  // std dev = 0,465, 1.368,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=433 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.022310224285913432;  // std dev = 3,675, 103,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=16 */
%   | | | else return -0.06841194181263427;  // std dev = 1,369, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.23162629059408277;  // std dev = 0,167, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0017079079611899272;  // std dev = 3,647, 84,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.679149128697967;  // std dev = 4,317, 354,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=334 */
%   | | | else return -0.23481220440946313;  // std dev = 4,096, 781,000 (wgt'ed) examples reached here.  /* #neg=765 #pos=16 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.24919671916993336;  // std dev = 2,050, 296,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=4 */
%   | | | else return 0.3765492158211168;  // std dev = 6,119, 163,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5630322073398885;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.04593628062184689;  // std dev = 3,516, 69,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return -0.07460115171647;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5378952214823702;  // std dev = 3,998, 351,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=334 */
%   | | | else return -0.19326487457016078;  // std dev = 4,052, 793,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=16 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.200501968839474;  // std dev = 2,044, 288,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=4 */
%   | | | else return 0.24634247527833542;  // std dev = 6,520, 178,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.025207236175493815;  // std dev = 3,370, 62,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return 0.15076743000876328;  // std dev = 1,536, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.2725554077928331;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07103836777609757;  // std dev = 0,010, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.97982
   AUC PR    = 0.595105
   CLL	      = -0.227731
   Precision = 0.447605 at threshold = 0.5
   Recall    = 0.897783
   F1        = 0.597378


Total learning time: 96.39500000000001 seconds
Total inference time: 1020.326 seconds
AUC ROC: 0.97982


Results scoring model
   AUC ROC   = 0.964588
   AUC PR    = 0.511461
   CLL	      = -0.236643
   Precision = 0.381519 at threshold = 0.5
   Recall    = 0.717728
   F1        = 0.498208


Total scoring time: 40.286 seconds
Refined model CLL: -0.236643


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97982
   AUC PR    = 0.595105
   CLL	      = -0.227731
   Precision = 0.447605 at threshold = 0.5
   Recall    = 0.897783
   F1        = 0.597378


Total learning time: 147.88100000000003 seconds
Total inference time: 1020.326 seconds
AUC ROC: 0.97982
Total revision time: 147.88100000000003
Best scored revision CLL: -0.236643


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:25:55
{'Learning time': 147.88100000000003, 'F1': 0.597378, 'Precision': [0.447605, 0.5], 'Recall': 0.897783, 'Inference time': 1020.326, 'parameter': {'Learning time': 5.362, 'F1': 0.279661, 'Precision': [1.0, 0.5], 'Recall': 0.162562, 'Inference time': 14.018, 'CLL': -0.323561, 'AUC ROC': 0.581281, 'AUC PR': 0.181212}, 'CLL': -0.227731, 'AUC ROC': 0.97982, 'AUC PR': 0.595105}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21273579261414627;  // std dev = 0,478, 1.537,000 (wgt'ed) examples reached here.  /* #neg=992 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.0015001877075051882;  // std dev = 3,709, 114,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=16 */
%   | | | else return -0.0862955093449322;  // std dev = 1,374, 36,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19115800031258529;  // std dev = 0,480, 1.510,000 (wgt'ed) examples reached here.  /* #neg=965 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.12544463852839136;  // std dev = 1,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.005120444685291453;  // std dev = 3,695, 109,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=16 */
%   | | | else return -0.08515580248298181;  // std dev = 1,381, 43,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.5515652753227341;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.28304675680421537;  // std dev = 0,500, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | else return 0.16488945114690617;  // std dev = 0,481, 1.456,000 (wgt'ed) examples reached here.  /* #neg=927 #pos=529 */
%   else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | then if ( title(H, G), venue(H, B) )
%   | | then if ( title(I, G), venue(I, A) )
%   | | | then return 0.46271739147184626;  // std dev = 1,136, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.12062430782010909;  // std dev = 0,328, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.047535257012708235;  // std dev = 0,248, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.014639862872761138;  // std dev = 0,360, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.00411134480881244;  // std dev = 3,715, 120,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=16 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11959872652584709;  // std dev = 0,476, 1.574,000 (wgt'ed) examples reached here.  /* #neg=1.029 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3371313469878907;  // std dev = 1,241, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.10542688987393814;  // std dev = 0,091, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1076636653205132;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.48267200672722677;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.06502475299896711;  // std dev = 0,396, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.01572802422868818;  // std dev = 0,326, 132,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11054953589117057;  // std dev = 0,479, 1.519,000 (wgt'ed) examples reached here.  /* #neg=974 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.35951470415240444;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.0928356116056098;  // std dev = 0,061, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.09774857291777296;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.13240169976925661;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.013765304661437243;  // std dev = 3,677, 103,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=16 */
%   | | | else return -0.06484961087765584;  // std dev = 1,376, 35,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | else return -0.10016973032420726;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.24894217698178922;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.032425127306450266;  // std dev = 0,468, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else return 0.07952403653694248;  // std dev = 0,476, 1.519,000 (wgt'ed) examples reached here.  /* #neg=990 #pos=529 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.7981499886875563;  // std dev = 0,969, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.13698649811610156;  // std dev = 0,105, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( title(K, H), venue(K, A) )
%   | | | then return -0.1415526269702099;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.08656659222647271;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return -0.02253300821356001;  // std dev = 0,225, 81,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | | else return -0.09149551779885699;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06897726917623573;  // std dev = 0,478, 1.538,000 (wgt'ed) examples reached here.  /* #neg=993 #pos=545 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.034244219400397284;  // std dev = 0,137, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.012897418178764586;  // std dev = 3,140, 97,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=16 */
%   | | | else return -0.035124924573761526;  // std dev = 1,340, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -6.413317735954114E-4;  // std dev = 1,787, 68,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return -0.08416898561803583;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.067032908541088;  // std dev = 0,482, 1.487,000 (wgt'ed) examples reached here.  /* #neg=942 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6681793862139463;  // std dev = 0,968, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.11964119968518072;  // std dev = 0,127, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1266278796119136;  // std dev = 1,83e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.13128952137090513;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -7.010298976204653E-4;  // std dev = 1,469, 64,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return -0.021397336099156637;  // std dev = 1,153, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return -0.0784270865046031;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.30710976310248383;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.13514751242488582;  // std dev = 0,497, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | else return 0.041489576813802144;  // std dev = 0,479, 1.490,000 (wgt'ed) examples reached here.  /* #neg=961 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then return 0.008892716480084136;  // std dev = 0,190, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | else if ( title(J, H), venue(J, A) )
%   | | | then return -0.08558927580868296;  // std dev = 0,003, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.11484077836165638;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.015253175335080721;  // std dev = 2,604, 111,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=16 */
%   | | | else return -0.0484194549895512;  // std dev = 1,342, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return -0.07245326647456601;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0415851349563965;  // std dev = 0,481, 1.493,000 (wgt'ed) examples reached here.  /* #neg=948 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.23817713851280223;  // std dev = 0,567, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.09386069091531202;  // std dev = 0,495, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.07924753142560234;  // std dev = 0,002, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.09086606663107331;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.025142245282392207;  // std dev = 2,617, 123,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=16 */
%   | | | else return -0.04271459059896957;  // std dev = 1,335, 36,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | else return -0.06837670266265437;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.596678
   AUC PR    = 0.034535
   CLL	      = -0.375385
   Precision = 0.307902 at threshold = 0.5
   Recall    = 0.046388
   F1        = 0.080628


Total learning time: 66.194 seconds
Total inference time: 380.983 seconds
AUC ROC: 0.596678


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 07:33:23
{'Learning time': 66.194, 'CLL': -0.375385, 'Recall': 0.046388, 'Inference time': 380.983, 'F1': 0.080628, 'Precision': [0.307902, 0.5], 'AUC ROC': 0.596678, 'AUC PR': 0.034535}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2205159563761031;  // std dev = 0,481, 1.504,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.7993254056877476;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.013488740924755091;  // std dev = 3,676, 103,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=16 */
%   | | | else return -0.07288554765910848;  // std dev = 1,365, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.551065
   AUC PR    = 0.01971
   CLL	      = -0.201606
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.802 seconds
Total inference time: 51.353 seconds
AUC ROC: 0.551065


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 07:34:24
{'Learning time': 9.802, 'CLL': -0.201606, 'Recall': 0.0, 'Inference time': 51.353, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.551065, 'AUC PR': 0.01971}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 67804

Target test facts examples: 34429
Target test pos	 examples: 2270
Target test neg examples: 182149

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.16214123909181127;  // std dev = 20,973, 2.079,000 (wgt'ed) examples reached here.  /* #neg=1.447 #pos=632 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.14270494368266845;  // std dev = 20,951, 2.069,000 (wgt'ed) examples reached here.  /* #neg=1.437 #pos=632 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.11566853944151556;  // std dev = 21,051, 2.115,000 (wgt'ed) examples reached here.  /* #neg=1.483 #pos=632 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.0960404318382648;  // std dev = 21,076, 2.127,000 (wgt'ed) examples reached here.  /* #neg=1.495 #pos=632 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.08298813399307989;  // std dev = 21,034, 2.107,000 (wgt'ed) examples reached here.  /* #neg=1.475 #pos=632 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.06146978279551284;  // std dev = 21,140, 2.158,000 (wgt'ed) examples reached here.  /* #neg=1.526 #pos=632 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.05602925310068983;  // std dev = 21,055, 2.117,000 (wgt'ed) examples reached here.  /* #neg=1.485 #pos=632 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.04128047598639856;  // std dev = 21,120, 2.148,000 (wgt'ed) examples reached here.  /* #neg=1.516 #pos=632 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.04026925319029321;  // std dev = 21,017, 2.099,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=632 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.02832778892021009;  // std dev = 21,078, 2.128,000 (wgt'ed) examples reached here.  /* #neg=1.496 #pos=632 */


Results
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.330147
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total learning time: 7.342 seconds
Total inference time: 14.798 seconds
AUC ROC: 0.5837


Results scoring model
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.329219
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total scoring time: 6.776 seconds
Parameter learned model CLL: -0.329219


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.19e-07, 0, 115], 'false': [20.973, 1447, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [20.951, 1437, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.62e-07, 0, 115], 'false': [21.051, 1483, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.26e-07, 0, 115], 'false': [21.076, 1495, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.84e-07, 0, 115], 'false': [21.034, 1475, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.14, 1526, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.76e-07, 0, 115], 'false': [21.055, 1485, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.12, 1516, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.017, 1467, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 115], 'false': [21.078, 1496, 632]}]]
[{'': [3.3364615418300357e-15, 0.2115809831057393]}, {'': [-1.0503675224279742e-15, 0.2121548014476734]}, {'': [1.853589745461131e-15, 0.20952578955897191]}, {'': [9.267948727305654e-16, 0.20884461959418862]}, {'': [2.934850430313457e-16, 0.20998101340953498]}, {'': [-4.633974363652827e-17, 0.20709457921514207]}, {'': [2.703151712130816e-16, 0.20941212118912014]}, {'': [-2.703151712130816e-17, 0.2076575498753337]}, {'': [-1.5832745742480493e-16, 0.21043710326453374]}, {'': [5.0201388939572296e-17, 0.20878794731189754]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1596939537462841;  // std dev = 0,459, 1.877,000 (wgt'ed) examples reached here.  /* #neg=1.311 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.6157246926752692;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return 0.5423594614153018;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.024815601766179047;  // std dev = 3,416, 84,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
%   | | | else return 0.058148935099512224;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.004351064900487665;  // std dev = 3,080, 80,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1309928547462826;  // std dev = 0,455, 1.929,000 (wgt'ed) examples reached here.  /* #neg=1.363 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5078413062348206;  // std dev = 2,572, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.5782156444702528;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.0531509311867195;  // std dev = 2,191, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.024267691602474706;  // std dev = 3,023, 65,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | else return 0.003623520319998234;  // std dev = 0,352, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12638848761250598;  // std dev = 0,460, 1.941,000 (wgt'ed) examples reached here.  /* #neg=1.337 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.02844559514610554;  // std dev = 3,394, 79,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=14 */
%   | | | else return 0.14405313831610272;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.0033932601757137686;  // std dev = 0,352, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08912254110371987;  // std dev = 0,454, 1.954,000 (wgt'ed) examples reached here.  /* #neg=1.388 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3566150433809548;  // std dev = 2,678, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return 0.26852870201492224;  // std dev = 2,128, 20,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.004505941961043866;  // std dev = 3,440, 92,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=14 */
%   | | | else return -0.01894094622694043;  // std dev = 1,610, 22,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else return 0.03897570838908109;  // std dev = 0,392, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08567251114677718;  // std dev = 0,456, 1.971,000 (wgt'ed) examples reached here.  /* #neg=1.367 #pos=604 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.012756006351541565;  // std dev = 3,422, 87,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=14 */
%   | | | else return -0.04099200564889389;  // std dev = 1,632, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.15663317447433725;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.021626672435610245;  // std dev = 3,005, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08372196963121985;  // std dev = 0,461, 1.892,000 (wgt'ed) examples reached here.  /* #neg=1.288 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.060941691792746173;  // std dev = 2,157, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.02494579252263004;  // std dev = 2,993, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.016279408018312153;  // std dev = 3,097, 86,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=11 */
%   | | | else return -0.13305281496890667;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04776604315091105;  // std dev = 0,455, 1.932,000 (wgt'ed) examples reached here.  /* #neg=1.366 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2659990698673116;  // std dev = 2,461, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return 0.14358895325703414;  // std dev = 2,224, 21,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.007899390902490316;  // std dev = 3,428, 89,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | | | else return -0.040052344839323996;  // std dev = 1,629, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else return 0.02830353030126876;  // std dev = 0,391, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03507610983309504;  // std dev = 0,453, 1.957,000 (wgt'ed) examples reached here.  /* #neg=1.391 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.11772152523370873;  // std dev = 2,848, 37,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | | else return 0.21067734137718908;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 3.9919363797415945E-4;  // std dev = 2,230, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.02005563157131732;  // std dev = 2,990, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0016721059867412713;  // std dev = 3,072, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
%   | | | else return -0.12142748572031503;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04037601834372823;  // std dev = 0,459, 1.879,000 (wgt'ed) examples reached here.  /* #neg=1.313 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1823018092639927;  // std dev = 2,456, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return 0.13755261023831528;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.1582887239655802;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.007993492572979615;  // std dev = 3,778, 107,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.005735577299561418;  // std dev = 3,033, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.10905710659496756;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03559346160546421;  // std dev = 0,460, 1.860,000 (wgt'ed) examples reached here.  /* #neg=1.294 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08953976669729607;  // std dev = 2,674, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return 0.2044395021759451;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -7.630031428444156E-4;  // std dev = 3,438, 94,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=14 */
%   | | | else return -0.03509371760084563;  // std dev = 1,628, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else return 0.03056491638518258;  // std dev = 0,396, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */


Results
   AUC ROC   = 0.63641
   AUC PR    = 0.204489
   CLL	      = -0.307561
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 110.018 seconds
Total inference time: 187.555 seconds
AUC ROC: 0.63641


Results scoring model
   AUC ROC   = 0.621374
   AUC PR    = 0.190304
   CLL	      = -0.321173
   Precision = 0.222384 at threshold = 0.5
   Recall    = 0.204819
   F1        = 0.21324


Total scoring time: 22.085 seconds
Refined model CLL: -0.321173


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.63641
   AUC PR    = 0.204489
   CLL	      = -0.307561
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 146.221 seconds
Total inference time: 187.555 seconds
AUC ROC: 0.63641
Total revision time: 146.221
Best scored revision CLL: -0.321173


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 07:40:15
{'Learning time': 146.221, 'F1': 0.280928, 'Precision': [0.522782, 0.5], 'Recall': 0.19207, 'Inference time': 187.555, 'parameter': {'Learning time': 7.342, 'F1': 0.286792, 'Precision': [1.0, 0.5], 'Recall': 0.167401, 'Inference time': 14.798, 'CLL': -0.330147, 'AUC ROC': 0.5837, 'AUC PR': 0.186484}, 'CLL': -0.307561, 'AUC ROC': 0.63641, 'AUC PR': 0.204489}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.39148226843284567;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.0168510649004878;  // std dev = 0,331, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.19866175561232782;  // std dev = 0,474, 1.950,000 (wgt'ed) examples reached here.  /* #neg=1.286 #pos=664 */
%   | | else return 0.7181489350995122;  // std dev = 0,347, 50,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( title(L, J), venue(L, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.14185106490048766;  // std dev = 6,50e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return 0.088918165868743;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return -0.009320944418559959;  // std dev = 0,339, 83,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.18324859321775214;  // std dev = 0,477, 1.925,000 (wgt'ed) examples reached here.  /* #neg=1.249 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.4505478240296193;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.6039869774687725;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.5115500026788568;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.7468441203259153;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then return 0.01313593296635089;  // std dev = 0,322, 82,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=14 */
%   | | else return 0.061262264730893835;  // std dev = 0,410, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else return -0.01712471015309868;  // std dev = 0,329, 89,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15238542452887016;  // std dev = 0,474, 2.045,000 (wgt'ed) examples reached here.  /* #neg=1.326 #pos=719 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.6501478742619283;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.12689286379399525;  // std dev = 4,47e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0.03886666322145301;  // std dev = 0,400, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return -0.010755264803897926;  // std dev = 0,334, 86,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.12188896444169546;  // std dev = 0,474, 1.978,000 (wgt'ed) examples reached here.  /* #neg=1.302 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.296063728887025;  // std dev = 2,471, 28,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return 0.24732552760092708;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.587024523581671;  // std dev = 0,109, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( title(K, I), venue(K, B) )
%   | | | then return 0.7321660125759364;  // std dev = 1,315, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.13967796232367016;  // std dev = 0,068, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return -0.06084868124132663;  // std dev = 0,185, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else return 0.001276235128734337;  // std dev = 0,267, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.09302243160662325;  // std dev = 0,472, 2.021,000 (wgt'ed) examples reached here.  /* #neg=1.345 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.2674872319780424;  // std dev = 2,008, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return 0.09104112010537388;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.47415800322225704;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.4002549321498222;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.03936038739268298;  // std dev = 0,318, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else return 0.016147321213274488;  // std dev = 0,280, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return -0.026626081614500974;  // std dev = 0,285, 94,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07113415726522306;  // std dev = 0,470, 2.047,000 (wgt'ed) examples reached here.  /* #neg=1.371 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.12129671788471048;  // std dev = 2,098, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.04469106890299269;  // std dev = 2,120, 20,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.19239055926266702;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.14236335729905467;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.021287848290232458;  // std dev = 0,303, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else return -0.004851233282546571;  // std dev = 0,303, 81,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
%   | else return -0.02343244673120128;  // std dev = 0,243, 77,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.06444633921026802;  // std dev = 0,473, 2.003,000 (wgt'ed) examples reached here.  /* #neg=1.327 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.030319489526476895;  // std dev = 2,627, 30,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return 0.08580408373373412;  // std dev = 1,577, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.19388010908476078;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.27948425838800284;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, B) )
%   | | then if ( title(M, K), venue(M, A) )
%   | | | then return 0.5694155944011791;  // std dev = 1,554, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.12343514854315873;  // std dev = 0,104, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.02441754121783743;  // std dev = 0,230, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else return 0.0167718089167169;  // std dev = 0,280, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06585716046157654;  // std dev = 0,473, 1.999,000 (wgt'ed) examples reached here.  /* #neg=1.280 #pos=719 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.40316561376336707;  // std dev = 1,739, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return -0.11043969015697071;  // std dev = 0,096, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return -0.034783142422364584;  // std dev = 0,216, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.11457429475149816;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.00668805044170471;  // std dev = 0,271, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.035330596703518874;  // std dev = 0,472, 2.019,000 (wgt'ed) examples reached here.  /* #neg=1.343 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.23775692039546223;  // std dev = 1,589, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.3119800368586771;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.044476394203832426;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.04878649915576746;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.5689363065575108;  // std dev = 0,029, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.11310758892239157;  // std dev = 0,033, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0.019792462655965317;  // std dev = 0,255, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return -0.03765419042320457;  // std dev = 0,224, 93,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.043135445890204405;  // std dev = 0,477, 1.931,000 (wgt'ed) examples reached here.  /* #neg=1.255 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.10950268902343718;  // std dev = 1,748, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.0720748890444618;  // std dev = 1,745, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else return 0.23227672628546206;  // std dev = 0,222, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then return -0.09280261554552663;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return -0.03752320485270073;  // std dev = 1,374, 38,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return -0.016810465643550588;  // std dev = 1,756, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.011226053166514892;  // std dev = 2,109, 73,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | | else return -0.13008838124543937;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.623567
   AUC PR    = 0.041103
   CLL	      = -0.344463
   Precision = 0.165183 at threshold = 0.5
   Recall    = 0.073568
   F1        = 0.101798


Total learning time: 180.987 seconds
Total inference time: 474.883 seconds
AUC ROC: 0.623567


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 07:51:12
{'Learning time': 180.987, 'CLL': -0.344463, 'Recall': 0.073568, 'Inference time': 474.883, 'F1': 0.101798, 'Precision': [0.165183, 0.5], 'AUC ROC': 0.623567, 'AUC PR': 0.041103}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1953060423314275;  // std dev = 0,473, 2.005,000 (wgt'ed) examples reached here.  /* #neg=1.329 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.6498156017661788;  // std dev = 1,990, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.5803711573217345;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.020311097261674484;  // std dev = 0,369, 37,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | else return 0.06569610491083312;  // std dev = 0,406, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.006797583748160992;  // std dev = 0,356, 74,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */


Results
   AUC ROC   = 0.573521
   AUC PR    = 0.026156
   CLL	      = -0.198233
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 22.917 seconds
Total inference time: 35.156 seconds
AUC ROC: 0.573521


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 07:52:11
{'Learning time': 22.917, 'CLL': -0.198233, 'Recall': 0.0, 'Inference time': 35.156, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.573521, 'AUC PR': 0.026156}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 35540

Target test facts examples: 33914
Target test pos	 examples: 2467
Target test neg examples: 214413

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.15795675060239012;  // std dev = 18,102, 1.561,000 (wgt'ed) examples reached here.  /* #neg=1.093 #pos=468 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.13839080567652876;  // std dev = 18,092, 1.557,000 (wgt'ed) examples reached here.  /* #neg=1.089 #pos=468 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.11282892093295774;  // std dev = 18,168, 1.588,000 (wgt'ed) examples reached here.  /* #neg=1.120 #pos=468 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.10983860867369882;  // std dev = 17,981, 1.514,000 (wgt'ed) examples reached here.  /* #neg=1.046 #pos=468 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.0686809536375037;  // std dev = 18,279, 1.636,000 (wgt'ed) examples reached here.  /* #neg=1.168 #pos=468 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.0691757421669981;  // std dev = 18,120, 1.568,000 (wgt'ed) examples reached here.  /* #neg=1.100 #pos=468 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.04966074350333471;  // std dev = 18,210, 1.606,000 (wgt'ed) examples reached here.  /* #neg=1.138 #pos=468 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.051164513910820074;  // std dev = 18,072, 1.549,000 (wgt'ed) examples reached here.  /* #neg=1.081 #pos=468 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.04025874968145692;  // std dev = 18,087, 1.555,000 (wgt'ed) examples reached here.  /* #neg=1.087 #pos=468 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.02250508117985205;  // std dev = 18,215, 1.608,000 (wgt'ed) examples reached here.  /* #neg=1.140 #pos=468 */


Results
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.327717
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total learning time: 7.329 seconds
Total inference time: 20.523 seconds
AUC ROC: 0.583705


Results scoring model
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.331072
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total scoring time: 5.74 seconds
Parameter learned model CLL: -0.331072


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.102, 1093, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 82], 'false': [18.092, 1089, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.48e-07, 0, 82], 'false': [18.168, 1120, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 82], 'false': [17.981, 1046, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.279, 1168, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.12, 1100, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.21, 1138, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 82], 'false': [18.072, 1081, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.087, 1087, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 82], 'false': [18.215, 1140, 468]}]]
[{'': [-6.932124251318051e-16, 0.20992308926625533]}, {'': [8.665155314147563e-16, 0.21023087974874277]}, {'': [1.4730764034050857e-15, 0.20785615034675725]}, {'': [1.2997732971221344e-16, 0.21356288903739012]}, {'': [-3.4660621256590254e-16, 0.20423120378283502]}, {'': [-5.415722071342227e-17, 0.20938541232820454]}, {'': [-1.408087738548979e-16, 0.20648905334757825]}, {'': [2.166288828536891e-17, 0.21084762405283763]}, {'': [-5.144935967775116e-17, 0.21038492157857744]}, {'': [4.06179155350667e-17, 0.20633771441299537]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17864200135528555;  // std dev = 0,467, 1.298,000 (wgt'ed) examples reached here.  /* #neg=882 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15814893509951236;  // std dev = 2,898, 40,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.07327963632905908;  // std dev = 3,343, 175,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=12 */
%   | | | else return 0.0598296073684194;  // std dev = 4,377, 119,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16254138439751045;  // std dev = 0,469, 1.270,000 (wgt'ed) examples reached here.  /* #neg=854 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.02512498919336054;  // std dev = 1,159, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.209769722752059;  // std dev = 2,904, 37,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.059088623084956236;  // std dev = 3,333, 162,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=12 */
%   | | | else return 0.06123502299585227;  // std dev = 4,353, 114,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=24 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14737746043310113;  // std dev = 0,472, 1.238,000 (wgt'ed) examples reached here.  /* #neg=822 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.41350774996590445;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.12689845509497047;  // std dev = 2,897, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1319527491873662;  // std dev = 2,988, 42,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return -0.0326084848156737;  // std dev = 4,413, 216,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.45442054540648386;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return -0.017124170040670725;  // std dev = 2,538, 41,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else return 0.10619417118497468;  // std dev = 0,466, 1.231,000 (wgt'ed) examples reached here.  /* #neg=839 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.46659095370614667;  // std dev = 0,919, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.12086285641080935;  // std dev = 2,804, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0605871294836927;  // std dev = 3,342, 188,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=12 */
%   | | | else return 0.041068253031622176;  // std dev = 4,351, 116,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5705138408489098;  // std dev = 1,791, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.1160003700674787;  // std dev = 2,657, 69,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=8 */
%   | | else return 0.09375247356259242;  // std dev = 0,467, 1.206,000 (wgt'ed) examples reached here.  /* #neg=814 #pos=392 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.11939342974576354;  // std dev = 0,081, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0.015802594191687096;  // std dev = 4,437, 156,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=26 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.07385294831598616;  // std dev = 4,350, 102,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
%   | | | else return -0.18580392808798765;  // std dev = 0,105, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.06741206126942917;  // std dev = 3,310, 54,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.611421188863894;  // std dev = 0,908, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.07012699220618092;  // std dev = 0,464, 1.233,000 (wgt'ed) examples reached here.  /* #neg=841 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.11349555520558817;  // std dev = 1,339, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04855317781976317;  // std dev = 2,906, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03255610243600087;  // std dev = 3,294, 144,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=12 */
%   | | | else return 0.028204788259639787;  // std dev = 4,335, 115,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.025047765640448295;  // std dev = 3,375, 60,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.6216625034368236;  // std dev = 0,108, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.009250361426213966;  // std dev = 3,546, 80,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | | else return 0.0697800642032558;  // std dev = 15,779, 1.125,000 (wgt'ed) examples reached here.  /* #neg=753 #pos=372 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.3280137363565746;  // std dev = 0,875, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11969036507280585;  // std dev = 2,731, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.046011645718351674;  // std dev = 3,325, 181,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=12 */
%   | | | else return 0.06267713506012719;  // std dev = 4,227, 97,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06074843812918186;  // std dev = 0,468, 1.237,000 (wgt'ed) examples reached here.  /* #neg=821 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.09124473820109838;  // std dev = 0,745, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.18241231574064606;  // std dev = 2,647, 29,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.036242445410552916;  // std dev = 3,316, 168,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=12 */
%   | | | else return 0.043507063259815223;  // std dev = 4,253, 101,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.40122856199190826;  // std dev = 1,919, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.08743494658188442;  // std dev = 2,173, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.00586139919602252;  // std dev = 3,487, 71,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0.04770378537392699;  // std dev = 15,734, 1.112,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=372 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.0776002554552911;  // std dev = 1,635, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.004809420956202106;  // std dev = 2,972, 56,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.03947863855435052;  // std dev = 3,081, 104,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=12 */
%   | | | else return -6.0878200461056373E-5;  // std dev = 4,282, 146,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.03723718531149428;  // std dev = 3,234, 63,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.4575181639749624;  // std dev = 0,177, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.049174100031292176;  // std dev = 0,473, 1.138,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=392 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.18910232315148118;  // std dev = 1,439, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.035067312152159795;  // std dev = 2,904, 49,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.031512860089627996;  // std dev = 2,909, 37,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return -0.02462560922129531;  // std dev = 4,384, 219,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=22 */


Results
   AUC ROC   = 0.627351
   AUC PR    = 0.189514
   CLL	      = -0.340765
   Precision = 0.763838 at threshold = 0.5
   Recall    = 0.167815
   F1        = 0.275174


Total learning time: 49.733 seconds
Total inference time: 116.788 seconds
AUC ROC: 0.627351


Results scoring model
   AUC ROC   = 0.680382
   AUC PR    = 0.198894
   CLL	      = -0.328025
   Precision = 0.525714 at threshold = 0.5
   Recall    = 0.167273
   F1        = 0.253793


Total scoring time: 15.402 seconds
Refined model CLL: -0.328025


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.627351
   AUC PR    = 0.189514
   CLL	      = -0.340765
   Precision = 0.763838 at threshold = 0.5
   Recall    = 0.167815
   F1        = 0.275174


Total learning time: 78.204 seconds
Total inference time: 116.788 seconds
AUC ROC: 0.627351
Total revision time: 78.204
Best scored revision CLL: -0.328025


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 07:55:49
{'Learning time': 78.204, 'F1': 0.275174, 'Precision': [0.763838, 0.5], 'Recall': 0.167815, 'Inference time': 116.788, 'parameter': {'Learning time': 7.329, 'F1': 0.286806, 'Precision': [1.0, 0.5], 'Recall': 0.16741, 'Inference time': 20.523, 'CLL': -0.327717, 'AUC ROC': 0.583705, 'AUC PR': 0.185174}, 'CLL': -0.340765, 'AUC ROC': 0.627351, 'AUC PR': 0.189514}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15125238337537444;  // std dev = 3,467, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21814893509950742;  // std dev = 0,480, 1.300,000 (wgt'ed) examples reached here.  /* #neg=832 #pos=468 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(K, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.17393840878372288;  // std dev = 2,865, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.07327963632905908;  // std dev = 0,253, 175,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=12 */
%   | | else return 0.08456402943913441;  // std dev = 0,419, 106,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8254719039222809;  // std dev = 0,159, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.161278284613803;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.7194734122109543;  // std dev = 4,21e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.03204951926240215;  // std dev = 1,876, 35,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else return 0.20749559333653894;  // std dev = 0,485, 1.238,000 (wgt'ed) examples reached here.  /* #neg=770 #pos=468 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then return 0.0048602143489626035;  // std dev = 0,346, 179,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=26 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.1235500536494326;  // std dev = 4,312, 93,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   | | | else return -0.15245997398365715;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1560331612789656;  // std dev = 0,017, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7639224269621955;  // std dev = 0,348, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.20191706584915609;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.028524398527131442;  // std dev = 0,343, 61,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | else return 0.1589910017643108;  // std dev = 0,478, 1.296,000 (wgt'ed) examples reached here.  /* #neg=828 #pos=468 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.4162983264774707;  // std dev = 1,142, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.1358212592472679;  // std dev = 0,458, 40,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.053724714531493314;  // std dev = 0,271, 150,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.07687454163130407;  // std dev = 4,245, 99,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
%   | | | else return -0.1333718232403679;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5136759358734151;  // std dev = 0,081, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2789548141272808;  // std dev = 2,167, 28,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return -0.06304728734306853;  // std dev = 1,884, 38,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | else return 0.15679930373648662;  // std dev = 0,484, 1.214,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=468 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | then return -0.12789885587566144;  // std dev = 0,014, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0.027362369361803505;  // std dev = 0,371, 149,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=26 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.12574893277610563;  // std dev = 4,184, 84,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | | else return -0.14292375115238723;  // std dev = 0,027, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.13586264695598127;  // std dev = 0,047, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.06737047743838101;  // std dev = 2,653, 57,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.12371968578489678;  // std dev = 0,938, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.5452525066341649;  // std dev = 0,169, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10643578891045566;  // std dev = 0,478, 1.286,000 (wgt'ed) examples reached here.  /* #neg=818 #pos=468 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then if ( author(J, H), title(J, I) )
%   | | | then return 0.35320315774004163;  // std dev = 0,646, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.17411625378320889;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(K, H), venue(K, A) )
%   | | | then return 0.33337399301600934;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14038942928504042;  // std dev = 2,828, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else return -0.03154208215926243;  // std dev = 0,314, 306,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10793805681361976;  // std dev = 0,477, 1.284,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5598768566626294;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.4109701779999042;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.1504792618895072;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1500945259667832;  // std dev = 2,774, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.11089958057334398;  // std dev = 4,59e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.022810206914409936;  // std dev = 3,278, 115,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04567654316678214;  // std dev = 4,260, 102,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=24 */
%   | | | else return -0.10227066984724231;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06152888737482525;  // std dev = 0,472, 1.367,000 (wgt'ed) examples reached here.  /* #neg=869 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.42134154937661744;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.10478765211041537;  // std dev = 0,466, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return -0.10042740254119335;  // std dev = 3,80e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.004647811242473448;  // std dev = 3,250, 100,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.028723181244633186;  // std dev = 4,285, 107,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=24 */
%   | | | else return -0.09325561165715326;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05957915758468859;  // std dev = 0,476, 1.323,000 (wgt'ed) examples reached here.  /* #neg=825 #pos=498 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return 0.007225259081498321;  // std dev = 0,347, 161,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=26 */
%   | | else return -0.11987447920429868;  // std dev = 0,068, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.05566355949604609;  // std dev = 4,246, 96,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
%   | | | else return -0.1593723627956473;  // std dev = 0,103, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08566348976771307;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05974777767365408;  // std dev = 0,478, 1.281,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=498 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.7202375105264378;  // std dev = 1,567, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return -0.14408434148737218;  // std dev = 0,761, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else return -0.10541123608916757;  // std dev = 0,083, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.029472842515102234;  // std dev = 4,283, 103,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=26 */
%   | | | else return -0.1477856912616008;  // std dev = 0,083, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08992478240960074;  // std dev = 0,102, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6293981363630048;  // std dev = 0,143, 502,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=494 */
%   | | else return -0.29563497138028777;  // std dev = 0,115, 934,000 (wgt'ed) examples reached here.  /* #neg=927 #pos=7 */
%   | else return -0.10383035521184172;  // std dev = 0,247, 51,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.2858157185815555;  // std dev = 0,318, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.46000926323715985;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5534244125752095;  // std dev = 0,948, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, A) )
%   | | | then return 0.05776817964296362;  // std dev = 4,186, 90,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | | | else return -0.1308231744645172;  // std dev = 0,036, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10634753493126496;  // std dev = 0,164, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.948452
   AUC PR    = 0.351137
   CLL	      = -0.30668
   Precision = 0.357576 at threshold = 0.5
   Recall    = 0.023916
   F1        = 0.044833


Total learning time: 149.156 seconds
Total inference time: 761.957 seconds
AUC ROC: 0.948452


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 08:11:01
{'Learning time': 149.156, 'CLL': -0.30668, 'Recall': 0.023916, 'Inference time': 761.957, 'F1': 0.044833, 'Precision': [0.357576, 0.5], 'AUC ROC': 0.948452, 'AUC PR': 0.351137}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5399671169176942;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | | else return 0.0010060779566551492;  // std dev = 2,070, 35,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | else return 0.22578444177664805;  // std dev = 0,482, 1.273,000 (wgt'ed) examples reached here.  /* #neg=805 #pos=468 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | then return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( title(K, I), venue(K, B) )
%   | | | then return 0.07848791815035908;  // std dev = 4,502, 118,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=26 */
%   | | | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.1207751977257741;  // std dev = 0,440, 99,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.553764
   AUC PR    = 0.014261
   CLL	      = -0.201547
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 11.978 seconds
Total inference time: 45.76 seconds
AUC ROC: 0.553764


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 08:11:59
{'Learning time': 11.978, 'CLL': -0.201547, 'Recall': 0.0, 'Inference time': 45.76, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.553764, 'AUC PR': 0.014261}


