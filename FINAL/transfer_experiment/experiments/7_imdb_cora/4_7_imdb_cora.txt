Starting experiment #4 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 6,50e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.14185106490048907;  // std dev = 0,000, 700,000 (wgt'ed) examples reached here.  /* #neg=700 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.12544463852839235;  // std dev = 0,000, 706,000 (wgt'ed) examples reached here.  /* #neg=706 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.1123163781936068;  // std dev = 0,000, 737,000 (wgt'ed) examples reached here.  /* #neg=737 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783624;  // std dev = 2,79e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.10159632948783516;  // std dev = 4,30e-07, 679,000 (wgt'ed) examples reached here.  /* #neg=679 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.09269127618926203;  // std dev = 0,000, 715,000 (wgt'ed) examples reached here.  /* #neg=715 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839675;  // std dev = 1,30e-07, 705,000 (wgt'ed) examples reached here.  /* #neg=705 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109272;  // std dev = 0,000, 676,000 (wgt'ed) examples reached here.  /* #neg=676 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07324622576333653;  // std dev = 2,33e-07, 680,000 (wgt'ed) examples reached here.  /* #neg=680 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2,58e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.0684269778442025;  // std dev = 1,90e-07, 685,000 (wgt'ed) examples reached here.  /* #neg=685 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06419184008202533;  // std dev = 2,51e-07, 726,000 (wgt'ed) examples reached here.  /* #neg=726 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 31946

Target test facts examples: 35095
Target test pos	 examples: 2649
Target test neg examples: 218007

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.1388506894854724;  // std dev = 13,987, 969,000 (wgt'ed) examples reached here.  /* #neg=697 #pos=272 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.12402100397332001;  // std dev = 13,959, 959,000 (wgt'ed) examples reached here.  /* #neg=687 #pos=272 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.09342461125199107;  // std dev = 14,087, 1.006,000 (wgt'ed) examples reached here.  /* #neg=734 #pos=272 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.07780223829678365;  // std dev = 14,103, 1.012,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=272 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.05901224711462693;  // std dev = 14,165, 1.037,000 (wgt'ed) examples reached here.  /* #neg=765 #pos=272 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.052617142554907875;  // std dev = 14,133, 1.024,000 (wgt'ed) examples reached here.  /* #neg=752 #pos=272 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.03832558167076957;  // std dev = 14,185, 1.045,000 (wgt'ed) examples reached here.  /* #neg=773 #pos=272 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.040124123178429644;  // std dev = 14,103, 1.012,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=272 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.03086248884376582;  // std dev = 14,123, 1.020,000 (wgt'ed) examples reached here.  /* #neg=748 #pos=272 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.026305648979079613;  // std dev = 14,113, 1.016,000 (wgt'ed) examples reached here.  /* #neg=744 #pos=272 */


Results
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.293834
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 3.795 seconds
Total inference time: 15.926 seconds
AUC ROC: 0.575311


Results scoring model
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.291662
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 4.909 seconds
Parameter learned model CLL: -0.291662


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 96], 'false': [13.987, 697, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.88e-07, 0, 96], 'false': [13.959, 687, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.09e-07, 0, 96], 'false': [14.087, 734, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.23e-07, 0, 96], 'false': [14.103, 740, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 96], 'false': [14.165, 765, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 96], 'false': [14.133, 752, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.26e-07, 0, 96], 'false': [14.185, 773, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 96], 'false': [14.103, 740, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 96], 'false': [14.123, 748, 272]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 96], 'false': [14.113, 744, 272]}]]
[{'': [1.1842378929335002e-15, 0.20190827947060794]}, {'': [3.7007434154171886e-16, 0.20318349514669196]}, {'': [1.7393494052460785e-15, 0.19727361477260302]}, {'': [5.181040781584064e-16, 0.19653486228499445]}, {'': [1.850371707708594e-17, 0.1934963719430197]}, {'': [-4.625929269271486e-17, 0.1950683593749927]}, {'': [1.6653345369377348e-16, 0.192537716627371]}, {'': [6.013708050052931e-17, 0.1965348622849932]}, {'': [-6.013708050052931e-17, 0.1955555555555454]}, {'': [1.3877787807814457e-17, 0.19604439208878047]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1815642003000251;  // std dev = 0,468, 773,000 (wgt'ed) examples reached here.  /* #neg=523 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.04863072591743682;  // std dev = 3,158, 118,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03275210970268697;  // std dev = 3,013, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14436863773235586;  // std dev = 0,462, 807,000 (wgt'ed) examples reached here.  /* #neg=557 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.04436707897419179;  // std dev = 3,161, 120,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.034773803504679415;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.0268812970408887;  // std dev = 2,876, 58,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11707284590392907;  // std dev = 0,460, 824,000 (wgt'ed) examples reached here.  /* #neg=574 #pos=250 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.044633140545797347;  // std dev = 2,979, 57,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | | else return -0.1215538777355092;  // std dev = 0,055, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.028099301021610526;  // std dev = 3,142, 107,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=11 */
%   | | | else return -0.12774910691018831;  // std dev = 0,006, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12421812946762513;  // std dev = 0,470, 760,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.03457902323265724;  // std dev = 3,154, 123,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=11 */
%   | | | else return -0.1194196996423241;  // std dev = 0,026, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.001956605529650529;  // std dev = 3,051, 73,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | | else return -0.11377054378721907;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08602480071214712;  // std dev = 0,463, 802,000 (wgt'ed) examples reached here.  /* #neg=552 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.028418333136470183;  // std dev = 3,150, 119,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=11 */
%   | | | else return -0.11835356817056071;  // std dev = 0,027, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03390586493681916;  // std dev = 2,986, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return -0.10302718299576788;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07220025219091562;  // std dev = 0,464, 798,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.09503507386101262;  // std dev = 0,001, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.002710467973039754;  // std dev = 3,113, 94,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.025452663817999027;  // std dev = 2,995, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | | else return -0.09453173756705782;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.061517077513786995;  // std dev = 0,465, 791,000 (wgt'ed) examples reached here.  /* #neg=541 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.08762803221216825;  // std dev = 0,007, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.025233281943951805;  // std dev = 3,154, 116,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.008816666104081028;  // std dev = 3,018, 65,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return -0.08674452635994966;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.046504612859283125;  // std dev = 0,464, 799,000 (wgt'ed) examples reached here.  /* #neg=549 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.08015853704087492;  // std dev = 0,006, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.011500050426520433;  // std dev = 3,134, 104,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0027036120738679055;  // std dev = 3,027, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.08011446159578345;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04952473129695405;  // std dev = 0,468, 769,000 (wgt'ed) examples reached here.  /* #neg=519 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.022095934779814783;  // std dev = 3,150, 123,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=11 */
%   | | | else return -0.09700631470918783;  // std dev = 0,067, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.009810011913328122;  // std dev = 3,013, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | | else return -0.07440543408221716;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6683228833377262;  // std dev = 3,449, 230,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=217 */
%   | | | else return -0.20976151711686547;  // std dev = 5,702, 696,000 (wgt'ed) examples reached here.  /* #neg=663 #pos=33 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.270426279416702;  // std dev = 0,310, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0.5159039432490162;  // std dev = 0,973, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return 0.2170675015546714;  // std dev = 1,029, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.5144314022243441;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04201714036388808;  // std dev = 2,802, 51,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */


Results
   AUC ROC   = 0.925695
   AUC PR    = 0.535101
   CLL	      = -0.26847
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 65.87 seconds
Total inference time: 762.907 seconds
AUC ROC: 0.925695


Results scoring model
   AUC ROC   = 0.918325
   AUC PR    = 0.599446
   CLL	      = -0.249731
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 26.081 seconds
Refined model CLL: -0.249731


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.925695
   AUC PR    = 0.535101
   CLL	      = -0.26847
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 100.65500000000002 seconds
Total inference time: 762.907 seconds
AUC ROC: 0.925695
Total revision time: 100.65500000000002
Best scored revision CLL: -0.249731


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 05:36:53
{'F1': 0.261811, 'parameter': {'F1': 0.261811, 'Precision': [1.0, 0.5], 'Inference time': 15.926, 'AUC PR': 0.168925, 'CLL': -0.293834, 'Learning time': 3.795, 'AUC ROC': 0.575311, 'Recall': 0.150623}, 'Precision': [1.0, 0.5], 'Inference time': 762.907, 'AUC PR': 0.535101, 'CLL': -0.26847, 'Learning time': 100.65500000000002, 'AUC ROC': 0.925695, 'Recall': 0.150623}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.8270070665873979;  // std dev = 2,953, 289,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=280 */
%   | | | else return -0.07910596686127246;  // std dev = 5,477, 510,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then return -0.06702113292769854;  // std dev = 0,263, 147,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=11 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.041482268432845706;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.684619760379623;  // std dev = 3,392, 292,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=280 */
%   | | | else return -0.0733418750482998;  // std dev = 5,487, 541,000 (wgt'ed) examples reached here.  /* #neg=509 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.7347337483847239;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then return 0.3194734122109545;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.6694734122109542;  // std dev = 0,218, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.04449628351449411;  // std dev = 0,284, 124,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.03946459730343081;  // std dev = 0,389, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.5540539525401851;  // std dev = 2,216, 285,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=280 */
%   | | | else return -0.06546316174574768;  // std dev = 5,488, 544,000 (wgt'ed) examples reached here.  /* #neg=512 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.49361342368769895;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then return 0.5676765218587365;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.40075911522982666;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4565654107476253;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return -0.04573528737893107;  // std dev = 0,275, 133,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=11 */
%   | else return 0.01560636149229594;  // std dev = 0,366, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.4164239034404605;  // std dev = 2,216, 285,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=280 */
%   | | | else return -0.05649866848195939;  // std dev = 5,482, 526,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=32 */
%   | | else return 0.0632218694526422;  // std dev = 0,252, 40,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else return 0.42022025490221;  // std dev = 0,209, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | then return -0.1229757470308753;  // std dev = 0,011, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.027975296814680438;  // std dev = 0,294, 115,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=11 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.0800269204921955;  // std dev = 2,903, 47,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return -0.15401563269929394;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11388179394035434;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.07569744134644434;  // std dev = 0,274, 819,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=312 */
%   | | else return 0.04289993067484794;  // std dev = 0,265, 40,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then return 0.45051212485593;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07838046445701308;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24222474748344996;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.04007994842078189;  // std dev = 0,270, 139,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return 0.07439666417095496;  // std dev = 2,893, 46,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return -0.1449106592195453;  // std dev = 0,034, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1028850981582643;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.05588868376663815;  // std dev = 0,273, 848,000 (wgt'ed) examples reached here.  /* #neg=536 #pos=312 */
%   | | else return 0.04046724242109254;  // std dev = 0,265, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else return 0.2258466638384952;  // std dev = 0,271, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | then if ( title(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.6709264512266251;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.1678070188189462;  // std dev = 0,164, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.11218125832909434;  // std dev = 0,052, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.001987918751545597;  // std dev = 3,121, 96,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=11 */
%   | | | else return -0.10908342061195285;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09376931402332102;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.056701363279290526;  // std dev = 0,271, 849,000 (wgt'ed) examples reached here.  /* #neg=525 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.29422317322992275;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12041275738232987;  // std dev = 0,343, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.5525815091746897;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.1478944521032938;  // std dev = 0,117, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.10681744668443208;  // std dev = 0,067, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.05534460815245798;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.027562418001621073;  // std dev = 3,018, 113,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=10 */
%   | | | else return -0.08609891387559976;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.2640308373442755;  // std dev = 2,953, 289,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=280 */
%   | | | else return -0.07505008002316925;  // std dev = 5,494, 565,000 (wgt'ed) examples reached here.  /* #neg=533 #pos=32 */
%   | | else return 0.009179045787015531;  // std dev = 0,249, 44,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then return -0.15770883218884765;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.23341478089600684;  // std dev = 0,007, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then return -0.043764104223793454;  // std dev = 0,260, 80,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.00929289681448785;  // std dev = 3,137, 105,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=11 */
%   | | | else return -0.09649558682447824;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08113166744459753;  // std dev = 0,010, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.034757729150986634;  // std dev = 0,247, 909,000 (wgt'ed) examples reached here.  /* #neg=563 #pos=346 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return -0.09424169932472158;  // std dev = 0,178, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.009960698965098568;  // std dev = 2,233, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | | else return -0.11597678101188215;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.009946921044926933;  // std dev = 3,140, 107,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=11 */
%   | | | else return -0.10455485952580491;  // std dev = 0,028, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07553091424311716;  // std dev = 0,009, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03411850151668368;  // std dev = 0,247, 887,000 (wgt'ed) examples reached here.  /* #neg=541 #pos=346 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return -0.05121267687335221;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then return -0.07184641411991759;  // std dev = 0,240, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02814079059375562;  // std dev = 3,020, 130,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=10 */
%   | | | else return -0.010184493762929764;  // std dev = 2,077, 67,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */


Results
   AUC ROC   = 0.945227
   AUC PR    = 0.316309
   CLL	      = -0.167422
   Precision = 0.308697 at threshold = 0.5
   Recall    = 0.909777
   F1        = 0.460979


Total learning time: 214.64 seconds
Total inference time: 3850.03 seconds
AUC ROC: 0.945227


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 06:44:38
{'Inference time': 3850.03, 'F1': 0.460979, 'Learning time': 214.64, 'Precision': [0.308697, 0.5], 'AUC PR': 0.316309, 'CLL': -0.167422, 'Recall': 0.909777, 'AUC ROC': 0.945227}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.8236661764788189;  // std dev = 3,107, 290,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=280 */
%   | | | else return -0.08054838290815092;  // std dev = 5,481, 522,000 (wgt'ed) examples reached here.  /* #neg=490 #pos=32 */
%   | | else if ( title(G, D), venue(G, A) )
%   | | | then return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7993254056877476;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then if ( haswordtitle(M, N), haswordvenue(B, N) )
%   | | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( title(P, M), venue(P, B) )
%   | | | then return -0.042751965801388576;  // std dev = 3,148, 111,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(B, Q), haswordtitle(R, Q) )
%   | | then if ( title(S, R), venue(S, B) )
%   | | | then return 0.03847680395197139;  // std dev = 3,003, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.9398
   AUC PR    = 0.227028
   CLL	      = -0.160686
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 36.198 seconds
Total inference time: 701.465 seconds
AUC ROC: 0.9398


Dataset: 7_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 06:56:57
{'Inference time': 701.465, 'F1': nan, 'Learning time': 36.198, 'Precision': [nan, 0.5], 'AUC PR': 0.227028, 'CLL': -0.160686, 'Recall': 0.0, 'AUC ROC': 0.9398}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 64082

Target test facts examples: 33542
Target test pos	 examples: 2246
Target test neg examples: 185871

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.16612496091785675;  // std dev = 21,501, 2.169,000 (wgt'ed) examples reached here.  /* #neg=1.501 #pos=668 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.13937310119367324;  // std dev = 21,583, 2.207,000 (wgt'ed) examples reached here.  /* #neg=1.539 #pos=668 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.1210810457432465;  // std dev = 21,557, 2.195,000 (wgt'ed) examples reached here.  /* #neg=1.527 #pos=668 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.09142965172812477;  // std dev = 21,724, 2.276,000 (wgt'ed) examples reached here.  /* #neg=1.608 #pos=668 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.09377550357354476;  // std dev = 21,454, 2.148,000 (wgt'ed) examples reached here.  /* #neg=1.480 #pos=668 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.06610775614520416;  // std dev = 21,629, 2.229,000 (wgt'ed) examples reached here.  /* #neg=1.561 #pos=668 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.06306713137038691;  // std dev = 21,489, 2.164,000 (wgt'ed) examples reached here.  /* #neg=1.496 #pos=668 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.03900077183713762;  // std dev = 21,678, 2.253,000 (wgt'ed) examples reached here.  /* #neg=1.585 #pos=668 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.03588130690326751;  // std dev = 21,610, 2.220,000 (wgt'ed) examples reached here.  /* #neg=1.552 #pos=668 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.035059064272923615;  // std dev = 21,514, 2.175,000 (wgt'ed) examples reached here.  /* #neg=1.507 #pos=668 */


Results
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.336144
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total learning time: 6.08 seconds
Total inference time: 13.616 seconds
AUC ROC: 0.587266


Results scoring model
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.336665
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total scoring time: 6.745 seconds
Parameter learned model CLL: -0.336665


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 103], 'false': [21.501, 1501, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.583, 1539, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.3e-07, 0, 103], 'false': [21.557, 1527, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.6e-07, 0, 103], 'false': [21.724, 1608, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.454, 1480, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.629, 1561, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.46e-07, 0, 103], 'false': [21.489, 1496, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 103], 'false': [21.678, 1585, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 103], 'false': [21.61, 1552, 668]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.83e-08, 0, 103], 'false': [21.514, 1507, 668]}]]
[{'': [1.9315724855614373e-15, 0.2131267933394831]}, {'': [-3.4492365813597096e-16, 0.21106217827731918]}, {'': [1.793603022307049e-15, 0.21171247554754025]}, {'': [6.553549504583448e-16, 0.20735666124083685]}, {'': [-2.4144656069517967e-16, 0.2142740724557919]}, {'': [-5.1738548720395646e-17, 0.20987428450895193]}, {'': [2.0695419488158259e-16, 0.2133995715471916]}, {'': [2.5869274360197823e-17, 0.2085851305622189]}, {'': [-1.2503482607428947e-16, 0.21035954873794815]}, {'': [4.527123013034619e-17, 0.21279978861145332]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17984847986430244;  // std dev = 0,467, 1.977,000 (wgt'ed) examples reached here.  /* #neg=1.341 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.09624417319475029;  // std dev = 3,904, 84,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return -0.034708207757630574;  // std dev = 2,315, 56,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | | else return -0.07935106490048767;  // std dev = 0,242, 96,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4419588823706645;  // std dev = 2,584, 28,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return -0.13740619699441511;  // std dev = 0,986, 36,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
%   | | else return 0.16076539231639372;  // std dev = 0,469, 1.896,000 (wgt'ed) examples reached here.  /* #neg=1.278 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.07858277066890364;  // std dev = 3,918, 86,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
%   | | | else return -0.030535489252319303;  // std dev = 2,315, 56,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.06652936341324445;  // std dev = 2,367, 91,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=6 */
%   | | | else return -0.13246342934731042;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7558832111250806;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.1717072776559896;  // std dev = 0,996, 51,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
%   | | else return 0.13664427519434105;  // std dev = 0,468, 1.899,000 (wgt'ed) examples reached here.  /* #neg=1.281 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.10947992516593796;  // std dev = 3,811, 73,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return -0.01870841090445778;  // std dev = 2,304, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.05271409411583454;  // std dev = 2,359, 83,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=6 */
%   | | | else return -0.11796804589014324;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5189639558128223;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.14287181724161033;  // std dev = 0,992, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | else return 0.11531984671691198;  // std dev = 0,468, 1.897,000 (wgt'ed) examples reached here.  /* #neg=1.279 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.10159353732075481;  // std dev = 3,790, 71,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return -0.0015008028227190859;  // std dev = 2,284, 46,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | | else return -0.05605462052067649;  // std dev = 0,243, 95,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0977810998560463;  // std dev = 0,467, 1.932,000 (wgt'ed) examples reached here.  /* #neg=1.296 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.06341614126612036;  // std dev = 3,590, 75,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | | else return 0.007248394363007677;  // std dev = 2,675, 45,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.05172778340501406;  // std dev = 2,373, 97,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=6 */
%   | | | else return -0.1010295459229925;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06438139775637129;  // std dev = 0,461, 2.028,000 (wgt'ed) examples reached here.  /* #neg=1.392 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.05820224072545417;  // std dev = 3,847, 77,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | | else return -0.027834307564773557;  // std dev = 2,309, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | | else return -0.053283496314187065;  // std dev = 0,228, 109,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05005202560119687;  // std dev = 0,459, 2.044,000 (wgt'ed) examples reached here.  /* #neg=1.408 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.005253674783078774;  // std dev = 3,597, 88,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=16 */
%   | | | else return 0.04132299901868644;  // std dev = 2,736, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else return -0.03927065963714052;  // std dev = 0,244, 94,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04628912052005114;  // std dev = 0,461, 2.012,000 (wgt'ed) examples reached here.  /* #neg=1.376 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.015056090892470158;  // std dev = 3,923, 87,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | | else return -0.013961144372893775;  // std dev = 2,294, 49,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.028417947927535086;  // std dev = 2,360, 84,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=6 */
%   | | | else return -0.0847554797732766;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.028380928560176672;  // std dev = 0,458, 1.979,000 (wgt'ed) examples reached here.  /* #neg=1.369 #pos=610 */
%   | | else if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | | then return 0.07062975825098526;  // std dev = 3,930, 76,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | | else return 0.026005646056548374;  // std dev = 3,547, 115,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.5780404570452735;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.006033242933558284;  // std dev = 0,346, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2408120396503995;  // std dev = 2,652, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | else return -0.18101120014927127;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0458196087747582;  // std dev = 2,360, 53,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.034223959026089865;  // std dev = 20,158, 1.875,000 (wgt'ed) examples reached here.  /* #neg=1.275 #pos=600 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return 0.04061423666415411;  // std dev = 3,819, 74,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | | else return -0.021707839704515553;  // std dev = 2,352, 77,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=6 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.040336230847450597;  // std dev = 2,330, 63,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
%   | | | else return -0.07884509573862042;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.635632
   AUC PR    = 0.201594
   CLL	      = -0.322917
   Precision = 0.281059 at threshold = 0.5
   Recall    = 0.184328
   F1        = 0.22264


Total learning time: 67.363 seconds
Total inference time: 157.938 seconds
AUC ROC: 0.635632


Results scoring model
   AUC ROC   = 0.634684
   AUC PR    = 0.175714
   CLL	      = -0.328653
   Precision = 0.40678 at threshold = 0.5
   Recall    = 0.155642
   F1        = 0.225141


Total scoring time: 19.149 seconds
Refined model CLL: -0.328653


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.635632
   AUC PR    = 0.201594
   CLL	      = -0.322917
   Precision = 0.281059 at threshold = 0.5
   Recall    = 0.184328
   F1        = 0.22264


Total learning time: 99.337 seconds
Total inference time: 157.938 seconds
AUC ROC: 0.635632
Total revision time: 99.337
Best scored revision CLL: -0.328653


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 07:01:29
{'F1': 0.22264, 'parameter': {'F1': 0.297195, 'Precision': [1.0, 0.5], 'Inference time': 13.616, 'AUC PR': 0.193231, 'CLL': -0.336144, 'Learning time': 6.08, 'AUC ROC': 0.587266, 'Recall': 0.174533}, 'Precision': [0.281059, 0.5], 'Inference time': 157.938, 'AUC PR': 0.201594, 'CLL': -0.322917, 'Learning time': 99.337, 'AUC ROC': 0.635632, 'Recall': 0.184328}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19497664704116635;  // std dev = 0,473, 2.194,000 (wgt'ed) examples reached here.  /* #neg=1.455 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.0755402394473383;  // std dev = 0,412, 92,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=20 */
%   | | else return -0.008517731567154362;  // std dev = 0,340, 45,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | else return -0.07802127766644512;  // std dev = 0,244, 94,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.8327192975041947;  // std dev = 4,21e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1672807024958052;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.1672807024958053;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.032719297504194805;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return 0.19028901861974026;  // std dev = 0,479, 2.008,000 (wgt'ed) examples reached here.  /* #neg=1.290 #pos=718 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.07597511749717838;  // std dev = 0,419, 88,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=20 */
%   | | else return -0.05126512791652331;  // std dev = 0,286, 67,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=6 */
%   | else return -0.06520058869752125;  // std dev = 0,251, 89,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15780165168495297;  // std dev = 0,476, 2.090,000 (wgt'ed) examples reached here.  /* #neg=1.351 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.10184403515097147;  // std dev = 0,440, 76,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | else return 0.004806520266627557;  // std dev = 0,347, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | else return -0.05470609216126955;  // std dev = 0,256, 85,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12431378164749667;  // std dev = 0,474, 2.137,000 (wgt'ed) examples reached here.  /* #neg=1.398 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.03719395897444807;  // std dev = 0,409, 94,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=20 */
%   | | else return -0.022082128633897597;  // std dev = 0,317, 53,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return -0.0453465707229087;  // std dev = 2,357, 81,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=6 */
%   | | | else return -0.11942064479698272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11942064479698272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10964389213025222;  // std dev = 0,476, 2.091,000 (wgt'ed) examples reached here.  /* #neg=1.352 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.06897918577005409;  // std dev = 0,433, 80,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | else return -0.027463951592809226;  // std dev = 0,307, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then return -0.04646881307303112;  // std dev = 0,252, 88,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=6 */
%   | | else return -0.10742202863628024;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0823234064608266;  // std dev = 0,474, 2.131,000 (wgt'ed) examples reached here.  /* #neg=1.392 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7249161362292578;  // std dev = 1,287, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.15451955306876977;  // std dev = 0,258, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return 0.22777184235840178;  // std dev = 0,491, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else return -0.048039982826133865;  // std dev = 0,241, 97,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5740076470989491;  // std dev = 5,16e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.2144645174840085;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.12329513667158237;  // std dev = 0,297, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | else return 0.0660911626566763;  // std dev = 0,476, 2.070,000 (wgt'ed) examples reached here.  /* #neg=1.352 #pos=718 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6578433874053833;  // std dev = 0,938, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.13535852027169784;  // std dev = 0,236, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( haswordtitle(I, L), haswordvenue(A, L) )
%   | | | then return -0.04555097008226816;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return -0.1575262256262614;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.04716217746204146;  // std dev = 0,233, 104,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6904600422593767;  // std dev = 0,266, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.2943062562113875;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.29430625621138745;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.17834060291782108;  // std dev = 1,706, 28,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | else return 0.06796110127481331;  // std dev = 0,477, 1.979,000 (wgt'ed) examples reached here.  /* #neg=1.261 #pos=718 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then return 0.0023192210167175373;  // std dev = 0,266, 93,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=17 */
%   | | else if ( haswordtitle(J, L), haswordvenue(A, L) )
%   | | | then return -0.025623705591038947;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return -0.13772957211095643;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.026731534977545192;  // std dev = 0,262, 81,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(E, C) )
%   | then if ( title(F, D), venue(F, B) )
%   | | then return -0.2016709818698812;  // std dev = 0,018, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.025402751705175645;  // std dev = 0,293, 46,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | else if ( haswordvenue(B, C) )
%   | | then return 0.039320332339855366;  // std dev = 0,474, 1.988,000 (wgt'ed) examples reached here.  /* #neg=1.297 #pos=691 */
%   | | else if ( title(G, D), venue(G, B) )
%   | | | then return 0.07470580620350745;  // std dev = 4,292, 131,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=30 */
%   | | | else return 0.013310960005514683;  // std dev = 1,882, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.39726672385712974;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | else return 0.6913843709159533;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return -0.01611069965709498;  // std dev = 0,246, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | else return -0.0873280868028598;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03692097748251231;  // std dev = 0,472, 2.079,000 (wgt'ed) examples reached here.  /* #neg=1.340 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.010607662206634675;  // std dev = 0,363, 81,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | else return -0.03679418243880405;  // std dev = 0,237, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then return -0.04027504245852498;  // std dev = 0,245, 93,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=6 */
%   | | else return -0.08061409710658514;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.609997
   AUC PR    = 0.05417
   CLL	      = -0.355341
   Precision = 0.764706 at threshold = 0.5
   Recall    = 0.011576
   F1        = 0.022807


Total learning time: 109.19 seconds
Total inference time: 235.873 seconds
AUC ROC: 0.609997


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 07:07:15
{'Inference time': 235.873, 'F1': 0.022807, 'Learning time': 109.19, 'Precision': [0.764706, 0.5], 'AUC PR': 0.05417, 'CLL': -0.355341, 'Recall': 0.011576, 'AUC ROC': 0.609997}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2295057190191053;  // std dev = 0,483, 1.990,000 (wgt'ed) examples reached here.  /* #neg=1.251 #pos=739 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then return 0.13592671287728994;  // std dev = 0,448, 72,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | else return -0.032760155809578625;  // std dev = 0,312, 55,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
%   | else return -0.07935106490048767;  // std dev = 0,242, 96,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=6 */


Results
   AUC ROC   = 0.554762
   AUC PR    = 0.013437
   CLL	      = -0.201913
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.448 seconds
Total inference time: 18.28 seconds
AUC ROC: 0.554762


Dataset: 7_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 07:07:43
{'Inference time': 18.28, 'F1': nan, 'Learning time': 8.448, 'Precision': [nan, 0.5], 'AUC PR': 0.013437, 'CLL': -0.201913, 'Recall': 0.0, 'AUC ROC': 0.554762}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 50581

Target test facts examples: 33252
Target test pos	 examples: 2436
Target test neg examples: 199372

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.15678586198922234;  // std dev = 18,386, 1.614,000 (wgt'ed) examples reached here.  /* #neg=1.132 #pos=482 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.13550267557597462;  // std dev = 18,401, 1.620,000 (wgt'ed) examples reached here.  /* #neg=1.138 #pos=482 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.12243950438520888;  // std dev = 18,320, 1.587,000 (wgt'ed) examples reached here.  /* #neg=1.105 #pos=482 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.08880519027288541;  // std dev = 18,513, 1.668,000 (wgt'ed) examples reached here.  /* #neg=1.186 #pos=482 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.08203777487773015;  // std dev = 18,410, 1.624,000 (wgt'ed) examples reached here.  /* #neg=1.142 #pos=482 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.05798643189908079;  // std dev = 18,539, 1.680,000 (wgt'ed) examples reached here.  /* #neg=1.198 #pos=482 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.053873056743427475;  // std dev = 18,458, 1.644,000 (wgt'ed) examples reached here.  /* #neg=1.162 #pos=482 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.04303960628432239;  // std dev = 18,469, 1.649,000 (wgt'ed) examples reached here.  /* #neg=1.167 #pos=482 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.03939872750207363;  // std dev = 18,410, 1.624,000 (wgt'ed) examples reached here.  /* #neg=1.142 #pos=482 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.028007267637490636;  // std dev = 18,460, 1.645,000 (wgt'ed) examples reached here.  /* #neg=1.163 #pos=482 */


Results
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.325045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 5.233 seconds
Total inference time: 13.874 seconds
AUC ROC: 0.581281


Results scoring model
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.324368
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 5.204 seconds
Parameter learned model CLL: -0.324368


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 99], 'false': [18.386, 1132, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.19e-07, 0, 99], 'false': [18.401, 1138, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-07, 0, 99], 'false': [18.32, 1105, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 99], 'false': [18.513, 1186, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 99], 'false': [18.41, 1142, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 99], 'false': [18.539, 1198, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.37e-07, 0, 99], 'false': [18.458, 1162, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.99e-08, 0, 99], 'false': [18.469, 1167, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 99], 'false': [18.41, 1142, 482]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.5e-08, 0, 99], 'false': [18.46, 1163, 482]}]]
[{'': [1.4354398702224246e-15, 0.20945291278756528]}, {'': [1.4354398702224247e-16, 0.20900624904738901]}, {'': [1.794299837778031e-15, 0.21147326120508267]}, {'': [6.100619448445304e-16, 0.2054658431528307]}, {'': [0.0, 0.20870895920793764]}, {'': [-4.485749594445077e-17, 0.20459041950115509]}, {'': [1.8840148296669324e-16, 0.20722852694454824]}, {'': [4.9343245538895844e-17, 0.20686002983964724]}, {'': [-1.1214373986112693e-16, 0.20870895920795363]}, {'': [4.261462114722823e-17, 0.20715477499282994]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.26439893509951234;  // std dev = 0,491, 32,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else return 0.17010858927818176;  // std dev = 0,463, 1.388,000 (wgt'ed) examples reached here.  /* #neg=955 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.1718744252955908;  // std dev = 3,314, 51,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.05094197399139689;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.01235466202278981;  // std dev = 3,958, 139,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14585136369991852;  // std dev = 0,462, 1.439,000 (wgt'ed) examples reached here.  /* #neg=993 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.10709914015354974;  // std dev = 3,415, 59,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return -0.052429003071137924;  // std dev = 1,354, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.008406546309573529;  // std dev = 3,914, 121,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return -0.18481796943255135;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13981628683744868;  // std dev = 2,964, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else return 0.1322982166193477;  // std dev = 0,465, 1.364,000 (wgt'ed) examples reached here.  /* #neg=931 #pos=433 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.08735624523748617;  // std dev = 3,425, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return -0.04277090005966449;  // std dev = 1,351, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.14137114261929945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0021777803432172353;  // std dev = 3,925, 126,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1036115625335544;  // std dev = 0,462, 1.441,000 (wgt'ed) examples reached here.  /* #neg=995 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.057472529722772905;  // std dev = 3,464, 64,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return -0.03801813520592872;  // std dev = 1,351, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0059235706512171925;  // std dev = 3,944, 133,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=18 */
%   | | | else return -0.11027389092464462;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08375734155161853;  // std dev = 0,461, 1.452,000 (wgt'ed) examples reached here.  /* #neg=1.006 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.08409391912770904;  // std dev = 3,381, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.004123923695742938;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.005960952553971492;  // std dev = 3,918, 123,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=18 */
%   | | | else return -0.10198218055442983;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07365596025727045;  // std dev = 0,463, 1.430,000 (wgt'ed) examples reached here.  /* #neg=984 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.06520481060427617;  // std dev = 3,392, 57,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return -0.05464832420859214;  // std dev = 1,366, 30,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010484961430452371;  // std dev = 3,953, 138,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=18 */
%   | | | else return -0.09301425312728236;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0650408169051391;  // std dev = 0,465, 1.407,000 (wgt'ed) examples reached here.  /* #neg=961 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.053977108021718345;  // std dev = 3,392, 57,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return -0.024700016632846652;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0027478805238665494;  // std dev = 3,927, 126,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
%   | | | else return -0.08545879082489848;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.09961947839291596;  // std dev = 0,486, 34,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else return 0.035072531984103435;  // std dev = 0,458, 1.448,000 (wgt'ed) examples reached here.  /* #neg=1.015 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.10409827454832002;  // std dev = 3,249, 47,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return -0.044142048617992265;  // std dev = 1,365, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.009074778203412867;  // std dev = 3,953, 137,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=18 */
%   | | | else return -0.07901201664024302;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04036692678176923;  // std dev = 0,463, 1.430,000 (wgt'ed) examples reached here.  /* #neg=984 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.011039789346630106;  // std dev = 3,425, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return -0.03468046431991622;  // std dev = 1,361, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01171683171973771;  // std dev = 3,962, 141,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=18 */
%   | | | else return -0.07345027583003087;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03808224965365654;  // std dev = 0,466, 1.403,000 (wgt'ed) examples reached here.  /* #neg=957 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05475352059109954;  // std dev = 3,257, 59,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return -0.05702711193950451;  // std dev = 1,476, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.004513175200480892;  // std dev = 3,948, 135,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=18 */
%   | | | else return -0.06860555674274517;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.611955
   AUC PR    = 0.182333
   CLL	      = -0.32513
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 36.489 seconds
Total inference time: 85.388 seconds
AUC ROC: 0.611955


Results scoring model
   AUC ROC   = 0.625357
   AUC PR    = 0.190647
   CLL	      = -0.321349
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 10.501 seconds
Refined model CLL: -0.321349


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.611955
   AUC PR    = 0.182333
   CLL	      = -0.32513
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 57.42699999999999 seconds
Total inference time: 85.388 seconds
AUC ROC: 0.611955
Total revision time: 57.42699999999999
Best scored revision CLL: -0.321349


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:10:21
{'F1': 0.279661, 'parameter': {'F1': 0.279661, 'Precision': [1.0, 0.5], 'Inference time': 13.874, 'AUC PR': 0.181212, 'CLL': -0.325045, 'Learning time': 5.233, 'AUC ROC': 0.581281, 'Recall': 0.162562}, 'Precision': [1.0, 0.5], 'Inference time': 85.388, 'AUC PR': 0.182333, 'CLL': -0.32513, 'Learning time': 57.42699999999999, 'AUC ROC': 0.611955, 'Recall': 0.162562}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2113569713924432;  // std dev = 0,478, 1.543,000 (wgt'ed) examples reached here.  /* #neg=998 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.7470378239884012;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.024815601766178853;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.021550313020788407;  // std dev = 3,752, 133,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5804251010389961;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.15542510103899584;  // std dev = 0,468, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else return 0.18403472670744675;  // std dev = 0,478, 1.496,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.5095915052738489;  // std dev = 1,904, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.12840490628411705;  // std dev = 0,132, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.019959306246056144;  // std dev = 0,312, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.014453025562143349;  // std dev = 3,677, 104,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=16 */
%   | | | else return -0.08416329867380347;  // std dev = 1,375, 36,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | else return -0.1406606593647957;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7326712500036651;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1640252493794318;  // std dev = 0,480, 36,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | else return 0.15736055424725676;  // std dev = 0,478, 1.493,000 (wgt'ed) examples reached here.  /* #neg=964 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( title(J, H), venue(J, A) )
%   | | | then return 0.5214850615838501;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.11202157387288472;  // std dev = 1,83e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.029386433581599154;  // std dev = 0,289, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.023599317163003456;  // std dev = 3,654, 97,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=16 */
%   | | | else return -0.06049765461720305;  // std dev = 1,365, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return -0.1232279687742694;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13587450100525666;  // std dev = 0,480, 1.516,000 (wgt'ed) examples reached here.  /* #neg=971 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5054711839079635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.11429453210736057;  // std dev = 0,329, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12013030386587296;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.2399509909850502;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03137822900942621;  // std dev = 3,631, 91,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   | | | else return -0.05453191957068366;  // std dev = 1,366, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else return -0.10826337346109786;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10279477923575828;  // std dev = 0,477, 1.552,000 (wgt'ed) examples reached here.  /* #neg=1.007 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3814058021848311;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.09701148501720439;  // std dev = 0,221, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1080007511207715;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.09072523630136987;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.013523438183381847;  // std dev = 3,661, 99,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=16 */
%   | | | else return -0.040119088811614995;  // std dev = 1,359, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else return -0.10031745057390248;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08493435202096102;  // std dev = 0,477, 1.546,000 (wgt'ed) examples reached here.  /* #neg=1.001 #pos=545 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.04391944911831739;  // std dev = 0,154, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.03606751922323592;  // std dev = 3,608, 86,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return -0.05455321440624952;  // std dev = 1,373, 34,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -6.920284978202306E-4;  // std dev = 1,760, 77,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | | else return -0.09205640702404608;  // std dev = 0,004, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07378503576401615;  // std dev = 0,479, 1.521,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=545 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.039672597680275694;  // std dev = 0,142, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.03709210606041561;  // std dev = 3,581, 87,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | | | else return -0.07233451888198142;  // std dev = 1,418, 29,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.019236699646200752;  // std dev = 1,829, 59,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return -0.08606388877933929;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06137694877054973;  // std dev = 0,480, 1.509,000 (wgt'ed) examples reached here.  /* #neg=964 #pos=545 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return -0.0409362936535083;  // std dev = 0,293, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.007402452077799267;  // std dev = 3,402, 89,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | | | else return -0.061251870118587626;  // std dev = 1,413, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.010546376723599137;  // std dev = 1,864, 91,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=18 */
%   | | | else return -0.07746852186537934;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.045793945269810524;  // std dev = 0,479, 1.519,000 (wgt'ed) examples reached here.  /* #neg=974 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.2086336010840676;  // std dev = 1,103, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.09063164287125978;  // std dev = 0,256, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.09776837383920178;  // std dev = 0,012, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.0747610229509441;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.004882029303760848;  // std dev = 3,666, 107,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=16 */
%   | | | else return -0.04922183480647484;  // std dev = 1,391, 34,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | | else return -0.07245278551418381;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then if ( title(F, D) )
%   | | | then return 0.6220165884143781;  // std dev = 4,638, 366,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=343 */
%   | | | else return 0.5791360923053899;  // std dev = 2,265, 59,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=53 */
%   | | else return -0.27887893333112374;  // std dev = 0,152, 769,000 (wgt'ed) examples reached here.  /* #neg=753 #pos=16 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.2922772410429789;  // std dev = 0,126, 294,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=4 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3529760786593661;  // std dev = 6,471, 191,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=129 */
%   | | | else return 0.18561517954674497;  // std dev = 1,351, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return 0.02021131441511821;  // std dev = 0,236, 80,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then return 0.5826151234582386;  // std dev = 0,269, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.06773201369078415;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.969414
   AUC PR    = 0.402067
   CLL	      = -0.291548
   Precision = 0.322709 at threshold = 0.5
   Recall    = 0.033251
   F1        = 0.06029


Total learning time: 105.035 seconds
Total inference time: 1109.537 seconds
AUC ROC: 0.969414


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 07:30:36
{'Inference time': 1109.537, 'F1': 0.06029, 'Learning time': 105.035, 'Precision': [0.322709, 0.5], 'AUC PR': 0.402067, 'CLL': -0.291548, 'Recall': 0.033251, 'AUC ROC': 0.969414}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18314893509951236;  // std dev = 0,468, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else return 0.22373290192742723;  // std dev = 0,482, 1.447,000 (wgt'ed) examples reached here.  /* #neg=918 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( title(J, H), venue(J, A) )
%   | | | then return 0.7993254056877476;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( title(K, H), venue(K, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, A) )
%   | | | then return -0.009619659941809968;  // std dev = 3,726, 121,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=16 */
%   | | | else return -0.09056901361843647;  // std dev = 1,377, 39,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.558223
   AUC PR    = 0.028777
   CLL	      = -0.202275
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.291 seconds
Total inference time: 48.248 seconds
AUC ROC: 0.558223


Dataset: 7_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 07:31:35
{'Inference time': 48.248, 'F1': nan, 'Learning time': 10.291, 'Precision': [nan, 0.5], 'AUC PR': 0.028777, 'CLL': -0.202275, 'Recall': 0.0, 'AUC ROC': 0.558223}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 67804

Target test facts examples: 34429
Target test pos	 examples: 2270
Target test neg examples: 182149

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.14805719198024123;  // std dev = 21,184, 2.180,000 (wgt'ed) examples reached here.  /* #neg=1.548 #pos=632 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.1273431481094185;  // std dev = 21,210, 2.193,000 (wgt'ed) examples reached here.  /* #neg=1.561 #pos=632 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.12173786783972271;  // std dev = 21,025, 2.103,000 (wgt'ed) examples reached here.  /* #neg=1.471 #pos=632 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.09347977275440367;  // std dev = 21,170, 2.173,000 (wgt'ed) examples reached here.  /* #neg=1.541 #pos=632 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.07851981449086111;  // std dev = 21,166, 2.171,000 (wgt'ed) examples reached here.  /* #neg=1.539 #pos=632 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.056870071330074864;  // std dev = 21,289, 2.234,000 (wgt'ed) examples reached here.  /* #neg=1.602 #pos=632 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.05591761042373016;  // std dev = 21,152, 2.164,000 (wgt'ed) examples reached here.  /* #neg=1.532 #pos=632 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.053299474749422926;  // std dev = 21,038, 2.109,000 (wgt'ed) examples reached here.  /* #neg=1.477 #pos=632 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.03714589749877911;  // std dev = 21,130, 2.153,000 (wgt'ed) examples reached here.  /* #neg=1.521 #pos=632 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.034850711156299743;  // std dev = 21,057, 2.118,000 (wgt'ed) examples reached here.  /* #neg=1.486 #pos=632 */


Results
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.324995
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total learning time: 6.244 seconds
Total inference time: 13.25 seconds
AUC ROC: 0.5837


Results scoring model
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.324046
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total scoring time: 6.737 seconds
Parameter learned model CLL: -0.324046


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.19e-07, 0, 115], 'false': [21.184, 1548, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.21, 1561, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.62e-07, 0, 115], 'false': [21.025, 1471, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.26e-07, 0, 115], 'false': [21.17, 1541, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.84e-07, 0, 115], 'false': [21.166, 1539, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.289, 1602, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.76e-07, 0, 115], 'false': [21.152, 1532, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.038, 1477, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 115], 'false': [21.13, 1521, 632]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 115], 'false': [21.057, 1486, 632]}]]
[{'': [3.3364615418300357e-15, 0.2058614594730924]}, {'': [-1.0503675224279742e-15, 0.20513639447654372]}, {'': [1.853589745461131e-15, 0.21020895132261003]}, {'': [9.267948727305654e-16, 0.2062529953330613]}, {'': [2.934850430313457e-16, 0.20636500446297595]}, {'': [-4.633974363652827e-17, 0.20286786210345525]}, {'': [2.703151712130816e-16, 0.2067575278204072]}, {'': [-2.703151712130816e-17, 0.20986712549191042]}, {'': [-1.5832745742480493e-16, 0.20737587556998677]}, {'': [5.0201388939572296e-17, 0.20935530784738346]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.28672036367094095;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.08302753548872309;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.15226658215833588;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.1642285996697379;  // std dev = 20,131, 1.908,000 (wgt'ed) examples reached here.  /* #neg=1.324 #pos=584 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.024815601766179047;  // std dev = 3,416, 84,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
%   | | | else return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0010060779566551958;  // std dev = 3,071, 77,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.17954674027598438;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.06061294001539513;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.08858448001852351;  // std dev = 2,739, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.14726691238158512;  // std dev = 20,069, 1.882,000 (wgt'ed) examples reached here.  /* #neg=1.298 #pos=584 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return -0.14489878247426097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1474960638471394;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.026267479566714002;  // std dev = 4,815, 164,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1217868933739554;  // std dev = 0,460, 1.853,000 (wgt'ed) examples reached here.  /* #neg=1.287 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4737484351365701;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | | else return 0.5805595806474062;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.020056038601076014;  // std dev = 3,411, 83,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return -0.017489922534570535;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else return 0.052654262341092634;  // std dev = 0,400, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1035836521100151;  // std dev = 0,459, 1.962,000 (wgt'ed) examples reached here.  /* #neg=1.358 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03410312485009836;  // std dev = 3,373, 75,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | | else return 0.06768474261374006;  // std dev = 1,516, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return -0.01148954293508447;  // std dev = 0,342, 81,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07804679082679919;  // std dev = 0,457, 1.901,000 (wgt'ed) examples reached here.  /* #neg=1.335 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.41603998305310796;  // std dev = 2,672, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return 0.5799066789426669;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.01831825697993202;  // std dev = 2,266, 42,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | | else return 0.00265414143869563;  // std dev = 3,059, 74,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | | else return 0.05206614304459181;  // std dev = 0,408, 52,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05784757447244363;  // std dev = 0,454, 1.944,000 (wgt'ed) examples reached here.  /* #neg=1.378 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.32324572198827634;  // std dev = 2,666, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return 0.44698810968609337;  // std dev = 1,334, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.004743264488212883;  // std dev = 3,454, 96,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=14 */
%   | | | else return -0.032353295641045714;  // std dev = 1,629, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else return -0.025262468919095393;  // std dev = 0,348, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05984268796628099;  // std dev = 0,457, 1.948,000 (wgt'ed) examples reached here.  /* #neg=1.344 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0015096565558863073;  // std dev = 3,426, 88,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
%   | | | else return 0.0789461892520607;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.007801879616367845;  // std dev = 3,078, 80,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.13615314403061005;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.054854505869913146;  // std dev = 0,462, 1.825,000 (wgt'ed) examples reached here.  /* #neg=1.259 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.15601258294784584;  // std dev = 2,990, 39,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
%   | | | else return 0.38479255191561157;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.031147179033849386;  // std dev = 3,365, 74,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | | | else return -0.0031855703901797713;  // std dev = 1,567, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else return -0.017401043464456614;  // std dev = 0,332, 87,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.036272879897703066;  // std dev = 0,456, 1.955,000 (wgt'ed) examples reached here.  /* #neg=1.351 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.013359185719735293;  // std dev = 3,445, 95,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=14 */
%   | | | else return 0.03132006280656555;  // std dev = 1,537, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return -0.002446604123080314;  // std dev = 0,346, 79,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03340284358215072;  // std dev = 0,461, 1.846,000 (wgt'ed) examples reached here.  /* #neg=1.280 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.07542741240900955;  // std dev = 2,928, 38,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | | else return 0.21807860519579514;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.13243137766034158;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.014355959824517818;  // std dev = 3,791, 115,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=17 */
%   | | | else return 0.029772618340918267;  // std dev = 3,016, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */


Results
   AUC ROC   = 0.6411
   AUC PR    = 0.206469
   CLL	      = -0.310013
   Precision = 0.538653 at threshold = 0.5
   Recall    = 0.190308
   F1        = 0.28125


Total learning time: 86.711 seconds
Total inference time: 134.14600000000002 seconds
AUC ROC: 0.6411


Results scoring model
   AUC ROC   = 0.626368
   AUC PR    = 0.191181
   CLL	      = -0.324342
   Precision = 0.222384 at threshold = 0.5
   Recall    = 0.204819
   F1        = 0.21324


Total scoring time: 18.57 seconds
Refined model CLL: -0.324342


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.324995
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total learning time: 118.262 seconds
Total inference time: 13.25 seconds
AUC ROC: 0.5837
Total revision time: 118.262
Best scored revision CLL: -0.324046


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 07:36:03
{'F1': 0.286792, 'parameter': {'F1': 0.286792, 'Precision': [1.0, 0.5], 'Inference time': 13.25, 'AUC PR': 0.186484, 'CLL': -0.324995, 'Learning time': 6.244, 'AUC ROC': 0.5837, 'Recall': 0.167401}, 'Precision': [1.0, 0.5], 'Inference time': 13.25, 'AUC PR': 0.186484, 'CLL': -0.324995, 'Learning time': 118.262, 'AUC ROC': 0.5837, 'Recall': 0.167401}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.20785710630573298;  // std dev = 0,477, 2.056,000 (wgt'ed) examples reached here.  /* #neg=1.337 #pos=719 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.7914822684328456;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return 0.058148935099512224;  // std dev = 0,400, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return -0.020971944021366803;  // std dev = 0,326, 91,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.16490947449161536;  // std dev = 0,472, 2.024,000 (wgt'ed) examples reached here.  /* #neg=1.348 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.4309173796299575;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.6434173796299576;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else return 0.7309173796299575;  // std dev = 0,300, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then return -0.1425708479986909;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.019307704529700657;  // std dev = 2,928, 83,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return 0.10092203251355425;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.001708352770827607;  // std dev = 3,074, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
%   | | | else return -0.13931728825481346;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.14582731411476244;  // std dev = 0,473, 1.992,000 (wgt'ed) examples reached here.  /* #neg=1.316 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.3914678247919538;  // std dev = 2,543, 29,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | | | else return 0.5064682596352874;  // std dev = 1,250, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.5695833024131909;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.5362499690798578;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, B) )
%   | | then if ( title(M, K), venue(M, A) )
%   | | | then return 0.7297736331168153;  // std dev = 1,332, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.14077652051926137;  // std dev = 0,073, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return -0.05079948659054849;  // std dev = 0,247, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | else return 0.022135708647409953;  // std dev = 0,329, 62,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.12496751256956318;  // std dev = 0,474, 1.975,000 (wgt'ed) examples reached here.  /* #neg=1.299 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.4453534605461346;  // std dev = 1,966, 24,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return 0.6580816969202665;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.22239812591441818;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.41386968302959987;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, B) )
%   | | then return 0.029572583599537926;  // std dev = 0,339, 76,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | | else return -0.009741312066101671;  // std dev = 0,290, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.029509720255502362;  // std dev = 0,337, 58,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else return -0.12585085154132097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.09238272926187512;  // std dev = 0,471, 2.038,000 (wgt'ed) examples reached here.  /* #neg=1.362 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.27150083823363197;  // std dev = 2,137, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.43754007699319813;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.34044689938118977;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.47779108844171436;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 7.561953409957111E-4;  // std dev = 0,309, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return 0.0303595378755356;  // std dev = 0,337, 57,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | else return 0.02829916630567968;  // std dev = 0,335, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7434648628030506;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.25653513719694954;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.07471695537876771;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.14346486280305046;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.08893678322264084;  // std dev = 0,472, 2.004,000 (wgt'ed) examples reached here.  /* #neg=1.297 #pos=707 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.07526249739330877;  // std dev = 0,365, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else return 0.0026618239154750246;  // std dev = 0,312, 72,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | else return -0.02952249717961474;  // std dev = 0,289, 84,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.0654385670578941;  // std dev = 0,472, 1.992,000 (wgt'ed) examples reached here.  /* #neg=1.316 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.13456864723921516;  // std dev = 1,888, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.07129014677418292;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.1900605652990095;  // std dev = 1,767, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.341723750948711;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.5432778008936536;  // std dev = 1,574, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.13229792001154467;  // std dev = 0,017, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0.024269482086946514;  // std dev = 0,348, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else return -0.025497856494687908;  // std dev = 0,289, 88,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.05892918134447284;  // std dev = 0,474, 1.955,000 (wgt'ed) examples reached here.  /* #neg=1.279 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.2855685093997414;  // std dev = 1,344, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.009322996156715368;  // std dev = 1,579, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.2706801960199661;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.2694635964337232;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then return -0.007150917994579882;  // std dev = 0,274, 106,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=17 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return -0.010731801366064391;  // std dev = 2,687, 81,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
%   | | | else return -0.13304020167843753;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11000152082648966;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.03747626029024138;  // std dev = 0,471, 2.008,000 (wgt'ed) examples reached here.  /* #neg=1.332 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.26662460750717043;  // std dev = 1,384, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.024521029594996024;  // std dev = 1,434, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.00393876346203671;  // std dev = 2,010, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.053137260091738435;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then return -0.011689419593360346;  // std dev = 0,266, 90,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
%   | | else return 0.07121068547529016;  // std dev = 0,377, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.02644200752351722;  // std dev = 0,295, 87,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | else return -0.09968521579262753;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.03375522959492763;  // std dev = 0,473, 1.981,000 (wgt'ed) examples reached here.  /* #neg=1.305 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.1340354880067957;  // std dev = 1,559, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.048427693368859964;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.18298109548845928;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.21082717512436688;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then return -0.005411034538416115;  // std dev = 0,272, 86,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=14 */
%   | | else return 0.04072763947008554;  // std dev = 0,364, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return -0.0046899237850703225;  // std dev = 0,304, 79,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | | else return -0.09108882033304201;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.615646
   AUC PR    = 0.045784
   CLL	      = -0.346852
   Precision = 0.177686 at threshold = 0.5
   Recall    = 0.037885
   F1        = 0.062455


Total learning time: 136.95 seconds
Total inference time: 245.865 seconds
AUC ROC: 0.615646


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 07:42:26
{'Inference time': 245.865, 'F1': 0.062455, 'Learning time': 136.95, 'Precision': [0.177686, 0.5], 'AUC PR': 0.045784, 'CLL': -0.346852, 'Recall': 0.037885, 'AUC ROC': 0.615646}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1906624619071807;  // std dev = 0,471, 2.033,000 (wgt'ed) examples reached here.  /* #neg=1.357 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.5248156017661789;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.5081489350995123;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.6706489350995123;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.7331489350995123;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0.13087620782678497;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | then return -0.015414283291292274;  // std dev = 0,332, 87,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.598696
   AUC PR    = 0.033393
   CLL	      = -0.19669
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.616 seconds
Total inference time: 39.363 seconds
AUC ROC: 0.598696


Dataset: 7_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 07:43:27
{'Inference time': 39.363, 'F1': nan, 'Learning time': 20.616, 'Precision': [nan, 0.5], 'AUC PR': 0.033393, 'CLL': -0.19669, 'Recall': 0.0, 'AUC ROC': 0.598696}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 35540

Target test facts examples: 33914
Target test pos	 examples: 2467
Target test neg examples: 214413

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.15267379350101773;  // std dev = 18,170, 1.589,000 (wgt'ed) examples reached here.  /* #neg=1.121 #pos=468 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.141246040294905;  // std dev = 18,065, 1.546,000 (wgt'ed) examples reached here.  /* #neg=1.078 #pos=468 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.12257312824083745;  // std dev = 18,047, 1.539,000 (wgt'ed) examples reached here.  /* #neg=1.071 #pos=468 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.08457192575382179;  // std dev = 18,292, 1.642,000 (wgt'ed) examples reached here.  /* #neg=1.174 #pos=468 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.08242172103456459;  // std dev = 18,141, 1.577,000 (wgt'ed) examples reached here.  /* #neg=1.109 #pos=468 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.056815242738057305;  // std dev = 18,288, 1.640,000 (wgt'ed) examples reached here.  /* #neg=1.172 #pos=468 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.06321334638500653;  // std dev = 18,075, 1.550,000 (wgt'ed) examples reached here.  /* #neg=1.082 #pos=468 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.04542894987112635;  // std dev = 18,154, 1.582,000 (wgt'ed) examples reached here.  /* #neg=1.114 #pos=468 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.04136270934600715;  // std dev = 18,095, 1.558,000 (wgt'ed) examples reached here.  /* #neg=1.090 #pos=468 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.030291731639689838;  // std dev = 18,134, 1.574,000 (wgt'ed) examples reached here.  /* #neg=1.106 #pos=468 */


Results
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.327753
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total learning time: 4.354 seconds
Total inference time: 15.849 seconds
AUC ROC: 0.583705


Results scoring model
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.331108
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total scoring time: 4.642 seconds
Parameter learned model CLL: -0.331108


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.17, 1121, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 82], 'false': [18.065, 1078, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.48e-07, 0, 82], 'false': [18.047, 1071, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 82], 'false': [18.292, 1174, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.141, 1109, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.288, 1172, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.075, 1082, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 82], 'false': [18.154, 1114, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [18.095, 1090, 468]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 82], 'false': [18.134, 1106, 468]}]]
[{'': [-6.932124251318051e-16, 0.2077799661850636]}, {'': [8.665155314147563e-16, 0.21107929489616636]}, {'': [1.4730764034050857e-15, 0.21162066960773582]}, {'': [1.2997732971221344e-16, 0.20378285593902426]}, {'': [-3.4660621256590254e-16, 0.20869594588344226]}, {'': [-5.415722071342227e-17, 0.2039321832242914]}, {'': [-1.408087738548979e-16, 0.2107704474505675]}, {'': [2.166288828536891e-17, 0.20831382126035794]}, {'': [-5.144935967775116e-17, 0.21015389533668818]}, {'': [4.06179155350667e-17, 0.20892553550469273]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1928231104816474;  // std dev = 0,472, 1.243,000 (wgt'ed) examples reached here.  /* #neg=827 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.2867203636709409;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.05613677918620194;  // std dev = 3,312, 140,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=12 */
%   | | | else return 0.09115864383737582;  // std dev = 4,290, 103,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15852767284997535;  // std dev = 0,469, 1.278,000 (wgt'ed) examples reached here.  /* #neg=862 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.13605996322210667;  // std dev = 0,045, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0.0333249777452635;  // std dev = 4,535, 146,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=26 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.08475585454434179;  // std dev = 4,438, 108,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=26 */
%   | | | else return -0.15824845797859202;  // std dev = 0,035, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13580926884034297;  // std dev = 0,469, 1.276,000 (wgt'ed) examples reached here.  /* #neg=860 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2887874472518472;  // std dev = 1,411, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.13803659341862473;  // std dev = 2,851, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.06210553351223543;  // std dev = 3,320, 168,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=12 */
%   | | | else return 0.045926006076549675;  // std dev = 4,348, 115,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5879879938781751;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.01689005490231308;  // std dev = 2,538, 41,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1653464844442131;  // std dev = 3,529, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.13084513673531833;  // std dev = 15,635, 1.085,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=372 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.3971112148662019;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14382711611616766;  // std dev = 3,000, 39,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.04959364642358347;  // std dev = 3,310, 157,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=12 */
%   | | | else return 0.07708268098118516;  // std dev = 4,240, 98,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10280133743175754;  // std dev = 0,472, 1.229,000 (wgt'ed) examples reached here.  /* #neg=813 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.35644765958948854;  // std dev = 1,118, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.07769310240124108;  // std dev = 2,876, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.05179414858746489;  // std dev = 3,323, 176,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=12 */
%   | | | else return 0.05107884577287028;  // std dev = 4,283, 104,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.033900825769897905;  // std dev = 3,415, 80,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=18 */
%   | | | else return 0.7528479366071147;  // std dev = 0,112, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.09063153277554924;  // std dev = 3,603, 57,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0.08421598477546531;  // std dev = 15,694, 1.101,000 (wgt'ed) examples reached here.  /* #neg=729 #pos=372 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.27396056824640186;  // std dev = 1,122, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.03617454211028437;  // std dev = 2,945, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.04631751307800647;  // std dev = 3,325, 173,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=12 */
%   | | | else return 0.04536067689804656;  // std dev = 4,278, 103,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.41299271860773634;  // std dev = 2,195, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.08014069856358311;  // std dev = 2,495, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0.06640701633463669;  // std dev = 0,470, 1.166,000 (wgt'ed) examples reached here.  /* #neg=774 #pos=392 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.38167153805903714;  // std dev = 1,314, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.022422247358901977;  // std dev = 2,982, 55,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.04579959519255941;  // std dev = 3,082, 107,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=12 */
%   | | | else return 0.0036399501277317716;  // std dev = 4,284, 159,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3993062308676394;  // std dev = 1,926, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.03558922536371067;  // std dev = 2,246, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else return 0.042071230374147305;  // std dev = 0,467, 1.202,000 (wgt'ed) examples reached here.  /* #neg=810 #pos=392 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.19556574817497235;  // std dev = 1,481, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.0012160108167113084;  // std dev = 3,024, 62,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.055132492710843826;  // std dev = 3,154, 113,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=12 */
%   | | | else return -0.0092925567441837;  // std dev = 4,377, 160,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.23619719578688086;  // std dev = 2,190, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.12758555654366652;  // std dev = 2,400, 72,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.052196621434994955;  // std dev = 3,382, 54,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.0442105715317624;  // std dev = 15,716, 1.107,000 (wgt'ed) examples reached here.  /* #neg=735 #pos=372 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.5357395447464847;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02689839962700307;  // std dev = 2,921, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.028473717884265854;  // std dev = 3,283, 147,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=12 */
%   | | | else return 0.019119306049958228;  // std dev = 4,331, 111,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6771412654599047;  // std dev = 2,826, 432,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=425 */
%   | | | else return -0.2657144956092933;  // std dev = 3,333, 943,000 (wgt'ed) examples reached here.  /* #neg=936 #pos=7 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return -0.29971036956474556;  // std dev = 0,019, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.10999763011503588;  // std dev = 0,046, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.5252104926748863;  // std dev = 0,895, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.522282337483588;  // std dev = 0,904, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06629078358460863;  // std dev = 4,270, 92,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=26 */
%   | | | else return -0.17006084006277913;  // std dev = 0,055, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.913609
   AUC PR    = 0.50658
   CLL	      = -0.273605
   Precision = 0.848987 at threshold = 0.5
   Recall    = 0.186867
   F1        = 0.306312


Total learning time: 87.027 seconds
Total inference time: 570.102 seconds
AUC ROC: 0.913609


Results scoring model
   AUC ROC   = 0.945533
   AUC PR    = 0.662312
   CLL	      = -0.260304
   Precision = 0.865248 at threshold = 0.5
   Recall    = 0.221818
   F1        = 0.353111


Total scoring time: 28.083 seconds
Refined model CLL: -0.260304


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.913609
   AUC PR    = 0.50658
   CLL	      = -0.273605
   Precision = 0.848987 at threshold = 0.5
   Recall    = 0.186867
   F1        = 0.306312


Total learning time: 124.106 seconds
Total inference time: 570.102 seconds
AUC ROC: 0.913609
Total revision time: 124.106
Best scored revision CLL: -0.260304


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 07:55:19
{'F1': 0.306312, 'parameter': {'F1': 0.286806, 'Precision': [1.0, 0.5], 'Inference time': 15.849, 'AUC PR': 0.185174, 'CLL': -0.327753, 'Learning time': 4.354, 'AUC ROC': 0.583705, 'Recall': 0.16741}, 'Precision': [0.848987, 0.5], 'Inference time': 570.102, 'AUC PR': 0.50658, 'CLL': -0.273605, 'Learning time': 124.106, 'AUC ROC': 0.913609, 'Recall': 0.186867}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.23456616865959812;  // std dev = 0,484, 1.323,000 (wgt'ed) examples reached here.  /* #neg=825 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15814893509951236;  // std dev = 2,898, 40,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.04736287592410971;  // std dev = 3,296, 127,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.09814893509951172;  // std dev = 4,271, 100,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.7745001112725319;  // std dev = 0,223, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.8271316902199002;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.06870164311343337;  // std dev = 2,116, 48,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | else return 0.2042469198734142;  // std dev = 0,485, 1.241,000 (wgt'ed) examples reached here.  /* #neg=773 #pos=468 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, B) )
%   | | then return 0.22616844718404133;  // std dev = 1,064, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.16706269124940648;  // std dev = 0,469, 42,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then return -0.06635469017253587;  // std dev = 0,247, 182,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0704104610884683;  // std dev = 3,174, 58,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return 0.008810708622166152;  // std dev = 3,032, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.6800466637770477;  // std dev = 0,017, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.36984996503527034;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | | else return -0.07397891569757375;  // std dev = 2,134, 56,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=5 */
%   | else return 0.1653290140854409;  // std dev = 0,483, 1.267,000 (wgt'ed) examples reached here.  /* #neg=799 #pos=468 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordauthor(H, I), haswordvenue(A, I) )
%   | | then return -0.20037630434204282;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(J, G) )
%   | | | then return 0.17745795312890228;  // std dev = 1,084, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1360571863078139;  // std dev = 3,049, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.059695125872049726;  // std dev = 0,247, 183,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=12 */
%   | | else return 0.0848814656488493;  // std dev = 0,427, 99,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.1188578081382243;  // std dev = 3,246, 51,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return -0.02944784071440327;  // std dev = 1,417, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return 0.6428151346916129;  // std dev = 0,125, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.39321623802948424;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return -0.0727632867125898;  // std dev = 2,144, 62,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=5 */
%   | | else return 0.1439415990628491;  // std dev = 0,484, 1.191,000 (wgt'ed) examples reached here.  /* #neg=743 #pos=448 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then return -0.019093597521995586;  // std dev = 0,308, 224,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=26 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.08092873511869812;  // std dev = 0,433, 102,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
%   | | else return -0.16890357098751038;  // std dev = 0,089, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7018858699743271;  // std dev = 0,472, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.24803231122642996;  // std dev = 0,082, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.08161179293911199;  // std dev = 0,324, 56,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | else return 0.10390717406989479;  // std dev = 0,477, 1.293,000 (wgt'ed) examples reached here.  /* #neg=825 #pos=468 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then return 0.24543646525941434;  // std dev = 0,954, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.11642239751270421;  // std dev = 0,466, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, B) )
%   | | | then return 0.2699419137284608;  // std dev = 1,297, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08171261579046193;  // std dev = 2,814, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else return -0.02110482816325665;  // std dev = 0,312, 195,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09054426737750437;  // std dev = 0,473, 1.346,000 (wgt'ed) examples reached here.  /* #neg=848 #pos=498 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.35493769154068144;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.13460398308585717;  // std dev = 0,485, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return -0.0263644928016698;  // std dev = 3,288, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | | else return -0.11793044612317068;  // std dev = 0,029, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.0173360891633889;  // std dev = 4,355, 116,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=24 */
%   | | | else return -0.12239544978761949;  // std dev = 0,020, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.034488865370277386;  // std dev = 2,802, 54,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.1496544115061589;  // std dev = 0,929, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.47652756613021297;  // std dev = 0,164, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, C) )
%   | | | then return -0.04573153996605748;  // std dev = 2,559, 69,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | | | else return 0.8301127051815971;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08933901562726704;  // std dev = 0,487, 1.157,000 (wgt'ed) examples reached here.  /* #neg=709 #pos=448 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then if ( author(L, K), venue(L, B) )
%   | | then return 0.2956988037470127;  // std dev = 0,489, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.029354771990074552;  // std dev = 0,408, 53,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else return -0.008788835122278281;  // std dev = 0,336, 253,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.6576053836267403;  // std dev = 0,139, 502,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=494 */
%   | | else return -0.28857569931278587;  // std dev = 0,099, 928,000 (wgt'ed) examples reached here.  /* #neg=921 #pos=7 */
%   | else return -0.11136654324917639;  // std dev = 0,210, 72,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=4 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordauthor(H, G) )
%   | | then return 0.2587783839396504;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.5571543951535645;  // std dev = 0,934, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.6643610480824443;  // std dev = 0,156, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.13725816974824268;  // std dev = 0,487, 35,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.025112260811402085;  // std dev = 3,193, 86,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=12 */
%   | | | else return -0.11061561584813857;  // std dev = 0,031, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.502570844102806;  // std dev = 0,176, 507,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=494 */
%   | | else return -0.22460797286965392;  // std dev = 0,099, 955,000 (wgt'ed) examples reached here.  /* #neg=948 #pos=7 */
%   | else return -0.08618483280521903;  // std dev = 0,225, 60,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=4 */
%   else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.395711229468758;  // std dev = 0,393, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.23663285517646496;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.05870540413792876;  // std dev = 0,342, 56,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | then return 0.4295273387870498;  // std dev = 0,286, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.1050146643760386;  // std dev = 2,414, 40,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return -0.14968658348253458;  // std dev = 0,208, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.3892719889042649;  // std dev = 0,138, 501,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=494 */
%   | | else return -0.20024340001318386;  // std dev = 0,092, 899,000 (wgt'ed) examples reached here.  /* #neg=892 #pos=7 */
%   | else return -0.06596730464704922;  // std dev = 0,203, 73,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=4 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, A) )
%   | | then return 0.07749660331804566;  // std dev = 0,826, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.17596355939532815;  // std dev = 0,395, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.07255721842046071;  // std dev = 3,008, 77,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | | else return -0.10084065944562824;  // std dev = 0,022, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( haswordvenue(A, M), haswordvenue(B, M) )
%   | | | then return 0.409582371938601;  // std dev = 0,073, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.09909629869886115;  // std dev = 0,051, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.962128
   AUC PR    = 0.378863
   CLL	      = -0.21386
   Precision = 0.387475 at threshold = 0.5
   Recall    = 0.857722
   F1        = 0.533804


Total learning time: 207.474 seconds
Total inference time: 1523.861 seconds
AUC ROC: 0.962128


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 08:24:11
{'Inference time': 1523.861, 'F1': 0.533804, 'Learning time': 207.474, 'Precision': [0.387475, 0.5], 'AUC PR': 0.378863, 'CLL': -0.21386, 'Recall': 0.857722, 'AUC ROC': 0.962128}


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.4581489350995123;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return -0.013645936695359509;  // std dev = 2,088, 39,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | else return 0.23709630352056008;  // std dev = 0,485, 1.235,000 (wgt'ed) examples reached here.  /* #neg=767 #pos=468 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1914822684328457;  // std dev = 0,471, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( haswordtitle(M, N), haswordvenue(B, N) )
%   | | | then return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.035656374635000945;  // std dev = 3,275, 113,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=12 */
%   | | else if ( haswordvenue(B, P), haswordtitle(Q, P) )
%   | | | then return 0.08244800052007252;  // std dev = 4,315, 107,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.553995
   AUC PR    = 0.014223
   CLL	      = -0.202044
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.065 seconds
Total inference time: 36.367 seconds
AUC ROC: 0.553995


Dataset: 7_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 08:24:57
{'Inference time': 36.367, 'F1': nan, 'Learning time': 9.065, 'Precision': [nan, 0.5], 'AUC PR': 0.014223, 'CLL': -0.202044, 'Recall': 0.0, 'AUC ROC': 0.553995}


