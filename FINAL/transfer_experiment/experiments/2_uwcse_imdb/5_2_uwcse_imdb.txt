Starting experiment #5 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | then if ( projectmember(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1914822684328457;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( publication(J, B), ta(K, A, L) )
%   | | | then return 0.7152917922423687;  // std dev = 2,070, 35,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | | else return 0.5316183228546139;  // std dev = 3,283, 49,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=33 */
%   else if ( student(B) )
%   | then return -0.14185106490048832;  // std dev = 0,000, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | else return -0.09837280403092258;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.7247900911641821;  // std dev = 0,072, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.38614007887762103;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5528067455442875;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), professor(H) )
%   | | | then return 0.09143685175991649;  // std dev = 2,548, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.5743318452747816;  // std dev = 1,235, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( projectmember(I, B) )
%   | | | then return 0.7738492601876319;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.442906473881791;  // std dev = 4,013, 74,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=50 */
%   else return -0.12596039524855573;  // std dev = 0,020, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( publication(G, D) )
%   | | | then return 0.4251179162802047;  // std dev = 0,889, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5540531814969921;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.5857482616399882;  // std dev = 0,122, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( publication(H, A) )
%   | | then if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.4382761086016537;  // std dev = 1,349, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.09694589637405346;  // std dev = 2,459, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.38043188649304166;  // std dev = 2,999, 45,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | | | else return 0.5022674713127272;  // std dev = 2,037, 28,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   else return -0.1126100701962235;  // std dev = 0,015, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then if ( publication(F, B), ta(G, C, H) )
%   | | then if ( ta(G, I, E) )
%   | | | then return 0.276461486366936;  // std dev = 1,626, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.5278648231423757;  // std dev = 0,129, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(J, B), publication(J, A) )
%   | | | then return 0.43339307637846836;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6323023914215485;  // std dev = 0,262, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | then if ( publication(M, A), publication(M, B) )
%   | | | then return 0.33494368003955816;  // std dev = 0,944, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.10241725610590266;  // std dev = 1,177, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( tempadvisedby(N, B), ta(P, N, Q) )
%   | | | then return 0.442314679386109;  // std dev = 1,016, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.31082057744245317;  // std dev = 3,622, 74,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=55 */
%   else return -0.10200153283222352;  // std dev = 0,019, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.35379885919741;  // std dev = 0,192, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( projectmember(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.582677993944689;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.42426960078348835;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.07609209551268263;  // std dev = 3,483, 52,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.18605600351243815;  // std dev = 3,354, 54,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=35 */
%   else return -0.09297935264642163;  // std dev = 0,015, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(F, A, G) )
%   | | then if ( ta(D, C, G) )
%   | | | then return 0.15485568386621634;  // std dev = 1,132, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.39117813044702565;  // std dev = 0,402, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( ta(D, H, I), publication(J, H) )
%   | | | then return 0.2687004905076507;  // std dev = 1,068, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.0325302580656921;  // std dev = 1,530, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( ta(K, A, L) )
%   | | then if ( tempadvisedby(M, B), publication(N, A) )
%   | | | then return 0.20742149773710322;  // std dev = 1,090, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.038417473618555735;  // std dev = 2,897, 37,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | else if ( publication(P, B), publication(P, A) )
%   | | | then return 0.22949693230209642;  // std dev = 0,962, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.1260769853030961;  // std dev = 3,013, 43,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   else return -0.08535326479771063;  // std dev = 0,013, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.22358428298775798;  // std dev = 0,128, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(C, E), ta(F, E, G) )
%   | | | then return 0.037992160631920124;  // std dev = 0,910, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15146383991594214;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( publication(H, B), publication(I, A) )
%   | | then if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return -0.41604298838792775;  // std dev = 0,352, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.06691210994068468;  // std dev = 2,108, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( ta(M, A, N), publication(P, B) )
%   | | | then return 0.20034998533961051;  // std dev = 2,182, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | | else return 0.09383471846161842;  // std dev = 3,458, 55,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=35 */
%   else return -0.07903108975669802;  // std dev = 0,014, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( ta(C, F, G), publication(E, F) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.11809766885691018;  // std dev = 1,001, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.15060396699710493;  // std dev = 1,487, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.2281756936792492;  // std dev = 1,009, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.37195574328703607;  // std dev = 0,217, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( publication(L, B), publication(L, A) )
%   | | then return 0.20218814358428785;  // std dev = 0,123, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( publication(M, A), tempadvisedby(N, B) )
%   | | | then return -0.08815740739359257;  // std dev = 1,500, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.07230235500976974;  // std dev = 3,493, 54,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   else return -0.07353978296528249;  // std dev = 0,014, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(E, C), ta(F, A, G) )
%   | | then if ( ta(H, C, I) )
%   | | | then return 0.0578892978847112;  // std dev = 0,535, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.284932839545938;  // std dev = 1,210, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(D, A) )
%   | | | then return 0.1596027515399749;  // std dev = 0,086, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.011245720336846916;  // std dev = 3,067, 49,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=29 */
%   | else if ( publication(J, A) )
%   | | then if ( publication(J, K), professor(K) )
%   | | | then return 0.15487461218268403;  // std dev = 1,896, 27,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | | else return 0.40146291586891525;  // std dev = 0,136, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | | then return -0.08674529254523518;  // std dev = 0,895, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1191653368574165;  // std dev = 2,368, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   else return -0.06858153746093207;  // std dev = 0,012, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( publication(G, D), publication(G, B) )
%   | | | then return -0.10540565241427276;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14544593756482704;  // std dev = 0,075, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.1396546871006108;  // std dev = 0,060, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.19398744514341237;  // std dev = 0,189, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), tempadvisedby(K, J) )
%   | | | then return -0.17653561955973332;  // std dev = 2,277, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.24405534764887343;  // std dev = 0,916, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.13898099113355997;  // std dev = 2,935, 58,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=47 */
%   | | | else return -0.09558568025536143;  // std dev = 1,943, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   else return -0.06441099072872285;  // std dev = 0,013, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), tempadvisedby(H, B).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,false,true;projectmember(I, B).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(G, A).;true;true
1;true,true,false;ta(E, A, F).;false;false
1;true,false,false;projectmember(I, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,false,true;publication(G, H), professor(H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true,true;publication(G, D).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,false;tempadvisedby(L, B).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
2;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;ta(G, I, E).;false;false
3;true;tempadvisedby(C, B), ta(D, A, E).;true;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;true,false;tempadvisedby(K, B), publication(L, K).;true;true
3;true,true;publication(F, B), ta(G, C, H).;true;true
3;true,false,true;publication(M, A), publication(M, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false;projectmember(D, B).;true;true
4;true,false,true;publication(E, A).;false;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,true;ta(D, C, G).;false;false
5;true;tempadvisedby(C, B), ta(D, C, E).;true;true
5;true,true,false;ta(D, H, I), publication(J, H).;false;false
5;true,false,false;publication(P, B), publication(P, A).;false;false
5;true,false;ta(K, A, L).;true;true
5;true,true;ta(F, A, G).;true;true
5;true,false,true;tempadvisedby(M, B), publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(H, B), publication(I, A).;true;true
6;true,true,false;publication(C, E), ta(F, E, G).;false;false
6;true,false,false;ta(M, A, N), publication(P, B).;false;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B).;false;true
6;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,true;tempadvisedby(H, B).;false;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true,false;tempadvisedby(I, B), ta(J, I, K).;false;false
7;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
7;true,false;publication(L, B), publication(L, A).;false;true
7;true,true;ta(C, F, G), publication(E, F).;true;true
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true,true,true;ta(H, C, I).;false;false
8;true;tempadvisedby(C, B), publication(D, B).;true;true
8;true,true,false;publication(D, A).;false;false
8;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;true,false;publication(J, A).;true;true
8;true,true;publication(E, C), ta(F, A, G).;true;true
8;true,false,true;publication(J, K), professor(K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,true;publication(G, D), publication(G, B).;false;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true,false;tempadvisedby(H, B).;false;false
9;true,false,false;publication(L, B).;false;false
9;true,false;publication(I, A).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11246284161918615;  // std dev = 0,015, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.38290625658190053;  // std dev = 0,129, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10158296188969847;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3282975626348253;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then return -0.14225253593967907;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09268008348972961;  // std dev = 2,98e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then return 0.21207881690150587;  // std dev = 1,022, 64,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08517525216407525;  // std dev = 6,05e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.22161641419018535;  // std dev = 6,32e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.15098715560389162;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07876859785613045;  // std dev = 4,21e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.17476801444617035;  // std dev = 0,058, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07323914966305795;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13976290573311914;  // std dev = 0,079, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842078396970021;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.14277643304966683;  // std dev = 4,71e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.17316850534841272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06418637519356368;  // std dev = 4,59e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074635
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.851 seconds
Total inference time: 3.196 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066809
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.832 seconds
Parameter learned model CLL: -0.066809


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(G, A)', 'true,true': 'movie(E, F)', 'false': 'actor(B)'}, {'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'false,true': [8.43e-08, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,true': [0.0, 0, 56], 'false': [0.0, 113, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, B)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.03e-07, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.015, 102, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.129, 4, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 115, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [5.16e-08, 0, 56], 'true,false,true': [0.0, 5, 0], 'false': [2.98e-08, 106, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)'}, {'true,true': [1.022, 8, 56], 'true,false': [0.0, 0, 0], 'false': [6.05e-08, 109, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true': [6.32e-08, 0, 56], 'true,false,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'false': [4.21e-08, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,true': [0.058, 2, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 120, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B)'}, {'true,true,true': [0.079, 4, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 99, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true,true': [4.71e-08, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.59e-08, 104, 0]}]]
[{'': [0.04826199367997677, 6.640586315514955e-17], 'false': [6.640586315514955e-17, nan], 'true,false': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,true': [-1.2688263138573217e-16, nan], 'true,true,true': [-1.2688263138573217e-16, nan]}, {'': [0.044419605220055364, -3.929993007522678e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0]}, {'': [0.027738687907221463, 2.1666050383566305e-06], 'true,false': [0.0, nan], 'true,true': [1.9032394707859825e-16, nan], 'true,false,true': [0.0, nan], 'true': [1.9032394707859825e-16, 0.0]}, {'': [0.016767339707732778, -4.4408920985006264e-17], 'true': [0.016767339707732778, nan]}, {'': [0.016661346593704215, 8.3790416952842e-18], 'true,false': [-5.551115123125783e-18, nan], 'true': [4.7580986769649563e-17, -5.551115123125783e-18]}, {'': [0.01630523495164598, 3.3612256708835016e-17], 'true': [0.01630523495164598, nan]}, {'': [0.004622277962249895, 1.3256394323882466e-17], 'true,false': [0.0, nan], 'true,true': [7.137148015447435e-17, nan], 'true': [7.137148015447435e-17, 0.0]}, {'': [0.003374859307136975, -2.1279274638648835e-17], 'true,true': [0.003374859307136975, nan], 'true': [0.003374859307136975, nan]}, {'': [0.00616660592679625, -1.0653655286807057e-17], 'true,true': [0.00616660592679625, nan], 'true': [0.00616660592679625, nan]}, {'': [0.0062110971439606035, 2.028292064219036e-17], 'true,false': [0.0, nan], 'true,true': [3.9650822308041306e-17, nan], 'true,false,true': [0.0, nan], 'true': [3.9650822308041306e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048763;  // std dev = 8,30e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839133;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1123163781936062;  // std dev = 8,16e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1015963294878363;  // std dev = 2,58e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926097;  // std dev = 4,71e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839683;  // std dev = 5,67e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109155;  // std dev = 7,15e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333707;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420265;  // std dev = 5,58e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202626;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065193
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.598 seconds
Total inference time: 2.389 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.638 seconds
Refined model CLL: -0.063421


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065193
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.919 seconds
Total inference time: 2.389 seconds
AUC ROC: 1.0
Total revision time: 6.919
Best scored revision CLL: -0.063421


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:08:05
{'parameter': {'Precision': [1.0, 0.5], 'CLL': -0.074635, 'AUC PR': 1.0, 'Learning time': 1.851, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 3.196, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'CLL': -0.065193, 'AUC PR': 1.0, 'Learning time': 6.919, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 2.389, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048802;  // std dev = 0,000, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else if ( female(A) )
%   | then return 0.7891834178581324;  // std dev = 0,253, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7,45e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7260819095775914;  // std dev = 0,051, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.26910449357510574;  // std dev = 0,013, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7,60e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5619172107216208;  // std dev = 0,063, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22055574879217013;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4224302367666792;  // std dev = 0,063, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18655797644315802;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10251821822301947;  // std dev = 0,091, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09261377481889;  // std dev = 2,11e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( female(A) )
%   | then return 0.3144672191711918;  // std dev = 0,091, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.30071146235859286;  // std dev = 0,087, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851189727523238;  // std dev = 1,49e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( female(A) )
%   | then return 0.24945402454102103;  // std dev = 0,087, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.23997829682884228;  // std dev = 0,084, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21634922704738133;  // std dev = 0,029, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2511462275313354;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.07872026886286049;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return -0.19292351411883754;  // std dev = 0,212, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07294274803220115;  // std dev = 0,015, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18191885202591362;  // std dev = 0,025, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2056679067778552;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.068143696087971;  // std dev = 0,014, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0.1563941019041775;  // std dev = 0,023, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06371325559554154;  // std dev = 0,018, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13965045550456742;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.10587021338255938;  // std dev = 0,153, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.198944497321457;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090609
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.568 seconds
Total inference time: 2.327 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:08:10
{'Precision': [0.735892, 0.5], 'CLL': -0.090609, 'AUC PR': 1.0, 'Learning time': 2.568, 'F1': 0.847854, 'AUC ROC': 1.0, 'Inference time': 2.327, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,30e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.994647
   AUC PR    = 0.735892
   CLL	      = -0.169006
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.994 seconds
Total inference time: 1.702 seconds
AUC ROC: 0.994647


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:08:13
{'Precision': [nan, 0.5], 'CLL': -0.169006, 'AUC PR': 0.735892, 'Learning time': 0.994, 'F1': nan, 'AUC ROC': 0.994647, 'Inference time': 1.702, 'Recall': 0.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), tempadvisedby(H, B).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,false,true;projectmember(I, B).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(G, A).;true;true
1;true,true,false;ta(E, A, F).;false;false
1;true,false,false;projectmember(I, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,false,true;publication(G, H), professor(H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true,true;publication(G, D).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,false;tempadvisedby(L, B).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
2;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;ta(G, I, E).;false;false
3;true;tempadvisedby(C, B), ta(D, A, E).;true;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;true,false;tempadvisedby(K, B), publication(L, K).;true;true
3;true,true;publication(F, B), ta(G, C, H).;true;true
3;true,false,true;publication(M, A), publication(M, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false;projectmember(D, B).;true;true
4;true,false,true;publication(E, A).;false;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,true;ta(D, C, G).;false;false
5;true;tempadvisedby(C, B), ta(D, C, E).;true;true
5;true,true,false;ta(D, H, I), publication(J, H).;false;false
5;true,false,false;publication(P, B), publication(P, A).;false;false
5;true,false;ta(K, A, L).;true;true
5;true,true;ta(F, A, G).;true;true
5;true,false,true;tempadvisedby(M, B), publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(H, B), publication(I, A).;true;true
6;true,true,false;publication(C, E), ta(F, E, G).;false;false
6;true,false,false;ta(M, A, N), publication(P, B).;false;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B).;false;true
6;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,true;tempadvisedby(H, B).;false;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true,false;tempadvisedby(I, B), ta(J, I, K).;false;false
7;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
7;true,false;publication(L, B), publication(L, A).;false;true
7;true,true;ta(C, F, G), publication(E, F).;true;true
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true,true,true;ta(H, C, I).;false;false
8;true;tempadvisedby(C, B), publication(D, B).;true;true
8;true,true,false;publication(D, A).;false;false
8;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;true,false;publication(J, A).;true;true
8;true,true;publication(E, C), ta(F, A, G).;true;true
8;true,false,true;publication(J, K), professor(K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,true;publication(G, D), publication(G, B).;false;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true,false;tempadvisedby(H, B).;false;false
9;true,false,false;publication(L, B).;false;false
9;true,false;publication(I, A).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8,43e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12559378785904676;  // std dev = 0,016, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11243254001546796;  // std dev = 0,015, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.39198358840522113;  // std dev = 0,112, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10178611185000432;  // std dev = 0,019, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32629897382147827;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then return -0.143363723316744;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09277108530088772;  // std dev = 0,013, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then return 0.18837422647420524;  // std dev = 1,257, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08523463378164504;  // std dev = 0,012, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.22449768494780645;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.14898070635232977;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07884356330114324;  // std dev = 0,011, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15793787345393656;  // std dev = 0,093, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07328793654294752;  // std dev = 0,010, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1353832464803395;  // std dev = 0,092, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0683827965680867;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.14710819309133583;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.16822248499720863;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06423030521130556;  // std dev = 0,009, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073998
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.825 seconds
Total inference time: 3.358 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068065
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.895 seconds
Parameter learned model CLL: -0.068065


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(G, A)', 'true,true': 'movie(E, F)', 'false': 'actor(B)'}, {'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'false,true': [8.43e-08, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 58], 'false': [0.016, 110, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, B)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.19e-07, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.015, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.112, 3, 58], 'true,false': [0.0, 0, 0], 'false': [0.019, 128, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true': [0.0, 8, 0], 'false': [0.013, 107, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)'}, {'true,true': [1.257, 13, 58], 'true,false': [0.0, 0, 0], 'false': [0.012, 128, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 0, 58], 'true,false,true': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.011, 100, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,true': [0.093, 6, 58], 'true,false': [0.0, 0, 0], 'false': [0.01, 119, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B)'}, {'true,true,true': [0.092, 6, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 111, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.009, 117, 0]}]]
[{'': [0.08496093749999956, 6.579099405186112e-17], 'false': [6.579099405186112e-17, nan], 'true,false': [-6.938893903907228e-18, nan], 'true': [-3.675221047035001e-16, -6.938893903907228e-18], 'true,true': [-3.675221047035001e-16, nan], 'true,true,true': [-3.675221047035001e-16, nan]}, {'': [0.052161020059183986, 2.4247619890050874e-06], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0]}, {'': [0.020846347594112944, 1.9401215703906765e-06], 'true,false': [2.3129646346357427e-18, nan], 'true,true': [2.4501473646900006e-16, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true': [2.4501473646900006e-16, 2.3129646346357427e-18]}, {'': [0.012601093207619572, 2.885038782847807e-06], 'true': [0.012601093207619572, nan]}, {'': [0.023496449672768753, 1.4778258520347212e-06], 'true,false': [0.0, nan], 'true': [-9.188052617587502e-17, 0.0]}, {'': [0.022242207736361506, 1.0646056119445468e-06], 'true': [0.022242207736361506, nan]}, {'': [0.008418516450106129, 1.1813295098384026e-06], 'true,false': [0.0, nan], 'true,true': [7.656710514656252e-18, nan], 'true': [7.656710514656252e-18, 0.0]}, {'': [0.008640113492853901, 8.712966533408752e-07], 'true,true': [0.008640113492853901, nan], 'true': [0.008640113492853901, nan]}, {'': [0.008432281815535743, -2.700542492331462e-17], 'true,true': [0.008432281815535743, nan], 'true': [0.008432281815535743, nan]}, {'': [0.003203966288632909, 6.957855767951971e-07], 'true,false': [0.0, nan], 'true,true': [-4.2111907830609384e-17, nan], 'true,false,true': [0.0, nan], 'true': [-4.2111907830609384e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839136;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360621;  // std dev = 6,99e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1015963294878364;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926098;  // std dev = 4,21e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839682;  // std dev = 5,77e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109158;  // std dev = 6,41e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333707;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420265;  // std dev = 5,37e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065212
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.874 seconds
Total inference time: 3.044 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.644 seconds
Refined model CLL: -0.063422


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065212
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.2379999999999995 seconds
Total inference time: 3.044 seconds
AUC ROC: 1.0
Total revision time: 7.2379999999999995
Best scored revision CLL: -0.063422


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:08:28
{'parameter': {'Precision': [1.0, 0.5], 'CLL': -0.073998, 'AUC PR': 1.0, 'Learning time': 1.825, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 3.358, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'CLL': -0.065212, 'AUC PR': 1.0, 'Learning time': 7.2379999999999995, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 3.044, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839127;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 9,42e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926085;  // std dev = 7,15e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( female(A) )
%   | then return 0.301025984143511;  // std dev = 0,088, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3207118471601495;  // std dev = 2,11e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2564686152116309;  // std dev = 0,014, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12317843738285478;  // std dev = 0,002, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08554202771190547;  // std dev = 0,038, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07875083074066247;  // std dev = 3,16e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else return 0.20522680100222873;  // std dev = 0,319, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17856600916189633;  // std dev = 0,010, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1319251007810127;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07430393253868015;  // std dev = 0,089, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06833848571470741;  // std dev = 2,24e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15385800101545105;  // std dev = 0,009, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11730399263957983;  // std dev = 0,003, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06411375766875968;  // std dev = 0,000, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13487641915264081;  // std dev = 0,008, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10563949044610711;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077284
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.645 seconds
Total inference time: 2.973 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:08:34
{'Precision': [0.736364, 0.5], 'CLL': -0.077284, 'AUC PR': 1.0, 'Learning time': 2.645, 'F1': 0.848168, 'AUC ROC': 1.0, 'Inference time': 2.973, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.167119
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.073 seconds
Total inference time: 1.923 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:08:37
{'Precision': [nan, 0.5], 'CLL': -0.167119, 'AUC PR': 1.0, 'Learning time': 1.073, 'F1': nan, 'AUC ROC': 1.0, 'Inference time': 1.923, 'Recall': 0.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), tempadvisedby(H, B).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,false,true;projectmember(I, B).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(G, A).;true;true
1;true,true,false;ta(E, A, F).;false;false
1;true,false,false;projectmember(I, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,false,true;publication(G, H), professor(H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true,true;publication(G, D).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,false;tempadvisedby(L, B).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
2;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;ta(G, I, E).;false;false
3;true;tempadvisedby(C, B), ta(D, A, E).;true;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;true,false;tempadvisedby(K, B), publication(L, K).;true;true
3;true,true;publication(F, B), ta(G, C, H).;true;true
3;true,false,true;publication(M, A), publication(M, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false;projectmember(D, B).;true;true
4;true,false,true;publication(E, A).;false;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,true;ta(D, C, G).;false;false
5;true;tempadvisedby(C, B), ta(D, C, E).;true;true
5;true,true,false;ta(D, H, I), publication(J, H).;false;false
5;true,false,false;publication(P, B), publication(P, A).;false;false
5;true,false;ta(K, A, L).;true;true
5;true,true;ta(F, A, G).;true;true
5;true,false,true;tempadvisedby(M, B), publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(H, B), publication(I, A).;true;true
6;true,true,false;publication(C, E), ta(F, E, G).;false;false
6;true,false,false;ta(M, A, N), publication(P, B).;false;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B).;false;true
6;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,true;tempadvisedby(H, B).;false;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true,false;tempadvisedby(I, B), ta(J, I, K).;false;false
7;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
7;true,false;publication(L, B), publication(L, A).;false;true
7;true,true;ta(C, F, G), publication(E, F).;true;true
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true,true,true;ta(H, C, I).;false;false
8;true;tempadvisedby(C, B), publication(D, B).;true;true
8;true,true,false;publication(D, A).;false;false
8;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;true,false;publication(J, A).;true;true
8;true,true;publication(E, C), ta(F, A, G).;true;true
8;true,false,true;publication(J, K), professor(K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,true;publication(G, D), publication(G, B).;false;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true,false;tempadvisedby(H, B).;false;false
9;true,false,false;publication(L, B).;false;false
9;true,false;publication(I, A).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.1418510649004877;  // std dev = 5,59e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048782;  // std dev = 1,03e-07, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
%   | else return 0.333877090439319;  // std dev = 5,068, 103,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=49 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7450728730506295;  // std dev = 0,042, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.15548721408115843;  // std dev = 0,244, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1327744706192753;  // std dev = 0,340, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5831166846766824;  // std dev = 0,738, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.1316066510719882;  // std dev = 0,228, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11695493682339836;  // std dev = 0,285, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.3003512040094175;  // std dev = 0,249, 237,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10724385121605967;  // std dev = 0,282, 262,000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.36910144330390565;  // std dev = 0,743, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then return -0.15375829874546085;  // std dev = 0,246, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09446392905413094;  // std dev = 0,207, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then return 0.16886123865783742;  // std dev = 3,098, 248,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0876847130837735;  // std dev = 0,216, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2559156443804326;  // std dev = 0,623, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.16088657028877382;  // std dev = 0,032, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08126094719985567;  // std dev = 0,208, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1254836425922851;  // std dev = 0,153, 237,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07633531231453015;  // std dev = 0,224, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.10100083014628464;  // std dev = 0,154, 242,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06975411717600766;  // std dev = 0,174, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.17584586684355644;  // std dev = 0,483, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1581704333602725;  // std dev = 0,235, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06614549371859631;  // std dev = 0,195, 338,000 (wgt'ed) examples reached here.  /* #neg=338 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065318
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.683 seconds
Total inference time: 3.177 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.229 seconds
Parameter learned model CLL: -0.083847


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(G, A)', 'true,true': 'movie(E, F)', 'false': 'actor(B)'}, {'true,true,true,true': [7.54e-07, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [5.068, 54, 49], 'true,false,false': [0.0, 0, 0], 'true,false,true': [5.59e-09, 31, 0], 'false,true': [1.03e-07, 301, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.244, 62, 0], 'true,true': [0.042, 0, 178], 'false': [0.34, 288, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, B)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.738, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.228, 70, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.285, 295, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.249, 59, 178], 'true,false': [0.0, 0, 0], 'false': [0.282, 262, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.743, 0, 178], 'true,false,true': [0.246, 63, 0], 'false': [0.207, 295, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)'}, {'true,true': [3.098, 70, 178], 'true,false': [0.0, 0, 0], 'false': [0.216, 289, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true': [0.623, 0, 178], 'true,false,true': [0.032, 49, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.208, 286, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,true': [0.153, 59, 178], 'true,false': [0.0, 0, 0], 'false': [0.224, 312, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B)'}, {'true,true,true': [0.154, 64, 178], 'true,false': [0.0, 0, 0], 'false': [0.174, 298, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.483, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.235, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.195, 338, 0]}]]
[{'': [0.15621093750000448, 0.10657656112145969], 'false': [3.540910643322758e-17, 0.24941087755679153], 'true': [4.40646657835721e-15, 2.5069552168955147e-17], 'true,false': [2.5069552168955147e-17, nan], 'true,true': [4.40646657835721e-15, nan], 'true,true,true': [4.40646657835721e-15, nan]}, {'': [0.15691524450557282, 0.0004013680992369527], 'true,false': [0.0009627267689000043, nan], 'true,false,true': [0.0009627267689000043, nan], 'true': [0.0017252628365558773, 0.0009627267689000043]}, {'': [0.10589242803026602, 0.0002747018614075876], 'true,false': [0.0007426508479857961, nan], 'true,true': [0.0030577330876832894, nan], 'true,false,true': [0.0007426508479857961, nan], 'true': [0.0030577330876832894, 0.0007426508479857961]}, {'': [0.06180566325487008, 0.00030415627960812705], 'true': [0.06180566325487008, nan]}, {'': [0.05532649226976804, 0.0001446586752566946], 'true,false': [0.0009613720348974465, nan], 'true': [0.0031029946195658947, 0.0009613720348974465]}, {'': [0.038696220359939276, 0.00016174731091383874], 'true': [0.038696220359939276, nan]}, {'': [0.031333280555963156, 0.0001517417398696897], 'true,false': [0.001001396056346379, nan], 'true,true': [0.0021831561155685438, nan], 'true': [0.0021831561155685438, 0.001001396056346379]}, {'': [0.023389770548086414, 0.00016107662917993966], 'true,true': [0.023389770548086414, nan], 'true': [0.023389770548086414, nan]}, {'': [0.02376433581280856, 0.00010205500259498672], 'true,true': [0.02376433581280856, nan], 'true': [0.02376433581280856, nan]}, {'': [0.021724649775596617, 0.00011246609410725627], 'true,false': [0.0009724003156594128, nan], 'true,true': [0.0013091280861930424, nan], 'true,false,true': [0.0009724003156594128, nan], 'true': [0.0013091280861930424, 0.0009724003156594128]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;false;actor(B).;true;true
0;true;movie(D, B), movie(D, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(B) )
%   | then return -0.14185106490048796;  // std dev = 0,000, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109565;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839138;  // std dev = 2,36e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839183;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.555366436746283;  // std dev = 5,65e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.11231637819360685;  // std dev = 0,000, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783616;  // std dev = 5,37e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.10159632948783656;  // std dev = 0,000, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.09269127618926071;  // std dev = 1,01e-07, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694887;  // std dev = 3,40e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.08518475138839678;  // std dev = 8,16e-08, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253506;  // std dev = 2,94e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07877675473109148;  // std dev = 1,06e-07, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452782;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.07324622576333685;  // std dev = 1,13e-07, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2,24e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.0684269778442026;  // std dev = 6,99e-08, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801092;  // std dev = 8,16e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06419184008202625;  // std dev = 3,33e-08, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.524 seconds
Total inference time: 2.533 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.936 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.372 seconds
Total inference time: 2.533 seconds
AUC ROC: 1.0
Total revision time: 9.372
Best scored revision CLL: -0.065435


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:53
{'parameter': {'Precision': [1.0, 0.5], 'CLL': -0.065318, 'AUC PR': 1.0, 'Learning time': 2.683, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 3.177, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'CLL': -0.063555, 'AUC PR': 1.0, 'Learning time': 9.372, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 2.533, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1418510649004881;  // std dev = 0,000, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.12544463852839186;  // std dev = 0,000, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.11231637819360688;  // std dev = 0,000, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783617;  // std dev = 4,47e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.10159632948783642;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926064;  // std dev = 2,11e-08, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.08518475138839678;  // std dev = 8,16e-08, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109169;  // std dev = 3,33e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.07877675473109147;  // std dev = 6,14e-08, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07324622576333686;  // std dev = 8,69e-08, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2,11e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.0684269778442028;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202618;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06419184008202601;  // std dev = 1,04e-07, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.847 seconds
Total inference time: 2.276 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:59
{'Precision': [1.0, 0.5], 'CLL': -0.063555, 'AUC PR': 1.0, 'Learning time': 3.847, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 2.276, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.1418510649004882;  // std dev = 0,000, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.155326
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.236 seconds
Total inference time: 1.699 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:09:02
{'Precision': [nan, 0.5], 'CLL': -0.155326, 'AUC PR': 1.0, 'Learning time': 1.236, 'F1': nan, 'AUC ROC': 1.0, 'Inference time': 1.699, 'Recall': 0.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), tempadvisedby(H, B).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,false,true;projectmember(I, B).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(G, A).;true;true
1;true,true,false;ta(E, A, F).;false;false
1;true,false,false;projectmember(I, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,false,true;publication(G, H), professor(H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true,true;publication(G, D).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,false;tempadvisedby(L, B).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
2;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;ta(G, I, E).;false;false
3;true;tempadvisedby(C, B), ta(D, A, E).;true;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;true,false;tempadvisedby(K, B), publication(L, K).;true;true
3;true,true;publication(F, B), ta(G, C, H).;true;true
3;true,false,true;publication(M, A), publication(M, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false;projectmember(D, B).;true;true
4;true,false,true;publication(E, A).;false;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,true;ta(D, C, G).;false;false
5;true;tempadvisedby(C, B), ta(D, C, E).;true;true
5;true,true,false;ta(D, H, I), publication(J, H).;false;false
5;true,false,false;publication(P, B), publication(P, A).;false;false
5;true,false;ta(K, A, L).;true;true
5;true,true;ta(F, A, G).;true;true
5;true,false,true;tempadvisedby(M, B), publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(H, B), publication(I, A).;true;true
6;true,true,false;publication(C, E), ta(F, E, G).;false;false
6;true,false,false;ta(M, A, N), publication(P, B).;false;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B).;false;true
6;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,true;tempadvisedby(H, B).;false;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true,false;tempadvisedby(I, B), ta(J, I, K).;false;false
7;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
7;true,false;publication(L, B), publication(L, A).;false;true
7;true,true;ta(C, F, G), publication(E, F).;true;true
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true,true,true;ta(H, C, I).;false;false
8;true;tempadvisedby(C, B), publication(D, B).;true;true
8;true,true,false;publication(D, A).;false;false
8;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;true,false;publication(J, A).;true;true
8;true,true;publication(E, C), ta(F, A, G).;true;true
8;true,false,true;publication(J, K), professor(K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,true;publication(G, D), publication(G, B).;false;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true,false;tempadvisedby(H, B).;false;false
9;true,false,false;publication(L, B).;false;false
9;true,false;publication(I, A).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7,74e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,45e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.3751372646769921;  // std dev = 0,142, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 4,71e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33001304706295187;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.141307220885414;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then return 0.222856893295719;  // std dev = 0,820, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 3,33e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.22080248589359638;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.15149477013332593;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109166;  // std dev = 4,34e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.147722152959309;  // std dev = 0,103, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13818938784988696;  // std dev = 0,086, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.14582734204304967;  // std dev = 2,79e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1695938617857004;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072525
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.624 seconds
Total inference time: 3.294 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069839
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.574 seconds
Parameter learned model CLL: -0.069839


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(G, A)', 'true,true': 'movie(E, F)', 'false': 'actor(B)'}, {'true,true,true,true': [2.23e-07, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 8, 0], 'false,true': [7.74e-08, 81, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 83, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, B)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-08, 91, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.142, 4, 45], 'true,false': [0.0, 0, 0], 'false': [4.71e-08, 94, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true': [0.0, 4, 0], 'false': [1.05e-08, 93, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)'}, {'true,true': [0.82, 5, 45], 'true,false': [0.0, 0, 0], 'false': [3.33e-08, 99, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'true,false,true': [0.0, 8, 0], 'true,true,false': [0.0, 0, 0], 'false': [4.34e-08, 89, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,true': [0.103, 6, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 89, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B)'}, {'true,true,true': [0.086, 4, 45], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 53, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.79e-08, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 90, 0]}]]
[{'': [0.12815948736205124, 7.311224796312007e-17], 'false': [7.401486830834377e-17, 0.0], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,true': [1.105288700071267e-15, nan], 'true,true,true': [1.105288700071267e-15, nan]}, {'': [0.07410586634586562, -2.140188963132832e-17], 'true,false': [-2.3129646346357427e-18, nan], 'true,false,true': [-2.3129646346357427e-18, nan], 'true': [-9.473903143468002e-16, -2.3129646346357427e-18]}, {'': [0.03342110014406096, 6.100126508929432e-17], 'true,false': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,false,true': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.020202215093805483, 2.362176648138631e-17], 'true': [0.020202215093805483, nan]}, {'': [0.016653770552355517, 1.1937881985216738e-18], 'true,false': [0.0, nan], 'true': [0.0, 0.0]}, {'': [0.013446018592726433, 1.1214373986112692e-17], 'true': [0.013446018592726433, nan]}, {'': [0.0177635773813681, 2.1206507211941192e-17], 'true,false': [-3.469446951953614e-18, nan], 'true,true': [-6.908054375445419e-17, nan], 'true': [-6.908054375445419e-17, -3.469446951953614e-18]}, {'': [0.010509654076352924, -6.860928803863327e-18], 'true,true': [0.010509654076352924, nan], 'true': [0.010509654076352924, nan]}, {'': [0.007434360165661379, 3.142140635731575e-18], 'true,true': [0.007434360165661379, nan], 'true': [0.007434360165661379, nan]}, {'': [0.004053484936274354, -1.2335811384723961e-17], 'true,false': [0.0, nan], 'true,true': [1.7270135938613546e-17, nan], 'true,false,true': [0.0, nan], 'true': [1.7270135938613546e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;false;actor(B).;true;true
0;true;movie(D, B), movie(D, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8,43e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283914;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( female(B) )
%   | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783624;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926105;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839679;  // std dev = 2,24e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( female(A) )
%   | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(B) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420271;  // std dev = 1,05e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801095;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13400703000801115;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202625;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.361 seconds
Total inference time: 3.03 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.767 seconds
Refined model CLL: -0.063847


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.3260000000000005 seconds
Total inference time: 3.03 seconds
AUC ROC: 1.0
Total revision time: 7.3260000000000005
Best scored revision CLL: -0.063847


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:17
{'parameter': {'Precision': [1.0, 0.5], 'CLL': -0.072525, 'AUC PR': 1.0, 'Learning time': 1.624, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 3.294, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'CLL': -0.064929, 'AUC PR': 1.0, 'Learning time': 7.3260000000000005, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 3.03, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11588968125876868;  // std dev = 0,331, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10127064198329518;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09241851405288772;  // std dev = 3,49e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08495321198373039;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then return -0.07857789966191932;  // std dev = 2,24e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.1429698626973629;  // std dev = 0,182, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07274591327648372;  // std dev = 0,010, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.14333233316014432;  // std dev = 0,306, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.06805317718793667;  // std dev = 0,009, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13510299646196317;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07814837024146794;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.0640915733377324;  // std dev = 2,69e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.19319883456873638;  // std dev = 0,460, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.060335813935103955;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070991
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 2.47 seconds
Total inference time: 2.784 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:22
{'Precision': [0.743929, 0.5], 'CLL': -0.070991, 'AUC PR': 1.0, 'Learning time': 2.47, 'F1': 0.853165, 'AUC ROC': 1.0, 'Inference time': 2.784, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else return 0.8155957436101503;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */


Results
   AUC ROC   = 0.946983
   AUC PR    = 0.204739
   CLL	      = -0.184007
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.926 seconds
Total inference time: 1.758 seconds
AUC ROC: 0.946983


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:25
{'Precision': [nan, 0.5], 'CLL': -0.184007, 'AUC PR': 0.204739, 'Learning time': 0.926, 'F1': nan, 'AUC ROC': 0.946983, 'Inference time': 1.758, 'Recall': 0.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), tempadvisedby(H, B).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,false,true;projectmember(I, B).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(G, A).;true;true
1;true,true,false;ta(E, A, F).;false;false
1;true,false,false;projectmember(I, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,false,true;publication(G, H), professor(H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true,true;publication(G, D).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,false;tempadvisedby(L, B).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
2;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;ta(G, I, E).;false;false
3;true;tempadvisedby(C, B), ta(D, A, E).;true;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;true,false;tempadvisedby(K, B), publication(L, K).;true;true
3;true,true;publication(F, B), ta(G, C, H).;true;true
3;true,false,true;publication(M, A), publication(M, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false;projectmember(D, B).;true;true
4;true,false,true;publication(E, A).;false;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,true;ta(D, C, G).;false;false
5;true;tempadvisedby(C, B), ta(D, C, E).;true;true
5;true,true,false;ta(D, H, I), publication(J, H).;false;false
5;true,false,false;publication(P, B), publication(P, A).;false;false
5;true,false;ta(K, A, L).;true;true
5;true,true;ta(F, A, G).;true;true
5;true,false,true;tempadvisedby(M, B), publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(H, B), publication(I, A).;true;true
6;true,true,false;publication(C, E), ta(F, E, G).;false;false
6;true,false,false;ta(M, A, N), publication(P, B).;false;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B).;false;true
6;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,true;tempadvisedby(H, B).;false;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true,false;tempadvisedby(I, B), ta(J, I, K).;false;false
7;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
7;true,false;publication(L, B), publication(L, A).;false;true
7;true,true;ta(C, F, G), publication(E, F).;true;true
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true,true,true;ta(H, C, I).;false;false
8;true;tempadvisedby(C, B), publication(D, B).;true;true
8;true,true,false;publication(D, A).;false;false
8;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;true,false;publication(J, A).;true;true
8;true,true;publication(E, C), ta(F, A, G).;true;true
8;true,false,true;publication(J, K), professor(K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,true;publication(G, D), publication(G, B).;false;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true,false;tempadvisedby(H, B).;false;false
9;true,false,false;publication(L, B).;false;false
9;true,false;publication(I, A).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8,30e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0.6914822684328455;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7266688022801213;  // std dev = 0,013, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1663455365115267;  // std dev = 0,100, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12682332048287914;  // std dev = 0,122, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.5626400611297808;  // std dev = 0,114, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.1450104283763144;  // std dev = 0,090, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11217899511162893;  // std dev = 5,58e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.3601797664408719;  // std dev = 0,174, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10148308655235622;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33853010496910846;  // std dev = 0,106, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.17305577511319803;  // std dev = 0,103, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09259645071145786;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then return 0.22258989819898173;  // std dev = 0,962, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08618996554234604;  // std dev = 0,091, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.22610963620292673;  // std dev = 0,083, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.2017936330117871;  // std dev = 0,065, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.079833237746907;  // std dev = 0,085, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.161905275835013;  // std dev = 0,093, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07410889412161437;  // std dev = 0,080, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.14422273377574027;  // std dev = 0,084, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06817513244875686;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.146509582411196;  // std dev = 0,060, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.19556482658211186;  // std dev = 0,113, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06396959020720386;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075129
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.576 seconds
Total inference time: 4.126 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069338
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.682 seconds
Parameter learned model CLL: -0.069338


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(G, A)', 'true,true': 'movie(E, F)', 'false': 'actor(B)'}, {'true,true,true,true': [2.38e-07, 0, 35], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false': [1.291, 2, 10], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'false,true': [8.3e-08, 91, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.1, 3, 0], 'true,true': [0.013, 0, 45], 'false': [0.122, 89, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(G, B)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.114, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 95, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.174, 6, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 88, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.106, 0, 45], 'true,false,true': [0.103, 3, 0], 'false': [0.0, 77, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)'}, {'true,true': [0.962, 5, 45], 'true,false': [0.0, 0, 0], 'false': [0.091, 84, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true,true': [0.083, 0, 45], 'true,false,true': [0.065, 6, 0], 'true,true,false': [0.0, 0, 0], 'false': [0.085, 71, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,true': [0.093, 4, 45], 'true,false': [0.0, 0, 0], 'false': [0.08, 75, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B)'}, {'true,true,true': [0.084, 3, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 90, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false,true': 'movie(F, G)', 'true,false': 'movie(F, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.06, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.113, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 89, 0]}]]
[{'': [0.0727146814404449, 0.08766141954943886], 'false': [7.564156871072495e-17, 0.1388888888888887], 'true': [1.6240976817373718e-15, 0.0], 'true,false': [0.0, nan], 'true,true': [1.6240976817373718e-15, nan], 'true,true,true': [1.6240976817373718e-15, nan]}, {'': [0.04710602057041561, 0.00016726722598342452], 'true,false': [0.003345766911653683, nan], 'true,false,true': [0.003345766911653683, nan], 'true': [0.00018120773386508897, 0.003345766911653683]}, {'': [0.029779187159950243, 3.272236283105724e-17], 'true,false': [0.00269491408703385, nan], 'true,true': [0.0002867294086727491, nan], 'true,false,true': [0.00269491408703385, nan], 'true': [0.0002867294086727491, 0.00269491408703385]}, {'': [0.030103756900723692, 0.0], 'true': [0.030103756900723692, nan]}, {'': [0.015789328578104295, -2.8836961678575496e-18], 'true,false': [0.0035542713676488583, nan], 'true': [0.0002474920150770406, 0.0035542713676488583]}, {'': [0.0185246957802537, 9.783535195526634e-05], 'true': [0.0185246957802537, nan]}, {'': [0.019642620903560705, 0.0001015216663320517], 'true,false': [0.004245166785085246, nan], 'true,true': [0.000154296220772348, nan], 'true': [0.000154296220772348, 0.004245166785085246]}, {'': [0.008587862608510268, 8.511555473138903e-05], 'true,true': [0.008587862608510268, nan], 'true': [0.008587862608510268, nan]}, {'': [0.0070841461250489455, -1.2335811384723961e-17], 'true,true': [0.0070841461250489455, nan], 'true': [0.0070841461250489455, nan]}, {'': [0.007197471517796744, -1.7464182409833923e-17], 'true,false': [0.00425872350427126, nan], 'true,true': [7.99567215242251e-05, nan], 'true,false,true': [0.00425872350427126, nan], 'true': [7.99567215242251e-05, 0.00425872350427126]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;false;actor(B).;true;true
0;true;movie(D, B), movie(D, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8,43e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 1,58e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360624;  // std dev = 6,32e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831047;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 4,21e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926101;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839678;  // std dev = 3,94e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109165;  // std dev = 4,47e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1770964977452773;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15577372670557996;  // std dev = 0,071, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.07324622576333704;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1527438580936709;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.15552378406124093;  // std dev = 4,93e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.09084914019630441;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801112;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.1361735524793954;  // std dev = 1,86e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.08471810414610652;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066525
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.779 seconds
Total inference time: 3.308 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064632
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.508 seconds
Refined model CLL: -0.064632


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066525
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.545 seconds
Total inference time: 3.308 seconds
AUC ROC: 1.0
Total revision time: 6.545
Best scored revision CLL: -0.064632


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:40
{'parameter': {'Precision': [1.0, 0.5], 'CLL': -0.075129, 'AUC PR': 1.0, 'Learning time': 1.576, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 4.126, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'CLL': -0.066525, 'AUC PR': 1.0, 'Learning time': 6.545, 'F1': 1.0, 'AUC ROC': 1.0, 'Inference time': 3.308, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12733588181205802;  // std dev = 0,154, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11212795678024341;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( female(A) )
%   | then return 0.5275463194571225;  // std dev = 0,133, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5263367491402023;  // std dev = 0,136, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10144101065439892;  // std dev = 5,67e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42443890881096535;  // std dev = 0,000991, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17639591428470983;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09256121380320531;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( female(A) )
%   | then return 0.3053787986498261;  // std dev = 0,095, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.30477426124533497;  // std dev = 0,097, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08507435756203831;  // std dev = 2,98e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( female(A) )
%   | then return 0.24302554579321747;  // std dev = 0,092, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.24254360424230945;  // std dev = 0,093, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07868195327245893;  // std dev = 4,94e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21808024382908792;  // std dev = 0,001, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.23698671730352874;  // std dev = 0,000339, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07316397963208957;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( female(A) )
%   | then return 0.18300908717973702;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1668284369590101;  // std dev = 0,078, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06835498147064609;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15841897142856634;  // std dev = 0,008, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2244019956525685;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06412831382705343;  // std dev = 1,29e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13842227168625446;  // std dev = 0,007, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1887099037056296;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087817
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.575 seconds
Total inference time: 3.075 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:09:46
{'Precision': [0.742291, 0.5], 'CLL': -0.087817, 'AUC PR': 1.0, 'Learning time': 2.575, 'F1': 0.852086, 'AUC ROC': 1.0, 'Inference time': 3.075, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.995191
   AUC PR    = 0.742291
   CLL	      = -0.166516
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.026 seconds
Total inference time: 1.927 seconds
AUC ROC: 0.995191


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:09:49
{'Precision': [nan, 0.5], 'CLL': -0.166516, 'AUC PR': 0.742291, 'Learning time': 1.026, 'F1': nan, 'AUC ROC': 0.995191, 'Inference time': 1.927, 'Recall': 0.0}


