Starting experiment #2 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return 0.15226658215833588;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.5581489350995124;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( tempadvisedby(J, B), ta(K, A, L) )
%   | | | then return 0.5854216623722396;  // std dev = 2,089, 22,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return 0.7248156017661788;  // std dev = 2,280, 45,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=39 */
%   else return -0.141851064900488;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.7243974001446546;  // std dev = 0,078, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.21947341221095437;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7194734122109543;  // std dev = 4,21e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(G, B), publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return 0.13270212707734674;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.7758860545469175;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | | then return 0.32430343310068815;  // std dev = 1,326, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.5449286177585732;  // std dev = 3,486, 73,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=57 */
%   else return -0.12544463852839144;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.24102710196185603;  // std dev = 1,191, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.5628117321822845;  // std dev = 0,056, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5624876269817676;  // std dev = 0,162, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, G), professor(G) )
%   | | | then return 0.10192068495868761;  // std dev = 2,594, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.4040009074327141;  // std dev = 1,225, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.4569202839095752;  // std dev = 2,014, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return 0.3322798175214948;  // std dev = 3,225, 49,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=34 */
%   else return -0.11231637819360636;  // std dev = 7,30e-08, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4332767739716693;  // std dev = 0,272, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then if ( publication(E, F), professor(F) )
%   | | | then return 0.0042561042816842585;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.5154860710851804;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.26704352353134914;  // std dev = 3,652, 66,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=47 */
%   | | | else return 0.44750226040046803;  // std dev = 1,527, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.10159632948783644;  // std dev = 0,000, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, A, G), ta(H, E, I) )
%   | | | then return 0.3191491740780125;  // std dev = 2,386, 50,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=42 */
%   | | | else return 0.19907437481990553;  // std dev = 3,163, 76,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=55 */
%   | | else return -0.08648958842279304;  // std dev = 1,229, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( publication(J, A) )
%   | | then if ( publication(J, K), tempadvisedby(K, L) )
%   | | | then return 0.6349198506461566;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.011766182028750197;  // std dev = 1,298, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( ta(M, A, N) )
%   | | | then return -0.20569016359913408;  // std dev = 0,831, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07074719664245976;  // std dev = 1,872, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else return -0.09269127618926068;  // std dev = 8,30e-08, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then return 0.28400384677914176;  // std dev = 0,223, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.14015214156332298;  // std dev = 0,354, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( projectmember(F, B) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.1266870252553051;  // std dev = 0,778, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4445281081172765;  // std dev = 0,071, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return -0.059732621182156755;  // std dev = 1,418, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.12760276121712613;  // std dev = 4,346, 94,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=60 */
%   else return -0.08518475138839678;  // std dev = 6,83e-08, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( publication(F, E), tempadvisedby(G, B) )
%   | | | then return 0.13406113845446208;  // std dev = 2,252, 40,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=31 */
%   | | | else return 0.27970794508593594;  // std dev = 2,144, 72,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=66 */
%   | | else return 0.011562406280589688;  // std dev = 1,133, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( projectmember(H, B) )
%   | | then if ( ta(I, A, J) )
%   | | | then return -0.16528190066848322;  // std dev = 0,760, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.34688734238380575;  // std dev = 0,050, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(K, A, L), publication(M, A) )
%   | | | then return -0.2259857153003777;  // std dev = 0,972, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07767850341234452;  // std dev = 1,968, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else return -0.07877675473109161;  // std dev = 7,15e-08, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.19788487706703126;  // std dev = 0,186, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(D, F), tempadvisedby(G, F) )
%   | | | then return 0.052023010428076145;  // std dev = 0,948, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.21616908205941798;  // std dev = 0,094, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( hasposition(H, C), tempadvisedby(I, H) )
%   | | then if ( sameperson(B, H), publication(J, I) )
%   | | | then return -0.1326451292106799;  // std dev = 1,468, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.08135497282502198;  // std dev = 3,911, 88,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=60 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.19262851888058788;  // std dev = 1,150, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.23881162235138087;  // std dev = 0,931, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( ta(L, A, M) )
%   | then return -0.08450064364797437;  // std dev = 0,070, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.06927454648863134;  // std dev = 0,514, 130,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, B), publication(D, A) )
%   | then return 0.17361967384895372;  // std dev = 0,032, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then if ( ta(F, E, H) )
%   | | | then return -0.4374685741257889;  // std dev = 0,848, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2499039215929761;  // std dev = 1,633, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return -0.1990031135333642;  // std dev = 1,020, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.0359484486217786;  // std dev = 3,864, 71,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=47 */
%   else if ( ta(K, A, L) )
%   | then if ( publication(M, B) )
%   | | then return -0.06771304324336633;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( ta(K, N, P), tempadvisedby(N, Q) )
%   | | | then return -0.1297990257029494;  // std dev = 0,402, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06771304324336633;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.0650329472601245;  // std dev = 0,044, 145,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, F, E) )
%   | | | then return -0.11454821072459145;  // std dev = 0,871, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14825357469730888;  // std dev = 0,123, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.15213563438522967;  // std dev = 0,130, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( publication(H, J), ta(K, J, L) )
%   | | | then return -0.007510373474579315;  // std dev = 1,732, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.27305912922920483;  // std dev = 0,114, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.06999897946468941;  // std dev = 3,688, 76,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=54 */
%   | | | else return -0.022489798734914836;  // std dev = 2,009, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   else return -0.06421827406338357;  // std dev = 0,014, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(H, A).;true;true
0;true,true,true;ta(F, A, G).;false;false
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
0;true,false,true;publication(H, I), professor(I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;publication(G, B), publication(H, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;ta(E, A, F).;false;false
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,false,true;publication(H, I), professor(I).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,false;publication(F, A).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
2;true,false,true;publication(F, G), professor(G).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,false;publication(G, B).;false;false
3;true,false;publication(D, B), publication(E, A).;true;true
3;true;publication(C, A), publication(C, B).;false;true
3;true,false,true;publication(E, F), professor(F).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B).;true;true
4;true,false;publication(J, A).;true;true
4;true,true,true;ta(F, A, G), ta(H, E, I).;false;false
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,false,false;ta(M, A, N).;false;false
4;true,false,true;publication(J, K), tempadvisedby(K, L).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,false;projectmember(F, B).;true;true
5;true,false,true;ta(G, A, H).;false;false
5;true,true;publication(C, D), tempadvisedby(E, D).;false;false
5;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,true,true;publication(F, E), tempadvisedby(G, B).;false;false
6;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;true,false,false;ta(K, A, L), publication(M, A).;false;false
6;true,false,true;ta(I, A, J).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
7;false;ta(L, A, M).;false;false
7;true;publication(D, B), publication(D, A).;true;true
7;true,false;hasposition(H, C), tempadvisedby(I, H).;true;true
7;true,true;tempadvisedby(E, B).;false;true
7;true,true,false;publication(D, F), tempadvisedby(G, F).;false;false
7;true,false,false;publication(K, B).;false;false
7;true,false,true;sameperson(B, H), publication(J, I).;false;false
8;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
8;false;ta(K, A, L).;true;false
8;false,true;publication(M, B).;false;true
8;true,false;tempadvisedby(E, B), ta(F, A, G).;true;true
8;true,false,false;tempadvisedby(I, B), publication(J, A).;false;false
8;true,false,true;ta(F, E, H).;false;false
8;false,true,false;ta(K, N, P), tempadvisedby(N, Q).;false;false
8;true;publication(D, B), publication(D, A).;false;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), publication(C, A).;true;true
9;true,false;publication(H, A), tempadvisedby(I, B).;true;true
9;true,true,true;ta(G, F, E).;false;false
9;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
9;true,false,false;publication(M, B).;false;false
9;true,false,true;publication(H, J), ta(K, J, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 5,16e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783667;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.299691349362722;  // std dev = 0,091, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926089;  // std dev = 6,50e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2591879034608539;  // std dev = 8,94e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.12115721111617933;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6,14e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.20150663254729256;  // std dev = 0,447, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310916;  // std dev = 5,87e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.09816330865702547;  // std dev = 1,084, 83,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07530914037546622;  // std dev = 0,079, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.08247856499110025;  // std dev = 1,079, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   | else if ( movie(D, A) )
%   | | then return -0.07013695084803517;  // std dev = 0,091, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15557471947860618;  // std dev = 6,18e-09, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11439499230371883;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0704403440758365;  // std dev = 0,106, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073386
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.863 seconds
Total inference time: 3.542 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070687
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.934 seconds
Parameter learned model CLL: -0.070687


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'false': [5.16e-08, 118, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'false': [7.88e-08, 112, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 111, 0], 'true,true,true,true': [1.03e-07, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'false': [0.0, 130, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [6.5e-08, 110, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.091, 3, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'genre(B, E)', 'true,true': 'movie(C, D)'}, {'false': [6.14e-08, 115, 0], 'true,true,true': [8.94e-08, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.447, 2, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.87e-08, 106, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, F)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 6, 0], 'true,true,true': [1.084, 27, 56], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.079, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [1.079, 29, 56], 'false,true': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.091, 87, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'false': [0.106, 108, 0], 'true,true': [6.18e-09, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}]]
[{'': [0.06222222222222188, 2.258080728051166e-17], 'true,true': [-1.2688263138573217e-16, nan], 'true,false': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.023767921937009287, 5.551115123125783e-17], 'true,false': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.027738687907221463, 6.00120553851436e-17], 'true': [1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,true,true': [1.9032394707859825e-16, nan], 'true,true': [1.9032394707859825e-16, nan], 'true,false,true': [0.0, nan]}, {'': [0.008971822673578602, -3.0744637605004337e-17], 'true,false': [0.0, nan], 'true': [-3.489272363107635e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.008248078116164221, 3.835315903250541e-17], 'true': [0.008248078116164221, nan], 'true,true': [0.008248078116164221, nan]}, {'': [0.0024934117409131894, 3.2823985075874195e-17], 'true,false': [0.0, nan], 'true': [1.427429603089487e-16, 0.0], 'true,true': [1.427429603089487e-16, nan]}, {'': [0.0034397597966411135, 3.2468786569226275e-17], 'true,true,true': [0.0034397597966411135, nan], 'true': [0.0034397597966411135, nan], 'true,true': [0.0034397597966411135, nan]}, {'': [0.015778506140472794, 0.0], 'true,false': [0.00011277384246880316, nan], 'true': [0.014165949450634888, 0.00011277384246880316], 'true,true': [0.014165949450634888, nan]}, {'': [0.012642395456854954, -6.938893903907229e-19], 'false': [-6.938893903907229e-19, nan], 'true,false': [9.493656496992283e-05, nan], 'true': [0.013703925165656928, 9.493656496992283e-05]}, {'': [0.004534982372967341, 0.00010375462983155022], 'true,false': [0.0, nan], 'true': [3.568574007723718e-17, 0.0], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360618;  // std dev = 8,56e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783635;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926085;  // std dev = 7,30e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0851847513883968;  // std dev = 6,05e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109158;  // std dev = 6,32e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333707;  // std dev = 9,13e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return -0.07324622576333707;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420278;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.06842697784420267;  // std dev = 3,33e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.06842697784420275;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.843 seconds
Total inference time: 2.658 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.793 seconds
Refined model CLL: -0.063421


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.433 seconds
Total inference time: 2.658 seconds
AUC ROC: 1.0
Total revision time: 7.433
Best scored revision CLL: -0.063421


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:18:14
{'Inference time': 2.658, 'AUC PR': 1.0, 'Recall': 1.0, 'parameter': {'Inference time': 3.542, 'AUC PR': 1.0, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.863, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.073386}, 'F1': 1.0, 'Learning time': 7.433, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.064216}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,69e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0,186, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( female(A) )
%   | then return 0.726624861664361;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.6549572831786966;  // std dev = 0,246, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7,88e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.49344245647681373;  // std dev = 0,253, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.5712355097769293;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.43434619447023437;  // std dev = 0,038, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.5685542922300678;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 4,59e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( female(A) )
%   | then return 0.3099591733584499;  // std dev = 0,140, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3024452003928089;  // std dev = 0,136, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2680546521955774;  // std dev = 0,025, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.5002674158902664;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.08518475138839682;  // std dev = 5,77e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return -0.29906110925032175;  // std dev = 0,608, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07822032739108997;  // std dev = 0,028, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else return 0.2188201709014784;  // std dev = 0,022, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0729409705346118;  // std dev = 0,023, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18371694276268916;  // std dev = 0,019, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.4289637927036322;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0677773545679189;  // std dev = 0,030, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0.15774882058303044;  // std dev = 0,017, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06368638620315993;  // std dev = 0,028, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13790300220690088;  // std dev = 0,015, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.36417749527801585;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110355
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.899 seconds
Total inference time: 2.765 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 01:18:20
{'F1': 0.847854, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.765, 'AUC ROC': 1.0, 'Learning time': 2.899, 'Precision': [0.735892, 0.5], 'CLL': -0.110355}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.166977
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.11 seconds
Total inference time: 1.838 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 01:18:23
{'F1': nan, 'AUC PR': 1.0, 'Recall': 0.0, 'Inference time': 1.838, 'AUC ROC': 1.0, 'Learning time': 1.11, 'Precision': [nan, 0.5], 'CLL': -0.166977}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(H, A).;true;true
0;true,true,true;ta(F, A, G).;false;false
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
0;true,false,true;publication(H, I), professor(I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;publication(G, B), publication(H, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;ta(E, A, F).;false;false
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,false,true;publication(H, I), professor(I).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,false;publication(F, A).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
2;true,false,true;publication(F, G), professor(G).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,false;publication(G, B).;false;false
3;true,false;publication(D, B), publication(E, A).;true;true
3;true;publication(C, A), publication(C, B).;false;true
3;true,false,true;publication(E, F), professor(F).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B).;true;true
4;true,false;publication(J, A).;true;true
4;true,true,true;ta(F, A, G), ta(H, E, I).;false;false
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,false,false;ta(M, A, N).;false;false
4;true,false,true;publication(J, K), tempadvisedby(K, L).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,false;projectmember(F, B).;true;true
5;true,false,true;ta(G, A, H).;false;false
5;true,true;publication(C, D), tempadvisedby(E, D).;false;false
5;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,true,true;publication(F, E), tempadvisedby(G, B).;false;false
6;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;true,false,false;ta(K, A, L), publication(M, A).;false;false
6;true,false,true;ta(I, A, J).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
7;false;ta(L, A, M).;false;false
7;true;publication(D, B), publication(D, A).;true;true
7;true,false;hasposition(H, C), tempadvisedby(I, H).;true;true
7;true,true;tempadvisedby(E, B).;false;true
7;true,true,false;publication(D, F), tempadvisedby(G, F).;false;false
7;true,false,false;publication(K, B).;false;false
7;true,false,true;sameperson(B, H), publication(J, I).;false;false
8;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
8;false;ta(K, A, L).;true;false
8;false,true;publication(M, B).;false;true
8;true,false;tempadvisedby(E, B), ta(F, A, G).;true;true
8;true,false,false;tempadvisedby(I, B), publication(J, A).;false;false
8;true,false,true;ta(F, E, H).;false;false
8;false,true,false;ta(K, N, P), tempadvisedby(N, Q).;false;false
8;true;publication(D, B), publication(D, A).;false;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), publication(C, A).;true;true
9;true,false;publication(H, A), tempadvisedby(I, B).;true;true
9;true,true,true;ta(G, F, E).;false;false
9;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
9;true,false,false;publication(M, B).;false;false
9;true,false,true;publication(H, J), ta(K, J, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8,30e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 2,11e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3003805460118181;  // std dev = 0,089, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 5,58e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2590555930976932;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.12123061465692468;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6,32e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.1823664427181584;  // std dev = 0,749, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109158;  // std dev = 6,23e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.09226144311851626;  // std dev = 1,166, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07490227686519389;  // std dev = 0,076, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.08878347716699785;  // std dev = 1,086, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   | else if ( movie(D, A) )
%   | | then return -0.07086223762545103;  // std dev = 0,100, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15797806504898554;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11249987501337604;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07001125514698531;  // std dev = 0,098, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073292
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.831 seconds
Total inference time: 3.597 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070861
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.232 seconds
Parameter learned model CLL: -0.070861


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'false': [8.69e-08, 103, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'false': [0.0, 98, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.3e-08, 104, 0], 'true,true,true,true': [1.19e-07, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'false': [2.11e-08, 104, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [5.58e-08, 104, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.089, 3, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'genre(B, E)', 'true,true': 'movie(C, D)'}, {'false': [6.32e-08, 119, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.749, 6, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.23e-08, 111, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, F)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 11, 0], 'true,true,true': [1.166, 32, 58], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.076, 66, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [1.086, 28, 58], 'false,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.1, 81, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'false': [0.098, 97, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0]}]]
[{'': [0.06035379812695064, 7.329627735389383e-17], 'true,true': [-3.675221047035001e-16, nan], 'true,false': [0.0, nan], 'true': [-3.675221047035001e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.06860069208541114, -1.3594567648471304e-17], 'true,false': [-1.982541115402065e-18, nan], 'true': [-1.2250736823450003e-16, -1.982541115402065e-18], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.03257296522956836, 6.618637262188433e-17], 'true': [2.4501473646900006e-16, 0.0], 'true,false': [0.0, nan], 'true,true,true': [2.4501473646900006e-16, nan], 'true,true': [2.4501473646900006e-16, nan], 'true,false,true': [0.0, nan]}, {'': [0.0228948573366958, 4.270088556250602e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true': [-3.3689526264487507e-16, -2.3129646346357427e-18], 'true,false,true': [-2.3129646346357427e-18, nan]}, {'': [0.007991661590093457, 2.9890619893754213e-17], 'true': [0.007991661590093457, nan], 'true,true': [0.007991661590093457, nan]}, {'': [0.010566667660476776, 3.358657889622322e-17], 'true,false': [0.0, nan], 'true': [-8.422381566121877e-17, 0.0], 'true,true': [-8.422381566121877e-17, nan]}, {'': [0.008775966200247655, 3.500703230800043e-17], 'true,true,true': [0.008775966200247655, nan], 'true': [0.008775966200247655, nan], 'true,true': [0.008775966200247655, nan]}, {'': [0.01557689918971923, 0.0], 'true,false': [8.77601680627538e-05, nan], 'true': [0.015113262597906461, 8.77601680627538e-05], 'true,true': [0.015113262597906461, nan]}, {'': [0.013488460990420689, -1.1564823173178713e-18], 'false': [-1.1564823173178713e-18, nan], 'true,false': [0.00012426654455109808, nan], 'true': [0.01371382849861505, 0.00012426654455109808]}, {'': [0.005345404801589723, 9.987230206202688e-05], 'true,false': [-2.7755575615628915e-18, nan], 'true': [-2.6798486801296883e-17, -2.7755575615628915e-18], 'true,false,true': [-2.7755575615628915e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 6,32e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839127;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360618;  // std dev = 8,82e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783621;  // std dev = 5,37e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926087;  // std dev = 6,83e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.0851847513883968;  // std dev = 6,05e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0787767547310916;  // std dev = 5,87e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333707;  // std dev = 1,49e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333707;  // std dev = 3,16e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.07324622576333711;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.0684269778442028;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420267;  // std dev = 4,01e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return -0.06842697784420278;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.604 seconds
Total inference time: 2.726 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.739 seconds
Refined model CLL: -0.063422


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.406000000000001 seconds
Total inference time: 2.726 seconds
AUC ROC: 1.0
Total revision time: 7.406000000000001
Best scored revision CLL: -0.063422


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:18:38
{'Inference time': 2.726, 'AUC PR': 1.0, 'Recall': 1.0, 'parameter': {'Inference time': 3.597, 'AUC PR': 1.0, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.831, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.073292}, 'F1': 1.0, 'Learning time': 7.406000000000001, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.064225}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7,45e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11342408896628955;  // std dev = 0,115, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10149526833418368;  // std dev = 4,94e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09260665205992182;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851129269764393;  // std dev = 6,23e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07871507689974071;  // std dev = 5,77e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07319271785485616;  // std dev = 3,49e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( female(A) )
%   | then return 0.16517541567343866;  // std dev = 0,053, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.17067745355274894;  // std dev = 0,040, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06838013935235752;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15382351571748976;  // std dev = 0,003, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08558666622805224;  // std dev = 0,000514, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06415051283642449;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13484935393455802;  // std dev = 0,002, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0790759952439675;  // std dev = 0,000439, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074066
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.885 seconds
Total inference time: 3.005 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 01:18:44
{'F1': 0.848168, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 3.005, 'AUC ROC': 1.0, 'Learning time': 2.885, 'Precision': [0.736364, 0.5], 'CLL': -0.074066}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 2,98e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.994636
   AUC PR    = 0.736364
   CLL	      = -0.169152
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.945 seconds
Total inference time: 1.73 seconds
AUC ROC: 0.994636


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 01:18:47
{'F1': nan, 'AUC PR': 0.736364, 'Recall': 0.0, 'Inference time': 1.73, 'AUC ROC': 0.994636, 'Learning time': 0.945, 'Precision': [nan, 0.5], 'CLL': -0.169152}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(H, A).;true;true
0;true,true,true;ta(F, A, G).;false;false
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
0;true,false,true;publication(H, I), professor(I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;publication(G, B), publication(H, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;ta(E, A, F).;false;false
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,false,true;publication(H, I), professor(I).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,false;publication(F, A).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
2;true,false,true;publication(F, G), professor(G).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,false;publication(G, B).;false;false
3;true,false;publication(D, B), publication(E, A).;true;true
3;true;publication(C, A), publication(C, B).;false;true
3;true,false,true;publication(E, F), professor(F).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B).;true;true
4;true,false;publication(J, A).;true;true
4;true,true,true;ta(F, A, G), ta(H, E, I).;false;false
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,false,false;ta(M, A, N).;false;false
4;true,false,true;publication(J, K), tempadvisedby(K, L).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,false;projectmember(F, B).;true;true
5;true,false,true;ta(G, A, H).;false;false
5;true,true;publication(C, D), tempadvisedby(E, D).;false;false
5;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,true,true;publication(F, E), tempadvisedby(G, B).;false;false
6;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;true,false,false;ta(K, A, L), publication(M, A).;false;false
6;true,false,true;ta(I, A, J).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
7;false;ta(L, A, M).;false;false
7;true;publication(D, B), publication(D, A).;true;true
7;true,false;hasposition(H, C), tempadvisedby(I, H).;true;true
7;true,true;tempadvisedby(E, B).;false;true
7;true,true,false;publication(D, F), tempadvisedby(G, F).;false;false
7;true,false,false;publication(K, B).;false;false
7;true,false,true;sameperson(B, H), publication(J, I).;false;false
8;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
8;false;ta(K, A, L).;true;false
8;false,true;publication(M, B).;false;true
8;true,false;tempadvisedby(E, B), ta(F, A, G).;true;true
8;true,false,false;tempadvisedby(I, B), publication(J, A).;false;false
8;true,false,true;ta(F, E, H).;false;false
8;false,true,false;ta(K, N, P), tempadvisedby(N, Q).;false;false
8;true;publication(D, B), publication(D, A).;false;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), publication(C, A).;true;true
9;true,false;publication(H, A), tempadvisedby(I, B).;true;true
9;true,true,true;ta(G, F, E).;false;false
9;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
9;true,false,false;publication(M, B).;false;false
9;true,false,true;publication(H, J), ta(K, J, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995095;  // std dev = 8,09e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048793;  // std dev = 0,000, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0,000, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360628;  // std dev = 4,59e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360682;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.10159632948783619;  // std dev = 4,59e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20165174763551824;  // std dev = 0,187, 250,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 1,13e-07, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2784518182889647;  // std dev = 2,31e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.11109974156630954;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( movie(F, G) )
%   | | | then return -0.11109974156630956;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 9,66e-08, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.15443765357220157;  // std dev = 2,041, 228,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310915;  // std dev = 9,66e-08, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1393016501293839;  // std dev = 1,722, 229,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.0864622766237905;  // std dev = 0,275, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333703;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.11274562180714554;  // std dev = 1,756, 238,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=178 */
%   | else if ( movie(D, A) )
%   | | then return -0.07726869820245129;  // std dev = 0,237, 195,000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06842697784420261;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16286129859048895;  // std dev = 1,30e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.0997550038057661;  // std dev = 2,36e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0688052586617825;  // std dev = 0,195, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071599
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.786 seconds
Total inference time: 3.893 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.298 seconds
Parameter learned model CLL: -0.075225


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'false': [0.0, 318, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [8.09e-08, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.3e-08, 75, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'false': [0.0, 312, 0], 'true,true': [0.0, 0, 178], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 287, 0], 'true,true,true,true': [5.9e-07, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.59e-08, 61, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'false': [0.0, 315, 0], 'true,true': [3.77e-07, 0, 178], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [4.59e-08, 63, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [1.13e-07, 281, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.187, 72, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'genre(B, E)', 'true,false,false': 'movie(F, G)', 'true,true': 'movie(C, D)'}, {'true,false,false,true': [0.0, 39, 0], 'false': [9.66e-08, 305, 0], 'true,false,false,false': [0.0, 0, 0], 'true,true,true': [2.31e-07, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 30, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.041, 50, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.66e-08, 295, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, F)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 111, 0], 'true,true,true': [1.722, 51, 178], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.275, 198, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [1.756, 60, 178], 'false,true': [0.0, 93, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.237, 195, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'false': [0.195, 300, 0], 'true,true': [1.3e-08, 0, 178], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [2.36e-08, 43, 0]}]]
[{'': [0.20856442062835467, -8.3790416952842e-18], 'true,false,true': [7.105427357601002e-17, nan], 'true,false': [7.105427357601002e-17, nan], 'true': [6.706246045376226e-15, 7.105427357601002e-17], 'true,true': [6.706246045376226e-15, nan]}, {'': [0.14969087886150273, -6.832141690000964e-17], 'true,false': [-2.6294755846385285e-17, nan], 'true': [-3.193450497798203e-15, -2.6294755846385285e-17], 'true,false,true': [-2.6294755846385285e-17, nan]}, {'': [0.08474116536042431, -7.427275983555055e-17], 'true': [1.9559884299013994e-15, 3.45807171604557e-17], 'true,false': [3.45807171604557e-17, nan], 'true,true,true': [1.9559884299013994e-15, nan], 'true,true': [1.9559884299013994e-15, nan], 'true,false,true': [3.45807171604557e-17, nan]}, {'': [0.052028956092804744, -5.357266658508692e-17], 'true,false': [3.348291661567932e-17, nan], 'true': [7.983626244495507e-16, 3.348291661567932e-17], 'true,false,true': [3.348291661567932e-17, nan]}, {'': [0.035044509710959494, 4.5831270767444185e-17], 'true': [0.035044509710959494, nan], 'true,true': [0.035044509710959494, nan]}, {'': [0.030549568608626294, 3.0576634120823985e-17], 'true,false,false': [-1.2810265668751807e-17, nan], 'true,false': [-1.8503717077085942e-18, -1.2810265668751807e-17], 'true': [2.9938598416858153e-16, -5.792467954566034e-17], 'true,true': [2.9938598416858153e-16, nan]}, {'': [0.018269796745653114, 3.161313019271632e-17], 'true,true,true': [0.018269796745653114, nan], 'true': [0.018269796745653114, nan], 'true,true': [0.018269796745653114, nan]}, {'': [0.019794623585455282, -5.001004615428633e-18], 'true,false': [0.0003831339362431006, nan], 'true': [0.01294385717343757, 0.0003831339362431006], 'true,true': [0.01294385717343757, nan]}, {'': [0.016186191584756263, 0.0], 'false': [0.0, nan], 'true,false': [0.0002869270749475522, nan], 'true': [0.012952943428871662, 0.0002869270749475522]}, {'': [0.01080804825380102, 0.00012707742160328623], 'true,false': [1.290957005378089e-17, nan], 'true': [1.6466229129271985e-16, 1.290957005378089e-17], 'true,false,true': [1.290957005378089e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true,false;genre(B, E).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1418510649004881;  // std dev = 0,000, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.12544463852839186;  // std dev = 0,000, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.11231637819360682;  // std dev = 0,000, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783617;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.10159632948783656;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926054;  // std dev = 6,99e-08, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D) )
%   | | then return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.08518475138839678;  // std dev = 9,42e-08, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253584;  // std dev = 1,32e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253584;  // std dev = 1,32e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109154;  // std dev = 5,67e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | | else return -0.07877675473109157;  // std dev = 4,83e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109168;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07877675473109169;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.07877675473109165;  // std dev = 1,61e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0.17709649774527822;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07324622576333703;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420265;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06842697784420265;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420262;  // std dev = 1,49e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.06842697784420262;  // std dev = 1,67e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06842697784420261;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080112;  // std dev = 2,63e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080112;  // std dev = 2,63e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06419184008202623;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.414 seconds
Total inference time: 2.832 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.05 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.547999999999998 seconds
Total inference time: 2.832 seconds
AUC ROC: 1.0
Total revision time: 10.547999999999998
Best scored revision CLL: -0.065435


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:19:05
{'Inference time': 2.832, 'AUC PR': 1.0, 'Recall': 1.0, 'parameter': {'Inference time': 3.893, 'AUC PR': 1.0, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.786, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.071599}, 'F1': 1.0, 'Learning time': 10.547999999999998, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.063555}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048824;  // std dev = 0,000, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.12544463852839188;  // std dev = 0,000, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360685;  // std dev = 0,000, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4,83e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.10159632948783644;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.09269127618926067;  // std dev = 0,000, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.08518475138839678;  // std dev = 8,16e-08, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07877675473109144;  // std dev = 5,77e-08, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.07324622576333681;  // std dev = 1,02e-07, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06842697784420285;  // std dev = 0,000, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202619;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.06419184008202593;  // std dev = 1,22e-07, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.815 seconds
Total inference time: 2.617 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:19:11
{'F1': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.617, 'AUC ROC': 1.0, 'Learning time': 3.815, 'Precision': [1.0, 0.5], 'CLL': -0.063555}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.14185106490048818;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.155326
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.325 seconds
Total inference time: 1.921 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:19:15
{'F1': nan, 'AUC PR': 1.0, 'Recall': 0.0, 'Inference time': 1.921, 'AUC ROC': 1.0, 'Learning time': 1.325, 'Precision': [nan, 0.5], 'CLL': -0.155326}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(H, A).;true;true
0;true,true,true;ta(F, A, G).;false;false
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
0;true,false,true;publication(H, I), professor(I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;publication(G, B), publication(H, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;ta(E, A, F).;false;false
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,false,true;publication(H, I), professor(I).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,false;publication(F, A).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
2;true,false,true;publication(F, G), professor(G).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,false;publication(G, B).;false;false
3;true,false;publication(D, B), publication(E, A).;true;true
3;true;publication(C, A), publication(C, B).;false;true
3;true,false,true;publication(E, F), professor(F).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B).;true;true
4;true,false;publication(J, A).;true;true
4;true,true,true;ta(F, A, G), ta(H, E, I).;false;false
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,false,false;ta(M, A, N).;false;false
4;true,false,true;publication(J, K), tempadvisedby(K, L).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,false;projectmember(F, B).;true;true
5;true,false,true;ta(G, A, H).;false;false
5;true,true;publication(C, D), tempadvisedby(E, D).;false;false
5;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,true,true;publication(F, E), tempadvisedby(G, B).;false;false
6;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;true,false,false;ta(K, A, L), publication(M, A).;false;false
6;true,false,true;ta(I, A, J).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
7;false;ta(L, A, M).;false;false
7;true;publication(D, B), publication(D, A).;true;true
7;true,false;hasposition(H, C), tempadvisedby(I, H).;true;true
7;true,true;tempadvisedby(E, B).;false;true
7;true,true,false;publication(D, F), tempadvisedby(G, F).;false;false
7;true,false,false;publication(K, B).;false;false
7;true,false,true;sameperson(B, H), publication(J, I).;false;false
8;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
8;false;ta(K, A, L).;true;false
8;false,true;publication(M, B).;false;true
8;true,false;tempadvisedby(E, B), ta(F, A, G).;true;true
8;true,false,false;tempadvisedby(I, B), publication(J, A).;false;false
8;true,false,true;ta(F, E, H).;false;false
8;false,true,false;ta(K, N, P), tempadvisedby(N, Q).;false;false
8;true;publication(D, B), publication(D, A).;false;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), publication(C, A).;true;true
9;true,false;publication(H, A), tempadvisedby(I, B).;true;true
9;true,true,true;ta(G, F, E).;false;false
9;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
9;true,false,false;publication(M, B).;false;false
9;true,false,true;publication(H, J), ta(K, J, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 7,74e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 1,49e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2869646534173405;  // std dev = 0,113, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2616390294064404;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.11980861652622084;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 3,33e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.1821101061257072;  // std dev = 0,683, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109164;  // std dev = 4,71e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.09781334760153067;  // std dev = 1,008, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07865241001396611;  // std dev = 0,134, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.07676958838952089;  // std dev = 1,032, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.07344157908797296;  // std dev = 0,116, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16032672504206774;  // std dev = 7,21e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11065812226057244;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0703076820720398;  // std dev = 0,104, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072339
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.773 seconds
Total inference time: 4.327 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072011
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.708 seconds
Parameter learned model CLL: -0.072011


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'false': [8.16e-08, 90, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [3.33e-08, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'false': [0.0, 79, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 95, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'false': [1.49e-08, 105, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 69, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.113, 4, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'genre(B, E)', 'true,true': 'movie(C, D)'}, {'false': [3.33e-08, 86, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.683, 5, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.71e-08, 91, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, F)', 'true,true': 'movie(C, D)'}, {'false': [9.31e-10, 10, 0], 'true,true,true': [1.008, 23, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.134, 69, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [1.032, 27, 45], 'false,true': [2.63e-09, 10, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.116, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'false': [0.104, 104, 0], 'true,true': [7.21e-09, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0]}]]
[{'': [0.10380622837370317, 7.401486830834377e-17], 'true,false,true': [-6.938893903907228e-18, nan], 'true,false': [-6.938893903907228e-18, nan], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,true': [1.105288700071267e-15, nan]}, {'': [0.06424978612186535, -2.5296220814244072e-17], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.03342110014406096, 6.310741403132469e-17], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan], 'true,false,true': [0.0, nan]}, {'': [0.0313922549076915, 2.1147105230955365e-18], 'true,false': [0.0, nan], 'true': [-4.144832625267251e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.012812322212040247, 0.0], 'true': [0.012812322212040247, nan], 'true,true': [0.012812322212040247, nan]}, {'': [0.013095207592881106, 1.290957005378089e-17], 'true,false': [-2.7755575615628915e-18, nan], 'true': [-9.868649107779169e-17, -2.7755575615628915e-18], 'true,true': [-9.868649107779169e-17, nan]}, {'': [0.009334689766873204, 2.4400506035717726e-17], 'true,true,true': [0.009334689766873204, nan], 'true': [0.009334689766873204, nan], 'true,true': [0.009334689766873204, nan]}, {'': [0.015338328335819221, 6.938893903907229e-19], 'true,false': [0.0002588661922012027, nan], 'true': [0.01495581523810499, 0.0002588661922012027], 'true,true': [0.01495581523810499, nan]}, {'': [0.013969963142280405, 6.938893903907229e-19], 'false': [6.938893903907229e-19, nan], 'true,false': [0.00023927166911707449, nan], 'true': [0.014777904603338261, 0.00023927166911707449]}, {'': [0.0043027023906818005, 0.00010481293101630685], 'true,false': [2.3129646346357427e-18, nan], 'true': [5.427757009278543e-17, 2.3129646346357427e-18], 'true,false,true': [2.3129646346357427e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360624;  // std dev = 5,87e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783615;  // std dev = 5,67e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2977450069740712;  // std dev = 0,095, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.09269127618926108;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25848879320571094;  // std dev = 0,013, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12177118664207026;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839682;  // std dev = 5,67e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21209850925152868;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1085890867849074;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109165;  // std dev = 4,71e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333707;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.17881193697079678;  // std dev = 0,010, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07589583000428936;  // std dev = 0,059, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333707;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( director(B) )
%   | | then return 0.15404426101635063;  // std dev = 0,009, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.06972017869448323;  // std dev = 0,041, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420274;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13502163231076858;  // std dev = 0,008, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08631837480514311;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06403519683686275;  // std dev = 0,001, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065569
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.537 seconds
Total inference time: 3.316 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064999
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.581 seconds
Refined model CLL: -0.064999


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065569
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.599 seconds
Total inference time: 3.316 seconds
AUC ROC: 1.0
Total revision time: 6.599
Best scored revision CLL: -0.064999


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:19:30
{'Inference time': 3.316, 'AUC PR': 1.0, 'Recall': 1.0, 'parameter': {'Inference time': 4.327, 'AUC PR': 1.0, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.773, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.072339}, 'F1': 1.0, 'Learning time': 6.599, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.065569}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,45e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11613611595291784;  // std dev = 0,330, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10124821495829296;  // std dev = 4,59e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09239972660258086;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.20280962811442999;  // std dev = 0,123, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.08493661481168403;  // std dev = 4,94e-05, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21191163760670512;  // std dev = 0,025, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10728989337091879;  // std dev = 6,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0835091925908246;  // std dev = 0,497, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17867720250742086;  // std dev = 0,022, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09679420166634545;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07272714393873539;  // std dev = 4,29e-05, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1539435870140318;  // std dev = 0,020, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08841810370315291;  // std dev = 0,006, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.0679723924269678;  // std dev = 4,03e-05, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06379109094846216;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1349440889875008;  // std dev = 0,018, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07647420986427392;  // std dev = 0,021, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071803
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 2.318 seconds
Total inference time: 2.828 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:19:36
{'F1': 0.853165, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.828, 'AUC ROC': 1.0, 'Learning time': 2.318, 'Precision': [0.743929, 0.5], 'CLL': -0.071803}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.995302
   AUC PR    = 0.743929
   CLL	      = -0.16604
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.877 seconds
Total inference time: 1.866 seconds
AUC ROC: 0.995302


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:19:39
{'F1': nan, 'AUC PR': 0.743929, 'Recall': 0.0, 'Inference time': 1.866, 'AUC ROC': 0.995302, 'Learning time': 0.877, 'Precision': [nan, 0.5], 'CLL': -0.16604}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(H, A).;true;true
0;true,true,true;ta(F, A, G).;false;false
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
0;true,false,true;publication(H, I), professor(I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;publication(G, B), publication(H, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;ta(E, A, F).;false;false
1;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;true,false,true;publication(H, I), professor(I).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,false;publication(F, A).;true;true
2;true,true,true;publication(E, B).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
2;true,false,true;publication(F, G), professor(G).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,false;publication(G, B).;false;false
3;true,false;publication(D, B), publication(E, A).;true;true
3;true;publication(C, A), publication(C, B).;false;true
3;true,false,true;publication(E, F), professor(F).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B).;true;true
4;true,false;publication(J, A).;true;true
4;true,true,true;ta(F, A, G), ta(H, E, I).;false;false
4;true,true;publication(C, D), tempadvisedby(E, D).;true;false
4;true,false,false;ta(M, A, N).;false;false
4;true,false,true;publication(J, K), tempadvisedby(K, L).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,false;projectmember(F, B).;true;true
5;true,false,true;ta(G, A, H).;false;false
5;true,true;publication(C, D), tempadvisedby(E, D).;false;false
5;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, B).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,true,true;publication(F, E), tempadvisedby(G, B).;false;false
6;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;true,false,false;ta(K, A, L), publication(M, A).;false;false
6;true,false,true;ta(I, A, J).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
7;false;ta(L, A, M).;false;false
7;true;publication(D, B), publication(D, A).;true;true
7;true,false;hasposition(H, C), tempadvisedby(I, H).;true;true
7;true,true;tempadvisedby(E, B).;false;true
7;true,true,false;publication(D, F), tempadvisedby(G, F).;false;false
7;true,false,false;publication(K, B).;false;false
7;true,false,true;sameperson(B, H), publication(J, I).;false;false
8;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
8;false;ta(K, A, L).;true;false
8;false,true;publication(M, B).;false;true
8;true,false;tempadvisedby(E, B), ta(F, A, G).;true;true
8;true,false,false;tempadvisedby(I, B), publication(J, A).;false;false
8;true,false,true;ta(F, E, H).;false;false
8;false,true,false;ta(K, N, P), tempadvisedby(N, Q).;false;false
8;true;publication(D, B), publication(D, A).;false;true
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, B), publication(C, A).;true;true
9;true,false;publication(H, A), tempadvisedby(I, B).;true;true
9;true,true,true;ta(G, F, E).;false;false
9;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
9;true,false,false;publication(M, B).;false;false
9;true,false,true;publication(H, J), ta(K, J, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 7,88e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,45e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3031202248899618;  // std dev = 0,083, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.25853007049505;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.12152278593435976;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(F, G) )
%   | | | then return -0.12152278593435976;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,37e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.18590142104892277;  // std dev = 0,616, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310916;  // std dev = 5,77e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.12197914693195806;  // std dev = 0,836, 59,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07659885915129867;  // std dev = 0,107, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.09182172666450761;  // std dev = 0,903, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.07013989500438192;  // std dev = 0,072, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06842697784420275;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15292327392404445;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11300088788289553;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07085062962127045;  // std dev = 0,120, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07313
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.794 seconds
Total inference time: 4.051 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071479
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.459 seconds
Parameter learned model CLL: -0.071479


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'false': [7.88e-08, 86, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [3.33e-08, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'false': [0.0, 96, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-08, 91, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'false': [3.65e-08, 100, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 84, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.083, 2, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'genre(B, E)', 'true,false,false': 'movie(F, G)', 'true,true': 'movie(C, D)'}, {'true,false,false,true': [0.0, 1, 0], 'false': [5.37e-08, 96, 0], 'true,false,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.616, 4, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.77e-08, 104, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, F)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 4, 0], 'true,true,true': [0.836, 14, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.107, 66, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.903, 19, 45], 'false,true': [1.32e-09, 3, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.072, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'false': [0.12, 113, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [3.73e-09, 6, 0]}]]
[{'': [0.021266540642723226, 7.229359230117299e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan]}, {'': [0.05351918877289897, -1.3877787807814457e-17], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.026121113751917464, 6.100126508929432e-17], 'true': [-3.947459643111668e-17, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.027973194025505906, 1.3322676295501878e-17], 'true,false': [0.0, nan], 'true': [-4.144832625267251e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.006962966417181677, 0.0], 'true': [0.006962966417181677, nan], 'true,true': [0.006962966417181677, nan]}, {'': [0.005884841843011981, 3.0068540250264654e-17], 'true,false,false': [0.0, nan], 'true,false': [0.0, 0.0], 'true': [-1.6776703483224587e-16, 0.0], 'true,true': [-1.6776703483224587e-16, nan]}, {'': [0.007737446788517191, 3.202566417187951e-17], 'true,true,true': [0.007737446788517191, nan], 'true': [0.007737446788517191, nan], 'true,true': [0.007737446788517191, nan]}, {'': [0.015516054272440969, 0.0], 'true,false': [0.0001742223348281534, nan], 'true': [0.011857361022583049, 0.0001742223348281534], 'true,true': [0.011857361022583049, nan]}, {'': [0.013471586481138232, 5.782411586589357e-19], 'false': [5.782411586589357e-19, nan], 'true,false': [9.647851581777187e-05, nan], 'true': [0.012752557451832501, 9.647851581777187e-05]}, {'': [0.0073407259341927555, 0.0001266016661788766], 'true,false': [2.3129646346357427e-18, nan], 'true': [-1.973729821555834e-17, 2.3129646346357427e-18], 'true,false,true': [2.3129646346357427e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true,false;genre(B, E).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 8,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360621;  // std dev = 6,99e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783624;  // std dev = 4,71e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926097;  // std dev = 4,47e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839682;  // std dev = 5,58e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.0787767547310918;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.0787767547310918;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( director(B) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.06842697784420272;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.796 seconds
Total inference time: 3.405 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.545 seconds
Refined model CLL: -0.063719


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.594 seconds
Total inference time: 3.405 seconds
AUC ROC: 1.0
Total revision time: 6.594
Best scored revision CLL: -0.063719


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:19:53
{'Inference time': 3.405, 'AUC PR': 1.0, 'Recall': 1.0, 'parameter': {'Inference time': 4.051, 'AUC PR': 1.0, 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.794, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.07313}, 'F1': 1.0, 'Learning time': 6.594, 'AUC ROC': 1.0, 'Precision': [1.0, 0.5], 'CLL': -0.064087}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048768;  // std dev = 6,50e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( female(A) )
%   | then return 0.6842684934301482;  // std dev = 0,169, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.6827378447875044;  // std dev = 0,172, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.564225933826104;  // std dev = 0,001, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22123961373509873;  // std dev = 0,000345, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42411703753546687;  // std dev = 0,001, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18545121688551028;  // std dev = 0,000189, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10445250758531666;  // std dev = 0,230, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09245135202170117;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32519209839811125;  // std dev = 0,001, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15904291488716624;  // std dev = 0,000245, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.25808369700661754;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.24110601136831544;  // std dev = 0,081, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.08799779852885109;  // std dev = 0,297, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.078383645031505;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21333091392054948;  // std dev = 0,010, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17158170291220484;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07290509684813905;  // std dev = 3,25e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.16470851649738638;  // std dev = 0,066, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.1668260235151513;  // std dev = 0,067, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0681282981239682;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1565613427033502;  // std dev = 0,007, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16959551518680574;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1241525963057138;  // std dev = 0,057, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.12557959134633118;  // std dev = 0,058, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06465658981404607;  // std dev = 0,054, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.398 seconds
Total inference time: 2.619 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:19:59
{'F1': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.619, 'AUC ROC': 1.0, 'Learning time': 2.398, 'Precision': [1.0, 0.5], 'CLL': -0.079769}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.14185106490048766;  // std dev = 7,15e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 0.959638
   AUC PR    = 0.255497
   CLL	      = -0.180022
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.8 seconds
Total inference time: 1.827 seconds
AUC ROC: 0.959638


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:20:02
{'F1': nan, 'AUC PR': 0.255497, 'Recall': 0.0, 'Inference time': 1.827, 'AUC ROC': 0.959638, 'Learning time': 0.8, 'Precision': [nan, 0.5], 'CLL': -0.180022}


