Starting experiment #1 for 10_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.14185106490048888;  // std dev = 0,000, 673,000 (wgt'ed) examples reached here.  /* #neg=673 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839238;  // std dev = 0,000, 710,000 (wgt'ed) examples reached here.  /* #neg=710 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.11231637819360654;  // std dev = 0,000, 705,000 (wgt'ed) examples reached here.  /* #neg=705 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783619;  // std dev = 4,47e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.10159632948783517;  // std dev = 4,34e-07, 703,000 (wgt'ed) examples reached here.  /* #neg=703 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.09269127618926197;  // std dev = 0,000, 677,000 (wgt'ed) examples reached here.  /* #neg=677 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.08518475138839675;  // std dev = 1,40e-07, 764,000 (wgt'ed) examples reached here.  /* #neg=764 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109169;  // std dev = 3,33e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.07877675473109295;  // std dev = 0,000, 771,000 (wgt'ed) examples reached here.  /* #neg=771 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333659;  // std dev = 2,19e-07, 678,000 (wgt'ed) examples reached here.  /* #neg=678 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06842697784420267;  // std dev = 1,75e-07, 758,000 (wgt'ed) examples reached here.  /* #neg=758 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.06419184008202532;  // std dev = 2,22e-07, 678,000 (wgt'ed) examples reached here.  /* #neg=678 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 162
Target train neg examples: 9107

Target test facts examples: 35095
Target test pos	 examples: 536
Target test neg examples: 18889

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.07833242133804359;  // std dev = 8,652, 436,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=96 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.09324146551402056;  // std dev = 8,514, 392,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=96 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.08022872712622434;  // std dev = 8,518, 393,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=96 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.06110642784012509;  // std dev = 8,562, 406,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=96 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.05504273605130016;  // std dev = 8,545, 401,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=96 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03688532367289009;  // std dev = 8,600, 418,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=96 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.028365546104844822;  // std dev = 8,615, 423,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=96 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.037463728584716784;  // std dev = 8,538, 399,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=96 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03133189074120029;  // std dev = 8,538, 399,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=96 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.0179440064776249;  // std dev = 8,584, 413,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=96 */


Results
   AUC ROC   = 0.725746
   AUC PR    = 0.48982
   CLL	      = -0.263212
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451493
   F1        = 0.622108


Total learning time: 1.911 seconds
Total inference time: 4.207 seconds
AUC ROC: 0.725746


Results scoring model
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.257728
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total scoring time: 2.073 seconds
Parameter learned model CLL: -0.257728


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.652, 340, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.19e-07, 0, 66], 'false': [8.514, 296, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 66], 'false': [8.518, 297, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.562, 310, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.545, 305, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.6, 322, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.615, 327, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.538, 303, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 66], 'false': [8.538, 303, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.71e-08, 0, 66], 'false': [8.584, 317, 96]}]]
[{'': [-9.689219124001365e-16, 0.17170271862637926]}, {'': [2.153159805333637e-16, 0.18492294877134646]}, {'': [1.2380668880668413e-15, 0.1846046267700036]}, {'': [-1.0765799026668185e-16, 0.18054308524836335]}, {'': [-2.8260222445003984e-16, 0.182088419848138]}, {'': [-4.0371746350005693e-17, 0.17691902657906408]}, {'': [-6.728624391667616e-17, 0.1754438911523593]}, {'': [-6.7286243916676156e-18, 0.1827124201481119]}, {'': [4.0371746350005693e-17, 0.18271242014811157]}, {'': [3.364312195833808e-17, 0.17841460054288671]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4930695700201471;  // std dev = 0,481, 63,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=40 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.048101064900487704;  // std dev = 2,332, 64,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.05001433020661012;  // std dev = 0,289, 98,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=9 */
%   | | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | | then return 0.09865526421343503;  // std dev = 5,372, 158,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=38 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3667091973535303;  // std dev = 0,494, 69,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=40 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.08146840851290779;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.036096007941873155;  // std dev = 2,324, 60,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.030795452179171;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.0758712144874958;  // std dev = 2,375, 100,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.08470399423452865;  // std dev = 5,378, 159,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=38 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2988544881373276;  // std dev = 0,494, 69,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=40 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.1532454107530246;  // std dev = 1,366, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.05961666531754316;  // std dev = 2,375, 76,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.20065067215147808;  // std dev = 1,400, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.07046214480141956;  // std dev = 2,380, 104,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.05918339683444992;  // std dev = 5,427, 169,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=38 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2520772750580209;  // std dev = 0,490, 67,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.031525894325321706;  // std dev = 2,832, 95,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=9 */
%   | | | else return 0.046168548951071225;  // std dev = 6,047, 223,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=47 */
%   | else return -0.11836950152393555;  // std dev = 0,109, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.18434693594990165;  // std dev = 0,492, 68,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.026183015303891565;  // std dev = 2,831, 93,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=9 */
%   | | | else return 0.02838267106132753;  // std dev = 6,092, 235,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=47 */
%   | else return -0.1036917887904821;  // std dev = 0,059, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09159759306488881;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03345125848120819;  // std dev = 2,853, 102,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=9 */
%   | | | else return 0.02799455188462059;  // std dev = 6,065, 235,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=47 */
%   | else return -0.09722332320465688;  // std dev = 0,086, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.7092271276420761;  // std dev = 1,308, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | else return -0.14188444585778273;  // std dev = 2,795, 267,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=8 */
%   | | else if ( haswordtitle(A, D) )
%   | | | then return -0.06701085157076203;  // std dev = 2,184, 34,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return -0.07941080874475297;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then if ( haswordauthor(I, H) )
%   | | | then return -0.24947184023018393;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.16293685840953112;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09534232192233712;  // std dev = 0,088, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E), haswordvenue(G, D) )
%   | | | then return 0.12216985400122661;  // std dev = 2,962, 56,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=38 */
%   | | | else return -0.013903924429233864;  // std dev = 2,779, 74,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return 0.003051624735454495;  // std dev = 2,603, 81,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=9 */
%   | | | else return 0.05090701445530675;  // std dev = 4,520, 147,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=38 */
%   | else return -0.07694473589650437;  // std dev = 0,042, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( haswordtitle(A, F), haswordvenue(E, F) )
%   | | then if ( title(G, B), venue(G, E) )
%   | | | then return 0.020112824494601247;  // std dev = 6,332, 339,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=87 */
%   | | | else return -0.09910784989134026;  // std dev = 2,265, 56,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=7 */
%   | | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | | then return -0.4331198783531211;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07096764829316776;  // std dev = 0,016, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | | then if ( haswordtitle(A, K), haswordauthor(L, K) )
%   | | | then return -0.2568232310248875;  // std dev = 0,545, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07102273224504044;  // std dev = 0,030, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.36981814632315996;  // std dev = 0,547, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.545378981083257;  // std dev = 1,621, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | else return -0.1332011906541552;  // std dev = 2,883, 246,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=8 */
%   | | else if ( haswordtitle(A, D) )
%   | | | then return -0.05078670520981944;  // std dev = 2,174, 39,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return -0.1180171862335659;  // std dev = 0,265, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | then if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return -0.3160465418634327;  // std dev = 0,168, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06409429458554497;  // std dev = 0,018, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.2987004593294879;  // std dev = 0,497, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.977886
   AUC PR    = 0.936383
   CLL	      = -0.170421
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.652985
   F1        = 0.790068


Total learning time: 63.169 seconds
Total inference time: 268.005 seconds
AUC ROC: 0.977886


Results scoring model
   AUC ROC   = 0.979697
   AUC PR    = 0.880678
   CLL	      = -0.169719
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.611111
   F1        = 0.758621


Total scoring time: 13.002 seconds
Refined model CLL: -0.169719


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.977886
   AUC PR    = 0.936383
   CLL	      = -0.170421
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.652985
   F1        = 0.790068


Total learning time: 80.15499999999999 seconds
Total inference time: 268.005 seconds
AUC ROC: 0.977886
Total revision time: 80.15499999999999
Best scored revision CLL: -0.169719


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:57
{'F1': 0.790068, 'AUC ROC': 0.977886, 'parameter': {'F1': 0.622108, 'AUC ROC': 0.725746, 'AUC PR': 0.48982, 'Precision': [1.0, 0.5], 'Inference time': 4.207, 'Learning time': 1.911, 'Recall': 0.451493, 'CLL': -0.263212}, 'AUC PR': 0.936383, 'Precision': [1.0, 0.5], 'Inference time': 268.005, 'Learning time': 80.15499999999999, 'Recall': 0.652985, 'CLL': -0.170421}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.5670096945931838;  // std dev = 0,454, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.088918165868743;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.07126282960637004;  // std dev = 2,361, 85,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=6 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.008148935099512346;  // std dev = 2,766, 60,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | else return 0.2696321886880277;  // std dev = 7,114, 209,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=86 */
%   else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.483465621591476;  // std dev = 0,455, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.15904412401087958;  // std dev = 1,445, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.027475297906951007;  // std dev = 2,304, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.037276346698457634;  // std dev = 2,835, 92,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=9 */
%   | | | else return 0.2355216614859577;  // std dev = 7,102, 208,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=86 */
%   else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.34069984130001074;  // std dev = 4,286, 82,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=54 */
%   | | | else return 0.005708788546805578;  // std dev = 2,756, 60,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.02495959807996611;  // std dev = 2,825, 84,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=9 */
%   | | | else return 0.19273331104147748;  // std dev = 7,053, 206,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=84 */
%   | else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | | then if ( haswordauthor(K, C) )
%   | | | then return -0.3209248786611138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.15777459778266703;  // std dev = 0,070, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(B, L), haswordvenue(M, L) )
%   | | | then return -0.2353823717098142;  // std dev = 0,220, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.7143721878093299;  // std dev = 0,122, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.39222741071740785;  // std dev = 0,392, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.28807541151591726;  // std dev = 1,299, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.05936637134315517;  // std dev = 2,370, 86,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 0.004582333015263564;  // std dev = 2,753, 61,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   | | | else return 0.15178095157881583;  // std dev = 7,152, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
%   else return -0.10159632948783633;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2317444686830723;  // std dev = 0,429, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.12161859377638487;  // std dev = 1,437, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.0441919856402511;  // std dev = 2,358, 77,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.010924371960863507;  // std dev = 2,777, 68,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
%   | | | else return 0.1594387956390085;  // std dev = 6,923, 196,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   else return -0.09269127618926105;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.20069706723987027;  // std dev = 3,656, 72,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=54 */
%   | | | else return 0.018242447953554158;  // std dev = 2,733, 56,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.012041466544590181;  // std dev = 2,766, 81,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=9 */
%   | | | else return 0.08054642697047808;  // std dev = 7,143, 214,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=84 */
%   | else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | | then if ( haswordauthor(K, C) )
%   | | | then return -0.39019855408432597;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.19553841728815705;  // std dev = 0,114, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(B, L), haswordvenue(M, L) )
%   | | | then return -0.4107332050377141;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.42690712781320683;  // std dev = 0,242, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then if ( title(G, A), venue(G, F) )
%   | | | then return 0.05517599367548206;  // std dev = 3,916, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | | | else return 0.10147595342259658;  // std dev = 1,649, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( author(H, E), title(H, A) )
%   | | | then return 0.13996033718629997;  // std dev = 1,397, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.03336952692042029;  // std dev = 2,498, 80,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=10 */
%   | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), title(K, A) )
%   | | | then return 0.2627032032489793;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.012625523367787881;  // std dev = 2,285, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | | else return 0.06541733759332014;  // std dev = 0,487, 217,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=86 */
%   else return -0.07877675473109179;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.06347670916877853;  // std dev = 0,449, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.0014707301470708348;  // std dev = 0,390, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else return -0.04922306123496967;  // std dev = 0,236, 101,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=6 */
%   else if ( haswordtitle(A, F), haswordtitle(B, F) )
%   | then if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.14028128290529468;  // std dev = 1,354, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.010380844567550262;  // std dev = 2,264, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else if ( haswordvenue(J, F) )
%   | | | then return 0.08885658082014919;  // std dev = 6,901, 194,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=84 */
%   | | | else return 0.05558090108680984;  // std dev = 0,711, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.273712966568316;  // std dev = 0,450, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.09959929775484647;  // std dev = 0,415, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.14869730155726002;  // std dev = 1,322, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.056407232353401685;  // std dev = 2,371, 61,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=6 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return 0.012460449748964196;  // std dev = 2,717, 70,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=9 */
%   | | | else return 0.03553358498992207;  // std dev = 7,136, 215,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=86 */
%   else return -0.06943661054646826;  // std dev = 0,007, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.01741373740932407;  // std dev = 0,453, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.05268544004821008;  // std dev = 0,361, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else return -0.04420098306620083;  // std dev = 0,247, 93,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=6 */
%   else if ( haswordtitle(A, F), haswordtitle(B, F) )
%   | then if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.14765547635147613;  // std dev = 1,306, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.0020448344840141896;  // std dev = 2,290, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else return 0.04889767188840956;  // std dev = 0,492, 203,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=86 */
%   | else return -0.06413121686557202;  // std dev = 3,73e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.799224
   AUC PR    = 0.120689
   CLL	      = -0.337376
   Precision = 0.130674 at threshold = 0.5
   Recall    = 0.354478
   F1        = 0.190955


Total learning time: 42.48 seconds
Total inference time: 669.742 seconds
AUC ROC: 0.799224


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:17:50
{'F1': 0.190955, 'AUC ROC': 0.799224, 'Learning time': 42.48, 'AUC PR': 0.120689, 'Precision': [0.130674, 0.5], 'Inference time': 669.742, 'CLL': -0.337376, 'Recall': 0.354478}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D), haswordvenue(F, C) )
%   | | then if ( author(G, E), title(G, B) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5248156017661796;  // std dev = 4,163, 78,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=52 */
%   | | else if ( author(H, E), title(H, A) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.008517731567154341;  // std dev = 2,944, 75,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=10 */
%   | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), title(K, B) )
%   | | | then return 0.10814893509951223;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.06492798797741077;  // std dev = 2,353, 78,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=6 */
%   | | else return 0.2526443479435478;  // std dev = 0,489, 218,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=86 */
%   else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */


Results
   AUC ROC   = 0.78811
   AUC PR    = 0.087081
   CLL	      = -0.213475
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.135 seconds
Total inference time: 340.842 seconds
AUC ROC: 0.78811


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 00:23:37
{'F1': nan, 'AUC ROC': 0.78811, 'Learning time': 6.135, 'AUC PR': 0.087081, 'Precision': [nan, 0.5], 'Inference time': 340.842, 'CLL': -0.213475, 'Recall': 0.0}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 140
Target train neg examples: 4623

Target test facts examples: 33542
Target test pos	 examples: 558
Target test neg examples: 23373

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.0783870303376087;  // std dev = 7,596, 336,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.058563753104742954;  // std dev = 7,645, 352,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04563304915157101;  // std dev = 7,670, 361,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.05272756493959582;  // std dev = 7,606, 339,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03032181109386416;  // std dev = 7,678, 364,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.01789498938429464;  // std dev = 7,717, 379,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.01630481996138875;  // std dev = 7,712, 377,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04184180389227445;  // std dev = 7,577, 330,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.010201112667574942;  // std dev = 7,699, 372,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.031931780153569525;  // std dev = 7,587, 333,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=74 */


Results
   AUC ROC   = 0.716846
   AUC PR    = 0.467514
   CLL	      = -0.235022
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.605


Total learning time: 1.63 seconds
Total inference time: 3.949 seconds
AUC ROC: 0.716846


Results scoring model
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.237986
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total scoring time: 2.074 seconds
Parameter learned model CLL: -0.237986


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.596, 262, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.19e-07, 0, 66], 'false': [7.645, 278, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 66], 'false': [7.67, 287, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.606, 265, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.678, 290, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.717, 305, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.712, 303, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.577, 256, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 66], 'false': [7.699, 298, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.71e-08, 0, 66], 'false': [7.587, 259, 74]}]]
[{'': [-9.689219124001365e-16, 0.17173327664399154]}, {'': [2.153159805333637e-16, 0.1660317665289275]}, {'': [1.2380668880668413e-15, 0.1629668280630125]}, {'': [-1.0765799026668185e-16, 0.17063896067733214]}, {'': [-2.8260222445003984e-16, 0.1619671537253937]}, {'': [-4.0371746350005693e-17, 0.15712783954441817]}, {'': [-6.728624391667616e-17, 0.15775809300002103]}, {'': [-6.7286243916676156e-18, 0.17395775941230585]}, {'': [4.0371746350005693e-17, 0.15935368250664705]}, {'': [3.364312195833808e-17, 0.17283950617284144]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.46280009789020904;  // std dev = 3,206, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return 0.14020021715079395;  // std dev = 0,450, 156,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.14089779892385604;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.3572464805340013;  // std dev = 3,362, 46,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else return 0.12779282380164964;  // std dev = 0,453, 153,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.5613375276174603;  // std dev = 0,937, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2289701945781979;  // std dev = 3,612, 53,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.11231637819360622;  // std dev = 6,50e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return 0.10988146587599443;  // std dev = 0,453, 153,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.25955637710180457;  // std dev = 1,371, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.15522690880193488;  // std dev = 3,673, 54,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | | else return -0.1015963294878363;  // std dev = 2,58e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.10159632948783627;  // std dev = 2,36e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0.08954237818672735;  // std dev = 0,451, 155,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=44 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.11279708619303222;  // std dev = 1,496, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.19113455384151382;  // std dev = 3,417, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return -0.09269127618926101;  // std dev = 3,49e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0.09895989898609342;  // std dev = 0,462, 143,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.08925935829930863;  // std dev = 1,494, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.07522411175579834;  // std dev = 3,673, 54,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | | else return -0.08518475138839682;  // std dev = 5,96e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.08518475138839679;  // std dev = 2,24e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0.06392577681190871;  // std dev = 0,454, 152,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.07441760145005778;  // std dev = 1,668, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.18051825838071123;  // std dev = 3,204, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else return -0.07877675473109157;  // std dev = 6,32e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.04696128982541697;  // std dev = 0,451, 155,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=44 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.17848228780431893;  // std dev = 1,266, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0726368866438621;  // std dev = 3,499, 51,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | | else return -0.07324622576333711;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0.040210176996662926;  // std dev = 0,452, 154,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=44 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.13510095968804162;  // std dev = 1,267, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.028261852477476306;  // std dev = 3,593, 54,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | | else return -0.06842697784420265;  // std dev = 4,89e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0.03644538666793782;  // std dev = 0,454, 152,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -9.231630306071167E-4;  // std dev = 1,433, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.03627031263233279;  // std dev = 3,789, 62,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=26 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0.09486026376878291;  // std dev = 0,478, 124,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */


Results
   AUC ROC   = 0.847445
   AUC PR    = 0.524883
   CLL	      = -0.231664
   Precision = 0.896296 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.584541


Total learning time: 11.579 seconds
Total inference time: 11.666 seconds
AUC ROC: 0.847445


Results scoring model
   AUC ROC   = 0.900185
   AUC PR    = 0.572973
   CLL	      = -0.228392
   Precision = 0.618182 at threshold = 0.5
   Recall    = 0.485714
   F1        = 0.544


Total scoring time: 3.489 seconds
Refined model CLL: -0.228392


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.847445
   AUC PR    = 0.524883
   CLL	      = -0.231664
   Precision = 0.896296 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.584541


Total learning time: 18.772000000000002 seconds
Total inference time: 11.666 seconds
AUC ROC: 0.847445
Total revision time: 18.772000000000002
Best scored revision CLL: -0.228392


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:24:13
{'F1': 0.584541, 'AUC ROC': 0.847445, 'parameter': {'F1': 0.605, 'AUC ROC': 0.716846, 'AUC PR': 0.467514, 'Precision': [1.0, 0.5], 'Inference time': 3.949, 'Learning time': 1.63, 'Recall': 0.433692, 'CLL': -0.235022}, 'AUC PR': 0.524883, 'Precision': [0.896296, 0.5], 'Inference time': 11.666, 'Learning time': 18.772000000000002, 'Recall': 0.433692, 'CLL': -0.231664}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.5581489350995129;  // std dev = 4,099, 80,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=56 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.14185106490048763;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else return 0.2734494815476007;  // std dev = 0,493, 183,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5414572732644585;  // std dev = 0,417, 84,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=64 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0.24846734531328232;  // std dev = 0,495, 178,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=76 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6501883415109635;  // std dev = 0,178, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.24699951368038658;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.3422892976960403;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4250318318167448;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.11231637819360618;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0.2164090277201186;  // std dev = 0,496, 175,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=76 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.49660906632021823;  // std dev = 0,203, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.20396755311399062;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.32275501540340623;  // std dev = 0,431, 77,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=58 */
%   | else return -0.1015963294878362;  // std dev = 4,21e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0.19539129903854385;  // std dev = 0,498, 168,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=76 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.32160543930136587;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18383062282940169;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.26661164242830526;  // std dev = 0,387, 78,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=58 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.09269127618926087;  // std dev = 6,58e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else return 0.14075325662888488;  // std dev = 0,496, 174,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.3276028648643478;  // std dev = 0,249, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return -0.03141446216117188;  // std dev = 0,765, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.21086993406394527;  // std dev = 3,440, 71,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=56 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.08518475138839682;  // std dev = 5,37e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0.10078979839186275;  // std dev = 0,495, 178,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.27686435683125693;  // std dev = 0,271, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.20908504014845847;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.05775240046639533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12846984672484982;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | else return -0.07877675473109161;  // std dev = 5,27e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return 0.07753799521377001;  // std dev = 0,455, 203,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=76 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, A) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then return 0.23120368776400455;  // std dev = 0,253, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.18311249035309612;  // std dev = 0,491, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordtitle(B, C) )
%   | | then return 0.07641606844841356;  // std dev = 0,422, 83,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=58 */
%   | | else return -0.07324622576333707;  // std dev = 4,28e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else return 0.034244987117267776;  // std dev = 0,445, 222,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=76 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.2030103692952209;  // std dev = 0,254, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18799084282380513;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.12693394252596485;  // std dev = 0,904, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04319599382354258;  // std dev = 3,974, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   | else return -0.06783173518650548;  // std dev = 0,019, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then return -0.08728050620732784;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0.054877894400909774;  // std dev = 0,495, 177,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=76 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.19004967251386307;  // std dev = 0,283, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.5474707524130563;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return -0.06776752096731989;  // std dev = 0,589, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.033788612300042084;  // std dev = 3,974, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   | else return -0.0637069267016131;  // std dev = 0,020, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else return 0.034197181192209915;  // std dev = 0,446, 213,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=76 */


Results
   AUC ROC   = 0.760919
   AUC PR    = 0.077492
   CLL	      = -0.345559
   Precision = 0.104703 at threshold = 0.5
   Recall    = 0.335125
   F1        = 0.159556


Total learning time: 23.555 seconds
Total inference time: 17.461 seconds
AUC ROC: 0.760919


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:24:54
{'F1': 0.159556, 'AUC ROC': 0.760919, 'Learning time': 23.555, 'AUC PR': 0.077492, 'Precision': [0.104703, 0.5], 'Inference time': 17.461, 'CLL': -0.345559, 'Recall': 0.335125}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.6482723918896364;  // std dev = 0,407, 81,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=64 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0.2645660473989785;  // std dev = 0,491, 187,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=76 */


Results
   AUC ROC   = 0.754544
   AUC PR    = 0.066115
   CLL	      = -0.205285
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.599 seconds
Total inference time: 3.183 seconds
AUC ROC: 0.754544


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 00:25:00
{'F1': nan, 'AUC ROC': 0.754544, 'Learning time': 2.599, 'AUC PR': 0.066115, 'Precision': [nan, 0.5], 'Inference time': 3.183, 'CLL': -0.205285, 'Recall': 0.0}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 113
Target train neg examples: 3827

Target test facts examples: 33252
Target test pos	 examples: 585
Target test neg examples: 24169

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.07808020657717626;  // std dev = 7,066, 291,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=64 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.08026001059498966;  // std dev = 7,011, 276,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=64 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.0569387400278008;  // std dev = 7,069, 292,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=64 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.05443349749217602;  // std dev = 7,045, 285,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=64 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.04899873623830478;  // std dev = 7,034, 282,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=64 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.027391753502000477;  // std dev = 7,099, 301,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=64 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.035158873686611594;  // std dev = 7,045, 285,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=64 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.019187349661429327;  // std dev = 7,092, 299,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=64 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.008564215644086857;  // std dev = 7,127, 310,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=64 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.030965531494453594;  // std dev = 7,019, 278,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=64 */


Results
   AUC ROC   = 0.721368
   AUC PR    = 0.476703
   CLL	      = -0.245302
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.442735
   F1        = 0.613744


Total learning time: 1.788 seconds
Total inference time: 4.418 seconds
AUC ROC: 0.721368


Results scoring model
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.249283
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total scoring time: 1.983 seconds
Parameter learned model CLL: -0.249283


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.69e-07, 0, 49], 'false': [7.066, 227, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.011, 212, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.069, 228, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.045, 221, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 49], 'false': [7.034, 218, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.099, 237, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 49], 'false': [7.045, 221, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.092, 235, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.127, 246, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 49], 'false': [7.019, 214, 64]}]]
[{'': [5.800348863347756e-16, 0.1715615073038824]}, {'': [-5.800348863347756e-16, 0.17811384162990915]}, {'': [0.0, 0.17113905047851238]}, {'': [-3.625218039592348e-16, 0.17413357956294045]}, {'': [1.8126090197961738e-17, 0.1754438911523573]}, {'': [-2.718913529694261e-17, 0.16741537069127055]}, {'': [3.6252180395923476e-17, 0.17413357956294143]}, {'': [-6.797283824235652e-17, 0.16823078041632386]}, {'': [-3.6252180395923476e-17, 0.16382934443288003]}, {'': [1.8126090197961738e-17, 0.17721650018115043]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4490580260086023;  // std dev = 0,492, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05674468192176434;  // std dev = 1,913, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | | | else return 0.1590338908517233;  // std dev = 4,875, 113,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E), haswordvenue(G, D) )
%   | | | then return 0.47849411306686424;  // std dev = 2,865, 38,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | | | else return -0.0561641961005094;  // std dev = 1,928, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.09566698014615281;  // std dev = 1,932, 60,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=4 */
%   | | | else return 0.16375330970892035;  // std dev = 4,496, 92,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=30 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.30062089689160976;  // std dev = 0,487, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09024206421021243;  // std dev = 1,939, 69,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=4 */
%   | | | else return 0.16720703092897016;  // std dev = 4,686, 101,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.30602792759458114;  // std dev = 0,455, 40,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0693810911366583;  // std dev = 1,918, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return 0.04696151012860481;  // std dev = 5,010, 145,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=34 */
%   | else return -0.10159632948783617;  // std dev = 4,71e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E), haswordvenue(G, D) )
%   | | | then return 0.14383906306358307;  // std dev = 3,313, 45,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | | | else return -0.09015514547179711;  // std dev = 1,954, 72,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=4 */
%   | | else if ( haswordvenue(H, D) )
%   | | | then return 0.04399902332100815;  // std dev = 4,706, 125,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=30 */
%   | | | else return 0.4730248337984382;  // std dev = 1,062, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.16650599905499885;  // std dev = 0,466, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.05773836174381636;  // std dev = 1,907, 49,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | | | else return 0.03248168319088501;  // std dev = 4,941, 151,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=34 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.17793494840677235;  // std dev = 0,459, 38,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07740294399232889;  // std dev = 1,937, 72,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=4 */
%   | | | else return 0.040716702280480147;  // std dev = 4,913, 138,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=34 */
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E), haswordvenue(G, D) )
%   | | | then return 0.07875439123951838;  // std dev = 3,084, 41,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | | else return -0.06988930998072651;  // std dev = 1,976, 64,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=4 */
%   | | else if ( haswordvenue(H, D) )
%   | | | then return 0.028133902973920606;  // std dev = 4,688, 127,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=30 */
%   | | | else return 0.3591905194825737;  // std dev = 1,087, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then return -0.09461331675798886;  // std dev = 0,083, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordtitle(B, D) )
%   | | | then return -0.0630400875079926;  // std dev = 3,518, 53,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
%   | | | else return -0.05170632950742429;  // std dev = 1,926, 66,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04796069358377242;  // std dev = 1,913, 38,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | | else return 0.12759645564293562;  // std dev = 4,231, 78,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   | | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, D), haswordtitle(B, E) )
%   | | | then return 0.05977876300508439;  // std dev = 3,147, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | | else return -0.06378143763459862;  // std dev = 2,007, 66,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=4 */
%   | | else if ( haswordvenue(H, D) )
%   | | | then return 0.039656637142672306;  // std dev = 4,580, 110,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=30 */
%   | | | else return 0.5572562589403057;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06425351214894501;  // std dev = 0,003, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */


Results
   AUC ROC   = 0.865541
   AUC PR    = 0.528135
   CLL	      = -0.271478
   Precision = 0.162197 at threshold = 0.5
   Recall    = 0.651282
   F1        = 0.259714


Total learning time: 13.441 seconds
Total inference time: 169.05599999999998 seconds
AUC ROC: 0.865541


Results scoring model
   AUC ROC   = 0.908658
   AUC PR    = 0.576055
   CLL	      = -0.227754
   Precision = 0.225071 at threshold = 0.5
   Recall    = 0.699115
   F1        = 0.340517


Total scoring time: 3.527 seconds
Refined model CLL: -0.227754


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.865541
   AUC PR    = 0.528135
   CLL	      = -0.271478
   Precision = 0.162197 at threshold = 0.5
   Recall    = 0.651282
   F1        = 0.259714


Total learning time: 20.739 seconds
Total inference time: 169.05599999999998 seconds
AUC ROC: 0.865541
Total revision time: 20.739
Best scored revision CLL: -0.227754


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 00:28:15
{'F1': 0.259714, 'AUC ROC': 0.865541, 'parameter': {'F1': 0.613744, 'AUC ROC': 0.721368, 'AUC PR': 0.476703, 'Precision': [1.0, 0.5], 'Inference time': 4.418, 'Learning time': 1.788, 'Recall': 0.442735, 'CLL': -0.245302}, 'AUC PR': 0.528135, 'Precision': [0.162197, 0.5], 'Inference time': 169.05599999999998, 'Learning time': 20.739, 'Recall': 0.651282, 'CLL': -0.271478}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5530641893368006;  // std dev = 0,460, 59,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.05296217601159886;  // std dev = 1,909, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.2606646583699538;  // std dev = 6,184, 159,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=64 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.47168423889951727;  // std dev = 0,460, 59,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06535004000593757;  // std dev = 1,929, 57,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=4 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return 0.25392363823535563;  // std dev = 5,942, 144,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=62 */
%   | | | else return 0.6211425566976034;  // std dev = 0,870, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4167986748937979;  // std dev = 0,443, 56,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, C) )
%   | | | then return -0.11558117808773462;  // std dev = 1,895, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | | else return -0.285326269886315;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return 0.1864187447864381;  // std dev = 5,996, 168,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=62 */
%   | | | else return 0.5192883896140306;  // std dev = 0,700, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.28358112673183644;  // std dev = 0,460, 59,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.08088719327481522;  // std dev = 0,241, 64,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=4 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09588925440967624;  // std dev = 1,900, 38,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | | else return 0.3341694128433183;  // std dev = 4,990, 107,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=64 */
%   else return -0.10159632948783619;  // std dev = 4,21e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2380074489887755;  // std dev = 0,449, 57,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.12991977871559535;  // std dev = 0,072, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06770832555162912;  // std dev = 1,925, 56,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.08274025487626768;  // std dev = 1,900, 39,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | | else return 0.2190486588671177;  // std dev = 5,282, 116,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=64 */
%   else return -0.09269127618926107;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.17860453521928302;  // std dev = 0,449, 57,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.12674008224971722;  // std dev = 0,061, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.04335454321058288;  // std dev = 1,908, 46,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=4 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return 0.06450793132793883;  // std dev = 5,922, 161,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=62 */
%   | | | else return 0.12486843476718408;  // std dev = 1,113, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.0851847513883968;  // std dev = 1,97e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, C), haswordtitle(B, D) )
%   | | then return 0.06054811061374174;  // std dev = 0,478, 62,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=40 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return -0.061340017033440004;  // std dev = 1,927, 69,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=4 */
%   | | | else return -0.22191262933528466;  // std dev = 0,917, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return -0.19668622346784131;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.042251032549608374;  // std dev = 1,857, 29,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordvenue(L, K) )
%   | | | then return 0.14629924800423935;  // std dev = 5,263, 112,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=60 */
%   | | | else return 0.3622616825077075;  // std dev = 0,137, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109172;  // std dev = 2,58e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then return 0.12803539693681892;  // std dev = 0,445, 55,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return -0.09696225011800676;  // std dev = 0,027, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0465006745010209;  // std dev = 2,049, 59,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=5 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return -0.17116109783110606;  // std dev = 0,036, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07146090428862276;  // std dev = 1,895, 39,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( haswordvenue(K, C) )
%   | | | then return 0.17480433809647167;  // std dev = 4,866, 98,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=58 */
%   | | | else return 0.2779976666104445;  // std dev = 0,123, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07324622576333704;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08117363287802536;  // std dev = 0,454, 58,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.06962079967003793;  // std dev = 0,271, 49,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.044294543506590116;  // std dev = 1,924, 60,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=4 */
%   | | | else return 0.08199312703519995;  // std dev = 5,239, 114,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=64 */
%   else return -0.06842697784420271;  // std dev = 1,05e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( title(E, A), venue(E, D) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.47812899136213355;  // std dev = 1,390, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | | else return -0.29691287241469544;  // std dev = 2,586, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( title(G, B), venue(G, D) )
%   | | | then return -0.4804673846904692;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2223578197225883;  // std dev = 1,553, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | else if ( haswordauthor(H, C) )
%   | | then return -0.37188181889588096;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | | | then return -0.12407796955110496;  // std dev = 0,818, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.21839611533425762;  // std dev = 0,101, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06419184008202625;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 0.945395
   AUC PR    = 0.54082
   CLL	      = -0.333834
   Precision = 0.210794 at threshold = 0.5
   Recall    = 0.921368
   F1        = 0.343094


Total learning time: 45.798 seconds
Total inference time: 451.117 seconds
AUC ROC: 0.945395


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:36:32
{'F1': 0.343094, 'AUC ROC': 0.945395, 'Learning time': 45.798, 'AUC PR': 0.54082, 'Precision': [0.210794, 0.5], 'Inference time': 451.117, 'CLL': -0.333834, 'Recall': 0.921368}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5302800826404962;  // std dev = 0,469, 61,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06777699082641366;  // std dev = 1,925, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.30259337954395793;  // std dev = 5,963, 144,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=64 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */


Results
   AUC ROC   = 0.738136
   AUC PR    = 0.066668
   CLL	      = -0.218669
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.978 seconds
Total inference time: 15.309 seconds
AUC ROC: 0.738136


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 00:36:51
{'F1': nan, 'AUC ROC': 0.738136, 'Learning time': 2.978, 'AUC PR': 0.066668, 'Precision': [nan, 0.5], 'Inference time': 15.309, 'CLL': -0.218669, 'Recall': 0.0}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 129
Target train neg examples: 4745

Target test facts examples: 34429
Target test pos	 examples: 569
Target test neg examples: 23251

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.07389237533274955;  // std dev = 7,618, 343,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.0766061730514587;  // std dev = 7,560, 325,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.06512335299040689;  // std dev = 7,567, 327,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.06252807265343793;  // std dev = 7,535, 318,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.02926144901352638;  // std dev = 7,653, 355,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.038688708183058626;  // std dev = 7,587, 333,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.028244960910568974;  // std dev = 7,609, 340,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.017651968566443115;  // std dev = 7,639, 350,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.04449310891689504;  // std dev = 7,494, 307,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.01144582406016875;  // std dev = 7,621, 344,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=74 */


Results
   AUC ROC   = 0.72232
   AUC PR    = 0.478862
   CLL	      = -0.246925
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44464
   F1        = 0.615572


Total learning time: 1.748 seconds
Total inference time: 4.605 seconds
AUC ROC: 0.72232


Results scoring model
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.249448
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total scoring time: 2.134 seconds
Parameter learned model CLL: -0.249448


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.618, 269, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.56, 251, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.03e-07, 0, 55], 'false': [7.567, 253, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.535, 244, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.653, 281, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.587, 259, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.609, 266, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.639, 276, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.494, 233, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 55], 'false': [7.621, 270, 74]}]]
[{'': [-1.291895883200182e-16, 0.16919820822956486]}, {'': [-3.2297397080004555e-16, 0.17584852071005813]}, {'': [1.9378438248002731e-16, 0.1750881425992944]}, {'': [-3.2297397080004555e-16, 0.17855306356552592]}, {'': [-9.689219124001366e-17, 0.16499900813330606]}, {'': [-3.229739708000455e-17, 0.17283950617283703]}, {'': [-8.074349270001138e-18, 0.17027681660899738]}, {'': [-4.0371746350005693e-17, 0.1667265306122452]}, {'': [-1.6148698540002276e-17, 0.1829409330602995]}, {'': [4.844609562000683e-17, 0.16884126554894624]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.46684458727342537;  // std dev = 0,488, 23,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08415875720818004;  // std dev = 1,681, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08062657510456937;  // std dev = 1,678, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | | else return 0.14386322081379874;  // std dev = 0,452, 189,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=54 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.42772573442214784;  // std dev = 0,481, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06086906324737225;  // std dev = 1,669, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06524525331326829;  // std dev = 1,673, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | | else return 0.1124460024621705;  // std dev = 0,445, 198,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=54 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3787306905546527;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07092410603437138;  // std dev = 1,684, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.04769528239217158;  // std dev = 1,664, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else return 0.12908536093231404;  // std dev = 0,460, 177,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=54 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3655549800115129;  // std dev = 0,440, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06173975288859833;  // std dev = 1,681, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | else return 0.03724756690648278;  // std dev = 0,405, 265,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=57 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.14889470302633342;  // std dev = 0,488, 23,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.10504688898675607;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.04840637027348723;  // std dev = 1,667, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.019412287155399954;  // std dev = 1,649, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else return 0.05818170858006258;  // std dev = 0,438, 208,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=54 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.11175794006178986;  // std dev = 0,488, 23,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.04990947761342622;  // std dev = 1,678, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.05293193967164998;  // std dev = 0,239, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | | else return 0.034499150536858085;  // std dev = 0,430, 220,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=54 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.2529211263711089;  // std dev = 0,416, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return -0.05422366299988584;  // std dev = 0,214, 62,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return -0.09109452945690835;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.011400928092782604;  // std dev = 1,643, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else return 0.049254704015632436;  // std dev = 0,442, 203,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return -0.003873332202824172;  // std dev = 0,493, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return -0.038888499204792065;  // std dev = 0,237, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.029963306593741808;  // std dev = 0,266, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else return 0.033139397565396696;  // std dev = 0,438, 209,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=54 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.08039919354665034;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.08155523998692427;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.034642198932283985;  // std dev = 1,667, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.07227905428727568;  // std dev = 4,56e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.006947277173289231;  // std dev = 1,651, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | else return 0.03758736405818576;  // std dev = 0,443, 201,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=54 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.09437574669260024;  // std dev = 0,458, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.0697206093672968;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.03461075162415276;  // std dev = 1,677, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.07565118374470761;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.015860966361882188;  // std dev = 1,654, 34,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | else return 0.041977614926179;  // std dev = 0,449, 193,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=54 */


Results
   AUC ROC   = 0.869855
   AUC PR    = 0.537856
   CLL	      = -0.261099
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total learning time: 9.274 seconds
Total inference time: 28.878 seconds
AUC ROC: 0.869855


Results scoring model
   AUC ROC   = 0.828172
   AUC PR    = 0.521145
   CLL	      = -0.245312
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total scoring time: 3.167 seconds
Refined model CLL: -0.245312


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.869855
   AUC PR    = 0.537856
   CLL	      = -0.261099
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total learning time: 16.323 seconds
Total inference time: 28.878 seconds
AUC ROC: 0.869855
Total revision time: 16.323
Best scored revision CLL: -0.245312


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 00:37:42
{'F1': 0.255361, 'AUC ROC': 0.869855, 'parameter': {'F1': 0.615572, 'AUC ROC': 0.72232, 'AUC PR': 0.478862, 'Precision': [1.0, 0.5], 'Inference time': 4.605, 'Learning time': 1.748, 'Recall': 0.44464, 'CLL': -0.246925}, 'AUC PR': 0.537856, 'Precision': [0.157189, 0.5], 'Inference time': 28.878, 'Learning time': 16.323, 'Recall': 0.680141, 'CLL': -0.261099}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.6706489350995116;  // std dev = 0,390, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07208362304002264;  // std dev = 0,255, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   else return 0.18601778755852608;  // std dev = 0,469, 305,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=100 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5435979084179139;  // std dev = 0,409, 33,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07080081402455506;  // std dev = 0,242, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.09286573786659741;  // std dev = 0,260, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else return 0.2575443164522876;  // std dev = 0,494, 229,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=97 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.34509283312004246;  // std dev = 0,457, 37,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.14792466113661867;  // std dev = 0,025, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0847343317347778;  // std dev = 0,249, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.046383944496722264;  // std dev = 0,270, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else return 0.17114914477719922;  // std dev = 0,484, 258,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=97 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.26257907186035917;  // std dev = 0,457, 37,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.05873545839322619;  // std dev = 0,240, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   else return 0.11059941141958791;  // std dev = 0,465, 301,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=100 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.30702053224954545;  // std dev = 0,390, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.14878363597065866;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07847522788093075;  // std dev = 0,263, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.04448679573023869;  // std dev = 0,255, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | else return 0.1530507004684104;  // std dev = 0,491, 238,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=97 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.20637752273096424;  // std dev = 0,409, 33,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.13090770033598986;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0757335887657378;  // std dev = 0,255, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return -0.04665635129387201;  // std dev = 0,234, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | else return 0.10493410500365806;  // std dev = 0,488, 249,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=97 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.181777684064506;  // std dev = 0,390, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.08161856679267641;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.04712765408646975;  // std dev = 0,233, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   else return 0.06452873985037842;  // std dev = 0,465, 289,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=100 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.11591190504744973;  // std dev = 0,409, 33,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.12353894759909313;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08606787265392472;  // std dev = 0,226, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   else return 0.05790203721431554;  // std dev = 0,457, 295,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=100 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.1417194372062652;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.10556900859679609;  // std dev = 0,039, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.057590116357958174;  // std dev = 0,263, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.07985839534852841;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.015460493998385958;  // std dev = 0,287, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | else return 0.042885962267421064;  // std dev = 0,484, 258,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=97 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.08643954690017733;  // std dev = 0,390, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else return -0.0666761863892437;  // std dev = 0,226, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.04650842532890783;  // std dev = 0,229, 54,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=3 */
%   | else return 0.034755037537156135;  // std dev = 0,485, 257,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=97 */


Results
   AUC ROC   = 0.778999
   AUC PR    = 0.071292
   CLL	      = -0.361328
   Precision = 0.096254 at threshold = 0.5
   Recall    = 0.388401
   F1        = 0.154276


Total learning time: 10.221 seconds
Total inference time: 24.652 seconds
AUC ROC: 0.778999


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 00:38:17
{'F1': 0.154276, 'AUC ROC': 0.778999, 'Learning time': 10.221, 'AUC PR': 0.071292, 'Precision': [0.096254, 0.5], 'Inference time': 24.652, 'CLL': -0.361328, 'Recall': 0.388401}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.8211118980624748;  // std dev = 0,189, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08302753548872303;  // std dev = 0,235, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.08730561035503319;  // std dev = 0,227, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   | else return 0.23411792734757145;  // std dev = 0,484, 258,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=97 */


Results
   AUC ROC   = 0.77736
   AUC PR    = 0.071212
   CLL	      = -0.210068
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.747 seconds
Total inference time: 5.149 seconds
AUC ROC: 0.77736


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 00:38:25
{'F1': nan, 'AUC ROC': 0.77736, 'Learning time': 2.747, 'AUC PR': 0.071212, 'Precision': [nan, 0.5], 'Inference time': 5.149, 'CLL': -0.210068, 'Recall': 0.0}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 154
Target train neg examples: 5694

Target test facts examples: 33914
Target test pos	 examples: 544
Target test neg examples: 22302

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.06680033459060676;  // std dev = 8,055, 393,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=82 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.047411596570996806;  // std dev = 8,112, 415,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=82 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,15e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.049699597279392695;  // std dev = 8,069, 398,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=82 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.03749098969379305;  // std dev = 8,097, 409,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=82 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.041540942667903265;  // std dev = 8,050, 391,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=82 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.037270785891976896;  // std dev = 8,042, 388,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=82 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.02705604789926274;  // std dev = 8,066, 397,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=82 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.02148763296789155;  // std dev = 8,074, 400,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=82 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,83e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.04165835778595482;  // std dev = 7,954, 359,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=82 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 4,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.018722750310778906;  // std dev = 8,039, 387,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=82 */


Results
   AUC ROC   = 0.716912
   AUC PR    = 0.468238
   CLL	      = -0.236355
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433824
   F1        = 0.605128


Total learning time: 1.66 seconds
Total inference time: 3.919 seconds
AUC ROC: 0.716912


Results scoring model
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.236937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total scoring time: 2.338 seconds
Parameter learned model CLL: -0.236937


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.055, 311, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.69e-07, 0, 72], 'false': [8.112, 333, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.15e-07, 0, 72], 'false': [8.069, 316, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.097, 327, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.05, 309, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.042, 306, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.066, 315, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 72], 'false': [8.074, 318, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.83e-08, 0, 72], 'false': [7.954, 277, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.94e-08, 0, 72], 'false': [8.039, 305, 82]}]]
[{'': [-1.282924384011292e-15, 0.1651159929815027]}, {'': [3.9474596431116675e-16, 0.15854841050951007]}, {'': [6.41462192005646e-16, 0.163581727734151]}, {'': [-9.868649107779169e-17, 0.16029315941439795]}, {'': [-3.4540271877227093e-16, 0.1657367494979762]}, {'': [-1.2335811384723961e-17, 0.1666755234350069]}, {'': [-8.635067969306773e-17, 0.16388658008108561]}, {'': [6.1679056923619804e-18, 0.16297499999999807]}, {'': [6.47630097698008e-17, 0.17624009745424313]}, {'': [3.39234813079909e-17, 0.16699049870133376]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.442764319714896;  // std dev = 0,493, 65,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.10237738068996138;  // std dev = 1,698, 76,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=3 */
%   | | | else return 0.06840534535592169;  // std dev = 5,690, 195,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=41 */
%   | else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3460346936856745;  // std dev = 0,497, 69,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10690545870146063;  // std dev = 1,694, 69,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=3 */
%   | | | else return 0.04675467975887555;  // std dev = 5,724, 216,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=41 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,15e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.33642972163927864;  // std dev = 0,489, 63,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0986287122569648;  // std dev = 1,700, 82,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=3 */
%   | | | else return 0.06484788323347146;  // std dev = 5,638, 191,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=41 */
%   | else return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2054278434606244;  // std dev = 0,498, 70,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0875051584713196;  // std dev = 1,700, 82,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=3 */
%   | | | else return 0.042578790084804335;  // std dev = 5,687, 204,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=41 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( haswordtitle(A, D), haswordauthor(F, D) )
%   | | then return 0.18239252040169915;  // std dev = 0,495, 67,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=38 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return -0.10191446855270074;  // std dev = 1,690, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | | else return 0.024041103814490972;  // std dev = 5,722, 232,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=41 */
%   | else return -0.09861289788680203;  // std dev = 0,110, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.16499949971185865;  // std dev = 0,491, 64,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=38 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09376506578041441;  // std dev = 1,693, 68,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=3 */
%   | | | else return 0.025666371934498965;  // std dev = 5,708, 224,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
%   | else return -0.08592003832871303;  // std dev = 0,021, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.050998066686079785;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.0843741686544597;  // std dev = 1,701, 93,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=3 */
%   | | | else return -0.08761679770273996;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.1271104125176508;  // std dev = 9,13e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0757627955622279;  // std dev = 1,687, 67,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=3 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.11868031735996026;  // std dev = 5,168, 128,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=38 */
%   | | | else return -0.08015936672356816;  // std dev = 0,017, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1114808956331976;  // std dev = 0,491, 64,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=38 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07562962559972869;  // std dev = 1,694, 70,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=3 */
%   | | | else return 0.0293099120043736;  // std dev = 5,600, 210,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=41 */
%   | else return -0.07411519442665093;  // std dev = 0,019, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,83e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.6558818485417771;  // std dev = 1,433, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | else return -0.1853237506143783;  // std dev = 1,933, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return -0.2252081368262035;  // std dev = 0,477, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10992731564741715;  // std dev = 1,701, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | else return -0.07330750588512631;  // std dev = 0,116, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 4,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then return 0.010514878125113007;  // std dev = 0,313, 323,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=79 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return -0.14271917966722322;  // std dev = 0,475, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06011275515472092;  // std dev = 1,657, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | else return -0.07025171937896407;  // std dev = 0,148, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */


Results
   AUC ROC   = 0.950129
   AUC PR    = 0.692204
   CLL	      = -0.180973
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.619485
   F1        = 0.76504


Total learning time: 43.076 seconds
Total inference time: 120.178 seconds
AUC ROC: 0.950129


Results scoring model
   AUC ROC   = 0.970038
   AUC PR    = 0.768422
   CLL	      = -0.184157
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.833333


Total scoring time: 8.164 seconds
Refined model CLL: -0.184157


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.950129
   AUC PR    = 0.692204
   CLL	      = -0.180973
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.619485
   F1        = 0.76504


Total learning time: 55.238 seconds
Total inference time: 120.178 seconds
AUC ROC: 0.950129
Total revision time: 55.238
Best scored revision CLL: -0.184157


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 00:41:26
{'F1': 0.76504, 'AUC ROC': 0.950129, 'parameter': {'F1': 0.605128, 'AUC ROC': 0.716912, 'AUC PR': 0.468238, 'Precision': [1.0, 0.5], 'Inference time': 3.919, 'Learning time': 1.66, 'Recall': 0.433824, 'CLL': -0.236355}, 'AUC PR': 0.692204, 'Precision': [1.0, 0.5], 'Inference time': 120.178, 'Learning time': 55.238, 'Recall': 0.619485, 'CLL': -0.180973}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.49859837330176027;  // std dev = 4,527, 89,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=57 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1269256917661593;  // std dev = 0,993, 67,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.09497606490048771;  // std dev = 1,691, 64,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=3 */
%   | | else if ( haswordvenue(K, C) )
%   | | | then return 0.2975428744934499;  // std dev = 6,984, 198,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=87 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.435312267241264;  // std dev = 0,474, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.22373365448410584;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.11504305740502292;  // std dev = 0,994, 83,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.08632960514105571;  // std dev = 1,693, 68,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=3 */
%   | | | else return 0.28133970350464377;  // std dev = 6,942, 194,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=90 */
%   else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.12969074490151797;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5182170383107915;  // std dev = 0,389, 70,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=57 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.0854850768935748;  // std dev = 0,170, 89,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.07603763320053539;  // std dev = 1,692, 67,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=3 */
%   | | | else return 0.29483055655034324;  // std dev = 6,547, 172,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=90 */
%   else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.23682646473858904;  // std dev = 0,476, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.07680873760770583;  // std dev = 0,167, 92,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07086353875929806;  // std dev = 1,695, 71,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=3 */
%   | | | else return 0.2099000581637327;  // std dev = 6,743, 182,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=90 */
%   else return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.19604059605045762;  // std dev = 0,468, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.07231557003198583;  // std dev = 0,166, 95,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06321571597359979;  // std dev = 1,694, 70,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=3 */
%   | | | else return 0.15251137741531587;  // std dev = 6,825, 187,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=90 */
%   else return -0.09269127618926101;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.14746640385329374;  // std dev = 0,468, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.09636368465427857;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.053648394973347766;  // std dev = 1,691, 64,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.05835992836050056;  // std dev = 1,615, 77,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=3 */
%   | | | else return 0.10068058155098544;  // std dev = 6,938, 194,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=90 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10352430005729091;  // std dev = 0,470, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.23356220900114746;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.07187700262593151;  // std dev = 0,992, 61,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04780011381751145;  // std dev = 1,690, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | | else return 0.06773095174370737;  // std dev = 6,998, 198,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=90 */
%   else return -0.07877675473109179;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.16583351883665315;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.12048869292744312;  // std dev = 0,457, 81,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=57 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return -0.0826544878260412;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.05511549970265272;  // std dev = 1,579, 96,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.046616808052193585;  // std dev = 1,692, 67,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=3 */
%   | | | else return 0.04477417302713249;  // std dev = 7,041, 201,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=90 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.13278065161493285;  // std dev = 0,435, 79,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.3073123272774312;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06448594902518548;  // std dev = 0,993, 71,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03570338649889916;  // std dev = 1,686, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | | | else return 0.031744134802374556;  // std dev = 7,055, 202,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=90 */
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.24708871109593833;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.060509562485796975;  // std dev = 0,457, 81,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=57 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, C) )
%   | | | then return -0.03902860964981353;  // std dev = 1,510, 76,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=3 */
%   | | | else return -0.07402690894309968;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04007711555330755;  // std dev = 1,692, 68,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=3 */
%   | | | else return 0.03073211366475086;  // std dev = 7,012, 199,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=90 */
%   else return -0.06419184008202625;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */


Results
   AUC ROC   = 0.784057
   AUC PR    = 0.076404
   CLL	      = -0.349959
   Precision = 0.11058 at threshold = 0.5
   Recall    = 0.340074
   F1        = 0.166892


Total learning time: 24.045 seconds
Total inference time: 76.40299999999999 seconds
AUC ROC: 0.784057


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 00:43:06
{'F1': 0.166892, 'AUC ROC': 0.784057, 'Learning time': 24.045, 'AUC PR': 0.076404, 'Precision': [0.11058, 0.5], 'Inference time': 76.40299999999999, 'CLL': -0.349959, 'Recall': 0.340074}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5325675397506758;  // std dev = 0,469, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.1007551744895288;  // std dev = 0,199, 73,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09185106490048772;  // std dev = 1,688, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   | | | else return 0.3553865041602829;  // std dev = 6,727, 181,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=90 */
%   else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */


Results
   AUC ROC   = 0.783521
   AUC PR    = 0.073777
   CLL	      = -0.20976
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.433 seconds
Total inference time: 3.374 seconds
AUC ROC: 0.783521


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 00:43:13
{'F1': nan, 'AUC ROC': 0.783521, 'Learning time': 3.433, 'AUC PR': 0.073777, 'Precision': [nan, 0.5], 'Inference time': 3.374, 'CLL': -0.20976, 'Recall': 0.0}


