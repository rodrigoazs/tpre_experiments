Starting experiment #2 for 10_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048885;  // std dev = 0,000, 638,000 (wgt'ed) examples reached here.  /* #neg=638 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.8581489350995096;  // std dev = 1,07e-06, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | | else return 0.8396304165809906;  // std dev = 0,135, 216,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=212 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7215392376471236;  // std dev = 0,036, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1267112457726745;  // std dev = 0,369, 717,000 (wgt'ed) examples reached here.  /* #neg=717 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5573920031918838;  // std dev = 0,044, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360624;  // std dev = 5,87e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.11350538924220283;  // std dev = 0,369, 745,000 (wgt'ed) examples reached here.  /* #neg=745 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4190204066657301;  // std dev = 0,044, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.10245875202362913;  // std dev = 0,317, 718,000 (wgt'ed) examples reached here.  /* #neg=718 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32173536216098214;  // std dev = 0,039, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09343717383442204;  // std dev = 0,296, 710,000 (wgt'ed) examples reached here.  /* #neg=710 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2558715759822591;  // std dev = 0,034, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.08588506369487649;  // std dev = 0,277, 670,000 (wgt'ed) examples reached here.  /* #neg=670 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2102522339561834;  // std dev = 0,030, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.08025458067061685;  // std dev = 0,366, 702,000 (wgt'ed) examples reached here.  /* #neg=702 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1774595234601999;  // std dev = 0,026, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07364697019091974;  // std dev = 0,245, 732,000 (wgt'ed) examples reached here.  /* #neg=732 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15301946169282135;  // std dev = 0,023, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1,97e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06883658740794224;  // std dev = 0,232, 685,000 (wgt'ed) examples reached here.  /* #neg=685 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13422233745063344;  // std dev = 0,021, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06478106645981462;  // std dev = 0,253, 712,000 (wgt'ed) examples reached here.  /* #neg=712 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 162
Target train neg examples: 9107

Target test facts examples: 35095
Target test pos	 examples: 536
Target test neg examples: 18889

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(B).;false;true
0;false,true;female(A).;false;false
0;false;movie(C, A), movie(C, B).;true;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.09935496525026499;  // std dev = 8,535, 398,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=96 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.08091307903335236;  // std dev = 8,568, 408,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=96 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.0771824023336787;  // std dev = 8,528, 396,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=96 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.041522124479557505;  // std dev = 8,666, 441,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=96 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03345800065170387;  // std dev = 8,677, 445,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=96 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.061392333175849474;  // std dev = 8,493, 386,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=96 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.02851438355590977;  // std dev = 8,624, 426,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=96 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.014345696219122078;  // std dev = 8,677, 445,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=96 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.01903608978237201;  // std dev = 8,638, 431,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=96 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.00325870212616229;  // std dev = 8,708, 457,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=96 */


Results
   AUC ROC   = 0.725746
   AUC PR    = 0.48982
   CLL	      = -0.251346
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451493
   F1        = 0.622108


Total learning time: 1.859 seconds
Total inference time: 4.199 seconds
AUC ROC: 0.725746


Results scoring model
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.245502
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total scoring time: 2.554 seconds
Parameter learned model CLL: -0.245502


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.535, 302, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.19e-07, 0, 66], 'false': [8.568, 312, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 66], 'false': [8.528, 300, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.666, 345, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.677, 349, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.493, 290, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.624, 330, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.677, 349, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 66], 'false': [8.638, 335, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.71e-08, 0, 66], 'false': [8.708, 361, 96]}]]
[{'': [-9.689219124001365e-16, 0.1830256811696685]}, {'': [2.153159805333637e-16, 0.17993079584775085]}, {'': [1.2380668880668413e-15, 0.1836547291092747]}, {'': [-1.0765799026668185e-16, 0.1702994122819165]}, {'': [-2.8260222445003984e-16, 0.16919075874258233]}, {'': [-4.0371746350005693e-17, 0.18685065370882215]}, {'': [-6.728624391667616e-17, 0.17456853798849614]}, {'': [-6.7286243916676156e-18, 0.16919075874258666]}, {'': [4.0371746350005693e-17, 0.1731256830012782]}, {'': [3.364312195833808e-17, 0.16593807008891281]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4642095411601182;  // std dev = 0,489, 66,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.06076998381940661;  // std dev = 2,348, 74,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.07443533456340903;  // std dev = 2,365, 89,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.09127776945533923;  // std dev = 5,398, 163,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=38 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3046173443901829;  // std dev = 0,500, 78,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=40 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.26177691980297696;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.046378035193721606;  // std dev = 2,339, 68,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.05020922167020222;  // std dev = 0,278, 105,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=9 */
%   | | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | | then return 0.09183176853287289;  // std dev = 5,356, 155,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=38 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.36214326531991503;  // std dev = 0,484, 64,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.09436068853448107;  // std dev = 1,424, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.054441738096193584;  // std dev = 2,368, 75,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.0900670376474002;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.06418663782699785;  // std dev = 2,371, 95,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07795558353890761;  // std dev = 5,361, 156,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=38 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2495211862856677;  // std dev = 0,492, 68,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=40 */
%   | | else return -0.025504065210106692;  // std dev = 0,316, 78,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=9 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.16092581804800254;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.055864442328202056;  // std dev = 2,369, 93,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=6 */
%   | | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | | then return 0.06381616365992973;  // std dev = 5,372, 158,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=38 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.22836567122279938;  // std dev = 0,484, 64,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.034548190151389185;  // std dev = 2,827, 97,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=9 */
%   | | | else return 0.06111647902691524;  // std dev = 5,958, 201,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=47 */
%   | else return -0.10956011438759236;  // std dev = 0,120, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordvenue(E, D) )
%   | | then if ( title(F, B), venue(F, E) )
%   | | | then return 0.061353492902729456;  // std dev = 7,321, 330,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=87 */
%   | | | else return -0.10855388335912418;  // std dev = 2,332, 45,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | | then return -0.332548639916912;  // std dev = 0,370, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07623327163537189;  // std dev = 1,103, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.09841018215027166;  // std dev = 0,062, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return 0.06372655124292274;  // std dev = 4,809, 130,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=47 */
%   | | | else return 0.0013810285983306765;  // std dev = 6,103, 275,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=47 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.23469749973341467;  // std dev = 0,275, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09751886209304358;  // std dev = 0,082, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | then return -0.14695180222682255;  // std dev = 0,399, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return -0.09339900378827669;  // std dev = 0,084, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.1765472419717877;  // std dev = 0,472, 62,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=40 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.01891457750269476;  // std dev = 1,460, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.040544390144470276;  // std dev = 2,326, 64,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.0419412864387208;  // std dev = 0,260, 117,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=9 */
%   | | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | | then return 0.004812419393935055;  // std dev = 5,477, 182,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=38 */
%   | | | else return -0.07011887627686983;  // std dev = 0,000401, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.6790169167305735;  // std dev = 1,496, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | else return -0.15086047437658617;  // std dev = 2,767, 255,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=8 */
%   | | else if ( title(H, A), venue(H, E) )
%   | | | then return -0.06680767045772715;  // std dev = 2,150, 44,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | | else return -0.23526833376931255;  // std dev = 0,623, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | | then if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return -0.4408333041482246;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08385633597887614;  // std dev = 0,081, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.33921825162071045;  // std dev = 0,539, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, D), haswordtitle(B, E) )
%   | | | then return 0.0444340881081196;  // std dev = 3,168, 60,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=38 */
%   | | | else return -0.03176141706860361;  // std dev = 2,825, 107,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=11 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.004223354201151016;  // std dev = 2,545, 65,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | | | else return 0.03327363281036077;  // std dev = 4,513, 150,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=38 */
%   | else return -0.07211644882204298;  // std dev = 0,081, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.950483
   AUC PR    = 0.72494
   CLL	      = -0.198431
   Precision = 0.20908 at threshold = 0.5
   Recall    = 0.652985
   F1        = 0.316742


Total learning time: 32.089 seconds
Total inference time: 395.115 seconds
AUC ROC: 0.950483


Results scoring model
   AUC ROC   = 0.959383
   AUC PR    = 0.676032
   CLL	      = -0.195897
   Precision = 0.200397 at threshold = 0.5
   Recall    = 0.623457
   F1        = 0.303303


Total scoring time: 11.143 seconds
Refined model CLL: -0.195897


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.950483
   AUC PR    = 0.72494
   CLL	      = -0.198431
   Precision = 0.20908 at threshold = 0.5
   Recall    = 0.652985
   F1        = 0.316742


Total learning time: 47.644999999999996 seconds
Total inference time: 395.115 seconds
AUC ROC: 0.950483
Total revision time: 47.644999999999996
Best scored revision CLL: -0.195897


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:50:46
{'F1': 0.316742, 'AUC ROC': 0.950483, 'parameter': {'F1': 0.622108, 'AUC ROC': 0.725746, 'AUC PR': 0.48982, 'Precision': [1.0, 0.5], 'Inference time': 4.199, 'Learning time': 1.859, 'Recall': 0.451493, 'CLL': -0.251346}, 'AUC PR': 0.72494, 'Precision': [0.20908, 0.5], 'Inference time': 395.115, 'Learning time': 47.644999999999996, 'Recall': 0.652985, 'CLL': -0.198431}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5410757643678057;  // std dev = 0,465, 82,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.08244512430642827;  // std dev = 2,376, 101,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=6 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.007522706691532442;  // std dev = 2,791, 67,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=9 */
%   | | | else return 0.27360787229757855;  // std dev = 7,090, 207,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=86 */
%   else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.20874113578563502;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.48770162484262664;  // std dev = 0,454, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.23297944067371518;  // std dev = 1,333, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.07479601734546976;  // std dev = 2,382, 101,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=6 */
%   | | else return 0.20064634481526142;  // std dev = 0,480, 256,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=95 */
%   else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.34055930466365153;  // std dev = 0,474, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.04690109942905989;  // std dev = 1,488, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.06692467410554687;  // std dev = 2,388, 97,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.026397741417268323;  // std dev = 2,781, 64,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=9 */
%   | | | else return 0.18644943075149795;  // std dev = 7,205, 217,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=86 */
%   else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.29446641354353;  // std dev = 0,462, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.035542896275283536;  // std dev = 0,283, 99,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=9 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.015841351813535572;  // std dev = 2,770, 61,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   | | | else return 0.22749578017692398;  // std dev = 6,752, 183,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=86 */
%   else return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D), haswordvenue(F, C) )
%   | | then if ( title(G, A), venue(G, F) )
%   | | | then return 0.2405973496476163;  // std dev = 3,646, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | | | else return 0.29326512018626905;  // std dev = 1,522, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( author(H, E), title(H, A) )
%   | | | then return 0.1881559639501513;  // std dev = 1,381, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.0604712557049276;  // std dev = 2,791, 69,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=10 */
%   | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), title(K, B) )
%   | | | then return 0.006055131816088244;  // std dev = 1,519, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.045986585721604425;  // std dev = 2,372, 85,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=6 */
%   | | else return 0.11523763299137464;  // std dev = 0,490, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
%   else return -0.092691276189261;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1419225494053453;  // std dev = 0,472, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.34021796802176874;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.03484103866534494;  // std dev = 2,307, 49,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.025331653720079953;  // std dev = 2,802, 98,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=9 */
%   | | | else return 0.07488900500631175;  // std dev = 7,269, 223,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=86 */
%   else return -0.0851847513883968;  // std dev = 2,04e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10905024641629418;  // std dev = 0,469, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.0682635212669196;  // std dev = 1,394, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.06129690014007403;  // std dev = 2,357, 62,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=6 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.020414949292194937;  // std dev = 2,802, 95,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=9 */
%   | | | else return 0.03738230184006851;  // std dev = 7,393, 236,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
%   else return -0.07877675473109179;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.07602564013998472;  // std dev = 1,088, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.18677866162896403;  // std dev = 0,416, 73,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=56 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.11384841748013635;  // std dev = 1,419, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.044196274314950185;  // std dev = 2,390, 90,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=6 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.005754358579967938;  // std dev = 2,706, 58,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=9 */
%   | | | else return 0.08015480834502114;  // std dev = 7,090, 207,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=86 */
%   else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( title(E, A), venue(E, D) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.5774109785252444;  // std dev = 1,797, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.24293634780281978;  // std dev = 3,600, 282,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=8 */
%   | | else if ( title(G, B), venue(G, D) )
%   | | | then return 0.012712402729088757;  // std dev = 1,679, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.37094805530739045;  // std dev = 0,836, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then if ( haswordauthor(I, H) )
%   | | | then return -0.5599805964864845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.20950817056364426;  // std dev = 0,265, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( haswordtitle(B, J), haswordvenue(K, J) )
%   | then return -0.20251482429887244;  // std dev = 0,481, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.5088803273506425;  // std dev = 0,239, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, A) )
%   | then if ( author(F, D), title(F, B) )
%   | | then return 0.06651100155900617;  // std dev = 0,650, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.12644995746223758;  // std dev = 0,432, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( haswordtitle(A, C) )
%   | | then return -0.019377913687019133;  // std dev = 0,392, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return -0.15209942455768358;  // std dev = 0,048, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.02698216229883356;  // std dev = 2,068, 64,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=6 */
%   else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | then if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), title(K, B) )
%   | | | then return 0.15419881431558236;  // std dev = 1,403, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.01804815275337738;  // std dev = 2,202, 81,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=6 */
%   | | else return 0.028230412934822292;  // std dev = 0,400, 211,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=86 */
%   | else return -0.06219200826110372;  // std dev = 0,015, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.930828
   AUC PR    = 0.481494
   CLL	      = -0.264519
   Precision = 0.272519 at threshold = 0.5
   Recall    = 0.886194
   F1        = 0.416849


Total learning time: 46.541 seconds
Total inference time: 443.043 seconds
AUC ROC: 0.930828


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:58:56
{'F1': 0.416849, 'AUC ROC': 0.930828, 'Learning time': 46.541, 'AUC PR': 0.481494, 'Precision': [0.272519, 0.5], 'Inference time': 443.043, 'CLL': -0.264519, 'Recall': 0.886194}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5328477302802359;  // std dev = 0,468, 83,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.07243464938522651;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.021851064900487705;  // std dev = 2,298, 50,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.048101064900487676;  // std dev = 2,856, 96,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=9 */
%   | | | else return 0.25814893509951103;  // std dev = 7,183, 215,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=86 */
%   else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */


Results
   AUC ROC   = 0.796057
   AUC PR    = 0.086835
   CLL	      = -0.212787
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.094 seconds
Total inference time: 8.118 seconds
AUC ROC: 0.796057


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 00:59:09
{'F1': nan, 'AUC ROC': 0.796057, 'Learning time': 4.094, 'AUC PR': 0.086835, 'Precision': [nan, 0.5], 'Inference time': 8.118, 'CLL': -0.212787, 'Recall': 0.0}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 140
Target train neg examples: 4623

Target test facts examples: 33542
Target test pos	 examples: 558
Target test neg examples: 23373

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(B).;false;true
0;false,true;female(A).;false;false
0;false;movie(C, A), movie(C, B).;true;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.05186621258642411;  // std dev = 7,724, 382,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.06134899142827753;  // std dev = 7,648, 353,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.047657610461296955;  // std dev = 7,676, 363,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03422464905566519;  // std dev = 7,709, 376,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.0365592166592959;  // std dev = 7,676, 363,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.040190985302683294;  // std dev = 7,633, 348,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03316438927373759;  // std dev = 7,639, 350,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.015217176747705537;  // std dev = 7,702, 373,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03091222315016688;  // std dev = 7,615, 342,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.012562426866887319;  // std dev = 7,681, 365,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=74 */


Results
   AUC ROC   = 0.716846
   AUC PR    = 0.467514
   CLL	      = -0.231433
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.605


Total learning time: 1.884 seconds
Total inference time: 4.112 seconds
AUC ROC: 0.716846


Results scoring model
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.234459
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total scoring time: 2.105 seconds
Parameter learned model CLL: -0.234459


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.724, 308, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.19e-07, 0, 66], 'false': [7.648, 279, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 66], 'false': [7.676, 289, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.709, 302, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.676, 289, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.633, 274, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.639, 276, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.702, 299, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 66], 'false': [7.615, 268, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.71e-08, 0, 66], 'false': [7.681, 291, 74]}]]
[{'': [-9.689219124001365e-16, 0.1561908938899709]}, {'': [2.153159805333637e-16, 0.16568626664205902]}, {'': [1.2380668880668413e-15, 0.162299175071524]}, {'': [-1.0765799026668185e-16, 0.15807492077863214]}, {'': [-2.8260222445003984e-16, 0.16229917507152586]}, {'': [-4.0371746350005693e-17, 0.16742634429911574]}, {'': [-6.728624391667616e-17, 0.16672653061224393]}, {'': [-6.7286243916676156e-18, 0.15903226502023265]}, {'': [4.0371746350005693e-17, 0.16955644471803027]}, {'': [3.364312195833808e-17, 0.1616363295177361]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.45814893509951127;  // std dev = 0,490, 50,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=30 */
%   | | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.14185106490048763;  // std dev = 8,56e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return 0.18407486102543802;  // std dev = 0,469, 135,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.0594608502437156;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.3837032744861393;  // std dev = 3,261, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else return 0.10417104004573456;  // std dev = 0,444, 163,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.7528035889200129;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23084194183058004;  // std dev = 3,584, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.11231637819360621;  // std dev = 7,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return 0.09605057848909673;  // std dev = 0,447, 159,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=44 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.11873501813319201;  // std dev = 1,467, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.24105312708316984;  // std dev = 3,333, 45,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else return 0.09799731355230618;  // std dev = 0,455, 150,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.060126844370978955;  // std dev = 1,507, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.15021080985990232;  // std dev = 3,467, 48,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | else return -0.09269127618926085;  // std dev = 7,30e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.09016968899415041;  // std dev = 0,459, 146,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.047393275496931266;  // std dev = 1,506, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.17582638826727878;  // std dev = 3,232, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else return -0.08518475138839682;  // std dev = 5,87e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.08518475138839679;  // std dev = 2,24e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.024815687892043595;  // std dev = 0,434, 175,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=44 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.10841421565554407;  // std dev = 1,622, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.06985118070867267;  // std dev = 3,502, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return -0.07877675473109157;  // std dev = 6,50e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.08329416464553385;  // std dev = 0,464, 140,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.029662056820808132;  // std dev = 1,535, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.01599325228847212;  // std dev = 3,609, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return -0.07324622576333707;  // std dev = 4,47e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0.03775332101566434;  // std dev = 0,451, 155,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=44 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.03066039959802395;  // std dev = 1,600, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.06267873594229806;  // std dev = 3,432, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return -0.06842697784420267;  // std dev = 4,77e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0.04818038059815903;  // std dev = 0,459, 146,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.2913501413200668;  // std dev = 0,994, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.037111316284929294;  // std dev = 3,518, 51,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0.05643309880238656;  // std dev = 0,466, 138,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */


Results
   AUC ROC   = 0.847445
   AUC PR    = 0.524883
   CLL	      = -0.232349
   Precision = 0.181178 at threshold = 0.5
   Recall    = 0.645161
   F1        = 0.282908


Total learning time: 11.093 seconds
Total inference time: 11.269 seconds
AUC ROC: 0.847445


Results scoring model
   AUC ROC   = 0.900185
   AUC PR    = 0.572973
   CLL	      = -0.230277
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total scoring time: 3.572 seconds
Refined model CLL: -0.230277


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.847445
   AUC PR    = 0.524883
   CLL	      = -0.232349
   Precision = 0.181178 at threshold = 0.5
   Recall    = 0.645161
   F1        = 0.282908


Total learning time: 18.654 seconds
Total inference time: 11.269 seconds
AUC ROC: 0.847445
Total revision time: 18.654
Best scored revision CLL: -0.230277


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:59:44
{'F1': 0.282908, 'AUC ROC': 0.847445, 'parameter': {'F1': 0.605, 'AUC ROC': 0.716846, 'AUC PR': 0.467514, 'Precision': [1.0, 0.5], 'Inference time': 4.112, 'Learning time': 1.884, 'Recall': 0.433692, 'CLL': -0.231433}, 'AUC PR': 0.524883, 'Precision': [0.181178, 0.5], 'Inference time': 11.269, 'Learning time': 18.654, 'Recall': 0.645161, 'CLL': -0.232349}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.6419327188832966;  // std dev = 0,412, 74,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.14185106490048763;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else return 0.27803843786194415;  // std dev = 0,494, 181,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.26098135239047604;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4882540796632025;  // std dev = 3,908, 77,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=56 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0.20661395102292804;  // std dev = 0,487, 197,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=76 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.11035029215887046;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4392391083993243;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.1123163781936062;  // std dev = 7,88e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0.21778515994325412;  // std dev = 0,495, 177,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=76 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.08712997904305851;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.31414624847513517;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | else return -0.10159632948783626;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.10159632948783627;  // std dev = 4,21e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0.16061391462109836;  // std dev = 0,492, 185,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=76 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16810033556684134;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return 0.025423901910570635;  // std dev = 0,494, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.23587586969433144;  // std dev = 3,691, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.09269127618926097;  // std dev = 4,83e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0.14544915626020172;  // std dev = 0,495, 178,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.13461683451955084;  // std dev = 0,430, 93,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=64 */
%   | else return -0.08518475138839682;  // std dev = 5,37e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0.07807557476316401;  // std dev = 0,455, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.24925592452224388;  // std dev = 0,065, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10705639502055987;  // std dev = 9,13e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.10337810277956151;  // std dev = 0,456, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   | else return -0.0787767547310916;  // std dev = 5,77e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then return -0.09146939721662052;  // std dev = 7,45e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0.06493963723270325;  // std dev = 0,489, 193,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=76 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.07647701006904953;  // std dev = 0,413, 98,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=64 */
%   | else return -0.07324622576333707;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.08414677591587207;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.06747960302114886;  // std dev = 0,492, 185,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=76 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.07819370618623607;  // std dev = 0,408, 93,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=64 */
%   | else return -0.06842697784420267;  // std dev = 3,94e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.07788473277522413;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0.058880941602040424;  // std dev = 0,493, 182,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=76 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.28929959429188523;  // std dev = 0,425, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.46534573263738355;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return -0.01928432251685719;  // std dev = 0,387, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.14072616570035168;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | else return -0.07247184431195375;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return 0.036246356858607214;  // std dev = 0,492, 186,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */


Results
   AUC ROC   = 0.762241
   AUC PR    = 0.0777
   CLL	      = -0.334771
   Precision = 0.104703 at threshold = 0.5
   Recall    = 0.335125
   F1        = 0.159556


Total learning time: 23.766 seconds
Total inference time: 15.316 seconds
AUC ROC: 0.762241


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 01:00:23
{'F1': 0.159556, 'AUC ROC': 0.762241, 'Learning time': 23.766, 'AUC PR': 0.0777, 'Precision': [0.104703, 0.5], 'Inference time': 15.316, 'CLL': -0.334771, 'Recall': 0.335125}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.5486251255757034;  // std dev = 0,462, 84,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=58 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.14185106490048766;  // std dev = 7,60e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0.2645660473989785;  // std dev = 0,491, 187,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=76 */


Results
   AUC ROC   = 0.75574
   AUC PR    = 0.074496
   CLL	      = -0.204034
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.125 seconds
Total inference time: 4.231 seconds
AUC ROC: 0.75574


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 01:00:32
{'F1': nan, 'AUC ROC': 0.75574, 'Learning time': 4.125, 'AUC PR': 0.074496, 'Precision': [nan, 0.5], 'Inference time': 4.231, 'CLL': -0.204034, 'Recall': 0.0}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 113
Target train neg examples: 3827

Target test facts examples: 33252
Target test pos	 examples: 585
Target test neg examples: 24169

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(B).;false;true
0;false,true;female(A).;false;false
0;false;movie(C, A), movie(C, B).;true;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 2,36e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.07509808764188587;  // std dev = 7,079, 295,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=64 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.07733058527179033;  // std dev = 7,026, 280,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=64 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.06551289273052181;  // std dev = 7,034, 282,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=64 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.03462405008684146;  // std dev = 7,132, 312,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=64 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.049894980944977185;  // std dev = 7,041, 284,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=64 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.014130277039959805;  // std dev = 7,169, 325,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=64 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.01890861301588144;  // std dev = 7,138, 314,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=64 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.03997805877135601;  // std dev = 7,030, 281,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=64 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.0208115163996857;  // std dev = 7,089, 298,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=64 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.009891839205657912;  // std dev = 7,124, 309,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=64 */


Results
   AUC ROC   = 0.721368
   AUC PR    = 0.476703
   CLL	      = -0.239008
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.442735
   F1        = 0.613744


Total learning time: 1.699 seconds
Total inference time: 4.323 seconds
AUC ROC: 0.721368


Results scoring model
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.243106
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total scoring time: 2.11 seconds
Parameter learned model CLL: -0.243106


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.36e-08, 0, 49], 'false': [7.079, 231, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.026, 216, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.034, 218, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.132, 248, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 49], 'false': [7.041, 220, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.169, 261, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 49], 'false': [7.138, 250, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.03, 217, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.089, 234, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 49], 'false': [7.124, 245, 64]}]]
[{'': [5.800348863347756e-16, 0.16988221775351986]}, {'': [-5.800348863347756e-16, 0.1763265306122447]}, {'': [0.0, 0.1754438911523549]}, {'': [-3.625218039592348e-16, 0.16305062458908431]}, {'': [1.8126090197961738e-17, 0.1745685379884941]}, {'': [-2.718913529694261e-17, 0.15814437869822373]}, {'': [3.6252180395923476e-17, 0.16227838857560026]}, {'': [-6.797283824235652e-17, 0.1758842973113325]}, {'': [-3.6252180395923476e-17, 0.16864105220485429]}, {'': [1.8126090197961738e-17, 0.16422115394685818]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.42336632640385913;  // std dev = 0,496, 46,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08214957236317427;  // std dev = 1,939, 67,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=4 */
%   | | | else return 0.10632411758126283;  // std dev = 5,056, 137,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.40310097207089846;  // std dev = 0,489, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07060370274079965;  // std dev = 1,937, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
%   | | | else return 0.1256986982622205;  // std dev = 4,944, 121,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3599694213254068;  // std dev = 0,482, 41,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05528793453170625;  // std dev = 1,930, 58,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | | else return 0.08903351018353134;  // std dev = 5,011, 130,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2828995468082676;  // std dev = 0,482, 41,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10387178700907715;  // std dev = 1,914, 58,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | | else return 0.08320006849621185;  // std dev = 4,967, 140,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=34 */
%   | else return -0.10159632948783624;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordvenue(E, D) )
%   | | then if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return 0.08826730038646485;  // std dev = 3,732, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.06953930084855361;  // std dev = 4,668, 126,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=30 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.18547397755053494;  // std dev = 0,260, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.47753935826546257;  // std dev = 1,122, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.24451465404546743;  // std dev = 0,465, 38,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10058015412135787;  // std dev = 1,915, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | | else return 0.08492200826918386;  // std dev = 4,831, 126,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, D), haswordtitle(B, E) )
%   | | | then return 0.09037953584700331;  // std dev = 3,261, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | | else return -0.08676807339021322;  // std dev = 1,964, 68,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.08790407924057654;  // std dev = 1,922, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | | else return 0.11913095322438498;  // std dev = 4,390, 86,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   | else return -0.07877675473109175;  // std dev = 1,97e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, D), haswordtitle(A, E) )
%   | | | then return 0.12689203409126742;  // std dev = 3,017, 40,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | | | else return -0.0860543432460784;  // std dev = 2,017, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.05654840590203484;  // std dev = 1,919, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return 0.10341956181724667;  // std dev = 4,360, 85,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, D), haswordtitle(B, E) )
%   | | | then return 0.03628058199720305;  // std dev = 3,261, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | | else return -0.07703766246174541;  // std dev = 2,008, 69,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=4 */
%   | | else if ( haswordvenue(H, D) )
%   | | | then return 0.04287739193854329;  // std dev = 4,586, 109,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | | else return 0.36505887850935004;  // std dev = 0,981, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.06842697784420268;  // std dev = 2,24e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.10799412230485536;  // std dev = 0,465, 39,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07002429675449179;  // std dev = 1,922, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return 0.035251545759151195;  // std dev = 4,762, 132,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */


Results
   AUC ROC   = 0.866833
   AUC PR    = 0.533074
   CLL	      = -0.278377
   Precision = 0.166959 at threshold = 0.5
   Recall    = 0.651282
   F1        = 0.265783


Total learning time: 13.834 seconds
Total inference time: 452.173 seconds
AUC ROC: 0.866833


Results scoring model
   AUC ROC   = 0.90851
   AUC PR    = 0.5634
   CLL	      = -0.232852
   Precision = 0.227964 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.339367


Total scoring time: 4.303 seconds
Refined model CLL: -0.232852


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.866833
   AUC PR    = 0.533074
   CLL	      = -0.278377
   Precision = 0.166959 at threshold = 0.5
   Recall    = 0.651282
   F1        = 0.265783


Total learning time: 21.946 seconds
Total inference time: 452.173 seconds
AUC ROC: 0.866833
Total revision time: 21.946
Best scored revision CLL: -0.232852


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 01:08:31
{'F1': 0.265783, 'AUC ROC': 0.866833, 'parameter': {'F1': 0.613744, 'AUC ROC': 0.721368, 'AUC PR': 0.476703, 'Precision': [1.0, 0.5], 'Inference time': 4.323, 'Learning time': 1.699, 'Recall': 0.442735, 'CLL': -0.239008}, 'AUC PR': 0.533074, 'Precision': [0.166959, 0.5], 'Inference time': 452.173, 'Learning time': 21.946, 'Recall': 0.651282, 'CLL': -0.278377}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6466104735610507;  // std dev = 0,408, 52,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.05296217601159886;  // std dev = 1,909, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03928696233638519;  // std dev = 1,895, 39,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | | else return 0.37014893509951335;  // std dev = 5,589, 125,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=64 */
%   else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.455044737338416;  // std dev = 0,460, 59,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.052192145269095484;  // std dev = 1,915, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.22664583117262935;  // std dev = 6,074, 157,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=64 */
%   | | | else return 0.8068781088925507;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839158;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.29858991926573886;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, C) )
%   | | | then return -0.07961696436259148;  // std dev = 1,907, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | | else return -0.23048565954189115;  // std dev = 0,079, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03019054210512921;  // std dev = 1,894, 42,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | | else return 0.3120620043224393;  // std dev = 5,349, 117,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=64 */
%   else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.29354401776895245;  // std dev = 0,460, 59,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return -0.16269554091706645;  // std dev = 0,100, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.037231340796492304;  // std dev = 1,875, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.05185379713676152;  // std dev = 1,921, 57,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=4 */
%   | | | else return 0.23259635102255716;  // std dev = 5,466, 121,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=64 */
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then return 0.25380050721624453;  // std dev = 0,445, 55,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return -0.05432289871836449;  // std dev = 1,930, 63,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=4 */
%   | | | else return -0.1694234137089676;  // std dev = 0,942, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then return -0.03883197448346663;  // std dev = 0,319, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( haswordtitle(B, J), haswordvenue(K, J) )
%   | | | then return 0.2119086071186599;  // std dev = 5,144, 108,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=60 */
%   | | | else return 0.5892512695117118;  // std dev = 0,139, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926107;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11366687072531229;  // std dev = 0,471, 64,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.07069108324807101;  // std dev = 0,262, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05321013224641875;  // std dev = 1,935, 68,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=4 */
%   | | | else return 0.11837873782075677;  // std dev = 5,497, 124,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=64 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1510331884046669;  // std dev = 0,446, 58,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.09185356804225472;  // std dev = 0,011, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.041220146605948554;  // std dev = 1,930, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return 0.05500535120090483;  // std dev = 5,758, 150,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=62 */
%   | | | else return 0.34826523910962176;  // std dev = 0,512, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07877675473109172;  // std dev = 2,69e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.15140833111194918;  // std dev = 0,428, 55,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return -0.11927883990018887;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0559968275328686;  // std dev = 1,908, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.029637963373955783;  // std dev = 1,919, 56,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=4 */
%   | | | else return 0.08143156224104646;  // std dev = 5,427, 122,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=64 */
%   else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, C) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.018429940816389146;  // std dev = 3,711, 61,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=40 */
%   | | | else return -0.030157288212460772;  // std dev = 1,924, 57,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=4 */
%   | | else return -0.243312230538591;  // std dev = 0,886, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.025361000983369;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | | | then return 0.08388296048038822;  // std dev = 5,246, 111,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=60 */
%   | | | else return 0.29669352375467567;  // std dev = 0,078, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.08264072581104563;  // std dev = 0,437, 58,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.055864872920855436;  // std dev = 0,261, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.032361346378407915;  // std dev = 1,929, 62,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=4 */
%   | | | else return 0.05679283234017991;  // std dev = 5,320, 118,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=64 */
%   else return -0.06419184008202625;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */


Results
   AUC ROC   = 0.780367
   AUC PR    = 0.079297
   CLL	      = -0.412688
   Precision = 0.097662 at threshold = 0.5
   Recall    = 0.364103
   F1        = 0.154013


Total learning time: 35.896 seconds
Total inference time: 217.023 seconds
AUC ROC: 0.780367


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 01:12:44
{'F1': 0.154013, 'AUC ROC': 0.780367, 'Learning time': 35.896, 'AUC PR': 0.079297, 'Precision': [0.097662, 0.5], 'Inference time': 217.023, 'CLL': -0.412688, 'Recall': 0.364103}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5530641893368006;  // std dev = 0,460, 59,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06185106490048773;  // std dev = 1,918, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02756535061477346;  // std dev = 1,882, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return 0.39148226843284667;  // std dev = 5,465, 120,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=64 */
%   else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */


Results
   AUC ROC   = 0.779265
   AUC PR    = 0.071286
   CLL	      = -0.215737
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.148 seconds
Total inference time: 13.063 seconds
AUC ROC: 0.779265


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 01:13:01
{'F1': nan, 'AUC ROC': 0.779265, 'Learning time': 3.148, 'AUC PR': 0.071286, 'Precision': [nan, 0.5], 'Inference time': 13.063, 'CLL': -0.215737, 'Recall': 0.0}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 129
Target train neg examples: 4745

Target test facts examples: 34429
Target test pos	 examples: 569
Target test neg examples: 23251

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(B).;false;true
0;false,true;female(A).;false;false
0;false;movie(C, A), movie(C, B).;true;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.08725110228217611;  // std dev = 7,553, 323,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.058018699881691206;  // std dev = 7,642, 351,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.05846423705333488;  // std dev = 7,603, 338,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.04353023839729399;  // std dev = 7,636, 349,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.03259141715518368;  // std dev = 7,659, 357,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.03884881483408379;  // std dev = 7,606, 339,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.040377933236542186;  // std dev = 7,570, 328,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.029492222595256485;  // std dev = 7,593, 335,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.05148229777555164;  // std dev = 7,462, 299,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.016645961933682365;  // std dev = 7,593, 335,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=74 */


Results
   AUC ROC   = 0.72232
   AUC PR    = 0.478862
   CLL	      = -0.248598
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44464
   F1        = 0.615572


Total learning time: 1.802 seconds
Total inference time: 4.236 seconds
AUC ROC: 0.72232


Results scoring model
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.251102
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total scoring time: 1.47 seconds
Parameter learned model CLL: -0.251102


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.553, 249, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.642, 277, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.03e-07, 0, 55], 'false': [7.603, 264, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.636, 275, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.659, 283, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.606, 265, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.57, 254, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.593, 261, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.462, 225, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 55], 'false': [7.593, 261, 74]}]]
[{'': [-1.291895883200182e-16, 0.17661436417487045]}, {'': [-3.2297397080004555e-16, 0.16637851965487363]}, {'': [1.9378438248002731e-16, 0.17100241588179604]}, {'': [-3.2297397080004555e-16, 0.16707580397533633]}, {'': [-9.689219124001366e-17, 0.16431670707498813]}, {'': [-3.229739708000455e-17, 0.17063896067733386]}, {'': [-8.074349270001138e-18, 0.17470999405116205]}, {'': [-4.0371746350005693e-17, 0.17210069057696492]}, {'': [-1.6148698540002276e-17, 0.18623952752206313]}, {'': [4.844609562000683e-17, 0.17210069057696428]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.0893989350995136;  // std dev = 0,422, 320,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6704436406257158;  // std dev = 0,381, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.15308577113899016;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0780857711389902;  // std dev = 1,666, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.15308577113899016;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09648199755408451;  // std dev = 1,682, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | | else return 0.1267069749749997;  // std dev = 0,449, 193,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=54 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4055470467287818;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else return -0.09024474744230875;  // std dev = 0,218, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   | else return 0.06323024568300403;  // std dev = 0,416, 251,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=57 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.47706352679168473;  // std dev = 0,381, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return -0.0655114813283525;  // std dev = 0,244, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.1417954935460147;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08595226338978948;  // std dev = 1,675, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | | else return 0.08664606644799162;  // std dev = 0,442, 203,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.31708322400556826;  // std dev = 0,416, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.12540065003078607;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06831044451590738;  // std dev = 1,668, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.06454725210140333;  // std dev = 0,233, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | | else return 0.07752656027670814;  // std dev = 0,444, 200,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=54 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.09656392197527247;  // std dev = 0,481, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.11066264345810752;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.05850126209427909;  // std dev = 1,681, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.11228078667589927;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06720372754463921;  // std dev = 1,675, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | | else return 0.05480422141468244;  // std dev = 0,438, 208,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=54 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.17316468775207602;  // std dev = 0,440, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else return -0.07134739007121199;  // std dev = 0,217, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return -0.10023168372002433;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.045258646036075455;  // std dev = 1,675, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | | else return 0.05477548123452882;  // std dev = 0,443, 201,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=54 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.13114396576077636;  // std dev = 0,440, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.09503920301198777;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.04382786904048678;  // std dev = 1,667, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.04701402115760927;  // std dev = 0,233, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | | else return 0.05801477176913;  // std dev = 0,450, 192,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=54 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return -1.8352148407550152E-4;  // std dev = 0,481, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.08735871420402669;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.04306817134962142;  // std dev = 1,671, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.03670617478518178;  // std dev = 0,244, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   | | else return 0.02741325476256465;  // std dev = 0,439, 207,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=54 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, A) )
%   | | then if ( haswordvenue(G, D) )
%   | | | then return -0.08481880171428967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.22274027583423067;  // std dev = 0,478, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(A, D) )
%   | | | then return -0.027809046020140657;  // std dev = 2,341, 23,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return -0.02859590415677098;  // std dev = 1,670, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return -0.0806403071932806;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.04192901554417589;  // std dev = 1,673, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | | else return 0.011602167893826731;  // std dev = 0,433, 216,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=54 */


Results
   AUC ROC   = 0.867502
   AUC PR    = 0.535333
   CLL	      = -0.261395
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total learning time: 10.722 seconds
Total inference time: 26.81 seconds
AUC ROC: 0.867502


Results scoring model
   AUC ROC   = 0.828332
   AUC PR    = 0.521522
   CLL	      = -0.242997
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total scoring time: 3.061 seconds
Refined model CLL: -0.242997


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.867502
   AUC PR    = 0.535333
   CLL	      = -0.261395
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total learning time: 17.055 seconds
Total inference time: 26.81 seconds
AUC ROC: 0.867502
Total revision time: 17.055
Best scored revision CLL: -0.242997


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 01:13:50
{'F1': 0.255361, 'AUC ROC': 0.867502, 'parameter': {'F1': 0.615572, 'AUC ROC': 0.72232, 'AUC PR': 0.478862, 'Precision': [1.0, 0.5], 'Inference time': 4.236, 'Learning time': 1.802, 'Recall': 0.44464, 'CLL': -0.248598}, 'AUC PR': 0.535333, 'Precision': [0.157189, 0.5], 'Inference time': 26.81, 'Learning time': 17.055, 'Recall': 0.680141, 'CLL': -0.261395}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, A) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordtitle(A, C) )
%   | | then return 0.5423594614153009;  // std dev = 0,465, 38,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | | else return -0.07935106490048774;  // std dev = 0,242, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   else return 0.200614688524167;  // std dev = 0,475, 292,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=100 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5911196722477701;  // std dev = 0,390, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.16483080594010024;  // std dev = 0,034, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.10393659549716949;  // std dev = 0,239, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07246342934731045;  // std dev = 0,237, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | else return 0.23949548161070616;  // std dev = 0,491, 238,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=97 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.4732236857784797;  // std dev = 0,390, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.1462630868300546;  // std dev = 9,13e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08598129486059197;  // std dev = 0,244, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   else return 0.15686991909727815;  // std dev = 0,470, 287,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=100 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.23238491659042856;  // std dev = 0,465, 38,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.1289270256159917;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.0830782987133562;  // std dev = 0,233, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return -0.12893302505026358;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07863778613238062;  // std dev = 0,244, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   | else return 0.14945372999673223;  // std dev = 0,485, 255,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=97 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.302729309973627;  // std dev = 0,390, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.1151272073293623;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.05725134799845146;  // std dev = 0,260, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return -0.11513203828094586;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.022016646267810042;  // std dev = 0,314, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else return 0.12945911554912776;  // std dev = 0,487, 250,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=97 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2278681624983711;  // std dev = 0,390, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.10391231544094467;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07614915376543498;  // std dev = 0,221, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.1039083498032228;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.055362652374113266;  // std dev = 0,258, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | else return 0.10543644186584757;  // std dev = 0,488, 249,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=97 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.22797613118511267;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | else return -0.058795000190618896;  // std dev = 0,235, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, A) )
%   | | then return -0.09462708591112699;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.04325387257965194;  // std dev = 0,270, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else return 0.07434623436484385;  // std dev = 0,485, 255,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=97 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.18256405898637304;  // std dev = 0,327, 30,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | else return -0.05755196130906726;  // std dev = 0,222, 57,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
%   else return 0.0660028825451672;  // std dev = 0,467, 279,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=100 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   return 0;  // std dev = 0,426, 409,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=129 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.0607258498031563;  // std dev = 0,409, 33,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.08511549389889396;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.04456396375911068;  // std dev = 0,239, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   else return 0.03158173724447018;  // std dev = 0,468, 290,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=100 */


Results
   AUC ROC   = 0.778259
   AUC PR    = 0.06985
   CLL	      = -0.357928
   Precision = 0.096254 at threshold = 0.5
   Recall    = 0.388401
   F1        = 0.154276


Total learning time: 10.069 seconds
Total inference time: 23.839 seconds
AUC ROC: 0.778259


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 01:14:24
{'F1': 0.154276, 'AUC ROC': 0.778259, 'Learning time': 10.069, 'AUC PR': 0.06985, 'Precision': [0.096254, 0.5], 'Inference time': 23.839, 'CLL': -0.357928, 'Recall': 0.388401}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.6706489350995116;  // std dev = 0,390, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07802127766644519;  // std dev = 0,244, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07208362304002264;  // std dev = 0,255, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | else return 0.27267884962942346;  // std dev = 0,493, 234,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=97 */


Results
   AUC ROC   = 0.776891
   AUC PR    = 0.071201
   CLL	      = -0.210402
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.375 seconds
Total inference time: 6.344 seconds
AUC ROC: 0.776891


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 01:14:33
{'F1': nan, 'AUC ROC': 0.776891, 'Learning time': 2.375, 'AUC PR': 0.071201, 'Precision': [nan, 0.5], 'Inference time': 6.344, 'CLL': -0.210402, 'Recall': 0.0}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 154
Target train neg examples: 5694

Target test facts examples: 33914
Target test pos	 examples: 544
Target test neg examples: 22302

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(B).;false;true
0;false,true;female(A).;false;false
0;false;movie(C, A), movie(C, B).;true;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(A), director(B).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.06111923212921553;  // std dev = 8,084, 404,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=82 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.07038398847602452;  // std dev = 7,998, 373,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=82 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,15e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.04186429745952528;  // std dev = 8,097, 409,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=82 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.028648976643877673;  // std dev = 8,135, 425,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=82 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.05456245042185426;  // std dev = 7,983, 368,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=82 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.033145169185863646;  // std dev = 8,053, 392,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=82 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.02157122529489354;  // std dev = 8,087, 405,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=82 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.018352905390608125;  // std dev = 8,087, 405,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=82 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,83e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.021232672582313608;  // std dev = 8,058, 394,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=82 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 4,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.02452250875272575;  // std dev = 8,025, 382,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=82 */


Results
   AUC ROC   = 0.716912
   AUC PR    = 0.468238
   CLL	      = -0.233889
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433824
   F1        = 0.605128


Total learning time: 2.086 seconds
Total inference time: 3.872 seconds
AUC ROC: 0.716912


Results scoring model
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.234483
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total scoring time: 2.311 seconds
Parameter learned model CLL: -0.234483


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.084, 322, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.69e-07, 0, 72], 'false': [7.998, 291, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.15e-07, 0, 72], 'false': [8.097, 327, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.135, 343, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [7.983, 286, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.053, 310, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.087, 323, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 72], 'false': [8.087, 323, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.83e-08, 0, 72], 'false': [8.058, 312, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.94e-08, 0, 72], 'false': [8.025, 300, 82]}]]
[{'': [-1.282924384011292e-15, 0.16177335555337788]}, {'': [3.9474596431116675e-16, 0.17150989369578087]}, {'': [6.41462192005646e-16, 0.16029315941440142]}, {'': [-9.868649107779169e-17, 0.15571487889273283]}, {'': [-3.4540271877227093e-16, 0.17317462192816577]}, {'': [-1.2335811384723961e-17, 0.16542586422323885]}, {'': [-8.635067969306773e-17, 0.1614753848498688]}, {'': [6.1679056923619804e-18, 0.16147538484987073]}, {'': [6.47630097698008e-17, 0.16480713236620245]}, {'': [3.39234813079909e-17, 0.16858090512869667]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.41697246451127606;  // std dev = 0,497, 68,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=38 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12224322176323278;  // std dev = 0,990, 51,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.13008635901813473;  // std dev = 0,994, 85,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=1 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.11318249214649083;  // std dev = 5,321, 149,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=38 */
%   | | | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2929832891055524;  // std dev = 0,500, 77,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08887752577849488;  // std dev = 1,645, 74,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=3 */
%   | | | else return 0.05976779179882896;  // std dev = 5,639, 198,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=41 */
%   | else return -0.13334486833582254;  // std dev = 0,104, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,15e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.24839005339795137;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return -0.09049654423484903;  // std dev = 1,636, 66,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.08234218476586164;  // std dev = 1,649, 82,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=3 */
%   | | | else return 0.11724655998949972;  // std dev = 5,225, 135,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=38 */
%   | else return -0.11500658313521846;  // std dev = 0,062, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.3011865062544699;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.41579462582100113;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=38 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.08273306389544312;  // std dev = 1,641, 70,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=3 */
%   | | | else return 0.016718228774867325;  // std dev = 5,698, 235,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=41 */
%   | else return -0.1055886965565868;  // std dev = 0,079, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14117988766423697;  // std dev = 0,491, 72,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07296856527314817;  // std dev = 1,651, 75,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=3 */
%   | | | else return 0.03168403882639442;  // std dev = 5,635, 211,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=41 */
%   | else return -0.093301941205472;  // std dev = 0,038, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.268615011328567;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.20402646768843666;  // std dev = 3,733, 60,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=38 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07553602008602792;  // std dev = 1,647, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | | else return 0.02910792648801548;  // std dev = 5,616, 219,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=41 */
%   | else return -0.08922723597483426;  // std dev = 0,074, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.1019733429635184;  // std dev = 3,923, 68,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=38 */
%   | | | else return -0.075488936790509;  // std dev = 1,657, 93,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06762128205263095;  // std dev = 1,645, 66,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   | | | else return 0.06753230700822886;  // std dev = 5,302, 146,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=38 */
%   | else return -0.08064192076468778;  // std dev = 0,055, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( haswordtitle(A, D), haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.23716195605214896;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16133683576580538;  // std dev = 3,559, 57,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.058683905359235684;  // std dev = 1,651, 72,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=3 */
%   | | | else return 0.0375128240408166;  // std dev = 5,544, 194,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=41 */
%   | else return -0.07961249513041165;  // std dev = 0,142, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,83e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.10598584415663533;  // std dev = 0,457, 61,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06073499800184872;  // std dev = 1,659, 86,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=3 */
%   | | | else return 0.02137720127260757;  // std dev = 5,583, 204,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=41 */
%   | else return -0.06859849072047866;  // std dev = 0,031, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 4,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.2142527821758676;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.031510764981126795;  // std dev = 3,883, 63,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=38 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.07240915751816825;  // std dev = 1,652, 78,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=3 */
%   | | | else return -0.07265093033097768;  // std dev = 0,031, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return 0.3822942195872409;  // std dev = 0,983, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07420902462659479;  // std dev = 0,994, 86,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=1 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.062183661265820714;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return -0.06345518428883415;  // std dev = 0,010, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.861425
   AUC PR    = 0.52756
   CLL	      = -0.224294
   Precision = 0.186885 at threshold = 0.5
   Recall    = 0.628676
   F1        = 0.288121


Total learning time: 16.421 seconds
Total inference time: 53.452 seconds
AUC ROC: 0.861425


Results scoring model
   AUC ROC   = 0.908421
   AUC PR    = 0.577304
   CLL	      = -0.223084
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total scoring time: 4.855 seconds
Refined model CLL: -0.223084


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.861425
   AUC PR    = 0.52756
   CLL	      = -0.224294
   Precision = 0.186885 at threshold = 0.5
   Recall    = 0.628676
   F1        = 0.288121


Total learning time: 25.673 seconds
Total inference time: 53.452 seconds
AUC ROC: 0.861425
Total revision time: 25.673
Best scored revision CLL: -0.223084


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 01:15:57
{'F1': 0.288121, 'AUC ROC': 0.861425, 'parameter': {'F1': 0.605128, 'AUC ROC': 0.716912, 'AUC PR': 0.468238, 'Precision': [1.0, 0.5], 'Inference time': 3.872, 'Learning time': 2.086, 'Recall': 0.433824, 'CLL': -0.233889}, 'AUC PR': 0.52756, 'Precision': [0.186885, 0.5], 'Inference time': 53.452, 'Learning time': 25.673, 'Recall': 0.628676, 'CLL': -0.224294}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5831489350995129;  // std dev = 0,447, 80,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09012692696945324;  // std dev = 1,687, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.10289002593944874;  // std dev = 1,698, 77,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=3 */
%   | | | else return 0.3724346493852238;  // std dev = 6,612, 175,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=90 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.46198511111871554;  // std dev = 0,462, 84,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.20355160333955755;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1181538230170316;  // std dev = 0,994, 86,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.08524951076096582;  // std dev = 1,691, 66,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   | | | else return 0.24769815631082104;  // std dev = 7,092, 204,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=90 */
%   else return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3469047071073222;  // std dev = 0,471, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.0704404813236679;  // std dev = 0,209, 62,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06880023862599154;  // std dev = 1,685, 57,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
%   | | | else return 0.25942941861146696;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=90 */
%   else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.26726559011200673;  // std dev = 0,471, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.07640686682749985;  // std dev = 0,191, 79,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.0713529612637714;  // std dev = 1,658, 75,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=3 */
%   | | | else return 0.17198408899607243;  // std dev = 6,992, 197,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=90 */
%   else return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1724786430444655;  // std dev = 0,481, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.10226497796486324;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.054480669130837725;  // std dev = 1,686, 57,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.07022804270821786;  // std dev = 1,667, 85,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=3 */
%   | | | else return 0.12219142563056565;  // std dev = 7,078, 203,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=90 */
%   else return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.10907619877945689;  // std dev = 0,486, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return -0.055661409636495504;  // std dev = 1,661, 69,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=3 */
%   | | | else return -0.0968202579951255;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.05101623197461998;  // std dev = 0,220, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | | else return 0.1278319350823637;  // std dev = 0,499, 189,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=90 */
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.14719625520635543;  // std dev = 0,466, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.055667943003414724;  // std dev = 0,186, 80,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05445553861764407;  // std dev = 1,694, 70,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=3 */
%   | | | else return 0.13637609542245913;  // std dev = 6,612, 175,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=90 */
%   else return -0.07877675473109176;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.058914776554513215;  // std dev = 0,483, 92,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.08470712095363289;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.049890699768020144;  // std dev = 1,695, 70,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.04829444789301426;  // std dev = 1,664, 75,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=3 */
%   | | | else return 0.03288736793117929;  // std dev = 7,078, 203,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=90 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.252549338803212;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.16411732786345468;  // std dev = 0,433, 76,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=57 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, C) )
%   | | | then return -0.04682874819503285;  // std dev = 1,668, 79,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=3 */
%   | | | else return -0.08062776734449001;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.040037264541530566;  // std dev = 1,689, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | | else return 0.04074032135765051;  // std dev = 6,977, 196,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=90 */
%   else return -0.06842697784420272;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.5080883039595263;  // std dev = 0,127, 140,000 (wgt'ed) examples reached here.  /* #pos=140 */
%   | | else if ( haswordtitle(B, C) )
%   | | | then return -0.2757418746105285;  // std dev = 3,145, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | | | else return -0.06533588530429627;  // std dev = 0,015, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( title(G, A), venue(G, D) )
%   | | then if ( haswordtitle(B, C) )
%   | | | then return -0.25187479998754875;  // std dev = 1,769, 43,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
%   | | | else return -0.06481876632775496;  // std dev = 0,010, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( haswordtitle(B, C) )
%   | | | then return 0.38623727845410993;  // std dev = 1,061, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | then return -0.06419184008202618;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.32689792932414213;  // std dev = 0,698, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.917296
   AUC PR    = 0.448178
   CLL	      = -0.280622
   Precision = 0.246521 at threshold = 0.5
   Recall    = 0.911765
   F1        = 0.388106


Total learning time: 54.226 seconds
Total inference time: 117.223 seconds
AUC ROC: 0.917296


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 01:18:49
{'F1': 0.388106, 'AUC ROC': 0.917296, 'Learning time': 54.226, 'AUC PR': 0.448178, 'Precision': [0.246521, 0.5], 'Inference time': 117.223, 'CLL': -0.280622, 'Recall': 0.911765}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5248156017661797;  // std dev = 0,471, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09100360727336908;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.10387638135618389;  // std dev = 0,191, 79,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=3 */
%   | | else return 0.30149868879409114;  // std dev = 0,497, 203,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=90 */
%   else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */


Results
   AUC ROC   = 0.781401
   AUC PR    = 0.073686
   CLL	      = -0.206335
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.142 seconds
Total inference time: 7.23 seconds
AUC ROC: 0.781401


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 01:19:00
{'F1': nan, 'AUC ROC': 0.781401, 'Learning time': 4.142, 'AUC PR': 0.073686, 'Precision': [nan, 0.5], 'Inference time': 7.23, 'CLL': -0.206335, 'Recall': 0.0}


