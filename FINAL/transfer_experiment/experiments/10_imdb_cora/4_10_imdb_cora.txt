Starting experiment #4 for 10_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.141851064900489;  // std dev = 0,000, 692,000 (wgt'ed) examples reached here.  /* #neg=692 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.12544463852839235;  // std dev = 0,000, 690,000 (wgt'ed) examples reached here.  /* #neg=690 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360626;  // std dev = 4,94e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.11231637819360625;  // std dev = 0,000, 651,000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783513;  // std dev = 4,52e-07, 692,000 (wgt'ed) examples reached here.  /* #neg=692 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926201;  // std dev = 0,000, 690,000 (wgt'ed) examples reached here.  /* #neg=690 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.08518475138839675;  // std dev = 1,43e-07, 750,000 (wgt'ed) examples reached here.  /* #neg=750 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109175;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07877675473109272;  // std dev = 0,000, 688,000 (wgt'ed) examples reached here.  /* #neg=688 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333653;  // std dev = 2,37e-07, 716,000 (wgt'ed) examples reached here.  /* #neg=716 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.0684269778442025;  // std dev = 1,90e-07, 690,000 (wgt'ed) examples reached here.  /* #neg=690 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06419184008202536;  // std dev = 2,45e-07, 710,000 (wgt'ed) examples reached here.  /* #neg=710 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 162
Target train neg examples: 9107

Target test facts examples: 35095
Target test pos	 examples: 536
Target test neg examples: 18889

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.08672036367093995;  // std dev = 8,606, 420,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=96 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.07156024984374999;  // std dev = 8,629, 428,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=96 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.057952245105760095;  // std dev = 8,652, 436,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=96 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.056152469940773275;  // std dev = 8,618, 424,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=96 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.059870443577799845;  // std dev = 8,552, 403,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=96 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04074278119093959;  // std dev = 8,609, 421,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=96 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.021680313199522114;  // std dev = 8,680, 446,000 (wgt'ed) examples reached here.  /* #neg=350 #pos=96 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.014015925525043495;  // std dev = 8,703, 455,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=96 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.027215624756112354;  // std dev = 8,618, 424,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=96 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04194785492433724;  // std dev = 8,511, 391,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=96 */


Results
   AUC ROC   = 0.725746
   AUC PR    = 0.48982
   CLL	      = -0.254956
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451493
   F1        = 0.622108


Total learning time: 1.862 seconds
Total inference time: 4.193 seconds
AUC ROC: 0.725746


Results scoring model
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.249222
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total scoring time: 2.446 seconds
Parameter learned model CLL: -0.249222


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.606, 324, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.19e-07, 0, 66], 'false': [8.629, 332, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 66], 'false': [8.652, 340, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.618, 328, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.552, 307, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.609, 325, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.68, 350, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [8.703, 359, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 66], 'false': [8.618, 328, 96]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.71e-08, 0, 66], 'false': [8.511, 295, 96]}]]
[{'': [-9.689219124001365e-16, 0.17632653061224593]}, {'': [2.153159805333637e-16, 0.17398899467202206]}, {'': [1.2380668880668413e-15, 0.1717027186263797]}, {'': [-1.0765799026668185e-16, 0.17515129939479868]}, {'': [-2.8260222445003984e-16, 0.1814677758005987]}, {'': [-4.0371746350005693e-17, 0.17603150512579205]}, {'': [-6.728624391667616e-17, 0.1689155221299479]}, {'': [-6.7286243916676156e-18, 0.16647264823089117]}, {'': [4.0371746350005693e-17, 0.175151299394798]}, {'': [3.364312195833808e-17, 0.1852421164173421]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.42957750652808346;  // std dev = 0,495, 70,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=40 */
%   | | else return -0.02792701426757629;  // std dev = 0,318, 79,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=9 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.07366924671866949;  // std dev = 2,365, 88,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=6 */
%   | | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | | then return 0.10018715166002051;  // std dev = 5,367, 157,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=38 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.41283302055375015;  // std dev = 0,487, 65,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=40 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.16151458999805063;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.053978367748428215;  // std dev = 2,344, 71,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.22917061711715547;  // std dev = 1,342, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.07167703505396299;  // std dev = 2,375, 96,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.08007819148797937;  // std dev = 5,393, 162,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=38 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3286995240208774;  // std dev = 0,489, 66,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.10891885881567574;  // std dev = 1,465, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.05892793388058029;  // std dev = 2,363, 79,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.04995255805057044;  // std dev = 1,483, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.06768098706053824;  // std dev = 2,381, 102,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.07225853249557372;  // std dev = 5,383, 160,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=38 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.22366629031696508;  // std dev = 0,495, 70,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.044027012241217696;  // std dev = 2,829, 105,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=9 */
%   | | | else return 0.03356129011706239;  // std dev = 6,103, 241,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=47 */
%   | else return -0.11540567998422673;  // std dev = 0,067, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E), haswordvenue(G, D) )
%   | | | then return 0.21284527652086935;  // std dev = 3,835, 62,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | | else return 0.0207378606819442;  // std dev = 2,958, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.03429553131384764;  // std dev = 2,816, 103,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=9 */
%   | | | else return 0.0746742175995243;  // std dev = 5,321, 149,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=38 */
%   | else return -0.10343595976319163;  // std dev = 0,068, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.12609077758804638;  // std dev = 0,490, 70,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=40 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.16592842143191822;  // std dev = 1,384, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.01855572728256584;  // std dev = 2,306, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.137733666291798;  // std dev = 1,398, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.04512284071114909;  // std dev = 2,373, 90,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=6 */
%   | | else return 0.027337696806547945;  // std dev = 0,412, 175,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=38 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.7023126540518738;  // std dev = 1,347, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | else return -0.15256835554045134;  // std dev = 2,955, 278,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=8 */
%   | | else if ( title(H, A), venue(H, E) )
%   | | | then return -0.07439872290115897;  // std dev = 2,182, 39,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return -0.22357591618944106;  // std dev = 0,310, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | | then if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return -0.3891033829189201;  // std dev = 0,256, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09327047050803358;  // std dev = 0,043, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.34769383154596806;  // std dev = 0,530, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, D), haswordtitle(A, E) )
%   | | | then return 0.1466501930389344;  // std dev = 2,767, 53,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=38 */
%   | | | else return 0.013506049260701673;  // std dev = 2,727, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.01357309482684364;  // std dev = 2,607, 93,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=9 */
%   | | | else return 0.009620263981992118;  // std dev = 4,628, 176,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=38 */
%   | else return -0.0859585881278732;  // std dev = 0,078, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, A), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.5543757532021028;  // std dev = 1,681, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.1302232690706339;  // std dev = 2,914, 264,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=8 */
%   | | else if ( title(H, B), venue(H, E) )
%   | | | then return -0.023970851432036415;  // std dev = 1,397, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return -0.09342394265260642;  // std dev = 0,084, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | | then if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return -0.30754198012868617;  // std dev = 0,253, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08087061931050646;  // std dev = 0,037, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.10458377909692877;  // std dev = 0,677, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.0414245362092888;  // std dev = 1,622, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.02484138294262151;  // std dev = 3,470, 160,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 0.015746452084540785;  // std dev = 2,345, 59,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   | | | else return 2.7380576614443003E-4;  // std dev = 3,818, 169,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=38 */
%   | else return -0.0676349160344284;  // std dev = 0,028, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.975984
   AUC PR    = 0.921537
   CLL	      = -0.168885
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.652985
   F1        = 0.790068


Total learning time: 44.172 seconds
Total inference time: 306.944 seconds
AUC ROC: 0.975984


Results scoring model
   AUC ROC   = 0.986599
   AUC PR    = 0.783112
   CLL	      = -0.169115
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.641975
   F1        = 0.781955


Total scoring time: 11.491 seconds
Refined model CLL: -0.169115


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.975984
   AUC PR    = 0.921537
   CLL	      = -0.168885
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.652985
   F1        = 0.790068


Total learning time: 59.971 seconds
Total inference time: 306.944 seconds
AUC ROC: 0.975984
Total revision time: 59.971
Best scored revision CLL: -0.169115


Dataset: 10_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 01:58:36
{'F1': 0.790068, 'AUC ROC': 0.975984, 'parameter': {'F1': 0.622108, 'AUC ROC': 0.725746, 'AUC PR': 0.48982, 'Precision': [1.0, 0.5], 'Inference time': 4.193, 'Learning time': 1.862, 'Recall': 0.451493, 'CLL': -0.254956}, 'AUC PR': 0.921537, 'Precision': [1.0, 0.5], 'Inference time': 306.944, 'Learning time': 59.971, 'Recall': 0.652985, 'CLL': -0.168885}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.1438632208137979;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.5495069597908709;  // std dev = 0,462, 81,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=56 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.07935106490048767;  // std dev = 2,372, 96,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=6 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.0056899187060697205;  // std dev = 2,770, 61,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   | | | else return 0.30374479002179045;  // std dev = 6,905, 193,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=86 */
%   else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.49651277898343227;  // std dev = 0,450, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, C) )
%   | | | then return -0.03920804305232989;  // std dev = 2,832, 93,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=9 */
%   | | | else return -0.1399009083147381;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1619925836382898;  // std dev = 0,469, 283,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=95 */
%   else return -0.12544463852839133;  // std dev = 1,83e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.39132433592216187;  // std dev = 0,454, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.2650582940070808;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.046070481738172485;  // std dev = 0,316, 53,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return -0.049247790249133734;  // std dev = 0,272, 110,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=9 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then return 0.17893223643853615;  // std dev = 0,487, 222,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=86 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3477855312814774;  // std dev = 0,429, 77,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.020336645734397273;  // std dev = 1,558, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return -0.057626622751500475;  // std dev = 2,375, 87,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.015018518025486767;  // std dev = 2,740, 61,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   | | | else return 0.20607904211805328;  // std dev = 6,905, 193,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=86 */
%   else return -0.10509577425016178;  // std dev = 0,015, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16213699567510267;  // std dev = 0,473, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.28344151824485964;  // std dev = 1,291, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.06256425302337873;  // std dev = 2,388, 105,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=6 */
%   | | else return 0.10586409595864557;  // std dev = 0,474, 262,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=95 */
%   else return -0.09646929350271549;  // std dev = 0,037, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then if ( title(G, A), venue(G, F) )
%   | | | then return 0.1394133664391651;  // std dev = 3,821, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | | | else return 0.22166537475721912;  // std dev = 1,520, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return -0.025011394298250632;  // std dev = 2,811, 92,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=9 */
%   | | | else return -0.20341692279040294;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), title(K, B) )
%   | | | then return 0.21041010637713778;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.056522397654041476;  // std dev = 2,307, 53,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=6 */
%   | | else return 0.14020377147288493;  // std dev = 0,497, 195,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=86 */
%   else return -0.08761511835270168;  // std dev = 0,010, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.11498728615502603;  // std dev = 0,462, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   | else return 0.04647142802749118;  // std dev = 0,432, 352,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=104 */
%   else return -0.08237653708929042;  // std dev = 0,030, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then if ( author(G, E), title(G, B) )
%   | | | then return -0.2191638844844501;  // std dev = 1,188, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1102894699985737;  // std dev = 3,867, 73,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=52 */
%   | | else if ( author(H, E), title(H, A) )
%   | | | then return 0.04216839003054018;  // std dev = 1,487, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.052844874781197024;  // std dev = 2,808, 102,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=10 */
%   | else return 0.050332611581830715;  // std dev = 0,473, 262,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=95 */
%   else return -0.07493481013576091;  // std dev = 0,011, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then if ( title(G, A), venue(G, F) )
%   | | | then return 0.08351055564325524;  // std dev = 3,644, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | | | else return 0.2736191778157502;  // std dev = 0,982, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( author(H, E), title(H, A) )
%   | | | then return 0.24016366559130756;  // std dev = 1,274, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.04646191532650373;  // std dev = 2,805, 103,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=10 */
%   | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then return -0.02994731356766411;  // std dev = 0,365, 55,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
%   | | else return 0.11705981704998296;  // std dev = 0,499, 183,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=86 */
%   else return -0.06932116530938877;  // std dev = 0,011, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.5514399502408106;  // std dev = 0,156, 136,000 (wgt'ed) examples reached here.  /* #pos=136 */
%   | | else if ( haswordtitle(B, C) )
%   | | | then return -0.2548492595491764;  // std dev = 3,494, 255,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=8 */
%   | | | else return -0.1548807480998019;  // std dev = 0,704, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( title(G, A), venue(G, D) )
%   | | then if ( samebib(G, H), title(H, B) )
%   | | | then return 0.5029798131247529;  // std dev = 0,430, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.27428124847596624;  // std dev = 1,051, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.10841360801825874;  // std dev = 1,373, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.26035990500494244;  // std dev = 0,885, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( haswordtitle(B, K), haswordvenue(L, K) )
%   | then return -0.22515437488286594;  // std dev = 0,205, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.5467260970790594;  // std dev = 0,127, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */


Results
   AUC ROC   = 0.92812
   AUC PR    = 0.482727
   CLL	      = -0.277024
   Precision = 0.275429 at threshold = 0.5
   Recall    = 0.899254
   F1        = 0.421697


Total learning time: 50.753 seconds
Total inference time: 630.884 seconds
AUC ROC: 0.92812


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 02:09:58
{'F1': 0.421697, 'AUC ROC': 0.92812, 'Learning time': 50.753, 'AUC PR': 0.482727, 'Precision': [0.275429, 0.5], 'Inference time': 630.884, 'CLL': -0.277024, 'Recall': 0.899254}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5741983178155623;  // std dev = 0,451, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.23314893509951226;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( author(F, D), title(F, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.00548742853685133;  // std dev = 2,276, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.06220504720137262;  // std dev = 0,271, 113,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=9 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return 0.2562970832476592;  // std dev = 0,490, 216,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=86 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.795316
   AUC PR    = 0.086743
   CLL	      = -0.213846
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.168 seconds
Total inference time: 4.784 seconds
AUC ROC: 0.795316


Dataset: 10_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 02:10:07
{'F1': nan, 'AUC ROC': 0.795316, 'Learning time': 3.168, 'AUC PR': 0.086743, 'Precision': [nan, 0.5], 'Inference time': 4.784, 'CLL': -0.213846, 'Recall': 0.0}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 140
Target train neg examples: 4623

Target test facts examples: 33542
Target test pos	 examples: 558
Target test neg examples: 23373

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.06427706880424865;  // std dev = 7,665, 359,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.05456287251002906;  // std dev = 7,673, 362,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04918621461228911;  // std dev = 7,665, 359,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.0547289417810256;  // std dev = 7,606, 339,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03323386448920073;  // std dev = 7,673, 362,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.013790645508978737;  // std dev = 7,743, 390,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.032265830675350514;  // std dev = 7,645, 352,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.018356164648610975;  // std dev = 7,689, 368,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.028384745648700867;  // std dev = 7,627, 346,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.016889056446448638;  // std dev = 7,662, 358,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=74 */


Results
   AUC ROC   = 0.716846
   AUC PR    = 0.467514
   CLL	      = -0.231782
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.605


Total learning time: 1.624 seconds
Total inference time: 3.992 seconds
AUC ROC: 0.716846


Results scoring model
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.234802
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total scoring time: 2.334 seconds
Parameter learned model CLL: -0.234802


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.665, 285, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.19e-07, 0, 66], 'false': [7.673, 288, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.86e-07, 0, 66], 'false': [7.665, 285, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.606, 265, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.673, 288, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.743, 316, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.645, 278, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 66], 'false': [7.689, 294, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 66], 'false': [7.627, 272, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.71e-08, 0, 66], 'false': [7.662, 284, 74]}]]
[{'': [-9.689219124001365e-16, 0.16363932620013882]}, {'': [2.153159805333637e-16, 0.162632398278442]}, {'': [1.2380668880668413e-15, 0.16363932620013696]}, {'': [-1.0765799026668185e-16, 0.17063896067733533]}, {'': [-2.8260222445003984e-16, 0.16263239827844322]}, {'': [-4.0371746350005693e-17, 0.1537409598948071]}, {'': [-6.728624391667616e-17, 0.16603176652892523]}, {'': [-6.7286243916676156e-18, 0.1606509924385656]}, {'': [4.0371746350005693e-17, 0.16813124394400136]}, {'': [3.364312195833808e-17, 0.16397740395118635]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.5608516378022141;  // std dev = 2,780, 37,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=26 */
%   | | else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.14185106490048763;  // std dev = 8,16e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0.13144086056535037;  // std dev = 0,446, 161,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=44 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.22895152751901957;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.31708240626137724;  // std dev = 3,452, 48,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0.04446162204686783;  // std dev = 0,385, 233,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=44 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.19400914001675226;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.32011403417171996;  // std dev = 3,206, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.13040422331165932;  // std dev = 1,49e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return 0.12483313679983227;  // std dev = 0,454, 152,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.3508915916484572;  // std dev = 1,226, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1671190746300874;  // std dev = 3,561, 51,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.11631551086052157;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return 0.08575741846309162;  // std dev = 0,443, 164,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.08548074651271832;  // std dev = 1,566, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.25256815044848374;  // std dev = 3,027, 40,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | | else return -0.10488298270652999;  // std dev = 4,94e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0.09962050785083307;  // std dev = 0,456, 149,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=44 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.3687181115087693;  // std dev = 0,987, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11629727666987358;  // std dev = 3,389, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return -0.0954364345898126;  // std dev = 3,80e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0.06316277360471778;  // std dev = 0,447, 160,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=44 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.1091838232552686;  // std dev = 1,419, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.0072121632481227564;  // std dev = 3,691, 53,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
%   | | else return -0.08750963744246384;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.07877675473109179;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0.06500680796951523;  // std dev = 0,453, 153,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.020751258300735934;  // std dev = 1,552, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.017496880618812653;  // std dev = 3,594, 51,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | | else return -0.08076944477812574;  // std dev = 4,94e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0.08252091789716225;  // std dev = 0,465, 139,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.1214576543876021;  // std dev = 1,676, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.12782596855023198;  // std dev = 3,125, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | else return -0.07497211236879141;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0.07202633539434514;  // std dev = 0,467, 137,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.26320690178928485;  // std dev = 1,016, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -7.089978657712879E-4;  // std dev = 3,534, 56,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
%   | | else return -0.06993554949681104;  // std dev = 5,87e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0.02661627231991921;  // std dev = 0,454, 152,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */


Results
   AUC ROC   = 0.847894
   AUC PR    = 0.524895
   CLL	      = -0.232138
   Precision = 0.181178 at threshold = 0.5
   Recall    = 0.645161
   F1        = 0.282908


Total learning time: 11.984 seconds
Total inference time: 11.898 seconds
AUC ROC: 0.847894


Results scoring model
   AUC ROC   = 0.900185
   AUC PR    = 0.572973
   CLL	      = -0.231166
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total scoring time: 3.15 seconds
Refined model CLL: -0.231166


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.847894
   AUC PR    = 0.524895
   CLL	      = -0.232138
   Precision = 0.181178 at threshold = 0.5
   Recall    = 0.645161
   F1        = 0.282908


Total learning time: 19.092 seconds
Total inference time: 11.898 seconds
AUC ROC: 0.847894
Total revision time: 19.092
Best scored revision CLL: -0.231166


Dataset: 10_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 02:10:43
{'F1': 0.282908, 'AUC ROC': 0.847894, 'parameter': {'F1': 0.605, 'AUC ROC': 0.716846, 'AUC PR': 0.467514, 'Precision': [1.0, 0.5], 'Inference time': 3.992, 'Learning time': 1.624, 'Recall': 0.433692, 'CLL': -0.231782}, 'AUC PR': 0.524895, 'Precision': [0.181178, 0.5], 'Inference time': 11.898, 'Learning time': 19.092, 'Recall': 0.645161, 'CLL': -0.232138}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.621306829836355;  // std dev = 0,425, 76,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=58 */
%   | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0.30520775862892496;  // std dev = 0,497, 170,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.16471275092970736;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4826614688784268;  // std dev = 3,974, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.12544463852839136;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0.2561028309084273;  // std dev = 0,496, 173,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=76 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.6148437581047937;  // std dev = 0,206, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.26620159917818764;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return 0.07845014036064814;  // std dev = 0,798, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4344306504823909;  // std dev = 3,611, 73,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=56 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.1123163781936062;  // std dev = 8,30e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0.16309090684590494;  // std dev = 0,487, 196,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=76 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4473891489659079;  // std dev = 0,153, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12037904984762683;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.3150529356392785;  // std dev = 0,429, 78,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=58 */
%   | else return -0.10159632948783621;  // std dev = 4,08e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0.1609606841296263;  // std dev = 0,493, 183,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=76 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3426140053807203;  // std dev = 0,142, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10820346538023641;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.04289195615527179;  // std dev = 0,873, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19550096899233343;  // std dev = 4,038, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 4,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0.13383776854365026;  // std dev = 0,494, 181,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.2710304803488153;  // std dev = 0,126, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09819632250549852;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.11289710139007815;  // std dev = 0,795, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.22681364860108133;  // std dev = 3,440, 71,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=56 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.08518475138839682;  // std dev = 5,87e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return 0.08585251761359278;  // std dev = 0,490, 190,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.22149166077619356;  // std dev = 0,111, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.08154186482961129;  // std dev = 0,023, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( haswordtitle(B, C) )
%   | | then if ( author(G, D), title(G, A) )
%   | | | then return 0.2187105125878657;  // std dev = 0,645, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10120101906162307;  // std dev = 3,974, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   | | else return -0.07877675473109166;  // std dev = 4,01e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return 0.03443943457262055;  // std dev = 0,433, 247,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=76 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.2478072412174166;  // std dev = 0,312, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.35649042791392355;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return -0.0018973030460477276;  // std dev = 0,399, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.15963066501889434;  // std dev = 3,347, 70,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=56 */
%   | else return -0.07321525118859139;  // std dev = 0,000747, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then return -0.08131259416890471;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0.10907865856332896;  // std dev = 0,497, 169,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=76 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.12754980627683532;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.044568320313767396;  // std dev = 0,648, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return 0.025479469295145635;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07041514082442221;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | else return -0.07544158415419223;  // std dev = 7,45e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.06839270557609789;  // std dev = 0,000719, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0.030300501761939807;  // std dev = 0,489, 192,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=76 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.15543525238906786;  // std dev = 0,143, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08520934784104477;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.08399888153687937;  // std dev = 0,404, 77,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=58 */
%   | else return -0.06417156400374154;  // std dev = 0,000574, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then return -0.07034517391012295;  // std dev = 5,27e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0.056790243034654964;  // std dev = 0,495, 177,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=76 */


Results
   AUC ROC   = 0.763307
   AUC PR    = 0.081656
   CLL	      = -0.339066
   Precision = 0.104703 at threshold = 0.5
   Recall    = 0.335125
   F1        = 0.159556


Total learning time: 26.439 seconds
Total inference time: 21.77 seconds
AUC ROC: 0.763307


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 02:11:31
{'F1': 0.159556, 'AUC ROC': 0.763307, 'Learning time': 26.439, 'AUC PR': 0.081656, 'Precision': [0.104703, 0.5], 'Inference time': 21.77, 'CLL': -0.339066, 'Recall': 0.335125}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.621306829836355;  // std dev = 0,425, 76,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=58 */
%   | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0.3361363564831609;  // std dev = 0,500, 159,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=76 */


Results
   AUC ROC   = 0.75574
   AUC PR    = 0.074496
   CLL	      = -0.209453
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.317 seconds
Total inference time: 4.017 seconds
AUC ROC: 0.75574


Dataset: 10_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 02:11:39
{'F1': nan, 'AUC ROC': 0.75574, 'Learning time': 3.317, 'AUC PR': 0.074496, 'Precision': [nan, 0.5], 'Inference time': 4.017, 'CLL': -0.209453, 'Recall': 0.0}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 113
Target train neg examples: 3827

Target test facts examples: 33252
Target test pos	 examples: 585
Target test neg examples: 24169

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.07657896922920585;  // std dev = 7,073, 293,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=64 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.065518114645821;  // std dev = 7,079, 295,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=64 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.0606459487725384;  // std dev = 7,062, 290,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=64 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.05939266637428709;  // std dev = 7,030, 281,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=64 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.05931640454858365;  // std dev = 6,992, 271,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=64 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.024879464635824612;  // std dev = 7,108, 304,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=64 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.021783489369820917;  // std dev = 7,105, 303,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=64 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.038241773147359326;  // std dev = 7,015, 277,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=64 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.02110448897766951;  // std dev = 7,066, 291,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=64 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.014739158466659186;  // std dev = 7,079, 295,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=64 */


Results
   AUC ROC   = 0.721368
   AUC PR    = 0.476703
   CLL	      = -0.245723
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.442735
   F1        = 0.613744


Total learning time: 1.814 seconds
Total inference time: 4.225 seconds
AUC ROC: 0.721368


Results scoring model
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.249695
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total scoring time: 1.74 seconds
Parameter learned model CLL: -0.249695


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.69e-07, 0, 49], 'false': [7.073, 229, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.079, 231, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.062, 226, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.03, 217, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 49], 'false': [6.992, 207, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.108, 240, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.21e-08, 0, 49], 'false': [7.105, 239, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.015, 213, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 49], 'false': [7.066, 227, 64]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.98e-08, 0, 49], 'false': [7.079, 231, 64]}]]
[{'': [5.800348863347756e-16, 0.1707183543197948]}, {'': [-5.800348863347756e-16, 0.16988221775351864]}, {'': [0.0, 0.17198573127229477]}, {'': [-3.625218039592348e-16, 0.1758842973113315]}, {'': [1.8126090197961738e-17, 0.18038970057597092]}, {'': [-2.718913529694261e-17, 0.16620498614958432]}, {'': [3.6252180395923476e-17, 0.1666067596858671]}, {'': [-6.797283824235652e-17, 0.17766424689491564]}, {'': [-3.6252180395923476e-17, 0.1715615073038804]}, {'': [1.8126090197961738e-17, 0.16988221775351844]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.37814893509951125;  // std dev = 0,500, 50,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09121815350808263;  // std dev = 1,949, 79,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=4 */
%   | | | else return 0.15125238337537297;  // std dev = 4,902, 116,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3965375318904673;  // std dev = 0,492, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return 0.029420535359347806;  // std dev = 5,234, 190,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=34 */
%   | | | else return 0.6447562445615991;  // std dev = 0,867, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2560063182177387;  // std dev = 0,500, 50,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08945015266368953;  // std dev = 1,976, 75,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=4 */
%   | | | else return 0.08874797010719968;  // std dev = 4,980, 131,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=34 */
%   | else return -0.11231637819360626;  // std dev = 4,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordvenue(E, D) )
%   | | then if ( title(F, A), venue(F, E) )
%   | | | then return 0.057402971750908;  // std dev = 6,129, 229,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=56 */
%   | | | else return 0.13801281474918628;  // std dev = 1,646, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.2990856091282271;  // std dev = 0,040, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.18443135400657848;  // std dev = 1,424, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return -0.1015963294878363;  // std dev = 2,24e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2968664926237294;  // std dev = 0,477, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08376481729152395;  // std dev = 1,974, 73,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=4 */
%   | | | else return 0.08211220516735938;  // std dev = 4,892, 124,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1746044158285193;  // std dev = 0,488, 46,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10918679687767945;  // std dev = 1,908, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | | else return 0.04976525035421355;  // std dev = 4,944, 152,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=34 */
%   | else return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordvenue(E, D) )
%   | | then if ( title(F, B), venue(F, E) )
%   | | | then return 0.07087777788896801;  // std dev = 5,745, 185,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
%   | | | else return 0.007069154431535509;  // std dev = 1,740, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.3074640577863525;  // std dev = 0,209, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.352252260165055;  // std dev = 1,016, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.07877675473109164;  // std dev = 4,47e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12383345702152965;  // std dev = 0,490, 45,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10121760862451867;  // std dev = 1,904, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | | | else return 0.04693942218599644;  // std dev = 4,866, 139,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.12013482816313363;  // std dev = 0,485, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08957243635007789;  // std dev = 1,908, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | | else return 0.050424629935928736;  // std dev = 4,792, 137,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
%   | else return -0.06842697784420268;  // std dev = 2,24e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.11555173880395381;  // std dev = 3,084, 41,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | | else return -0.08324442489361913;  // std dev = 1,957, 60,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=4 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.0509038679822803;  // std dev = 1,882, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return 0.13699507366644711;  // std dev = 4,183, 78,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */


Results
   AUC ROC   = 0.86681
   AUC PR    = 0.526504
   CLL	      = -0.269683
   Precision = 0.166959 at threshold = 0.5
   Recall    = 0.651282
   F1        = 0.265783


Total learning time: 13.254 seconds
Total inference time: 32.757 seconds
AUC ROC: 0.86681


Results scoring model
   AUC ROC   = 0.907881
   AUC PR    = 0.563141
   CLL	      = -0.229976
   Precision = 0.227964 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.339367


Total scoring time: 3.149 seconds
Refined model CLL: -0.229976


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.86681
   AUC PR    = 0.526504
   CLL	      = -0.269683
   Precision = 0.166959 at threshold = 0.5
   Recall    = 0.651282
   F1        = 0.265783


Total learning time: 19.957 seconds
Total inference time: 32.757 seconds
AUC ROC: 0.86681
Total revision time: 19.957
Best scored revision CLL: -0.229976


Dataset: 10_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:12:37
{'F1': 0.265783, 'AUC ROC': 0.86681, 'parameter': {'F1': 0.613744, 'AUC ROC': 0.721368, 'AUC PR': 0.476703, 'Precision': [1.0, 0.5], 'Inference time': 4.225, 'Learning time': 1.814, 'Recall': 0.442735, 'CLL': -0.245723}, 'AUC PR': 0.526504, 'Precision': [0.166959, 0.5], 'Inference time': 32.757, 'Learning time': 19.957, 'Recall': 0.651282, 'CLL': -0.269683}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5414822684328459;  // std dev = 0,465, 60,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.04429008929073166;  // std dev = 1,900, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03374295679237964;  // std dev = 1,889, 37,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return 0.41955244387144314;  // std dev = 5,298, 114,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=64 */
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.440061160573533;  // std dev = 0,473, 62,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06757918362432727;  // std dev = 1,930, 58,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.050836462248507304;  // std dev = 1,911, 46,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=4 */
%   | | | else return 0.3236530340407461;  // std dev = 5,516, 122,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=64 */
%   else return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.35519893736604086;  // std dev = 0,473, 62,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.03574773886041471;  // std dev = 1,905, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.010651635749434557;  // std dev = 1,875, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | | else return 0.36343672122136184;  // std dev = 4,923, 103,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=64 */
%   else return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.38737159795355297;  // std dev = 0,419, 53,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06684241686017496;  // std dev = 1,941, 69,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03308820198011222;  // std dev = 1,900, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return 0.21372201654465878;  // std dev = 5,384, 117,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=64 */
%   else return -0.10159632948783621;  // std dev = 3,49e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.20229574323777177;  // std dev = 0,465, 60,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.026352519951636934;  // std dev = 0,296, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.046442777261527755;  // std dev = 1,924, 60,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=4 */
%   | | | else return 0.18403354826892976;  // std dev = 5,268, 113,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=64 */
%   else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.22769884758740436;  // std dev = 0,428, 54,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.08911096216240001;  // std dev = 0,002, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.046423979277411515;  // std dev = 1,932, 60,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.028806746125290043;  // std dev = 1,902, 42,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | | else return 0.1447956679519886;  // std dev = 5,237, 112,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=64 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09571979633023424;  // std dev = 0,465, 60,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | | then if ( title(G, B), venue(G, F) )
%   | | | then return 0.0036315193413472974;  // std dev = 5,617, 192,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
%   | | | else return 0.3318782084735492;  // std dev = 1,469, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | else return 0.3311191018931526;  // std dev = 0,715, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07877675473109179;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10869982341302754;  // std dev = 0,449, 57,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.08963036042832494;  // std dev = 0,054, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.018917833851606405;  // std dev = 1,910, 44,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.044737278251882936;  // std dev = 5,541, 151,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=64 */
%   | | | else return 0.45504360474504224;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordvenue(E, D) )
%   | then if ( title(F, A), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.48616661291577823;  // std dev = 1,398, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | | else return -0.27231052262609406;  // std dev = 2,585, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else return 0.19034170492010113;  // std dev = 0,362, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then return -0.1328033095606459;  // std dev = 0,707, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.41549189649260937;  // std dev = 0,150, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420268;  // std dev = 2,11e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1265839166693379;  // std dev = 0,311, 49,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordvenue(F, E) )
%   | | then if ( title(G, A), venue(G, F) )
%   | | | then return -0.03571818101027812;  // std dev = 4,902, 216,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=56 */
%   | | | else return 0.20938711783844896;  // std dev = 1,202, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | else return 0.1768228120737536;  // std dev = 0,519, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06419184008202625;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */


Results
   AUC ROC   = 0.91763
   AUC PR    = 0.458741
   CLL	      = -0.338153
   Precision = 0.192144 at threshold = 0.5
   Recall    = 0.928205
   F1        = 0.318382


Total learning time: 48.231 seconds
Total inference time: 1025.659 seconds
AUC ROC: 0.91763


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 02:30:31
{'F1': 0.318382, 'AUC ROC': 0.91763, 'Learning time': 48.231, 'AUC PR': 0.458741, 'Precision': [0.192144, 0.5], 'Inference time': 1025.659, 'CLL': -0.338153, 'Recall': 0.928205}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5302800826404962;  // std dev = 0,469, 61,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.02756535061477346;  // std dev = 1,882, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.07042249347191629;  // std dev = 1,927, 56,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=4 */
%   | | | else return 0.3466985534201241;  // std dev = 5,721, 131,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=64 */
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */


Results
   AUC ROC   = 0.77728
   AUC PR    = 0.071193
   CLL	      = -0.21248
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.206 seconds
Total inference time: 7.048 seconds
AUC ROC: 0.77728


Dataset: 10_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 02:30:41
{'F1': nan, 'AUC ROC': 0.77728, 'Learning time': 3.206, 'AUC PR': 0.071193, 'Precision': [nan, 0.5], 'Inference time': 7.048, 'CLL': -0.21248, 'Recall': 0.0}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 129
Target train neg examples: 4745

Target test facts examples: 34429
Target test pos	 examples: 569
Target test neg examples: 23251

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.08725110228217611;  // std dev = 7,553, 323,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.08513461124197558;  // std dev = 7,509, 311,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.04848623593871589;  // std dev = 7,633, 348,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.04419727229074441;  // std dev = 7,621, 344,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.02111802173625088;  // std dev = 7,702, 373,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.037914655470694454;  // std dev = 7,606, 339,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.024778424313572422;  // std dev = 7,642, 351,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.03373564819376262;  // std dev = 7,580, 331,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.045970332290072725;  // std dev = 7,494, 307,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.02185088568736935;  // std dev = 7,577, 330,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=74 */


Results
   AUC ROC   = 0.72232
   AUC PR    = 0.478862
   CLL	      = -0.247401
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44464
   F1        = 0.615572


Total learning time: 1.93 seconds
Total inference time: 4.075 seconds
AUC ROC: 0.72232


Results scoring model
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.249919
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total scoring time: 1.403 seconds
Parameter learned model CLL: -0.249919


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.553, 249, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.509, 237, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.03e-07, 0, 55], 'false': [7.633, 274, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.621, 270, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.702, 299, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.606, 265, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.642, 277, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.58, 257, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 55], 'false': [7.494, 233, 74]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [5.16e-08, 0, 55], 'false': [7.577, 256, 74]}]]
[{'': [-1.291895883200182e-16, 0.17661436417487045]}, {'': [-3.2297397080004555e-16, 0.18132566867588293]}, {'': [1.9378438248002731e-16, 0.16742634429911515]}, {'': [-3.2297397080004555e-16, 0.16884126554894446]}, {'': [-9.689219124001366e-17, 0.1590322650202339]}, {'': [-3.229739708000455e-17, 0.17063896067733417]}, {'': [-8.074349270001138e-18, 0.1663785196548724]}, {'': [-4.0371746350005693e-17, 0.1735836657204662]}, {'': [-1.6148698540002276e-17, 0.18294093306029593]}, {'': [4.844609562000683e-17, 0.1739577594123075]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6816783468642181;  // std dev = 0,381, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07935106490048774;  // std dev = 1,677, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07663367359613991;  // std dev = 1,675, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | | else return 0.14235946141530248;  // std dev = 0,451, 190,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=54 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.42034393431405853;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07690787379175489;  // std dev = 1,683, 54,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=3 */
%   | else return 0.06797505648970129;  // std dev = 0,414, 256,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=57 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4045813592622077;  // std dev = 0,440, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.13309387275397658;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08148033798471697;  // std dev = 1,679, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | else return 0.04423554639762328;  // std dev = 0,399, 280,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=57 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3963568256815206;  // std dev = 0,381, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.11847306927318935;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08464411982030016;  // std dev = 1,691, 66,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.0636525593641334;  // std dev = 0,244, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   | | else return 0.09560947608082697;  // std dev = 0,445, 199,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=54 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.211124703595719;  // std dev = 0,440, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.1103949984901928;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06967542854888222;  // std dev = 1,686, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.10664838470751413;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.044952987761973796;  // std dev = 1,664, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else return 0.09269331409645742;  // std dev = 0,450, 191,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=54 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then if ( haswordvenue(G, D) )
%   | | | then return -0.10001051811221433;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.2551504139959086;  // std dev = 0,395, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(B, D) )
%   | | | then return 0.0054512430925250195;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return -0.03759986491645523;  // std dev = 1,664, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return -0.09690546386748725;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.03381295198307847;  // std dev = 1,658, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | else return 0.03963627825262585;  // std dev = 0,430, 221,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=54 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.057152368118320966;  // std dev = 0,481, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.08874976190519956;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.04951180232091655;  // std dev = 1,675, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.05375001452236382;  // std dev = 0,227, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   | | else return 0.06711446478245371;  // std dev = 0,448, 194,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=54 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.07359243709734972;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else return -0.05688615491582545;  // std dev = 0,216, 61,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.08571248140550625;  // std dev = 0,011, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.04308049525120009;  // std dev = 1,677, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | else return 0.013172871707774762;  // std dev = 0,425, 229,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=54 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.12613601128929144;  // std dev = 0,440, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.07765576533209843;  // std dev = 6,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.05239037417406796;  // std dev = 1,687, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.03776588707034712;  // std dev = 0,237, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | else return 0.02741332184630541;  // std dev = 0,434, 214,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=54 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.18328681690488255;  // std dev = 0,381, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.07637480979996615;  // std dev = 0,010, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.029361743683119224;  // std dev = 1,671, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.0432859587897756;  // std dev = 0,221, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | | else return 0.020261826829184346;  // std dev = 0,433, 216,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=54 */


Results
   AUC ROC   = 0.868161
   AUC PR    = 0.538753
   CLL	      = -0.266699
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total learning time: 11.838 seconds
Total inference time: 29.834 seconds
AUC ROC: 0.868161


Results scoring model
   AUC ROC   = 0.828355
   AUC PR    = 0.521898
   CLL	      = -0.239493
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total scoring time: 2.87 seconds
Refined model CLL: -0.239493


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.868161
   AUC PR    = 0.538753
   CLL	      = -0.266699
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total learning time: 18.041 seconds
Total inference time: 29.834 seconds
AUC ROC: 0.868161
Total revision time: 18.041
Best scored revision CLL: -0.239493


Dataset: 10_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:31:34
{'F1': 0.255361, 'AUC ROC': 0.868161, 'parameter': {'F1': 0.615572, 'AUC ROC': 0.72232, 'AUC PR': 0.478862, 'Precision': [1.0, 0.5], 'Inference time': 4.075, 'Learning time': 1.93, 'Recall': 0.44464, 'CLL': -0.247401}, 'AUC PR': 0.538753, 'Precision': [0.157189, 0.5], 'Inference time': 29.834, 'Learning time': 18.041, 'Recall': 0.680141, 'CLL': -0.266699}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.7547006592374428;  // std dev = 0,305, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | else return -0.08629550934493217;  // std dev = 0,229, 54,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06290369647943514;  // std dev = 0,270, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else return 0.2606385616555257;  // std dev = 0,490, 241,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=97 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5045771048201668;  // std dev = 0,424, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.061128436200853765;  // std dev = 0,260, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return -0.1316674303899586;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06645003908561073;  // std dev = 0,247, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | else return 0.2022781279734142;  // std dev = 0,485, 256,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=97 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5285321363611999;  // std dev = 0,305, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0558612681584473;  // std dev = 0,258, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return -0.11732979159342176;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06656198485756828;  // std dev = 0,233, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | else return 0.19449951025587844;  // std dev = 0,490, 241,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=97 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.20575018986041826;  // std dev = 0,457, 37,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.10571358107798554;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.05606823369495197;  // std dev = 0,240, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.04633020188260528;  // std dev = 0,263, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | else return 0.1573306666493151;  // std dev = 0,490, 243,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=97 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.3184271599404281;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.0961280702344758;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06153992729643147;  // std dev = 0,218, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   else return 0.07911100209472807;  // std dev = 0,453, 312,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=100 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.2413944500239557;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | else return -0.06259889155593938;  // std dev = 0,232, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, A) )
%   | | then return -0.08809384782847751;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.028637170280496973;  // std dev = 0,266, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | else return 0.10812844259526629;  // std dev = 0,489, 245,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=97 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.04230711440622829;  // std dev = 0,448, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.09408930888050022;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0586990295978654;  // std dev = 0,235, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return -0.0812690372982778;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.03311934274810851;  // std dev = 0,255, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | else return 0.08226198025098594;  // std dev = 0,488, 247,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=97 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.14965815512942163;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.07540395074948089;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.03001293687708384;  // std dev = 0,255, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return -0.04834453204893237;  // std dev = 0,239, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | else return 0.05659146415777874;  // std dev = 0,487, 252,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=97 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return -0.03596792767857392;  // std dev = 0,465, 38,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.07031234947302732;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0424538204802338;  // std dev = 0,227, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.08263060098541788;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.024145619596313995;  // std dev = 0,276, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else return 0.09798575092541524;  // std dev = 0,496, 221,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=97 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.05183280359807262;  // std dev = 0,424, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.06585270842505798;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.03791890122748806;  // std dev = 0,229, 54,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=3 */
%   else return 0.016776706336763286;  // std dev = 0,461, 293,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=100 */


Results
   AUC ROC   = 0.776924
   AUC PR    = 0.071203
   CLL	      = -0.360521
   Precision = 0.096254 at threshold = 0.5
   Recall    = 0.388401
   F1        = 0.154276


Total learning time: 10.941 seconds
Total inference time: 25.469 seconds
AUC ROC: 0.776924


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 02:32:11
{'F1': 0.154276, 'AUC ROC': 0.776924, 'Learning time': 10.941, 'AUC PR': 0.071203, 'Precision': [0.096254, 0.5], 'Inference time': 25.469, 'CLL': -0.360521, 'Recall': 0.388401}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.6706489350995116;  // std dev = 0,390, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07366924671866958;  // std dev = 0,252, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08730561035503319;  // std dev = 0,227, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   | else return 0.22144481524932233;  // std dev = 0,481, 267,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=97 */


Results
   AUC ROC   = 0.778478
   AUC PR    = 0.071273
   CLL	      = -0.207062
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.55 seconds
Total inference time: 5.534 seconds
AUC ROC: 0.778478


Dataset: 10_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 02:32:19
{'F1': nan, 'AUC ROC': 0.778478, 'Learning time': 2.55, 'AUC PR': 0.071273, 'Precision': [nan, 0.5], 'Inference time': 5.534, 'CLL': -0.207062, 'Recall': 0.0}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 154
Target train neg examples: 5694

Target test facts examples: 33914
Target test pos	 examples: 544
Target test neg examples: 22302

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.06680033459060676;  // std dev = 8,055, 393,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=82 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.0769680495296455;  // std dev = 7,961, 361,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=82 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,15e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.04220062930907288;  // std dev = 8,087, 405,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=82 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.045856588899333015;  // std dev = 8,039, 387,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=82 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.0416224151733089;  // std dev = 8,028, 383,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=82 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.023970403664182634;  // std dev = 8,087, 405,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=82 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.03958081551708334;  // std dev = 7,989, 370,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=82 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.01699120471683305;  // std dev = 8,074, 400,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=82 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,83e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.01285748676316972;  // std dev = 8,082, 403,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=82 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 4,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.012905754475707729;  // std dev = 8,071, 399,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=82 */


Results
   AUC ROC   = 0.716912
   AUC PR    = 0.468238
   CLL	      = -0.234667
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433824
   F1        = 0.605128


Total learning time: 1.934 seconds
Total inference time: 4.17 seconds
AUC ROC: 0.716912


Results scoring model
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.235257
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total scoring time: 2.096 seconds
Parameter learned model CLL: -0.235257


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.055, 311, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [1.69e-07, 0, 72], 'false': [7.961, 279, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.15e-07, 0, 72], 'false': [8.087, 323, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.039, 305, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.028, 301, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [8.087, 323, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [0.0, 0, 72], 'false': [7.989, 288, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [2.11e-08, 0, 72], 'false': [8.074, 318, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [6.83e-08, 0, 72], 'false': [8.082, 321, 82]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'true': [4.94e-08, 0, 72], 'false': [8.071, 317, 82]}]]
[{'': [-1.282924384011292e-15, 0.1651159929815027]}, {'': [3.9474596431116675e-16, 0.1755511391103521]}, {'': [6.41462192005646e-16, 0.16147538484986912]}, {'': [-9.868649107779169e-17, 0.16699049870133412]}, {'': [-3.4540271877227093e-16, 0.1682607421142697]}, {'': [-1.2335811384723961e-17, 0.1614753848498682]}, {'': [-8.635067969306773e-17, 0.17250547845142328]}, {'': [6.1679056923619804e-18, 0.16297500000000034]}, {'': [6.47630097698008e-17, 0.16207229894894953]}, {'': [3.39234813079909e-17, 0.16327786885760695]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5490580260086024;  // std dev = 3,427, 55,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=38 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.10736830627979803;  // std dev = 1,702, 87,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=3 */
%   | | | else return 0.05432118390333925;  // std dev = 5,741, 209,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=41 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.35763374921307056;  // std dev = 0,489, 66,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=38 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10692638826123792;  // std dev = 1,696, 72,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=3 */
%   | | | else return 0.05231107065102548;  // std dev = 5,712, 211,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=41 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,15e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.17019903624545343;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3647448157402247;  // std dev = 3,620, 58,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=38 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09011276078990733;  // std dev = 1,692, 66,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   | | | else return 0.07739019530491432;  // std dev = 5,598, 181,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=41 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.14749103236288882;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.21376337226837586;  // std dev = 3,973, 65,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=38 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.10929732881518973;  // std dev = 1,701, 85,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=3 */
%   | | | else return 0.03677637058054116;  // std dev = 5,700, 216,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=41 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( haswordtitle(A, D), haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.12989274837943118;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.1368799905881133;  // std dev = 4,094, 68,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=38 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return -0.08369867669828296;  // std dev = 1,692, 68,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=3 */
%   | | | else return 0.0342851748623137;  // std dev = 5,677, 218,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=41 */
%   | else return -0.10215950368078272;  // std dev = 0,136, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14071047678372378;  // std dev = 0,477, 66,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=38 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08133388626108529;  // std dev = 1,698, 77,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=3 */
%   | | | else return 0.027269638028774943;  // std dev = 5,696, 216,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=41 */
%   | else return -0.08650247862313125;  // std dev = 0,022, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.04711067076976316;  // std dev = 0,483, 74,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=38 */
%   | | else return -0.10055226907101679;  // std dev = 0,179, 90,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.5547165128540587;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09528504098320072;  // std dev = 0,992, 64,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=1 */
%   | | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | | then return 0.06069796372545957;  // std dev = 5,372, 158,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=38 */
%   | | | else return -0.0801859083537887;  // std dev = 0,018, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.6631272612171254;  // std dev = 1,422, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | else return -0.18149802386692596;  // std dev = 1,714, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | | else if ( haswordauthor(H, D), haswordtitle(A, D) )
%   | | | then return -0.5024752551218568;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0784751241825729;  // std dev = 1,653, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else return -0.07676198379790489;  // std dev = 0,116, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,83e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.11655384301667224;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.00834372874613158;  // std dev = 3,216, 68,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=38 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.0719138656612093;  // std dev = 1,570, 92,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=3 */
%   | | | else return -0.0680788562300122;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return -0.087244205521251;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.04670754241726286;  // std dev = 1,404, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.060577401492566914;  // std dev = 4,562, 145,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=38 */
%   | | | else return -0.06755860557464168;  // std dev = 0,002, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 4,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, B) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.5656565280198389;  // std dev = 0,452, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10392487041059408;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(B, D) )
%   | | | then return -0.03205815550240392;  // std dev = 3,253, 68,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | | | else return -0.08467595550088605;  // std dev = 0,991, 85,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, B) )
%   | | | then return -0.08054230737377976;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.05380124748039198;  // std dev = 1,421, 84,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=3 */
%   | | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return 0.050701181815844855;  // std dev = 4,540, 145,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=38 */
%   | | | else return -0.0641110406281524;  // std dev = 0,009, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.950626
   AUC PR    = 0.689486
   CLL	      = -0.174142
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.612132
   F1        = 0.759407


Total learning time: 32.642 seconds
Total inference time: 126.495 seconds
AUC ROC: 0.950626


Results scoring model
   AUC ROC   = 0.970809
   AUC PR    = 0.772371
   CLL	      = -0.174543
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.833333


Total scoring time: 8.383 seconds
Refined model CLL: -0.174543


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.950626
   AUC PR    = 0.689486
   CLL	      = -0.174142
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.612132
   F1        = 0.759407


Total learning time: 45.05500000000001 seconds
Total inference time: 126.495 seconds
AUC ROC: 0.950626
Total revision time: 45.05500000000001
Best scored revision CLL: -0.174543


Dataset: 10_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:35:16
{'F1': 0.759407, 'AUC ROC': 0.950626, 'parameter': {'F1': 0.605128, 'AUC ROC': 0.716912, 'AUC PR': 0.468238, 'Precision': [1.0, 0.5], 'Inference time': 4.17, 'Learning time': 1.934, 'Recall': 0.433824, 'CLL': -0.234667}, 'AUC PR': 0.689486, 'Precision': [1.0, 0.5], 'Inference time': 126.495, 'Learning time': 45.05500000000001, 'Recall': 0.612132, 'CLL': -0.174142}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.5133213488926165;  // std dev = 0,475, 87,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=57 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.10237738068996138;  // std dev = 0,195, 76,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.09639651944594226;  // std dev = 1,692, 66,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   | | | else return 0.3368723393548287;  // std dev = 6,849, 188,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=90 */
%   else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.43027351521586055;  // std dev = 0,477, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.13051686112189356;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08289781350284596;  // std dev = 1,690, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.0843850928793562;  // std dev = 1,692, 66,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   | | | else return 0.2665560308303267;  // std dev = 7,006, 198,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=90 */
%   else return -0.1254446385283913;  // std dev = 2,58e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.12111035062361548;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.31481226324138156;  // std dev = 0,487, 93,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=57 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.08016153292556533;  // std dev = 0,198, 73,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=3 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.07950390796514502;  // std dev = 1,696, 73,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=3 */
%   | | | else return 0.22709800758876925;  // std dev = 6,977, 196,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=90 */
%   else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2601820782203222;  // std dev = 0,482, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.07075237733037353;  // std dev = 0,200, 72,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=3 */
%   | | else return 0.13993428729573845;  // std dev = 0,465, 246,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=93 */
%   else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2793311778972455;  // std dev = 0,448, 83,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.2720850739804789;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.11083707913005884;  // std dev = 0,991, 61,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=1 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.06445462611024473;  // std dev = 1,696, 73,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=3 */
%   | | | else return 0.16500751580749543;  // std dev = 6,915, 192,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=90 */
%   else return -0.09269127618926105;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1258765792319716;  // std dev = 0,480, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.07789665759639379;  // std dev = 0,188, 77,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06432413902131782;  // std dev = 1,701, 85,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=3 */
%   | | | else return 0.1290276628071054;  // std dev = 6,915, 192,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=90 */
%   else return -0.0851847513883968;  // std dev = 2,17e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.14490884778201477;  // std dev = 0,464, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.4060045136139022;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.08083759164925573;  // std dev = 0,993, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05399560831050284;  // std dev = 1,635, 54,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=3 */
%   | | | else return 0.07194242211829925;  // std dev = 7,092, 204,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=90 */
%   else return -0.07877675473109179;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.23941958704910507;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.15474383156244417;  // std dev = 3,984, 79,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=57 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return -0.09886765720639779;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.052005784613271856;  // std dev = 1,640, 57,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then return -0.05331194528442772;  // std dev = 0,180, 84,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=3 */
%   | | else if ( haswordvenue(J, C) )
%   | | | then return 0.07417623794303885;  // std dev = 6,852, 189,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=87 */
%   | | | else return 0.21385877762557728;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return -0.18616399460193087;  // std dev = 1,024, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.10881873524985085;  // std dev = 0,444, 81,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=57 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.5380342384551703;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06966321993821566;  // std dev = 0,993, 74,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=1 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.04925920427960067;  // std dev = 1,643, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   | | | else return 0.07890794275751624;  // std dev = 6,816, 186,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=90 */
%   else return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07035956695180381;  // std dev = 0,459, 84,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.5343459786669772;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07762795733588986;  // std dev = 0,991, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.0437031433555971;  // std dev = 1,575, 73,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=3 */
%   | | | else return 0.05228207187703979;  // std dev = 6,863, 189,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=90 */
%   else return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.784732
   AUC PR    = 0.077395
   CLL	      = -0.355422
   Precision = 0.11058 at threshold = 0.5
   Recall    = 0.340074
   F1        = 0.166892


Total learning time: 22.979 seconds
Total inference time: 59.348 seconds
AUC ROC: 0.784732


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 02:36:39
{'F1': 0.166892, 'AUC ROC': 0.784732, 'Learning time': 22.979, 'AUC PR': 0.077395, 'Precision': [0.11058, 0.5], 'Inference time': 59.348, 'CLL': -0.355422, 'Recall': 0.340074}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5405018762759836;  // std dev = 0,466, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.11185106490048767;  // std dev = 0,171, 100,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=3 */
%   | | else return 0.21861405137857998;  // std dev = 0,480, 258,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=93 */
%   else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */


Results
   AUC ROC   = 0.744719
   AUC PR    = 0.068284
   CLL	      = -0.208941
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.963 seconds
Total inference time: 2.867 seconds
AUC ROC: 0.744719


Dataset: 10_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 02:36:46
{'F1': nan, 'AUC ROC': 0.744719, 'Learning time': 3.963, 'AUC PR': 0.068284, 'Precision': [nan, 0.5], 'Inference time': 2.867, 'CLL': -0.208941, 'Recall': 0.0}


