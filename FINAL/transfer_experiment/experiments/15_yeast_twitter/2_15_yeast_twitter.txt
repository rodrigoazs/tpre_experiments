Starting experiment #2 for 15_yeast_twitter

Start learning from source dataset

Source train facts examples: 15015
Source train pos examples: 369
Source train neg examples: 51477

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995115;  // std dev = 2,60e-07, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( complex(A, G), complex(C, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.18072958026080319;  // std dev = 5,820, 155,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=50 */
%   | | | else return 0.14032130818097224;  // std dev = 13,098, 847,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=239 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then return 0.7116553448372442;  // std dev = 0,305, 219,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=196 */
%   | | else return -0.16152116240005454;  // std dev = 0,188, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return -0.15919538444761847;  // std dev = 0,119, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( enzyme(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(I, G), enzyme(I, J) )
%   | | | then return 0.10438796105047578;  // std dev = 3,542, 64,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.2253271438463481;  // std dev = 4,205, 75,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.6150659945754885;  // std dev = 1,478, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return 0.1264445609647673;  // std dev = 5,800, 169,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=49 */
%   | | else return 0.11391570793751243;  // std dev = 0,437, 196,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=55 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.5871571370382159;  // std dev = 0,053, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return 0.4188553821123492;  // std dev = 0,352, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12727534211001632;  // std dev = 0,110, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.09007017968684522;  // std dev = 3,973, 99,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
%   | | | else return 0.13361622016989663;  // std dev = 2,842, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( complex(H, G), location(A, I) )
%   | | | then return -0.008239511485437456;  // std dev = 3,102, 82,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=14 */
%   | | | else return 0.15221058975244733;  // std dev = 5,706, 170,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=59 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.2073653332949227;  // std dev = 3,549, 59,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | | else return 0.1480053811950583;  // std dev = 10,007, 512,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=173 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(C, E), phenotype(C, F) )
%   | | then return 0.2689991784940255;  // std dev = 0,638, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4548030518836941;  // std dev = 0,064, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5723318935678596;  // std dev = 0,100, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), enzyme(A, I) )
%   | | then return 0.24394404655035537;  // std dev = 0,885, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4878196188639846;  // std dev = 0,071, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11501681379446052;  // std dev = 0,166, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0.06416677449315977;  // std dev = 4,746, 141,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=38 */
%   | | else if ( location(A, K) )
%   | | | then return 0.08999659637420461;  // std dev = 11,965, 808,000 (wgt'ed) examples reached here.  /* #neg=570 #pos=238 */
%   | | | else return 0.230589895072827;  // std dev = 2,710, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.32493686710969855;  // std dev = 0,234, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( enzyme(A, G), interaction(D, A) )
%   | | | then return 0.32385861118921694;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.40244373130812644;  // std dev = 0,264, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.19415055707726073;  // std dev = 0,723, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.10446620747030239;  // std dev = 0,142, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5214157447153362;  // std dev = 2,800, 59,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=49 */
%   | | | else return 0.03669536329882026;  // std dev = 10,552, 695,000 (wgt'ed) examples reached here.  /* #neg=517 #pos=178 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08481168380618209;  // std dev = 5,056, 144,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
%   | | | else return 0.15502695970280853;  // std dev = 4,430, 96,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=37 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.29755375793772126;  // std dev = 0,201, 60,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=57 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.5793725740818615;  // std dev = 0,466, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.03754867569554897;  // std dev = 1,083, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.172664460383625;  // std dev = 0,948, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | | else return 0.028103744344662496;  // std dev = 5,967, 228,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=61 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( phenotype(G, H), enzyme(A, I) )
%   | | | then return 0.054189348340390485;  // std dev = 2,017, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.1870800687685559;  // std dev = 2,965, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.05661446305946889;  // std dev = 6,501, 247,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=74 */
%   | | | else return 0.09693152334343938;  // std dev = 7,678, 313,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=109 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.17506848598781036;  // std dev = 0,202, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return 0.34903547419645387;  // std dev = 0,103, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( enzyme(E, F), enzyme(A, F) )
%   | | then return -0.1127411343563275;  // std dev = 0,139, 28,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.041794648491104695;  // std dev = 2,345, 105,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=19 */
%   | | | else return -0.0018770490815432376;  // std dev = 2,386, 73,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5745297825688379;  // std dev = 1,621, 62,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=59 */
%   | | | else return -0.19969821283666622;  // std dev = 0,393, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return 0.02185098705990691;  // std dev = 5,977, 230,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=65 */
%   | | | else return 0.06052817199317568;  // std dev = 9,437, 465,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=149 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(C, A) )
%   | | | then return 0.19178708889732918;  // std dev = 0,173, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.1311483317034093;  // std dev = 0,590, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.26144691518352675;  // std dev = 0,088, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.10690893171778011;  // std dev = 0,686, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.07822429152513993;  // std dev = 0,217, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3213268983642565;  // std dev = 1,666, 34,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | | else return -0.019579953852560082;  // std dev = 5,914, 300,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=66 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.20697163308021346;  // std dev = 0,989, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.04583698462985053;  // std dev = 10,496, 633,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=199 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16494152767893092;  // std dev = 0,174, 59,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3437903891490651;  // std dev = 0,259, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.10534188421802156;  // std dev = 1,644, 95,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=7 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return -0.0157512705273053;  // std dev = 3,235, 84,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=21 */
%   | | | else return 0.06263706775162588;  // std dev = 2,650, 40,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( location(A, J), location(I, K) )
%   | | | then return -0.02080161018493302;  // std dev = 2,238, 88,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=20 */
%   | | | else return 0.15683842280613292;  // std dev = 0,659, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return 0.0470752020833726;  // std dev = 10,717, 690,000 (wgt'ed) examples reached here.  /* #neg=462 #pos=228 */
%   | | | else return -0.038647313360658485;  // std dev = 2,721, 41,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, D), location(A, E) )
%   | then return -0.040337412291408956;  // std dev = 0,248, 196,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=53 */
%   | else return 0.020770107971295207;  // std dev = 0,350, 263,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.2554810069567273;  // std dev = 0,266, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else if ( interaction(I, F), enzyme(I, J) )
%   | | | then return 0.003136174703720862;  // std dev = 6,298, 275,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=76 */
%   | | | else return 0.04400027734832723;  // std dev = 7,645, 332,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=113 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.4785095402747211;  // std dev = 0,952, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.20875904056587188;  // std dev = 0,066, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.3752380712617948;  // std dev = 0,827, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4772243664293522;  // std dev = 0,868, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Starting fold 1

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos	 examples: 156
Target test neg examples: 24648

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false,true;interaction(I, A), complex(I, J).;false;false
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, E), phenotype(E, F).;true;false
0;true,false,true;complex(A, G), complex(C, G).;false;false
0;false,false,false;interaction(K, A), interaction(K, K).;false;false
0;false;interaction(A, A).;false;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- phenotype(A, C), location(A, D).;true;true
1;false,false,true;interaction(M, K), recursion_proteinclass(M, B).;false;false
1;true;location(E, D), recursion_proteinclass(E, B).;true;false
1;false,true,false;interaction(I, G), enzyme(I, J).;false;false
1;false,true;enzyme(G, H), recursion_proteinclass(G, B).;false;true
1;true,true;phenotype(E, C).;false;false
1;false;enzyme(A, F), interaction(G, A).;true;true
1;false,false;interaction(K, A), phenotype(K, L).;true;false
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false,true;complex(H, G), location(A, I).;false;false
2;true;interaction(A, D), interaction(C, D).;false;false
2;false,true,false;phenotype(A, F).;false;false
2;false,true;interaction(A, A).;false;true
2;false,false,false;interaction(J, A), interaction(J, J).;false;false
2;false;interaction(A, E), interaction(E, A).;true;true
2;false,false;complex(A, G), interaction(H, A).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,false,true;interaction(A, A).;false;false
3;true;interaction(D, A), interaction(D, D).;true;false
3;false,true;complex(A, H), enzyme(A, I).;false;false
3;true,true;enzyme(C, E), phenotype(C, F).;false;false
3;false,false,false;location(A, K).;false;false
3;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, J), interaction(J, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true,true,false;enzyme(A, G), interaction(D, A).;false;false
4;false,false,true;recursion_proteinclass(I, B).;false;false
4;true;interaction(D, C).;true;false
4;false,false;interaction(H, A), interaction(I, H).;true;true
4;true,true;interaction(A, E), complex(E, F).;false;true
4;false,false,false;interaction(A, J), interaction(J, K).;false;false
4;false;interaction(A, A).;false;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;false;true
5;false,false,true;phenotype(G, H), enzyme(A, I).;false;false
5;false,true,false;interaction(A, E).;false;false
5;false,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
5;false,true,true;interaction(F, E).;false;false
5;false,false,false;interaction(J, A), complex(J, K).;false;false
5;false;interaction(A, D), interaction(E, A).;true;true
5;false,false;interaction(G, A), interaction(G, G).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false,false,true;enzyme(J, I), recursion_proteinclass(J, B).;false;false
6;true;interaction(D, A), interaction(A, D).;false;false
6;false,true,false;complex(A, G).;false;false
6;false,true;enzyme(E, F), enzyme(A, F).;false;true
6;false,false,false;location(A, K), complex(A, L).;false;false
6;false;interaction(A, E), interaction(E, A).;true;true
6;false,false;phenotype(A, H), enzyme(A, I).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;interaction(F, H), recursion_proteinclass(H, B).;false;false
7;true;location(A, D).;true;false
7;false,false;interaction(A, F), complex(F, G).;true;true
7;true,true,true;interaction(C, A).;false;false
7;true,true;interaction(E, A), interaction(E, E).;true;false
7;false,false,false;interaction(I, A), recursion_proteinclass(I, B).;false;false
7;false;interaction(A, A).;false;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;false;true
8;false,false,true;location(A, J), location(I, K).;false;false
8;false,true,false;location(A, H), location(D, H).;false;false
8;false,true;interaction(F, A), interaction(A, F).;true;true
8;false,true,true;interaction(D, G), recursion_proteinclass(G, B).;false;false
8;false,false,false;location(A, L).;false;false
8;false;interaction(A, D), enzyme(D, E).;true;true
8;false,false;interaction(I, A), interaction(A, I).;true;true
9;;proteinclass(A, B) :- interaction(A, C), complex(C, D).;true;true
9;false,false,true;phenotype(L, K), recursion_proteinclass(L, B).;false;false
9;true;complex(A, D), location(A, E).;false;false
9;false,true,false;interaction(I, F), enzyme(I, J).;false;false
9;false,true;interaction(H, F), recursion_proteinclass(H, B).;false;true
9;false,false,false;interaction(A, M), phenotype(M, N).;false;false
9;false;interaction(F, A), location(F, G).;true;true
9;false,false;phenotype(A, K).;true;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | else if ( follows(A, E) )
%   | | then if ( tweets(A, F), tweets(C, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, G), recursion_accounttype(G, B) )
%   | | then if ( follows(H, A), tweets(H, I) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( follows(J, A), follows(J, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.03727590150179496;  // std dev = 5,353, 306,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=32 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then return 0.7276582151215256;  // std dev = 0,177, 130,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=126 */
%   else if ( follows(D, A) )
%   | then if ( recursion_accounttype(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(E, D) )
%   | | | then return -0.13737378555089674;  // std dev = 1,01e-07, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | | | else return -0.13737378555089697;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( follows(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13737378555089705;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(C, D) )
%   | then return 0.5247729924730221;  // std dev = 1,394, 70,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=68 */
%   | else return 0.48667775437778465;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( follows(A, E), follows(E, A) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.02800091800592114;  // std dev = 0,262, 192,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=22 */
%   | else if ( tweets(A, F), follows(G, A) )
%   | | then if ( tweets(G, F) )
%   | | | then return -0.08286219297377344;  // std dev = 0,683, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, A), follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19164640812121805;  // std dev = 3,050, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(D, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.43425310109993337;  // std dev = 0,968, 78,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=77 */
%   else if ( follows(E, A), recursion_accounttype(E, B) )
%   | then if ( tweets(A, F) )
%   | | then return 0.42830114901916305;  // std dev = 0,017, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.42297313893706684;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( follows(A, G), follows(G, A) )
%   | | then if ( follows(A, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.04251498912566577;  // std dev = 3,242, 172,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=15 */
%   | | else return 0.00765488051294359;  // std dev = 0,321, 100,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=17 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C) )
%   | then if ( follows(A, E), tweets(E, F) )
%   | | then return 0.29615398114955443;  // std dev = 1,397, 75,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=73 */
%   | | else if ( follows(D, A) )
%   | | | then return 0.3316379726719351;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3219481518369306;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), follows(H, G) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.622890169457763;  // std dev = 1,312, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.11387673509861249;  // std dev = 0,725, 203,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=1 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.21159297351201334;  // std dev = 1,930, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.11339877805682438;  // std dev = 2,188, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.2630806086575519;  // std dev = 1,067, 78,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=77 */
%   else if ( follows(A, D), follows(E, A) )
%   | then if ( follows(D, F), recursion_accounttype(F, B) )
%   | | then if ( follows(F, E) )
%   | | | then return 0.46970832011182;  // std dev = 1,205, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, E) )
%   | | | then return -0.10348926968682555;  // std dev = 1,10e-07, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | | else return -0.09160147009795129;  // std dev = 0,371, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( follows(G, A), follows(G, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, A), tweets(H, I) )
%   | | | then return -0.02668737505386753;  // std dev = 1,139, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.04864274522019162;  // std dev = 3,010, 67,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then return 0.20702159474960405;  // std dev = 0,951, 72,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=71 */
%   | else return 0.16363702562697366;  // std dev = 0,959, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( follows(A, E), follows(E, A) )
%   | then if ( tweets(A, F) )
%   | | then return -0.03946261738036809;  // std dev = 2,082, 150,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=15 */
%   | | else return -0.048953138152277115;  // std dev = 1,088, 53,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
%   | else if ( recursion_accounttype(G, B) )
%   | | then return 0.4398132021285542;  // std dev = 1,613, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | else if ( tweets(A, H) )
%   | | | then return -0.13377522770002773;  // std dev = 0,289, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.165203283985567;  // std dev = 0,101, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(D, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1813950626805817;  // std dev = 0,999, 78,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=77 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(E, F) )
%   | | then if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.4249257577597279;  // std dev = 1,187, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.07265936557705427;  // std dev = 2,058, 243,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=11 */
%   | | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | | then return 0.079576281784903;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.0891387580056671;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.11883390163034227;  // std dev = 1,927, 81,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=77 */
%   else if ( follows(A, D) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(D, F), recursion_accounttype(F, B) )
%   | | | then return 0.35629361963815087;  // std dev = 0,548, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.08496192424233147;  // std dev = 0,004, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else return 0.023637192439753974;  // std dev = 0,271, 79,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | else if ( follows(G, A), follows(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.012700126082402875;  // std dev = 0,125, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(C, D) )
%   then if ( tweets(A, D) )
%   | then return 5.028391654496702E-4;  // std dev = 2,610, 289,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=87 */
%   | else return 0.02608140717312634;  // std dev = 2,192, 83,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=31 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then return 0.17685149464467464;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( follows(G, E) )
%   | | | then return -0.08312428972493807;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.994523
   AUC PR    = 0.439096
   CLL	      = -0.125957
   Precision = 0.34321 at threshold = 0.5
   Recall    = 0.891026
   F1        = 0.495544


Total learning time: 5.991 seconds
Total inference time: 31.84 seconds
AUC ROC: 0.994523


Results scoring model
   AUC ROC   = 0.993026
   AUC PR    = 0.411695
   CLL	      = -0.120874
   Precision = 0.335244 at threshold = 0.5
   Recall    = 0.928571
   F1        = 0.492632


Total scoring time: 31.023 seconds
Parameter learned model CLL: -0.120874


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,false,true': 'follows(H, A), tweets(H, I)', 'true': 'follows(D, C), recursion_accounttype(D, B)', 'false': 'follows(A, A)', 'true,false,true': 'tweets(A, F), tweets(C, F)', 'false,false,false': 'follows(J, A), follows(J, J)', 'true,false': 'follows(A, E)', 'false,false': 'follows(A, G), recursion_accounttype(G, B)'}, {'false,false,true,false': [0.0, 0, 4], 'true,true': [0.0, 0, 80], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,false,false,false': [5.353, 274, 32], 'true,false,true,true': [0.0, 0, 1], 'false,false,true,true': [0.943, 1, 8], 'true,false,true,false': [0.0, 0, 1]}], ['accounttype(A, B)', {'': 'recursion_accounttype(C, B)', 'false,true,false': 'follows(E, D)', 'false,true': 'recursion_accounttype(D, B)', 'false': 'follows(D, A)', 'false,false': 'follows(F, A)'}, {'false,true,false,false': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.177, 4, 126], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.01e-07, 173, 0], 'false,false,false': [0.0, 40, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,false,true': 'tweets(G, F)', 'true': 'follows(A, D), follows(C, D)', 'false,true': 'follows(A, A)', 'false,false,false': 'follows(H, A), follows(H, H)', 'false': 'follows(A, E), follows(E, A)', 'false,false': 'tweets(A, F), follows(G, A)'}, {'false,false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,false': [0.262, 170, 22], 'true,true': [1.394, 2, 68], 'false,false,false,false': [3.05, 35, 21], 'false,false,true,true': [0.683, 17, 1], 'true,false': [0.966, 1, 14]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false,false,true': 'follows(A, A)', 'true': 'follows(D, A), follows(D, D)', 'false,true': 'tweets(A, F)', 'false': 'follows(E, A), recursion_accounttype(E, B)', 'false,false': 'follows(A, G), follows(G, A)'}, {'false,false,true,false': [3.242, 157, 15], 'false,true,true': [0.017, 0, 14], 'true,true': [0.0, 0, 0], 'false,true,false': [1.05e-08, 0, 3], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.321, 83, 17], 'true,false': [0.968, 1, 77]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,false,true': 'recursion_accounttype(H, B)', 'true,true,false': 'follows(D, A)', 'false,false': 'follows(G, A), follows(H, G)', 'false,false,false': 'follows(A, I), follows(I, J)', 'true,true': 'follows(A, E), tweets(E, F)', 'true': 'follows(D, C)', 'false': 'follows(A, A)'}, {'false,false,true,false': [0.725, 202, 1], 'true,true,false,true': [0.0, 0, 8], 'true,false': [0.0, 0, 1], 'true,true,true': [1.397, 2, 73], 'false,false,false,true': [1.93, 13, 11], 'false,false,false,false': [2.188, 22, 10], 'false,false,true,true': [1.312, 1, 22], 'true,true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false,true,true': 'follows(F, E)', 'false,true': 'follows(D, F), recursion_accounttype(F, B)', 'false,true,false': 'follows(A, E)', 'false,false,false': 'follows(H, A), tweets(H, I)', 'false': 'follows(A, D), follows(E, A)', 'false,false': 'follows(G, A), follows(G, G)'}, {'false,true,false,false': [0.371, 14, 1], 'false,false,true': [0.0, 0, 0], 'true': [1.067, 1, 77], 'false,true,true,true': [1.205, 1, 23], 'false,false,false,true': [1.139, 22, 8], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [1.1e-07, 189, 0], 'false,false,false,false': [3.01, 50, 17]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'true': 'follows(D, A), follows(A, D)', 'false,true': 'tweets(A, F)', 'false,false,false': 'tweets(A, H)', 'false': 'follows(A, E), follows(E, A)', 'false,false': 'recursion_accounttype(G, B)'}, {'false,false,true': [1.613, 2, 29], 'false,true,false': [1.088, 48, 5], 'false,false,false,false': [0.101, 27, 0], 'false,true,true': [2.082, 135, 15], 'true,true': [0.951, 1, 71], 'false,false,false,true': [0.289, 60, 0], 'true,false': [0.959, 1, 6]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false,false,true': 'follows(E, G), recursion_accounttype(G, B)', 'true': 'follows(D, A), follows(D, D)', 'false,false': 'follows(A, E), tweets(E, F)', 'false,false,false': 'follows(H, A), recursion_accounttype(H, B)', 'false': 'follows(A, A)'}, {'false,false,true,false': [2.058, 232, 11], 'false,false,true,true': [1.187, 1, 30], 'false,true': [0.0, 0, 0], 'false,false,false,false': [7.45e-09, 11, 0], 'true,true': [0.0, 0, 0], 'false,false,false,true': [0.943, 1, 8], 'true,false': [0.999, 1, 77]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false,true,true': 'follows(D, F), recursion_accounttype(F, B)', 'false,true': 'follows(E, A), follows(A, E)', 'false': 'follows(A, D)', 'false,false': 'follows(G, A), follows(A, G)'}, {'false,false,true': [0.0, 0, 0], 'true': [1.927, 4, 77], 'false,true,false': [0.271, 58, 21], 'false,true,true,true': [0.548, 0, 20], 'false,true,true,false': [0.004, 166, 0], 'false,false,false': [0.125, 14, 8]}], ['accounttype(A, B)', {'': 'follows(A, C), tweets(C, D)', 'true': 'tweets(A, D)', 'false,true,false': 'follows(G, E)', 'false,true': 'follows(F, E), recursion_accounttype(F, B)', 'false': 'follows(E, A)'}, {'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 8], 'false,false': [0.0, 0, 0], 'false,true,false,true': [7.45e-09, 18, 0], 'true,true': [2.61, 202, 87], 'true,false': [2.192, 52, 31]}]]
[{'': [-6.932124251318051e-16, 0.11890606420927553], 'true,false': [0.0, nan], 'false,false,true': [0.09876543209876527, 0.0], 'true': [-7.993605777301127e-16, 0.0], 'false,false': [0.07100591715976314, 0.0936391985988305], 'true,false,true': [0.0, 0.0], 'false,false,false': [nan, 0.09363919859882895], 'false': [nan, 0.11890606420927576]}, {'': [0.03135382643353397, 1.2572388589362503e-16], 'false,true,false': [5.904076200318751e-17, 0.0], 'false,true': [nan, 7.194741388632299e-17], 'false': [7.194741388632299e-17, -2.4980018054066023e-17], 'false,false': [nan, -2.4980018054066023e-17]}, {'': [0.034048442906575195, 0.09497278335225122], 'false,false,true': [0.025894337591669994, nan], 'true': [0.02775510204081699, 0.06222222222222227], 'false,false': [0.025894337591669994, 0.16612541794206415], 'false,false,false': [nan, 0.16612541794206376], 'false': [0.06884826763422537, 0.145886194571904], 'false,true': [nan, 0.06884826763422537]}, {'': [0.012012127988184122, 0.0837573224673566], 'false,false,true': [nan, 0.06110937625023879], 'true': [nan, 0.01201212798818419], 'false,false': [0.06110937625023879, 0.10274880485519843], 'false': [2.1659120973574966e-05, 0.07700315233900466], 'false,true': [2.1290768576090864e-05, 3.700743415417188e-17]}, {'': [0.023335061471260306, 0.08440353710984848], 'true,true,false': [-2.7755575615628914e-17, nan], 'false,false,true': [0.07485887194675386, 0.0025911956436371246], 'true': [0.023610247301132897, 0.0], 'false,false': [0.05956706510396131, 0.154356592290001], 'true,true': [0.026007313327692964, -2.7755575615628914e-17], 'false,false,false': [0.15527075681116045, 0.14953864031866448], 'false': [nan, 0.08440353710984862]}, {'': [0.014588937665416975, 0.05974050334076734], 'false,true,true': [0.060531056816224206, nan], 'false,false': [nan, 0.1080151871649205], 'false,true,false': [6.344131569286608e-17, 0.009177023981118628], 'false,false,false': [0.04323759620427447, 0.13526503935514464], 'false': [0.03783403306686323, 0.1080151871649205], 'false,true': [0.060531056816224206, 0.0006844082794087479]}, {'': [0.023230519218990078, 0.05049729810176042], 'true': [0.012555341960414863, 0.13131690067368423], 'false,false': [0.08389221957223418, 0.0012867602699933264], 'false,false,false': [0.0013890555700550792, 0.00037824929690710306], 'false': [0.02719339686229449, 0.08890002478308666], 'false,true': [0.028889812033098473, 0.022325667674830723]}, {'': [0.012786414179532772, 0.045848839392494525], 'false,false,true': [0.04544258412378687, 0.017423541817313936], 'true': [nan, 0.01278641417953276], 'false,false': [0.0454364408677516, 0.05148947369569903], 'false,false,false': [0.09876543209876543, 5.046468293750712e-18], 'false': [nan, 0.045848839392494505]}, {'': [0.045846092074876964, 0.03540751282067895], 'false,true,true': [0.01499400420257988, 9.388210550865631e-08], 'false,true': [0.020297318330296812, 0.07357044677626297], 'false': [0.0369612222596978, 0.015747762445939933], 'false,false': [nan, 0.015747762445939933]}, {'': [0.03134880218064557, 0.014397317778162342], 'true': [0.02357811201422337, 0.057897498528643426], 'false,true,false': [3.0839528461809902e-18, nan], 'false,true': [0.0, 3.0839528461809902e-18], 'false': [0.014397317778162342, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;true;true
0;false;follows(A, G), recursion_accounttype(G, B).;true;true
0;true,false;tweets(A, F), tweets(C, F).;true;true
0;false,true;follows(H, A), tweets(H, I).;true;true
1;;accounttype(A, B) :- recursion_accounttype(C, B).;true;true
1;false,true;follows(E, D).;true;true
1;false;follows(D, A).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,true;tweets(A, F).;true;true
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true,true;follows(A, E), tweets(E, F).;true;true
4;true;follows(D, C).;true;true
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;false,true,false;follows(A, E).;true;true
5;false,true;follows(D, F), recursion_accounttype(F, B).;true;true
5;false;follows(A, D), follows(E, A).;true;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false,false;tweets(A, H).;true;true
6;false,false;recursion_accounttype(G, B).;true;true
6;false;follows(A, E), follows(E, A).;true;true
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;false;follows(A, E), tweets(E, F).;true;true
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;false,true,true;follows(D, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(E, A), follows(A, E).;true;true
8;false;follows(A, D).;true;true
9;;accounttype(A, B) :- follows(A, C), tweets(C, D).;true;true
9;false;follows(F, E), recursion_accounttype(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then if ( tweets(F, E), recursion_accounttype(F, B) )
%   | | | then return 0.8348931211460235;  // std dev = 0,988, 43,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), recursion_accounttype(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.1418510649004883;  // std dev = 0,000, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.11529179224236952;  // std dev = 2,586, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.2059750220560341;  // std dev = 2,284, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then if ( follows(D, A) )
%   | then if ( recursion_accounttype(D, B), tweets(A, E) )
%   | | then if ( follows(D, F), follows(F, A) )
%   | | | then return 0.689331046814795;  // std dev = 1,388, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return 0.5393533064569002;  // std dev = 1,278, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.7194734122109542;  // std dev = 1,03e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return 0.8151947362182668;  // std dev = 0,214, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( follows(G, A) )
%   | then if ( follows(H, G) )
%   | | then return -0.12544463852839172;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | | else return -0.12544463852839133;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.16205782433076305;  // std dev = 0,040, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then if ( tweets(A, E) )
%   | | then return 0.5724231997751668;  // std dev = 0,012, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.36279666572651614;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(G, A), follows(F, G) )
%   | | then return 0.3886997700796179;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.5417980847906122;  // std dev = 0,012, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), recursion_accounttype(I, B) )
%   | | | then return 0.4928664367462846;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.11231637819360667;  // std dev = 0,000, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.07711429415697992;  // std dev = 2,037, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.060327510725348546;  // std dev = 2,186, 37,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), follows(E, A) )
%   | then if ( follows(A, F), follows(F, E) )
%   | | then if ( recursion_accounttype(F, B), recursion_accounttype(E, B) )
%   | | | then return 0.40141226972230903;  // std dev = 0,990, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return 0.2520080688619078;  // std dev = 1,789, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | else return 0.45906496980298356;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4155674744481526;  // std dev = 0,013, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( follows(G, A), recursion_accounttype(G, B) )
%   | then return 0.4510100248204744;  // std dev = 0,024, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), recursion_accounttype(I, B) )
%   | | | then return 0.43278710319860436;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.10159632948783652;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.15545328520585752;  // std dev = 2,004, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.07220577969123824;  // std dev = 1,990, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C) )
%   | then return 0.3265304604971308;  // std dev = 0,114, 82,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=81 */
%   | else return 0.3477394942460783;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( tweets(A, G), follows(A, E) )
%   | | | then return 0.34832992348123804;  // std dev = 0,115, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.2048116663104296;  // std dev = 0,873, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.09269127618926057;  // std dev = 6,45e-09, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.5676836339100504;  // std dev = 0,528, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.16500170718881318;  // std dev = 0,005, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.047270836538903044;  // std dev = 1,372, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.025811912453031244;  // std dev = 1,648, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then if ( recursion_accounttype(E, B), tweets(A, F) )
%   | | | then return 0.2661955574516427;  // std dev = 0,051, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0.10805123017240807;  // std dev = 1,807, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else return 0.27178969934474706;  // std dev = 0,016, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.27958706328085803;  // std dev = 0,049, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( follows(A, G), follows(H, A) )
%   | then if ( follows(G, I), recursion_accounttype(I, B) )
%   | | then return 0.261823480054675;  // std dev = 0,013, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.0838467144453324;  // std dev = 0,026, 203,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=1 */
%   | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | then return 0.29156049988190524;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tweets(A, K) )
%   | | | then return -0.008089354985930242;  // std dev = 1,756, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | | else return 0.1267131803173764;  // std dev = 1,845, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), follows(E, D) )
%   | | then if ( recursion_accounttype(E, B) )
%   | | | then return 0.22001299109774855;  // std dev = 0,059, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return 0.14037995505412507;  // std dev = 1,308, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else if ( follows(F, D), follows(A, F) )
%   | | | then return -0.12695182497410637;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2274327310643269;  // std dev = 0,054, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tweets(A, G), follows(H, A) )
%   | | then return 0.0012386433504559674;  // std dev = 0,440, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.19987984053956812;  // std dev = 0,106, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( follows(A, I), follows(I, A) )
%   | then return -0.05317691216775636;  // std dev = 0,102, 200,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=20 */
%   | else if ( recursion_accounttype(J, B) )
%   | | then return 0.43004587702254077;  // std dev = 0,167, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.11901348087370481;  // std dev = 0,040, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A) )
%   | then if ( recursion_accounttype(D, B) )
%   | | then return 0.19707307624768022;  // std dev = 0,023, 65,000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.24284564214899845;  // std dev = 0,023, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1515188230818916;  // std dev = 0,065, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( follows(A, E), tweets(E, F) )
%   | then if ( follows(G, A), recursion_accounttype(G, B) )
%   | | then if ( follows(A, H), follows(H, A) )
%   | | | then return 0.21226727298547968;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1704758742048711;  // std dev = 0,054, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( follows(I, A) )
%   | | | then return -0.052219626298995896;  // std dev = 1,121, 200,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=15 */
%   | | | else return 0.05279050890709028;  // std dev = 2,063, 52,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | then return 0.1666686670333848;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07578792929919341;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( tweets(D, E), tweets(A, E) )
%   | | then if ( follows(A, F), follows(F, D) )
%   | | | then return 0.13823483424133653;  // std dev = 0,946, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return 0.17655652646927172;  // std dev = 0,051, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17318485065593378;  // std dev = 0,021, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.17847496263606336;  // std dev = 0,040, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( follows(A, G) )
%   | then if ( follows(H, A), follows(A, H) )
%   | | then return -0.041974840213639404;  // std dev = 0,089, 198,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=20 */
%   | | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | | then return 0.1478092914473756;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.010169971476624344;  // std dev = 2,165, 79,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | then return 0.1447863421141372;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07064716724370688;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(C, D) )
%   then if ( follows(E, A), recursion_accounttype(E, B) )
%   | then if ( follows(A, F), follows(E, F) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return 0.1424213067346556;  // std dev = 0,081, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.0756296613140712;  // std dev = 1,345, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else if ( tweets(A, G), tweets(E, G) )
%   | | | then return -0.17033910609669844;  // std dev = 0,843, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13199090959848309;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.19915867745858254;  // std dev = 1,635, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return -0.07759468872580788;  // std dev = 0,352, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.02448434692138781;  // std dev = 0,897, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.03221257414216153;  // std dev = 1,286, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else return -0.008692079650069516;  // std dev = 0,089, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */


Results
   AUC ROC   = 0.993479
   AUC PR    = 0.322786
   CLL	      = -0.115599
   Precision = 0.334081 at threshold = 0.5
   Recall    = 0.955128
   F1        = 0.495017


Total learning time: 23.956 seconds
Total inference time: 128.39 seconds
AUC ROC: 0.993479


Results scoring model
   AUC ROC   = 0.993232
   AUC PR    = 0.383856
   CLL	      = -0.109672
   Precision = 0.336 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.502994


Total scoring time: 112.31700000000001 seconds
Refined model CLL: -0.109672


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.993479
   AUC PR    = 0.322786
   CLL	      = -0.115599
   Precision = 0.334081 at threshold = 0.5
   Recall    = 0.955128
   F1        = 0.495017


Total learning time: 173.287 seconds
Total inference time: 128.39 seconds
AUC ROC: 0.993479
Total revision time: 173.287
Best scored revision CLL: -0.109672


Dataset: 15_yeast_twitter, Fold: 1, Type: Transfer (trRDN-B), Time: 09:07:26
{'Learning time': 173.287, 'F1': 0.495017, 'Precision': [0.334081, 0.5], 'Recall': 0.955128, 'Inference time': 128.39, 'parameter': {'Learning time': 5.991, 'F1': 0.495544, 'Precision': [0.34321, 0.5], 'Recall': 0.891026, 'Inference time': 31.84, 'CLL': -0.125957, 'AUC ROC': 0.994523, 'AUC PR': 0.439096}, 'CLL': -0.115599, 'AUC ROC': 0.993479, 'AUC PR': 0.322786}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then return 0.8173326085688999;  // std dev = 0,198, 49,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(F, G), follows(A, G) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.12116140972807399;  // std dev = 1,714, 145,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=3 */
%   | | | else return -0.003920030417729039;  // std dev = 3,216, 87,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.06327714022771751;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.1795775065280838;  // std dev = 2,471, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(C, E) )
%   | then if ( tweets(A, F), tweets(C, F) )
%   | | then return 0.6479756594506433;  // std dev = 0,271, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0.7244760478967236;  // std dev = 0,044, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( tweets(A, G), tweets(C, G) )
%   | | then return 0.3289931222161078;  // std dev = 1,070, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7670719622367216;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( follows(H, A), follows(A, H) )
%   | then if ( follows(H, I), recursion_accounttype(I, B) )
%   | | then return 0.8258838054718719;  // std dev = 0,062, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.13218283570496456;  // std dev = 0,076, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( follows(K, A) )
%   | | | then return -0.133984895833506;  // std dev = 0,033, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.15235353801094037;  // std dev = 3,422, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.5717455126742236;  // std dev = 0,183, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E) )
%   | | then return 0.5870041571685746;  // std dev = 0,108, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.1965543765494428;  // std dev = 1,072, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( follows(F, A) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return -0.09827990746586909;  // std dev = 1,481, 168,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=3 */
%   | | | else return 0.003502046183210891;  // std dev = 2,720, 79,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=12 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.13751473838976055;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.12310852691188309;  // std dev = 2,491, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, E) )
%   | then return 0.41865250502060636;  // std dev = 0,116, 74,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=73 */
%   | else return 0.3135357217784606;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then if ( follows(A, H), recursion_accounttype(H, B) )
%   | | | then return 0.44620261301385944;  // std dev = 0,145, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.7342932098576994;  // std dev = 0,064, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.11214277791521685;  // std dev = 0,155, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( recursion_accounttype(J, B) )
%   | | | then return 0.6212527282578755;  // std dev = 1,257, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.1904861207657453;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.04330449860927832;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.05649548063300919;  // std dev = 2,046, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.334407434068622;  // std dev = 0,161, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( follows(D, F), follows(F, A) )
%   | | | then return 0.12147791087836209;  // std dev = 1,348, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.4723812462119657;  // std dev = 0,498, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.10007590007401802;  // std dev = 0,129, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else if ( follows(A, G), recursion_accounttype(G, B) )
%   | | then return 0.39179800882256144;  // std dev = 0,178, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.06034502594898482;  // std dev = 2,373, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.08957005116817357;  // std dev = 2,253, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, C) )
%   | then return 0.2473905406939703;  // std dev = 0,126, 62,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=61 */
%   | else return 0.2680279221809078;  // std dev = 0,090, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( tweets(A, G), follows(A, F) )
%   | | | then return 0.06740548664077751;  // std dev = 0,844, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4394727623029148;  // std dev = 0,374, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.09100471979328502;  // std dev = 0,124, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.45759610643635656;  // std dev = 1,386, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.17221831679500146;  // std dev = 0,008, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.22023655809637627;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.12313286137779196;  // std dev = 1,856, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D) )
%   | then return 0.1935376849479751;  // std dev = 0,166, 69,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=67 */
%   | else if ( follows(A, E), follows(C, E) )
%   | | then if ( recursion_accounttype(E, B) )
%   | | | then return 0.20508331887317116;  // std dev = 1,29e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.03212370562556174;  // std dev = 0,906, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.13159393524699634;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( follows(F, A) )
%   | then return -0.047553991843258765;  // std dev = 0,132, 226,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=23 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.4667367820358619;  // std dev = 0,579, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1496989556477407;  // std dev = 0,009, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( tweets(A, I) )
%   | | | then return -0.0542918680227053;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.044077509568150194;  // std dev = 1,938, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(D, C) )
%   | then return 0.1885861733283933;  // std dev = 0,079, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else return 0.13014216256343505;  // std dev = 0,246, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, F), tweets(A, G) )
%   | | | then return -0.02771509811116013;  // std dev = 1,032, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.34900962916138834;  // std dev = 0,341, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.08042318765431426;  // std dev = 0,103, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.2999293006496094;  // std dev = 1,779, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.18787372465455307;  // std dev = 0,328, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.061969220558188175;  // std dev = 0,830, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.17317543201495753;  // std dev = 1,725, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D) )
%   | then return 0.14941804691581587;  // std dev = 0,121, 68,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=67 */
%   | else if ( follows(C, E), follows(E, A) )
%   | | then return 0.15442068355615335;  // std dev = 0,029, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return -0.17756360264487644;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18603140737572552;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then if ( follows(A, H), follows(H, G) )
%   | | then return 0.18806531489095557;  // std dev = 0,138, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.08282859786067595;  // std dev = 0,943, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(I, A) )
%   | | then return -0.049173286267836416;  // std dev = 0,095, 220,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=15 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.02369058084757029;  // std dev = 1,275, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.04608105016793814;  // std dev = 2,368, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( tweets(E, D), recursion_accounttype(E, B) )
%   | then if ( follows(A, F), recursion_accounttype(F, B) )
%   | | then return 0.11904630312975387;  // std dev = 0,168, 61,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | | else return 0.21987875313082855;  // std dev = 0,097, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.07008757402274172;  // std dev = 0,073, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.12977934415733672;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.04719048005741642;  // std dev = 0,897, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.17027412702500502;  // std dev = 0,089, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | then return 0.14297457903243962;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.0573783326525071;  // std dev = 0,741, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | | else return 0.004913700377695849;  // std dev = 2,742, 64,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */


Results
   AUC ROC   = 0.992561
   AUC PR    = 0.342308
   CLL	      = -0.128206
   Precision = 0.351759 at threshold = 0.5
   Recall    = 0.897436
   F1        = 0.505415


Total learning time: 17.893 seconds
Total inference time: 44.157 seconds
AUC ROC: 0.992561


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN-B), Time: 09:08:29
{'Learning time': 17.893, 'CLL': -0.128206, 'Recall': 0.897436, 'Inference time': 44.157, 'F1': 0.505415, 'Precision': [0.351759, 0.5], 'AUC ROC': 0.992561, 'AUC PR': 0.342308}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.8146706742299468;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048843;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else if ( tweets(A, F) )
%   | | then if ( tweets(G, F), recursion_accounttype(G, B) )
%   | | | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.25814893509951237;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */


Results
   AUC ROC   = 0.98271
   AUC PR    = 0.368386
   CLL	      = -0.150899
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.974 seconds
Total inference time: 5.059 seconds
AUC ROC: 0.98271


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN), Time: 09:08:37
{'Learning time': 2.974, 'CLL': -0.150899, 'Recall': 0.0, 'Inference time': 5.059, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.98271, 'AUC PR': 0.368386}


Starting fold 2

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos	 examples: 126
Target test neg examples: 16128

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false,true;interaction(I, A), complex(I, J).;false;false
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, E), phenotype(E, F).;true;false
0;true,false,true;complex(A, G), complex(C, G).;false;false
0;false,false,false;interaction(K, A), interaction(K, K).;false;false
0;false;interaction(A, A).;false;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- phenotype(A, C), location(A, D).;true;true
1;false,false,true;interaction(M, K), recursion_proteinclass(M, B).;false;false
1;true;location(E, D), recursion_proteinclass(E, B).;true;false
1;false,true,false;interaction(I, G), enzyme(I, J).;false;false
1;false,true;enzyme(G, H), recursion_proteinclass(G, B).;false;true
1;true,true;phenotype(E, C).;false;false
1;false;enzyme(A, F), interaction(G, A).;true;true
1;false,false;interaction(K, A), phenotype(K, L).;true;false
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false,true;complex(H, G), location(A, I).;false;false
2;true;interaction(A, D), interaction(C, D).;false;false
2;false,true,false;phenotype(A, F).;false;false
2;false,true;interaction(A, A).;false;true
2;false,false,false;interaction(J, A), interaction(J, J).;false;false
2;false;interaction(A, E), interaction(E, A).;true;true
2;false,false;complex(A, G), interaction(H, A).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,false,true;interaction(A, A).;false;false
3;true;interaction(D, A), interaction(D, D).;true;false
3;false,true;complex(A, H), enzyme(A, I).;false;false
3;true,true;enzyme(C, E), phenotype(C, F).;false;false
3;false,false,false;location(A, K).;false;false
3;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, J), interaction(J, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true,true,false;enzyme(A, G), interaction(D, A).;false;false
4;false,false,true;recursion_proteinclass(I, B).;false;false
4;true;interaction(D, C).;true;false
4;false,false;interaction(H, A), interaction(I, H).;true;true
4;true,true;interaction(A, E), complex(E, F).;false;true
4;false,false,false;interaction(A, J), interaction(J, K).;false;false
4;false;interaction(A, A).;false;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;false;true
5;false,false,true;phenotype(G, H), enzyme(A, I).;false;false
5;false,true,false;interaction(A, E).;false;false
5;false,true;interaction(D, F), recursion_proteinclass(F, B).;true;true
5;false,true,true;interaction(F, E).;false;false
5;false,false,false;interaction(J, A), complex(J, K).;false;false
5;false;interaction(A, D), interaction(E, A).;true;true
5;false,false;interaction(G, A), interaction(G, G).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false,false,true;enzyme(J, I), recursion_proteinclass(J, B).;false;false
6;true;interaction(D, A), interaction(A, D).;false;false
6;false,true,false;complex(A, G).;false;false
6;false,true;enzyme(E, F), enzyme(A, F).;false;true
6;false,false,false;location(A, K), complex(A, L).;false;false
6;false;interaction(A, E), interaction(E, A).;true;true
6;false,false;phenotype(A, H), enzyme(A, I).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;interaction(F, H), recursion_proteinclass(H, B).;false;false
7;true;location(A, D).;true;false
7;false,false;interaction(A, F), complex(F, G).;true;true
7;true,true,true;interaction(C, A).;false;false
7;true,true;interaction(E, A), interaction(E, E).;true;false
7;false,false,false;interaction(I, A), recursion_proteinclass(I, B).;false;false
7;false;interaction(A, A).;false;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;false;true
8;false,false,true;location(A, J), location(I, K).;false;false
8;false,true,false;location(A, H), location(D, H).;false;false
8;false,true;interaction(F, A), interaction(A, F).;true;true
8;false,true,true;interaction(D, G), recursion_proteinclass(G, B).;false;false
8;false,false,false;location(A, L).;false;false
8;false;interaction(A, D), enzyme(D, E).;true;true
8;false,false;interaction(I, A), interaction(A, I).;true;true
9;;proteinclass(A, B) :- interaction(A, C), complex(C, D).;true;true
9;false,false,true;phenotype(L, K), recursion_proteinclass(L, B).;false;false
9;true;complex(A, D), location(A, E).;false;false
9;false,true,false;interaction(I, F), enzyme(I, J).;false;false
9;false,true;interaction(H, F), recursion_proteinclass(H, B).;false;true
9;false,false,false;interaction(A, M), phenotype(M, N).;false;false
9;false;interaction(F, A), location(F, G).;true;true
9;false,false;phenotype(A, K).;true;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.8121719236052591;  // std dev = 1,953, 87,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=83 */
%   | else if ( follows(A, E) )
%   | | then if ( tweets(A, F), tweets(C, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, G), recursion_accounttype(G, B) )
%   | | then if ( follows(H, A), tweets(H, I) )
%   | | | then return 0.5248156017661789;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( follows(J, A), follows(J, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.016043671941617283;  // std dev = 6,928, 361,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=57 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then return 0.7514953418378512;  // std dev = 0,169, 160,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=156 */
%   else if ( follows(D, A) )
%   | then if ( recursion_accounttype(D, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(E, D) )
%   | | | then return -0.1438152948819243;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | | | else return -0.14381529488192366;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( follows(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14381529488192346;  // std dev = 6,66e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(C, D) )
%   | then return 0.5584704896418758;  // std dev = 0,016, 67,000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return 0.5588097124115537;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( follows(A, E), follows(E, A) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.033606260082155545;  // std dev = 0,264, 170,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=19 */
%   | else if ( tweets(A, F), follows(G, A) )
%   | | then if ( tweets(G, F) )
%   | | | then return -0.0901929424482435;  // std dev = 1,121, 44,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=2 */
%   | | | else return 0.04588059984615335;  // std dev = 0,773, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(H, A), follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14165744984393544;  // std dev = 4,827, 152,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=49 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(D, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.4132974398338347;  // std dev = 1,610, 81,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=78 */
%   else if ( follows(E, A), recursion_accounttype(E, B) )
%   | then if ( tweets(A, F) )
%   | | then return 0.4194706723205051;  // std dev = 0,011, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.42009975520295656;  // std dev = 6,75e-05, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( follows(A, G), follows(G, A) )
%   | | then if ( follows(A, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.05697741495652818;  // std dev = 3,118, 183,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=14 */
%   | | else return 0.030799527083431914;  // std dev = 0,337, 218,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=43 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C) )
%   | then if ( follows(A, E), tweets(E, F) )
%   | | then return 0.29533009928711557;  // std dev = 1,394, 70,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=68 */
%   | | else if ( follows(D, A) )
%   | | | then return 0.3225685751352823;  // std dev = 0,000132, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.32244094035968873;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.31335148029078136;  // std dev = 0,000939, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(G, A), follows(H, G) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.69975341305256;  // std dev = 0,423, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.11100029901081415;  // std dev = 1,071, 193,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=2 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.115809522725505;  // std dev = 3,754, 96,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | | else return 0.10977767238858961;  // std dev = 2,761, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.27260313009377396;  // std dev = 1,121, 79,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=78 */
%   else if ( follows(A, D), follows(E, A) )
%   | then if ( follows(D, F), recursion_accounttype(F, B) )
%   | | then if ( follows(F, E) )
%   | | | then return 0.543824181549718;  // std dev = 0,538, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.2555919915102791;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( follows(A, E) )
%   | | | then return -0.10627618254822802;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | | else return -0.04823787639091712;  // std dev = 0,895, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else if ( follows(G, A), follows(G, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, A), tweets(H, I) )
%   | | | then return 0.022439880118673736;  // std dev = 1,430, 51,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.08319434268601585;  // std dev = 4,474, 137,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(A, D) )
%   | then return 0.2068670077082326;  // std dev = 0,930, 68,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=67 */
%   | else return 0.17392750516899197;  // std dev = 1,239, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( follows(A, E), follows(E, A) )
%   | then if ( tweets(A, F) )
%   | | then return -0.04537610518160942;  // std dev = 1,963, 149,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=14 */
%   | | else return -0.07771275581351862;  // std dev = 0,557, 30,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | else if ( recursion_accounttype(G, B) )
%   | | then return 0.5252984740135138;  // std dev = 1,554, 63,000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | else if ( tweets(A, H) )
%   | | | then return -0.13978740853017418;  // std dev = 0,307, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | | else return -0.17022986447157012;  // std dev = 0,075, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(D, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1638089302685182;  // std dev = 1,726, 81,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=78 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(E, F) )
%   | | then if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.4717729852379644;  // std dev = 0,821, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.0975408053817366;  // std dev = 1,575, 263,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=6 */
%   | | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | | then return 0.16626538389189924;  // std dev = 0,000104, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.0029859397939283215;  // std dev = 2,084, 68,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.14002301834369113;  // std dev = 1,680, 81,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=78 */
%   else if ( follows(A, D) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(D, F), recursion_accounttype(F, B) )
%   | | | then return 0.35053811802850193;  // std dev = 0,240, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.08447956252581915;  // std dev = 0,011, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | | else return 0.01164323782006623;  // std dev = 0,245, 129,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=35 */
%   | else if ( follows(G, A), follows(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.04306375248617286;  // std dev = 0,243, 75,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(C, D) )
%   then if ( tweets(A, D) )
%   | then return -0.004359641807583735;  // std dev = 3,031, 321,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=97 */
%   | else return 0.01434567488678829;  // std dev = 1,998, 97,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then return 0.17244436183812703;  // std dev = 0,377, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( follows(G, E) )
%   | | | then return -0.10783946512604023;  // std dev = 0,052, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( recursion_accounttype(H, B) )
%   | | then return 0.44056938985746075;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( follows(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.15789261537643437;  // std dev = 0,009, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.993203
   AUC PR    = 0.419525
   CLL	      = -0.119917
   Precision = 0.331445 at threshold = 0.5
   Recall    = 0.928571
   F1        = 0.488518


Total learning time: 6.611 seconds
Total inference time: 31.474 seconds
AUC ROC: 0.993203


Results scoring model
   AUC ROC   = 0.994364
   AUC PR    = 0.424164
   CLL	      = -0.124869
   Precision = 0.334812 at threshold = 0.5
   Recall    = 0.967949
   F1        = 0.497529


Total scoring time: 33.082 seconds
Parameter learned model CLL: -0.124869


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,false,true': 'follows(H, A), tweets(H, I)', 'true': 'follows(D, C), recursion_accounttype(D, B)', 'false': 'follows(A, A)', 'true,false,true': 'tweets(A, F), tweets(C, F)', 'false,false,false': 'follows(J, A), follows(J, J)', 'true,false': 'follows(A, E)', 'false,false': 'follows(A, G), recursion_accounttype(G, B)'}, {'false,false,true,false': [0.0, 0, 8], 'true,true': [1.953, 4, 83], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,false,false,false': [6.928, 304, 57], 'true,false,true,true': [0.0, 0, 2], 'false,false,true,true': [1.414, 3, 6], 'true,false,true,false': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'recursion_accounttype(C, B)', 'false,true,false': 'follows(E, D)', 'false,true': 'recursion_accounttype(D, B)', 'false': 'follows(D, A)', 'false,false': 'follows(F, A)'}, {'false,true,false,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.169, 4, 156], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 229, 0], 'false,false,false': [6.66e-08, 86, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,false,true': 'tweets(G, F)', 'true': 'follows(A, D), follows(C, D)', 'false,true': 'follows(A, A)', 'false,false,false': 'follows(H, A), follows(H, H)', 'false': 'follows(A, E), follows(E, A)', 'false,false': 'tweets(A, F), follows(G, A)'}, {'false,false,true,false': [0.773, 4, 1], 'false,true,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,true,false': [0.264, 151, 19], 'true,true': [0.016, 0, 67], 'false,false,false,false': [4.827, 103, 49], 'false,false,true,true': [1.121, 42, 2], 'true,false': [0.0, 0, 18]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false,false,true': 'follows(A, A)', 'true': 'follows(D, A), follows(D, D)', 'false,true': 'tweets(A, F)', 'false': 'follows(E, A), recursion_accounttype(E, B)', 'false,false': 'follows(A, G), follows(G, A)'}, {'false,false,true,false': [3.118, 169, 14], 'false,true,true': [0.011, 0, 18], 'true,true': [0.0, 0, 0], 'false,true,false': [6.75e-05, 0, 3], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.337, 175, 43], 'true,false': [1.61, 3, 78]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,false,true': 'recursion_accounttype(H, B)', 'true,true,false': 'follows(D, A)', 'false,false': 'follows(G, A), follows(H, G)', 'false,false,false': 'follows(A, I), follows(I, J)', 'true,true': 'follows(A, E), tweets(E, F)', 'true': 'follows(D, C)', 'false': 'follows(A, A)'}, {'false,false,true,false': [1.071, 191, 2], 'true,true,false,true': [0.000132, 0, 14], 'true,false': [0.000939, 0, 2], 'true,true,true': [1.394, 2, 68], 'false,false,false,true': [3.754, 63, 33], 'false,false,false,false': [2.761, 34, 15], 'false,false,true,true': [0.423, 0, 21], 'true,true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false,true,true': 'follows(F, E)', 'false,true': 'follows(D, F), recursion_accounttype(F, B)', 'false,true,false': 'follows(A, E)', 'false,false,false': 'follows(H, A), tweets(H, I)', 'false': 'follows(A, D), follows(E, A)', 'false,false': 'follows(G, A), follows(G, G)'}, {'false,true,false,false': [0.895, 16, 2], 'false,false,true': [0.0, 0, 0], 'true': [1.121, 1, 78], 'false,true,true,true': [0.538, 0, 17], 'false,false,false,true': [1.43, 34, 17], 'false,true,true,false': [0.009, 0, 2], 'false,true,false,true': [0.0, 163, 0], 'false,false,false,false': [4.474, 97, 40]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'true': 'follows(D, A), follows(A, D)', 'false,true': 'tweets(A, F)', 'false,false,false': 'tweets(A, H)', 'false': 'follows(A, E), follows(E, A)', 'false,false': 'recursion_accounttype(G, B)'}, {'false,false,true': [1.554, 0, 63], 'false,true,false': [0.557, 29, 1], 'false,false,false,false': [0.075, 43, 0], 'false,true,true': [1.963, 135, 14], 'true,true': [0.93, 1, 67], 'false,false,false,true': [0.307, 95, 0], 'true,false': [1.239, 2, 11]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false,false,true': 'follows(E, G), recursion_accounttype(G, B)', 'true': 'follows(D, A), follows(D, D)', 'false,false': 'follows(A, E), tweets(E, F)', 'false,false,false': 'follows(H, A), recursion_accounttype(H, B)', 'false': 'follows(A, A)'}, {'false,false,true,false': [1.575, 257, 6], 'false,false,true,true': [0.821, 0, 44], 'false,true': [0.0, 0, 0], 'false,false,false,false': [2.084, 55, 13], 'true,true': [0.0, 0, 0], 'false,false,false,true': [0.000104, 0, 15], 'true,false': [1.726, 3, 78]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false,true,true': 'follows(D, F), recursion_accounttype(F, B)', 'false,true': 'follows(E, A), follows(A, E)', 'false': 'follows(A, D)', 'false,false': 'follows(G, A), follows(A, G)'}, {'false,false,true': [0.0, 0, 0], 'true': [1.68, 3, 78], 'false,true,false': [0.245, 94, 35], 'false,true,true,true': [0.24, 0, 15], 'false,true,true,false': [0.011, 173, 0], 'false,false,false': [0.243, 47, 28]}], ['accounttype(A, B)', {'': 'follows(A, C), tweets(C, D)', 'true': 'tweets(A, D)', 'false,true,false': 'follows(G, E)', 'false,true': 'follows(F, E), recursion_accounttype(F, B)', 'false,false,false': 'follows(A, I)', 'false': 'follows(E, A)', 'false,false': 'recursion_accounttype(H, B)'}, {'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.957, 1, 11], 'false,true,true': [0.377, 0, 17], 'false,true,false,true': [0.052, 34, 0], 'true,true': [3.031, 224, 97], 'false,false,false,false': [0.009, 22, 0], 'false,false,false,true': [0.0, 0, 0], 'true,false': [1.998, 66, 31]}]]
[{'': [0.042923873248327346, 0.15255032053973952], 'true,false': [0.0, nan], 'false,false,true': [0.22222222222222218, -2.220446049250313e-16], 'true': [0.043863125908310034, 0.0], 'false,false': [0.14532871972318315, 0.13296398891966835], 'true,false,true': [0.0, nan], 'false,false,false': [nan, 0.13296398891966782], 'false': [nan, 0.15255032053973933]}, {'': [0.028448857291867212, -2.670156641503541e-16], 'false,true,false': [-1.2411226825503933e-16, 0.0], 'false,false': [nan, 5.163828021512356e-17], 'false': [-1.2743429500045275e-16, 5.163828021512356e-17], 'false,true': [nan, -1.2743429500045275e-16]}, {'': [2.9670840050625083e-06, 0.1083632838555479], 'false,false,true': [0.02858194215756488, 0.11954725691309145], 'true': [3.739842843634139e-06, 0.0], 'false,false': [0.03956071103547576, 0.1533046423404207], 'false,false,false': [nan, 0.1533046423404196], 'false': [0.0695755358330162, 0.13433437475430254], 'false,true': [nan, 0.0695755358330162]}, {'': [0.03200899198208465, 0.09226563234187472], 'false,false,true': [nan, 0.05312725125990122], 'true': [nan, 0.03200899198208463], 'false,false': [0.05312725125990122, 0.11365935401929465], 'false': [5.580842439776407e-06, 0.08794650184460788], 'false,true': [6.454194862756977e-06, 1.517667954272402e-09]}, {'': [0.02243633606024139, 0.10394020926000502], 'true,true,false': [1.2531258729099802e-09, 0.0], 'false,false,true': [0.00850607889199099, 0.005946925039299781], 'true': [0.022960224182213832, 4.41059087252782e-07], 'false,false': [0.06437179200886614, 0.14976813362579663], 'true,true': [0.027749423913067173, 2.183223705524521e-09], 'false,false,false': [0.14681798732111415, 0.15552392390045036], 'false': [nan, 0.1039402092600052]}, {'': [0.01590996666976612, 0.08021195564099347], 'false,true,true': [0.017050894898779312, 3.6332038625921936e-05], 'false,false': [nan, 0.11806628484784025], 'false,true,false': [-5.993842096135814e-17, 0.04452046967913288], 'false,false,false': [0.04008722112323736, 0.1460936770787748], 'false': [0.03888387390564054, 0.11806628484784058], 'false,true': [0.023084389785377097, 0.004729120228035052]}, {'': [0.029773621922501877, 0.07269048686889451], 'true': [0.012722903216784558, 0.11805112340355867], 'false,false': [0.03834737110685013, 0.0009212787384536047], 'false,false,false': [0.0009898638984719005, 0.0001317780461157311], 'false': [0.023401430147252076, 0.11057459365634506], 'false,true': [0.02585583690717624, 0.01034080103959536]}, {'': [0.03679393832450357, 0.0517807541961535], 'false,false,true': [0.015323173068530795, 0.009426946331129754], 'true': [nan, 0.03679393832450359], 'false,false': [0.050067610431426685, 0.056270286937883385], 'false,false,false': [7.197325402330535e-10, 0.06386474582153963], 'false': [nan, 0.051780754196153286]}, {'': [0.03484908014301949, 0.03925505255244541], 'false,true,true': [0.0038509041891518605, 7.329528531262793e-07], 'false,false': [nan, 0.058813420192840644], 'false': [0.03374707384493218, 0.05881342019284066], 'false,true': [0.014202189358495735, 0.059994263764165466]}, {'': [0.031596460591619836, 0.05678305148575632], 'true': [0.028626290444251055, 0.04115688579278215], 'false,true,false': [7.841239040090597e-05, nan], 'false,false': [0.07638888888888906, 3.975241446145401e-06], 'false,false,false': [nan, 3.975241446145401e-06], 'false': [0.020298263515130203, 0.1087569445314293], 'false,true': [0.008365283326136012, 7.841239040090597e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;true;true
0;false,true;follows(H, A), tweets(H, I).;true;true
0;false;follows(A, G), recursion_accounttype(G, B).;true;true
1;;accounttype(A, B) :- recursion_accounttype(C, B).;true;true
1;false,true;follows(E, D).;true;true
1;false;follows(D, A).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D), follows(C, D).;true;true
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;false,true;tweets(A, F).;true;true
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true,true;follows(A, E), tweets(E, F).;true;true
4;true;follows(D, C).;true;true
4;true,true,false;follows(D, A).;true;true
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;false,true,false;follows(A, E).;true;true
5;false,true,true;follows(F, E).;true;true
5;false,true;follows(D, F), recursion_accounttype(F, B).;true;true
5;false;follows(A, D), follows(E, A).;true;true
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;false,false,false;tweets(A, H).;true;true
6;false,false;recursion_accounttype(G, B).;true;true
6;false;follows(A, E), follows(E, A).;true;true
7;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
7;false,false;follows(H, A), recursion_accounttype(H, B).;true;true
7;false;follows(A, E), tweets(E, F).;true;true
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;false,true,true;follows(D, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(E, A), follows(A, E).;true;true
8;false;follows(A, D).;true;true
9;;accounttype(A, B) :- follows(A, C), tweets(C, D).;true;true
9;false,true;follows(F, E), recursion_accounttype(F, B).;true;true
9;false;follows(E, A).;true;true
9;false,false;recursion_accounttype(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then return 0.8399671169176942;  // std dev = 0,134, 55,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=54 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then if ( follows(H, A), tweets(H, I) )
%   | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( follows(J, A) )
%   | | then if ( follows(J, K), follows(K, A) )
%   | | | then return -0.13475886631892764;  // std dev = 0,996, 141,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=1 */
%   | | | else return 0.030191945852200554;  // std dev = 3,640, 93,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
%   | | else if ( follows(A, L), follows(L, M) )
%   | | | then return 0.11325097591583812;  // std dev = 4,315, 98,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=25 */
%   | | | else return 0.1642713840791042;  // std dev = 3,226, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( recursion_accounttype(C, B) )
%   then if ( follows(D, A) )
%   | then if ( follows(E, D), recursion_accounttype(E, B) )
%   | | then if ( tweets(A, F), follows(A, E) )
%   | | | then return 0.6852821289791506;  // std dev = 1,373, 49,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | | else return 0.7259229734593584;  // std dev = 1,415, 59,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   | | else return 0.4357786280508857;  // std dev = 1,133, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( tweets(A, G), follows(A, H) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.5766162693538115;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.842883712305164;  // std dev = 0,009, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.8274003976674088;  // std dev = 0,163, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.7536195578700232;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( follows(J, A) )
%   | then return -0.1327027682342301;  // std dev = 0,009, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else return -0.1583582117717102;  // std dev = 0,033, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.5632141823199898;  // std dev = 0,012, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( follows(D, A) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | | then return 0.1843213352286056;  // std dev = 1,015, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11229983569085215;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else if ( follows(D, G), recursion_accounttype(G, B) )
%   | | | then return 0.711259938394751;  // std dev = 0,269, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.13088765819315695;  // std dev = 0,078, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( tweets(A, H), follows(A, I) )
%   | | then if ( tweets(J, H), recursion_accounttype(J, B) )
%   | | | then return 0.6181661679070952;  // std dev = 1,075, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.1371482744724335;  // std dev = 0,012, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.18149712353832426;  // std dev = 2,561, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.1589807073958475;  // std dev = 2,264, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.42512312109508105;  // std dev = 0,010, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( follows(E, A) )
%   | | then if ( tweets(A, F), tweets(E, F) )
%   | | | then return 0.4547768254997058;  // std dev = 0,122, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.5197631420536367;  // std dev = 0,093, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4486377558582521;  // std dev = 0,020, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( follows(G, A), recursion_accounttype(G, B) )
%   | then return 0.4182954211344117;  // std dev = 0,015, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), recursion_accounttype(I, B) )
%   | | | then return 0.5954511096914803;  // std dev = 0,159, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.10685362227417865;  // std dev = 0,104, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.056317534023668216;  // std dev = 2,248, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.1698310119332515;  // std dev = 3,221, 62,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C) )
%   | then if ( follows(A, E), tweets(E, F) )
%   | | then return 0.282619139086599;  // std dev = 0,200, 71,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=68 */
%   | | else if ( follows(D, A) )
%   | | | then return 0.25076902140011265;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.31743568806677935;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3825238009975647;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( follows(G, A) )
%   | then return -0.047954518073543485;  // std dev = 0,157, 237,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=23 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.5054670820062885;  // std dev = 0,517, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.1378549827820927;  // std dev = 0,173, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.08938222337931939;  // std dev = 2,412, 38,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.11877175564557307;  // std dev = 1,940, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.2667921805507675;  // std dev = 0,049, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return 0.3025368372794703;  // std dev = 0,070, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( follows(A, E), follows(F, A) )
%   | then if ( follows(E, G), recursion_accounttype(G, B) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.42415453432845407;  // std dev = 0,349, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.27866815439394754;  // std dev = 0,027, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( follows(A, F) )
%   | | | then return -0.09313326782013523;  // std dev = 0,073, 145,000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | | else return -0.052788463672655474;  // std dev = 0,684, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then return 0.26488532054797337;  // std dev = 0,012, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( tweets(A, I) )
%   | | | then return -0.007578093570591161;  // std dev = 2,212, 108,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=20 */
%   | | | else return 0.13842935927573208;  // std dev = 2,814, 53,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), follows(E, D) )
%   | | then return 0.19668939403844377;  // std dev = 0,147, 45,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | else return 0.21588401325062417;  // std dev = 0,007, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.2439413893774529;  // std dev = 0,061, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( follows(A, F), follows(F, A) )
%   | then if ( tweets(A, G) )
%   | | then if ( tweets(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.3462981354417889;  // std dev = 0,229, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.08456318828692524;  // std dev = 0,058, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else return -0.06473742790118517;  // std dev = 0,097, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | else if ( recursion_accounttype(I, B) )
%   | | then if ( follows(J, A), recursion_accounttype(J, B) )
%   | | | then return 0.2176875977292426;  // std dev = 0,074, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.503530100720362;  // std dev = 0,465, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else return -0.14754811553842873;  // std dev = 0,057, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A) )
%   | then return 0.19048869120088946;  // std dev = 0,021, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else if ( tweets(A, E) )
%   | | then return -0.1023955270997472;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.0931262760336143;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( follows(A, F), tweets(F, G) )
%   | then if ( follows(A, H), follows(H, A) )
%   | | then return -0.044270716519728616;  // std dev = 0,107, 156,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=15 */
%   | | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | | then return 0.18595447586119795;  // std dev = 0,065, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.02002609235736449;  // std dev = 2,489, 143,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=30 */
%   | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | then return 0.18193679687661274;  // std dev = 0,009, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( follows(K, A) )
%   | | | then return -0.05571392447268474;  // std dev = 0,541, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | | else return -0.008281911933083624;  // std dev = 1,721, 38,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.12802340673069296;  // std dev = 0,171, 66,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=64 */
%   | else return 0.19650722051627417;  // std dev = 0,041, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( follows(A, E) )
%   | then if ( follows(F, A), follows(A, F) )
%   | | then return -0.04325125957440135;  // std dev = 0,105, 168,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=15 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return -0.008085517483949629;  // std dev = 2,308, 114,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | | | else return 0.00679452686658051;  // std dev = 1,023, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | then if ( tweets(A, J) )
%   | | | then return 0.1569815913950326;  // std dev = 1,29e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.16859700997313498;  // std dev = 0,787, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(K, A), tweets(A, L) )
%   | | | then return -0.06692526432097556;  // std dev = 0,498, 22,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | | else return 0.013881809434052577;  // std dev = 1,717, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(C, D) )
%   then if ( follows(A, E), follows(E, F) )
%   | then return 0.011837176679121153;  // std dev = 0,183, 332,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=122 */
%   | else if ( follows(G, A) )
%   | | then return -0.08027915442092345;  // std dev = 0,290, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return -0.006663879362992904;  // std dev = 0,240, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( follows(H, A) )
%   | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | then if ( tweets(A, J) )
%   | | | then return 0.02604078694642073;  // std dev = 1,360, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.219459005840978;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07889916661245691;  // std dev = 0,044, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( recursion_accounttype(K, B) )
%   | | then if ( tweets(A, L) )
%   | | | then return 0.38847627612724933;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3219420671801938;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.18736310617866464;  // std dev = 0,027, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.992819
   AUC PR    = 0.36244
   CLL	      = -0.113826
   Precision = 0.344262 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.512195


Total learning time: 27.847 seconds
Total inference time: 28.334 seconds
AUC ROC: 0.992819


Results scoring model
   AUC ROC   = 0.99448
   AUC PR    = 0.389212
   CLL	      = -0.119823
   Precision = 0.348214 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.516556


Total scoring time: 36.397 seconds
Refined model CLL: -0.119823


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.992819
   AUC PR    = 0.36244
   CLL	      = -0.113826
   Precision = 0.344262 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.512195


Total learning time: 103.93699999999998 seconds
Total inference time: 28.334 seconds
AUC ROC: 0.992819
Total revision time: 103.93699999999998
Best scored revision CLL: -0.119823


Dataset: 15_yeast_twitter, Fold: 2, Type: Transfer (trRDN-B), Time: 09:11:22
{'Learning time': 103.93699999999998, 'F1': 0.512195, 'Precision': [0.344262, 0.5], 'Recall': 1.0, 'Inference time': 28.334, 'parameter': {'Learning time': 6.611, 'F1': 0.488518, 'Precision': [0.331445, 0.5], 'Recall': 0.928571, 'Inference time': 31.474, 'CLL': -0.119917, 'AUC ROC': 0.993203, 'AUC PR': 0.419525}, 'CLL': -0.113826, 'AUC ROC': 0.992819, 'AUC PR': 0.36244}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then return 0.8581489350995127;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else return 0.7956489350995123;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8126943896449667;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return -0.14185106490048846;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( follows(A, H), tweets(A, I) )
%   | | then if ( tweets(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.10814893509951232;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.1568502338008104;  // std dev = 4,016, 77,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, A) )
%   | then return 0.7063752419483784;  // std dev = 0,124, 64,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=63 */
%   | else if ( tweets(A, E), follows(F, C) )
%   | | then return 0.5775048248658727;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.7207173899278402;  // std dev = 0,012, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then if ( follows(A, H), follows(G, H) )
%   | | then return 0.745278243178147;  // std dev = 0,154, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.09835795807914836;  // std dev = 0,776, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(I, A) )
%   | | then if ( follows(I, J), recursion_accounttype(J, B) )
%   | | | then return 0.6316722759899523;  // std dev = 1,272, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return -0.12544463852839172;  // std dev = 0,000, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.11366917308081821;  // std dev = 3,913, 90,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | | else return 0.17745946248076258;  // std dev = 3,089, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C) )
%   | then return 0.5625088494681066;  // std dev = 0,084, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else if ( tweets(A, D), tweets(C, D) )
%   | | then return 0.5296186057546433;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return 0.3633281133833256;  // std dev = 0,900, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( tweets(A, G) )
%   | | | then return 0.5498071295764464;  // std dev = 0,954, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.09793152647284203;  // std dev = 0,982, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.11231637819360675;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return 0.4737691995554708;  // std dev = 0,334, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.09735974582659172;  // std dev = 3,894, 90,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | | else return 0.18442650383188391;  // std dev = 3,007, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( tweets(E, D), recursion_accounttype(E, B) )
%   | then return 0.4377983998583324;  // std dev = 0,310, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return 0.4744720617138194;  // std dev = 0,075, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tweets(A, G) )
%   | | then if ( tweets(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.6958037783952702;  // std dev = 0,219, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.16080073526506844;  // std dev = 0,134, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.08272308853317803;  // std dev = 3,213, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.06266482633101919;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then return 0.31759823157710215;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.22449498360549944;  // std dev = 0,933, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.32851038547929867;  // std dev = 0,041, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.34581802341182527;  // std dev = 0,126, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return 0.36054265263575036;  // std dev = 0,066, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(G, H), recursion_accounttype(H, B) )
%   | | | then return 0.3072756688529447;  // std dev = 1,000, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.09290100363267016;  // std dev = 0,029, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
%   | | else if ( tweets(A, I), follows(A, J) )
%   | | | then return 0.0264273252066778;  // std dev = 2,135, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.09298684334404224;  // std dev = 4,051, 80,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then if ( follows(E, A), follows(E, C) )
%   | | then if ( recursion_accounttype(E, B) )
%   | | | then return 0.21304650187918855;  // std dev = 0,980, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.09006296709555166;  // std dev = 1,297, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0.2733419486709378;  // std dev = 0,067, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.26676231605353207;  // std dev = 0,126, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   else if ( follows(F, A) )
%   | then return -0.050421875081226954;  // std dev = 0,117, 235,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=23 */
%   | else if ( tweets(A, G), follows(A, H) )
%   | | then if ( tweets(I, G), recursion_accounttype(I, B) )
%   | | | then return 0.4257933743538772;  // std dev = 0,519, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.13630138059962044;  // std dev = 0,039, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.14620129921733502;  // std dev = 2,811, 36,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.1793968103679691;  // std dev = 2,583, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.21911174612340287;  // std dev = 0,115, 64,000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( follows(E, A) )
%   | | then return 0.291447475761458;  // std dev = 0,129, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.22367305511987967;  // std dev = 0,081, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then if ( tweets(A, G), tweets(F, G) )
%   | | then return 0.21787528368867184;  // std dev = 0,034, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.013090377975427725;  // std dev = 0,872, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.07831799872715654;  // std dev = 0,434, 145,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=1 */
%   | | | else return -0.025546076687687276;  // std dev = 1,432, 110,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=16 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return -0.0015190795654552052;  // std dev = 1,745, 64,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.07944475950425926;  // std dev = 3,941, 72,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, A) )
%   | then return 0.16727796569113723;  // std dev = 0,123, 64,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=63 */
%   | else return 0.1976018285725992;  // std dev = 0,137, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), follows(F, A) )
%   | | then return -0.0747530204262827;  // std dev = 0,077, 126,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=2 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.2502727750612054;  // std dev = 0,902, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.07943289170466479;  // std dev = 3,49e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.4703243919903806;  // std dev = 1,265, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.1749057660109505;  // std dev = 0,516, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( follows(A, J), tweets(A, K) )
%   | | | then return -0.011205827608407687;  // std dev = 0,610, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.010413546513425478;  // std dev = 2,840, 42,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), follows(D, E) )
%   | | then return 0.16170075379187596;  // std dev = 0,141, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else if ( follows(F, A) )
%   | | | then return -0.4309282143388584;  // std dev = 0,741, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.003311931120498296;  // std dev = 0,981, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.10970409800465608;  // std dev = 1,002, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( follows(G, A), tweets(G, H) )
%   | then return -0.032820926569148645;  // std dev = 0,109, 254,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=37 */
%   | else if ( tweets(A, I), follows(A, J) )
%   | | then if ( follows(J, K), tweets(J, I) )
%   | | | then return -0.012614463190629812;  // std dev = 1,199, 53,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.047774205116831614;  // std dev = 0,645, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.05605298165576578;  // std dev = 2,717, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.022251898427987114;  // std dev = 2,556, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( tweets(C, E), recursion_accounttype(C, B) )
%   | | then return 0.13563296859837923;  // std dev = 0,109, 83,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=82 */
%   | | else if ( follows(A, C), follows(A, D) )
%   | | | then return 0.06208386739943959;  // std dev = 0,750, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2731947100231451;  // std dev = 0,183, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.06987901982469176;  // std dev = 0,038, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return 0.12924228971400248;  // std dev = 0,054, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.46128803336418084;  // std dev = 0,897, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.17646929772087952;  // std dev = 0,701, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( tweets(A, I) )
%   | | | then return 8.676581179153611E-4;  // std dev = 1,349, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.015404052752575675;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */


Results
   AUC ROC   = 0.99428
   AUC PR    = 0.440069
   CLL	      = -0.111772
   Precision = 0.331461 at threshold = 0.5
   Recall    = 0.936508
   F1        = 0.489627


Total learning time: 22.196 seconds
Total inference time: 23.495 seconds
AUC ROC: 0.99428


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN-B), Time: 09:12:08
{'Learning time': 22.196, 'CLL': -0.111772, 'Recall': 0.936508, 'Inference time': 23.495, 'F1': 0.489627, 'Precision': [0.331461, 0.5], 'AUC ROC': 0.99428, 'AUC PR': 0.440069}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( recursion_accounttype(D, B), follows(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( follows(A, C), tweets(C, E) )
%   | | | then return 0.733148935099512;  // std dev = 1,620, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return 0.8581489350995122;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return -0.13455179482749516;  // std dev = 0,996, 137,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=1 */
%   | | | else return 0.01814893509951238;  // std dev = 3,666, 100,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=16 */
%   | | else if ( follows(A, I), tweets(A, J) )
%   | | | then return 0.13592671287729013;  // std dev = 3,291, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.16679091040815433;  // std dev = 4,157, 81,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */


Results
   AUC ROC   = 0.936304
   AUC PR    = 0.228701
   CLL	      = -0.159322
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.873 seconds
Total inference time: 3.443 seconds
AUC ROC: 0.936304


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN), Time: 09:12:16
{'Learning time': 3.873, 'CLL': -0.159322, 'Recall': 0.0, 'Inference time': 3.443, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.936304, 'AUC PR': 0.228701}


