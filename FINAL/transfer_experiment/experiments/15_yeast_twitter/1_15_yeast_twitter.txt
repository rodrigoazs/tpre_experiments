Starting experiment #1 for 15_yeast_twitter

Start learning from source dataset

Source train facts examples: 15015
Source train pos examples: 369
Source train neg examples: 51477

WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #pos=57 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.10814893509951341;  // std dev = 6,982, 260,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=65 */
%   | | | else return 0.18373033044834566;  // std dev = 12,291, 688,000 (wgt'ed) examples reached here.  /* #neg=464 #pos=224 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then return 0.4158959867358479;  // std dev = 0,744, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7264803271063448;  // std dev = 0,029, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7276072493233166;  // std dev = 0,154, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6030133932574304;  // std dev = 2,141, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | else return 0.031721931426695105;  // std dev = 5,599, 203,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=40 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.17355227857652125;  // std dev = 7,733, 271,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   | | | else return 0.1423335070856472;  // std dev = 10,443, 518,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=160 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(C, D), interaction(D, F) )
%   | | then return 0.5697380934720516;  // std dev = 0,225, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( phenotype(C, G) )
%   | | | then return -0.18740621767448085;  // std dev = 0,841, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5932744097546585;  // std dev = 0,138, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6524683122611523;  // std dev = 0,060, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(A, A) )
%   | then return -0.11723331939640605;  // std dev = 0,214, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(H, J), enzyme(A, K) )
%   | | | then return 0.01240106665083599;  // std dev = 3,675, 92,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=17 */
%   | | | else return 0.10757951718623915;  // std dev = 11,927, 708,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=210 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.23268422331678856;  // std dev = 3,399, 51,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | | | else return 0.16112194618100378;  // std dev = 6,256, 178,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.43426479552867103;  // std dev = 0,196, 59,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( enzyme(A, G), interaction(E, D) )
%   | | | then return 0.12329870074556483;  // std dev = 1,439, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.04906431798105585;  // std dev = 3,159, 111,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=14 */
%   | | else if ( interaction(D, D), enzyme(D, H) )
%   | | | then return -0.02711538613345856;  // std dev = 2,285, 49,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
%   | | | else return 0.09967027490933941;  // std dev = 7,196, 258,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=78 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( interaction(J, J), location(J, K) )
%   | | | then return 0.2771102733879965;  // std dev = 1,674, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.07978114880335024;  // std dev = 5,592, 162,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=48 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.07485168962348158;  // std dev = 3,364, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.1334609250110369;  // std dev = 9,502, 409,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=140 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(C, C), recursion_proteinclass(C, B) )
%   | then return 0.31086305596331926;  // std dev = 0,082, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10929364048855873;  // std dev = 0,058, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.06501125812501297;  // std dev = 0,429, 150,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=47 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.3650347659751471;  // std dev = 0,242, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( phenotype(D, G), phenotype(A, G) )
%   | | | then return 0.07539665180737369;  // std dev = 4,869, 118,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | | else return 0.11883579792240913;  // std dev = 10,817, 537,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=186 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4116267843364692;  // std dev = 0,049, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.03861174097541613;  // std dev = 4,697, 113,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=30 */
%   | | | else return 0.09161640707782567;  // std dev = 3,726, 65,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.16677193230153542;  // std dev = 0,268, 34,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | else return 0.41507738427810803;  // std dev = 0,203, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(A, F), enzyme(F, E) )
%   | | | then return -0.10178279999307739;  // std dev = 0,961, 21,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.08929063723073362;  // std dev = 2,997, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else if ( interaction(I, F), phenotype(I, J) )
%   | | | then return 0.1587958131365231;  // std dev = 5,885, 146,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=58 */
%   | | | else return 0.0723185208318965;  // std dev = 3,948, 71,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09199347807056851;  // std dev = 0,038, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.14041769087300143;  // std dev = 4,327, 83,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.05172507894339491;  // std dev = 10,893, 608,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=183 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.14209805883857238;  // std dev = 0,250, 34,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | else return 0.35372439073890233;  // std dev = 0,083, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09028854029047954;  // std dev = 0,052, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(A, F), location(A, G) )
%   | | | then return 0.11731251289159256;  // std dev = 3,622, 64,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | | else return -0.005339332580821662;  // std dev = 4,455, 101,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=27 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.37490790281132075;  // std dev = 1,605, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.002754453016677163;  // std dev = 5,250, 164,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.09563372947214965;  // std dev = 5,647, 152,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=54 */
%   | | | else return 0.04292120311428445;  // std dev = 10,328, 512,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=155 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(C, D) )
%   | then if ( enzyme(D, E), phenotype(A, F) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.22136542077538782;  // std dev = 0,059, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.42590341844182306;  // std dev = 0,763, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.21797890443024967;  // std dev = 0,053, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return 0.2808735795311663;  // std dev = 0,069, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, A) )
%   | then return -0.07767971006990466;  // std dev = 0,032, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.2876134073169929;  // std dev = 2,247, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.0880837775608549;  // std dev = 4,834, 119,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=44 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.011452536059376536;  // std dev = 6,292, 228,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=64 */
%   | | | else return 0.06174521340420828;  // std dev = 11,277, 586,000 (wgt'ed) examples reached here.  /* #neg=392 #pos=194 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.18582397325462652;  // std dev = 0,135, 55,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=54 */
%   | else return -0.04266726548858907;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( enzyme(E, G), enzyme(A, G) )
%   | | then if ( interaction(H, E), phenotype(A, I) )
%   | | | then return 0.00916412138528504;  // std dev = 1,502, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.22849803209644587;  // std dev = 0,144, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(J, E), complex(J, F) )
%   | | | then return -0.00765070596767947;  // std dev = 8,631, 423,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=111 */
%   | | | else return 0.053087685778177005;  // std dev = 5,703, 159,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=50 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.29782584191687844;  // std dev = 0,131, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( complex(A, L), location(A, M) )
%   | | | then return 0.0039785505646912364;  // std dev = 5,159, 132,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=37 */
%   | | | else return 0.06007733479887375;  // std dev = 8,015, 294,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=98 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(C, C), recursion_proteinclass(C, B) )
%   | then return 0.1458124012726965;  // std dev = 0,112, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.030723677954390925;  // std dev = 0,373, 206,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=47 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.07784589601839328;  // std dev = 0,843, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.08738364581086697;  // std dev = 2,466, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5589799888269601;  // std dev = 2,124, 28,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return -0.2891133900778466;  // std dev = 0,327, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.15175447384414867;  // std dev = 0,277, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.01172189982329138;  // std dev = 8,064, 332,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=102 */
%   | | | else return 0.0364206701562529;  // std dev = 9,433, 420,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=137 */


Starting fold 1

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos	 examples: 156
Target test neg examples: 24648

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
0;false,true,false;interaction(D, G).;false;false
0;false,true;interaction(E, A), enzyme(E, F).;false;true
0;false,false,false;interaction(H, A), enzyme(H, I).;false;false
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,false;interaction(A, A).;false;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
1;true;enzyme(C, D), phenotype(C, E).;true;false
1;false,false;interaction(A, H), complex(A, I).;true;true
1;true,true;complex(A, F), interaction(G, A).;false;false
1;false,false,false;enzyme(A, K).;false;false
1;false;interaction(A, A).;false;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true,true,false;phenotype(C, G).;false;false
2;false,false,true;enzyme(H, J), enzyme(A, K).;false;false
2;true;interaction(A, D), complex(D, E).;true;false
2;false,false;interaction(H, A), interaction(I, H).;true;true
2;true,true;interaction(C, D), interaction(D, F).;false;true
2;false,false,false;interaction(A, L), interaction(L, L).;false;false
2;false;interaction(A, A).;false;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;false;true
3;false,false,true;interaction(J, J), location(J, K).;false;false
3;false,true,false;interaction(D, D), enzyme(D, H).;false;false
3;false,true;complex(A, F), complex(D, F).;true;true
3;false,true,true;enzyme(A, G), interaction(E, D).;false;false
3;false,false,false;interaction(A, L), interaction(L, L).;false;false
3;false;interaction(A, D), interaction(E, A).;true;true
3;false,false;complex(A, I), interaction(J, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
4;false,false;interaction(A, H), recursion_proteinclass(H, B).;false;true
4;true;interaction(C, C), recursion_proteinclass(C, B).;false;true
4;false,true,false;phenotype(D, G), phenotype(A, G).;false;false
4;true,false;interaction(A, A).;false;false
4;false,false,false;interaction(A, I), complex(I, J).;false;false
4;false;interaction(D, A), location(A, E).;true;true
4;false,true;interaction(A, F), recursion_proteinclass(F, B).;false;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D), interaction(D, A).;false;false
5;false,true,true;interaction(A, F), enzyme(F, E).;false;false
5;false,true;interaction(A, G), enzyme(G, H).;true;true
5;false,true,false;interaction(I, F), phenotype(I, J).;false;false
5;false,false,false;interaction(K, A), interaction(K, K).;false;false
5;false;enzyme(A, E), interaction(F, A).;true;true
5;false,false;interaction(A, A).;false;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
6;true;interaction(A, D), interaction(D, A).;false;false
6;false,true,false;interaction(A, F), location(A, G).;false;false
6;false,true;interaction(A, A).;false;true
6;false,false,false;interaction(A, K), phenotype(K, L).;false;false
6;false;interaction(E, A), interaction(E, E).;true;true
6;false,false;interaction(A, H), enzyme(H, I).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(A, H), complex(A, I).;false;false
7;true;interaction(D, C), interaction(C, D).;true;false
7;false,false;interaction(A, G), interaction(G, G).;true;true
7;true,true,true;enzyme(A, E).;false;false
7;true,true;enzyme(D, E), phenotype(A, F).;true;false
7;false,false,false;interaction(A, J), complex(J, K).;false;false
7;false;interaction(A, A).;false;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;location(A, D).;false;false
8;false,true,true;interaction(H, E), phenotype(A, I).;false;false
8;false,true;enzyme(E, G), enzyme(A, G).;true;true
8;false,true,false;interaction(J, E), complex(J, F).;false;false
8;false,false,false;complex(A, L), location(A, M).;false;false
8;false;interaction(E, A), complex(E, F).;true;true
8;false,false;interaction(A, K), recursion_proteinclass(K, B).;false;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
9;true;interaction(C, C), recursion_proteinclass(C, B).;false;false
9;false,true,true;interaction(A, F), enzyme(F, G).;false;false
9;false,true;complex(A, E).;true;true
9;false,true,false;interaction(D, H), recursion_proteinclass(H, B).;false;false
9;false,false,false;phenotype(A, J), interaction(K, A).;false;false
9;false;interaction(D, A), interaction(D, D).;true;true
9;false,false;interaction(A, I), recursion_proteinclass(I, B).;false;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.8228548174524533;  // std dev = 1,701, 85,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=82 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), tweets(E, F) )
%   | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( follows(D, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, A), tweets(H, I) )
%   | | | then return -0.06938729678454561;  // std dev = 3,730, 207,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=15 */
%   | | | else return 0.15639454913460007;  // std dev = 3,454, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(C, D) )
%   | then if ( follows(E, A) )
%   | | then return 0.700040199087885;  // std dev = 1,397, 71,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=69 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7265413910401293;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, F) )
%   | | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | | then return 0.8229787454047234;  // std dev = 0,323, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.1002723730207757;  // std dev = 3,002, 243,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=10 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.16557137515374915;  // std dev = 1,965, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then if ( follows(C, D), follows(D, E) )
%   | | then return 0.5214007624646702;  // std dev = 1,689, 68,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=65 */
%   | | else return 0.583700254363581;  // std dev = 0,058, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6924447716824808;  // std dev = 3,65e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(F, A), follows(G, F) )
%   | | then if ( tweets(F, H), tweets(A, I) )
%   | | | then return -0.04647877698364597;  // std dev = 3,324, 178,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=18 */
%   | | | else return -0.027019896037821046;  // std dev = 1,690, 42,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | else if ( follows(A, J), follows(J, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17822210921071957;  // std dev = 3,252, 57,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.4093364422891828;  // std dev = 1,964, 81,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=77 */
%   else if ( follows(A, D), follows(E, A) )
%   | then if ( tweets(A, F), follows(E, D) )
%   | | then return -0.050705199663053355;  // std dev = 2,694, 153,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=14 */
%   | | else if ( follows(D, D), tweets(D, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.002066837312966351;  // std dev = 2,270, 63,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=10 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07372101471318268;  // std dev = 1,627, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( follows(A, I), follows(I, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07918062762165687;  // std dev = 3,248, 62,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(C, C), recursion_accounttype(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.057214917812407395;  // std dev = 4,529, 282,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=91 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), recursion_accounttype(E, B) )
%   | | then return 0.41984379516258563;  // std dev = 0,110, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.08828920489163294;  // std dev = 0,312, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( follows(A, F), recursion_accounttype(F, B) )
%   | | then return 0.409705997521965;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( follows(A, G) )
%   | | | then return 0.07950109597471146;  // std dev = 3,208, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, A) )
%   | then return 0.33278330259019856;  // std dev = 0,162, 69,000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return 0.38987423521478803;  // std dev = 0,979, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( tweets(A, E), follows(F, A) )
%   | then if ( follows(A, G), tweets(G, H) )
%   | | then if ( follows(A, F), tweets(F, E) )
%   | | | then return -0.03127369220353679;  // std dev = 2,984, 143,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=16 */
%   | | | else return -0.06965290557511834;  // std dev = 1,100, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( follows(I, F) )
%   | | | then return -0.16962539562939621;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(J, A), follows(J, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.015354828500544294;  // std dev = 3,713, 119,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=26 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, A) )
%   | then return 0.26349872827875087;  // std dev = 0,144, 69,000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return 0.36727319460054897;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( follows(E, A), follows(E, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, F), tweets(F, G) )
%   | | then if ( follows(F, H), recursion_accounttype(H, B) )
%   | | | then return 0.54658495685314;  // std dev = 1,867, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return -0.09687258666791036;  // std dev = 2,818, 256,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=10 */
%   | | else if ( follows(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1470523065403009;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(C, D) )
%   | then if ( tweets(D, E) )
%   | | then if ( tweets(A, E) )
%   | | | then return 0.18416295482587458;  // std dev = 1,688, 68,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=65 */
%   | | | else return 0.23357248032271488;  // std dev = 0,208, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.20271217038442746;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13816401973201864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, F), follows(F, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, G) )
%   | | | then return -0.026427270897235428;  // std dev = 4,522, 289,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=44 */
%   | | | else return -0.12954788350791935;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.14809000970951758;  // std dev = 0,217, 86,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=82 */
%   else if ( follows(D, A) )
%   | then if ( tweets(D, E), tweets(A, E) )
%   | | then if ( follows(F, D) )
%   | | | then return -0.0412325330313543;  // std dev = 2,645, 164,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=17 */
%   | | | else return -0.12490201440224491;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( follows(G, D) )
%   | | | then return -0.04201022586834683;  // std dev = 1,530, 55,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return 0.06312478783803618;  // std dev = 0,817, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.07133522592725688;  // std dev = 0,396, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(C, C), recursion_accounttype(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.022796544915092507;  // std dev = 3,424, 253,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=91 */
%   else if ( follows(D, A), follows(D, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), recursion_accounttype(E, B) )
%   | | then return 0.22342250265951624;  // std dev = 0,177, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.009271358228353477;  // std dev = 0,976, 35,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.05525019549411563;  // std dev = 2,995, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */


Results
   AUC ROC   = 0.968989
   AUC PR    = 0.358744
   CLL	      = -0.160271
   Precision = 0.341598 at threshold = 0.5
   Recall    = 0.794872
   F1        = 0.477842


Total learning time: 5.555 seconds
Total inference time: 22.108 seconds
AUC ROC: 0.968989


Results scoring model
   AUC ROC   = 0.987035
   AUC PR    = 0.360987
   CLL	      = -0.150397
   Precision = 0.324841 at threshold = 0.5
   Recall    = 0.809524
   F1        = 0.463636


Total scoring time: 16.748 seconds
Parameter learned model CLL: -0.150397


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,true,false': 'follows(D, G)', 'false,true': 'follows(E, A), tweets(E, F)', 'false,false,false': 'follows(H, A), tweets(H, I)', 'false': 'follows(A, D), recursion_accounttype(D, B)', 'false,false': 'follows(A, A)'}, {'false,true,false,false': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'true': [1.701, 3, 82], 'false,true,true': [0.943, 1, 8], 'false,false,false,true': [3.73, 192, 15], 'false,true,false,true': [0.0, 0, 2], 'false,false,false,false': [3.454, 40, 17]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false,false,true': 'follows(F, G), recursion_accounttype(G, B)', 'true': 'tweets(C, D)', 'false,false': 'follows(A, F)', 'true,true': 'follows(E, A)', 'false,false,false': 'tweets(A, H)', 'false': 'follows(A, A)'}, {'false,false,true,false': [3.002, 233, 10], 'true,true,false': [0.0, 0, 4], 'false,true': [0.0, 0, 0], 'true,true,true': [1.397, 2, 69], 'false,false,false,true': [1.965, 15, 8], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.323, 0, 31], 'true,false': [0.0, 0, 4]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,false,true': 'tweets(F, H), tweets(A, I)', 'true': 'follows(A, D)', 'false,false': 'follows(F, A), follows(G, F)', 'true,true': 'follows(C, D), follows(D, E)', 'false,false,false': 'follows(A, J), follows(J, J)', 'false': 'follows(A, A)'}, {'false,false,true,false': [1.69, 37, 5], 'true,true,false': [0.058, 0, 9], 'false,true': [0.0, 0, 0], 'true,true,true': [1.689, 3, 65], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.252, 36, 21], 'false,false,true,true': [3.324, 160, 18], 'true,false': [3.65e-08, 0, 8]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false,false,true': 'follows(H, H)', 'false,true,false': 'follows(D, D), tweets(D, G)', 'false,true': 'tweets(A, F), follows(E, D)', 'false,false,false': 'follows(A, I), follows(I, I)', 'false': 'follows(A, D), follows(E, A)', 'false,false': 'follows(H, A)'}, {'false,true,false,false': [2.27, 53, 10], 'false,false,true,false': [1.627, 15, 8], 'true': [1.964, 4, 77], 'false,true,true': [2.694, 139, 14], 'false,false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,false,false,false': [3.248, 45, 17], 'false,false,true,true': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(C, A)', 'true': 'follows(C, C), recursion_accounttype(C, B)', 'false,false': 'follows(A, F), recursion_accounttype(F, B)', 'false': 'follows(D, A)', 'false,false,false': 'follows(A, G)', 'true,false': 'follows(A, A)', 'false,true': 'follows(A, E), recursion_accounttype(E, B)'}, {'false,false,true': [0.0, 0, 4], 'true,true': [0.0, 0, 0], 'false,true,true': [0.11, 0, 2], 'false,false,false,true': [3.208, 42, 17], 'true,false,false': [4.529, 191, 91], 'false,true,false': [0.312, 21, 12], 'false,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true': 'follows(A, D), follows(D, A)', 'false,true,false': 'follows(I, F)', 'false,true': 'follows(A, G), tweets(G, H)', 'false,true,true': 'follows(A, F), tweets(F, E)', 'false,false,false': 'follows(J, A), follows(J, J)', 'false': 'tweets(A, E), follows(F, A)', 'false,false': 'follows(A, A)'}, {'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,true,true': [2.984, 127, 16], 'true,true': [0.162, 0, 69], 'false,true,true,false': [1.1, 15, 2], 'false,true,false,true': [0.0, 16, 0], 'false,false,false,false': [3.713, 93, 26], 'false,false,false,true': [0.0, 0, 0], 'true,false': [0.979, 1, 13]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,false,true': 'follows(F, H), recursion_accounttype(H, B)', 'true': 'follows(A, D), follows(D, A)', 'false,false': 'follows(A, F), tweets(F, G)', 'false,false,false': 'follows(A, I)', 'false': 'follows(E, A), follows(E, E)'}, {'false,false,true,false': [2.818, 246, 10], 'false,false,true,true': [1.867, 2, 34], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 10, 0], 'true,true': [0.144, 0, 69], 'false,false,false,true': [0.0, 0, 0], 'true,false': [0.266, 0, 13]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true': 'follows(D, C), follows(C, D)', 'false,false': 'follows(A, F), follows(F, F)', 'true,true,true': 'tweets(A, E)', 'true,true': 'tweets(D, E)', 'false,false,false': 'follows(A, G)', 'false': 'follows(A, A)'}, {'true,true,true,false': [0.208, 0, 15], 'true,true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'true,true,true,true': [1.688, 3, 65], 'false,false,false,false': [0.0, 14, 0], 'false,false,false,true': [4.522, 245, 44], 'false,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,true,true': 'follows(F, D)', 'false,true': 'tweets(D, E), tweets(A, E)', 'false,true,false': 'follows(G, D)', 'false': 'follows(D, A)', 'false,false': 'follows(A, H), recursion_accounttype(H, B)'}, {'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.817, 1, 4], 'true': [0.217, 4, 82], 'false,true,true,true': [2.645, 147, 17], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [1.53, 49, 6], 'false,false,false': [0.396, 40, 17]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(C, A)', 'true': 'follows(C, C), recursion_accounttype(C, B)', 'false,false,false': 'follows(F, A)', 'false,false': 'follows(A, E), recursion_accounttype(E, B)', 'false': 'follows(D, A), follows(D, D)'}, {'false,false,true': [0.177, 0, 6], 'false,true': [0.0, 0, 0], 'false,false,false,false': [2.995, 41, 17], 'true,true': [0.0, 0, 0], 'false,false,false,true': [0.976, 23, 12], 'true,false': [3.424, 162, 91]}]]
[{'': [0.03404844290657402, 0.13361310586610098], 'false,true,false': [0.0, 0.0], 'false,false': [nan, 0.1065197428833803], 'false,false,false': [0.06721277042638045, 0.2092951677439207], 'false': [0.07100591715976314, 0.10651974288338026], 'false,true': [0.09876543209876527, 0.0]}, {'': [0.02475672222512959, 0.12444778193622721], 'false,false,true': [0.0033702269384606564, 0.03707449980244243], 'true': [0.02604424764546593, 0.0], 'false,false': [0.11878889016102613, 0.1678332579859018], 'true,true': [0.027491387881768383, 0.0], 'false,false,false': [0.1678332579859018, nan], 'false': [nan, 0.1244477819362292]}, {'': [0.03657812134768313, 0.09640562622415404], 'false,false,true': [0.06206135654644398, 0.06802314117289025], 'true': [0.03785439155751582, 1.6653345369377348e-16], 'false,false': [0.06325800247108658, 0.18555804861445738], 'true,true': [0.041963712885017344, 0.003378609154045284], 'false,false,false': [nan, 0.18555804861445738], 'false': [nan, 0.09640562622415404]}, {'': [0.047621120973990176, 0.08807316688568617], 'false,false,true': [nan, 0.11512569829504468], 'false,true,false': [nan, 0.0817779238919979], 'false,false': [0.11512569829504468, 0.1701395741727879], 'false,false,false': [nan, 0.1701395741727879], 'false': [0.05802723162376268, 0.1552593496707903], 'false,true': [0.04743527584050602, 0.08177792389199783]}, {'': [0.07274915314481709, 0.144191601780092], 'true,false': [nan, 0.07274915314481709], 'true': [nan, 0.07274915314481709], 'false,false': [0.0, 0.17441152790827533], 'false,false,false': [0.17441152790827533, nan], 'false': [0.09802903931602863, 0.1698211072331659], 'false,true': [0.0060329866806212995, 0.09732293215301195]}, {'': [0.012314489201786422, 0.08293508126128234], 'true': [0.00037951308757543524, 0.06842727091790635], 'false,true,true': [0.062283032794045144, 0.07123538504758055], 'false,false': [nan, 0.11582133410879548], 'false,true,false': [-1.0408340855860843e-17, nan], 'false,false,false': [nan, 0.11582133410879548], 'false': [0.05910285292244832, 0.11582133410879548], 'false,true': [0.06337409426513313, -1.0408340855860843e-17]}, {'': [0.0025527187324113874, 0.08164592777113054], 'false,false,true': [0.09687414138400434, 0.03101452644534245], 'true': [0.0003008858712890678, 0.00544291748801655], 'false,false': [0.08388662825724875, 0.0], 'false,false,false': [nan, 0.0], 'false': [nan, 0.08164592777113054]}, {'': [0.034402242030335546, 0.06796683471572686], 'true': [0.0347761487708142, 0.0], 'false,false': [nan, 0.06796683471572626], 'true,true,true': [0.04187948489668342, 0.0028865701515832453], 'true,true': [0.03519403684564108, 0.0], 'false,false,false': [0.07076801224023915, 0.0], 'false': [nan, 0.06796683471572629]}, {'': [0.04702405205428592, 0.0694187659954566], 'false,true,false': [0.042553762944498696, nan], 'false,false': [0.13343359769205937, 0.15710971691452755], 'false,true,true': [0.04264626983237734, 0.0], 'false': [0.042460938133717346, 0.15520535043682607], 'false,true': [0.04242997822334774, 0.042553762944498696]}, {'': [0.046348207535147325, 0.102971570407304], 'true': [nan, 0.046348207535147325], 'false,false,false': [0.027206458874486805, 0.15466572165380732], 'false,false': [0.0052172049590868685, 0.10719336972991127], 'false': [nan, 0.10297157040730405]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,true,false;follows(D, G).;true;true
0;false,true;follows(E, A), tweets(E, F).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
1;true,true;follows(E, A).;true;true
1;true;tweets(C, D).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
4;false,false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false;follows(D, A).;true;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, D), follows(D, A).;true;true
5;false,true;follows(A, G), tweets(G, H).;true;true
5;false;tweets(A, E), follows(F, A).;true;true
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(D, A).;true;true
6;false;follows(A, F), tweets(F, G).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true;tweets(D, E).;true;true
7;true;follows(D, C), follows(C, D).;true;true
7;false;follows(A, G).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,true,true;follows(F, D).;true;true
8;false,true;tweets(D, E), tweets(A, E).;true;true
8;false;follows(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), follows(A, E) )
%   | then return 0.8414822684328459;  // std dev = 0,128, 60,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(G, A), tweets(G, H) )
%   | | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( follows(F, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( follows(J, A) )
%   | | then if ( follows(J, K), recursion_accounttype(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14185106490048832;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.10814893509951237;  // std dev = 2,598, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.2391013160518933;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(C, D) )
%   | then if ( follows(E, A) )
%   | | then if ( follows(F, A), recursion_accounttype(F, B) )
%   | | | then return 0.6904405156618112;  // std dev = 1,391, 63,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=61 */
%   | | | else return 0.7413433124639606;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7505511758931249;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7228249321600526;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( follows(G, A), recursion_accounttype(G, B) )
%   | then return 0.7206563016047538;  // std dev = 0,007, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.10968521996575946;  // std dev = 1,459, 151,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=3 */
%   | | | else return -0.0017980945177552433;  // std dev = 2,704, 82,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.12571743783575576;  // std dev = 2,543, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.2074346514099043;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then if ( tweets(A, E) )
%   | | then return 0.5325801330207949;  // std dev = 0,178, 61,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | | else return 0.5610337879758159;  // std dev = 0,012, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.5550743213797732;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then return 0.6730211492429564;  // std dev = 0,070, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.11758109827296702;  // std dev = 0,080, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.7567623168050015;  // std dev = 0,325, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.17974034735954994;  // std dev = 0,071, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.3986602989350675;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.15425689544881538;  // std dev = 1,870, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( recursion_accounttype(D, B) )
%   | then if ( follows(E, A) )
%   | | then return 0.42189488901246985;  // std dev = 0,174, 99,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=96 */
%   | | else return 0.6037563607535158;  // std dev = 0,119, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11107566657635275;  // std dev = 0,225, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
%   else if ( tweets(A, F), follows(A, G) )
%   | then if ( tweets(H, F), recursion_accounttype(H, B) )
%   | | then return 0.6955202124155487;  // std dev = 0,300, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.2217633131409971;  // std dev = 0,165, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.7251963712359277;  // std dev = 0,237, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.23161629243312243;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( follows(K, A), recursion_accounttype(K, B) )
%   | | | then return 0.417296967416426;  // std dev = 2,58e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.10255824105055383;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(A, D), recursion_accounttype(D, B) )
%   | then return 0.3168216920559838;  // std dev = 0,117, 72,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=71 */
%   | else if ( tweets(A, E) )
%   | | then return -0.05032209439963247;  // std dev = 0,157, 170,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=15 */
%   | | else return -0.03265202320544807;  // std dev = 0,170, 39,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   else if ( follows(F, A) )
%   | then if ( follows(G, A), recursion_accounttype(G, B) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.31604959156068946;  // std dev = 0,052, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.20945388475769067;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.07335355281726559;  // std dev = 0,091, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return 0.294061083422571;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tweets(A, J) )
%   | | | then return -2.641415892777517E-4;  // std dev = 1,974, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | | else return 0.15049120679683342;  // std dev = 1,608, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, A) )
%   | then if ( follows(A, E), recursion_accounttype(E, B) )
%   | | then return 0.25082078664986307;  // std dev = 0,124, 65,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=64 */
%   | | else return 0.33375513294739767;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.26728053549044045;  // std dev = 0,062, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( tweets(A, F), follows(G, A) )
%   | then if ( follows(A, H), tweets(H, I) )
%   | | then if ( follows(A, J), follows(J, A) )
%   | | | then return -0.03218712905161103;  // std dev = 2,002, 147,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=17 */
%   | | | else return -0.06272570072339137;  // std dev = 0,407, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else return -0.08746169177284681;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( follows(A, K), recursion_accounttype(K, B) )
%   | | then return 0.24136599623271118;  // std dev = 0,063, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.017359685934401608;  // std dev = 1,942, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return -0.020556933401167647;  // std dev = 2,004, 65,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, A) )
%   | then if ( follows(A, E), recursion_accounttype(E, B) )
%   | | then if ( follows(A, F), follows(E, F) )
%   | | | then return 0.1881993812773039;  // std dev = 1,389, 62,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=60 */
%   | | | else return 0.03927649559392086;  // std dev = 0,796, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2640664196899854;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2183398197598954;  // std dev = 0,054, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( follows(A, G), tweets(G, H) )
%   | then if ( follows(I, A) )
%   | | then if ( follows(J, I), follows(J, A) )
%   | | | then return -0.07874131019323063;  // std dev = 1,221, 146,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=3 */
%   | | | else return 0.0444365656595692;  // std dev = 1,900, 70,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | else if ( follows(A, K), recursion_accounttype(K, B) )
%   | | | then return 0.19649554273133166;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06114523248425308;  // std dev = 2,518, 52,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | else return -0.0807284233380953;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(C, D) )
%   | then if ( tweets(D, E) )
%   | | then if ( tweets(A, F), follows(A, G) )
%   | | | then return 0.09842438019125475;  // std dev = 2,338, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | | else return 0.18839264588753005;  // std dev = 0,037, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.20776719404834043;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.18421192427039634;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( follows(A, H) )
%   | then if ( follows(I, A) )
%   | | then if ( follows(I, J), follows(J, A) )
%   | | | then return -0.07111630420434396;  // std dev = 1,263, 122,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=3 */
%   | | | else return 0.026289777035565034;  // std dev = 1,908, 77,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.03834294766460864;  // std dev = 1,602, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.11152484271726262;  // std dev = 1,854, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else return -0.07493663888075644;  // std dev = 6,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.16090952889235774;  // std dev = 0,109, 83,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=82 */
%   else if ( follows(D, A) )
%   | then if ( tweets(D, E), tweets(A, E) )
%   | | then if ( follows(F, D) )
%   | | | then return -0.03883116815209243;  // std dev = 2,098, 189,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=17 */
%   | | | else return -0.0964193175288724;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.0019425603652128466;  // std dev = 0,508, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.042288271373349624;  // std dev = 0,984, 45,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.3475862211620614;  // std dev = 1,363, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.17231126586055118;  // std dev = 0,185, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.12284283968350507;  // std dev = 0,780, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.046072356529885755;  // std dev = 1,418, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.15111662515962748;  // std dev = 0,095, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( follows(A, D) )
%   | then if ( follows(A, E), follows(D, E) )
%   | | then if ( follows(E, A), follows(D, A) )
%   | | | then return -0.05904897452443113;  // std dev = 1,078, 139,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=3 */
%   | | | else return -0.014081600081684548;  // std dev = 1,884, 81,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | | else if ( follows(F, D), recursion_accounttype(F, B) )
%   | | | then return 0.4159402150380544;  // std dev = 1,060, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.1722412195111334;  // std dev = 0,475, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06742164291568944;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.990908
   AUC PR    = 0.352226
   CLL	      = -0.129075
   Precision = 0.362245 at threshold = 0.5
   Recall    = 0.910256
   F1        = 0.518248


Total learning time: 17.282 seconds
Total inference time: 21.459 seconds
AUC ROC: 0.990908


Results scoring model
   AUC ROC   = 0.992764
   AUC PR    = 0.340496
   CLL	      = -0.121655
   Precision = 0.354467 at threshold = 0.5
   Recall    = 0.97619
   F1        = 0.520085


Total scoring time: 16.147 seconds
Refined model CLL: -0.121655


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990908
   AUC PR    = 0.352226
   CLL	      = -0.129075
   Precision = 0.362245 at threshold = 0.5
   Recall    = 0.910256
   F1        = 0.518248


Total learning time: 55.732 seconds
Total inference time: 21.459 seconds
AUC ROC: 0.990908
Total revision time: 55.732
Best scored revision CLL: -0.121655


Dataset: 15_yeast_twitter, Fold: 1, Type: Transfer (trRDN-B), Time: 04:46:20
{'Learning time': 55.732, 'F1': 0.518248, 'Precision': [0.362245, 0.5], 'Recall': 0.910256, 'Inference time': 21.459, 'parameter': {'Learning time': 5.555, 'F1': 0.477842, 'Precision': [0.341598, 0.5], 'Recall': 0.794872, 'Inference time': 22.108, 'CLL': -0.160271, 'AUC ROC': 0.968989, 'AUC PR': 0.358744}, 'CLL': -0.129075, 'AUC ROC': 0.990908, 'AUC PR': 0.352226}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(C, D) )
%   | then return 0.810529887480465;  // std dev = 0,213, 63,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=60 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), follows(G, E) )
%   | | | then return 0.8025933795439567;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.6081489350995123;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.14185106490048838;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.10814893509951223;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.17393840878372288;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(D, A) )
%   | then return 0.7270253397948309;  // std dev = 0,032, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( follows(A, C), tweets(A, E) )
%   | | then return 0.39247996870112195;  // std dev = 1,149, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7232773461050549;  // std dev = 0,015, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then if ( follows(A, H), follows(F, H) )
%   | | | then return 0.7325774715192019;  // std dev = 0,035, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.6004052955700551;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.12544463852839166;  // std dev = 0,000, 201,000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return 0.5549128790475086;  // std dev = 0,921, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.05249989611097648;  // std dev = 2,301, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.09347520010570146;  // std dev = 2,434, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(D, C) )
%   | then if ( tweets(C, E), tweets(D, E) )
%   | | then return 0.5628501231925211;  // std dev = 0,036, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else if ( tweets(C, F), follows(A, D) )
%   | | | then return 0.3652371758383361;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5605426389682325;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.582079115868373;  // std dev = 0,137, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), recursion_accounttype(H, B) )
%   | | then return 0.5847964078283698;  // std dev = 0,156, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.11231637819360664;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return 0.440106880997339;  // std dev = 0,931, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.13261236249126782;  // std dev = 2,125, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.0698293989209843;  // std dev = 2,464, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then return 0.4296578956683682;  // std dev = 0,178, 74,000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else return 0.30275047012802336;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.17068372713100355;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4433272142731687;  // std dev = 0,158, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.10159632948783655;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return 0.542635151335032;  // std dev = 0,127, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.10354477885566603;  // std dev = 2,115, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.06786452542437832;  // std dev = 2,450, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then if ( follows(D, C), recursion_accounttype(D, B) )
%   | | then return 0.3293567896894094;  // std dev = 0,085, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else return 0.2974251947601789;  // std dev = 0,176, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return 0.23170383268424713;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then return -0.08691383462639683;  // std dev = 0,078, 154,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=3 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.29014942438616614;  // std dev = 1,007, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return 0.20290864476039658;  // std dev = 0,937, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.021415279942202627;  // std dev = 2,260, 38,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.08254607680877486;  // std dev = 2,355, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( follows(D, A) )
%   | | then return 0.2608697628301389;  // std dev = 0,077, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.07380826927304225;  // std dev = 0,819, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.28243598781634266;  // std dev = 0,122, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then return -0.07938305561387263;  // std dev = 0,080, 151,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=3 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.2773452864619779;  // std dev = 0,131, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return 0.3631007333146115;  // std dev = 0,125, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.04019731055174593;  // std dev = 2,222, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.16213586281333736;  // std dev = 2,177, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( recursion_accounttype(D, B) )
%   | | then return 0.21719694611895435;  // std dev = 0,116, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else if ( follows(A, C), tweets(A, E) )
%   | | | then return 0.10936500213270833;  // std dev = 0,949, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.20647841562987787;  // std dev = 0,018, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.23584900025716843;  // std dev = 0,057, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( follows(F, A) )
%   | then return -0.04906184456772221;  // std dev = 0,107, 234,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=23 */
%   | else if ( tweets(A, G) )
%   | | then if ( tweets(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.54173925579817;  // std dev = 0,583, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1817009944647481;  // std dev = 0,085, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.2401308758385782;  // std dev = 1,432, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.11100368125374577;  // std dev = 1,847, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( recursion_accounttype(D, B) )
%   | | then return 0.17968708728274985;  // std dev = 0,057, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( follows(A, C), tweets(C, E) )
%   | | | then return 3.549182710279967E-5;  // std dev = 1,531, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.18114433006119415;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19256448848771698;  // std dev = 0,099, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( follows(F, A) )
%   | then return -0.04573116170776113;  // std dev = 0,113, 233,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=23 */
%   | else if ( tweets(A, G) )
%   | | then if ( tweets(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.34843224213900004;  // std dev = 1,047, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.156771420384232;  // std dev = 0,082, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.19708087332071758;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08983804634460098;  // std dev = 1,846, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then return 0.14367155727948297;  // std dev = 0,135, 56,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=55 */
%   | else return 0.1673381748820351;  // std dev = 0,130, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( tweets(A, G), follows(A, E) )
%   | | | then return 0.27814266781585884;  // std dev = 0,331, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.01902791975716589;  // std dev = 1,099, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.07268587474605649;  // std dev = 0,005, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.4349481498219511;  // std dev = 0,747, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.16721324353006675;  // std dev = 0,239, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.013721912340620458;  // std dev = 0,905, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.03296712958738034;  // std dev = 1,904, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.15085464453464117;  // std dev = 0,311, 77,000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.13906356844613899;  // std dev = 0,043, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( follows(E, A) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return -0.06300896981716436;  // std dev = 0,920, 159,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=3 */
%   | | | else return -0.022478541565483966;  // std dev = 0,899, 75,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=12 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.00515611488959301;  // std dev = 1,261, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.028256808485763337;  // std dev = 2,240, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */


Results
   AUC ROC   = 0.992923
   AUC PR    = 0.364549
   CLL	      = -0.130915
   Precision = 0.333333 at threshold = 0.5
   Recall    = 0.865385
   F1        = 0.481283


Total learning time: 19.806 seconds
Total inference time: 18.299 seconds
AUC ROC: 0.992923


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN-B), Time: 04:46:59
{'Learning time': 19.806, 'CLL': -0.130915, 'Recall': 0.865385, 'Inference time': 18.299, 'F1': 0.481283, 'Precision': [0.333333, 0.5], 'AUC ROC': 0.992923, 'AUC PR': 0.364549}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then if ( tweets(A, E), follows(D, C) )
%   | | | then return 0.8581489350995121;  // std dev = 2,06e-07, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( follows(A, C), tweets(A, F) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tweets(A, G), tweets(C, G) )
%   | | then if ( follows(A, C) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6581489350995123;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( follows(H, A) )
%   | then if ( follows(H, I), recursion_accounttype(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 8,43e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.14185106490048846;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( follows(A, J), recursion_accounttype(J, B) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.10814893509951237;  // std dev = 2,598, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.14386322081379807;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */


Results
   AUC ROC   = 0.956132
   AUC PR    = 0.24853
   CLL	      = -0.155694
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.006 seconds
Total inference time: 5.079 seconds
AUC ROC: 0.956132


Dataset: 15_yeast_twitter, Fold: 1, Type: Scratch (RDN), Time: 04:47:10
{'Learning time': 6.006, 'CLL': -0.155694, 'Recall': 0.0, 'Inference time': 5.079, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.956132, 'AUC PR': 0.24853}


Starting fold 2

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos	 examples: 126
Target test neg examples: 16128

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
0;false,true,false;interaction(D, G).;false;false
0;false,true;interaction(E, A), enzyme(E, F).;false;true
0;false,false,false;interaction(H, A), enzyme(H, I).;false;false
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,false;interaction(A, A).;false;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
1;true;enzyme(C, D), phenotype(C, E).;true;false
1;false,false;interaction(A, H), complex(A, I).;true;true
1;true,true;complex(A, F), interaction(G, A).;false;false
1;false,false,false;enzyme(A, K).;false;false
1;false;interaction(A, A).;false;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true,true,false;phenotype(C, G).;false;false
2;false,false,true;enzyme(H, J), enzyme(A, K).;false;false
2;true;interaction(A, D), complex(D, E).;true;false
2;false,false;interaction(H, A), interaction(I, H).;true;true
2;true,true;interaction(C, D), interaction(D, F).;false;true
2;false,false,false;interaction(A, L), interaction(L, L).;false;false
2;false;interaction(A, A).;false;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;false;true
3;false,false,true;interaction(J, J), location(J, K).;false;false
3;false,true,false;interaction(D, D), enzyme(D, H).;false;false
3;false,true;complex(A, F), complex(D, F).;true;true
3;false,true,true;enzyme(A, G), interaction(E, D).;false;false
3;false,false,false;interaction(A, L), interaction(L, L).;false;false
3;false;interaction(A, D), interaction(E, A).;true;true
3;false,false;complex(A, I), interaction(J, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
4;false,false;interaction(A, H), recursion_proteinclass(H, B).;false;true
4;true;interaction(C, C), recursion_proteinclass(C, B).;false;true
4;false,true,false;phenotype(D, G), phenotype(A, G).;false;false
4;true,false;interaction(A, A).;false;false
4;false,false,false;interaction(A, I), complex(I, J).;false;false
4;false;interaction(D, A), location(A, E).;true;true
4;false,true;interaction(A, F), recursion_proteinclass(F, B).;false;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D), interaction(D, A).;false;false
5;false,true,true;interaction(A, F), enzyme(F, E).;false;false
5;false,true;interaction(A, G), enzyme(G, H).;true;true
5;false,true,false;interaction(I, F), phenotype(I, J).;false;false
5;false,false,false;interaction(K, A), interaction(K, K).;false;false
5;false;enzyme(A, E), interaction(F, A).;true;true
5;false,false;interaction(A, A).;false;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,false,true;interaction(H, J), recursion_proteinclass(J, B).;false;false
6;true;interaction(A, D), interaction(D, A).;false;false
6;false,true,false;interaction(A, F), location(A, G).;false;false
6;false,true;interaction(A, A).;false;true
6;false,false,false;interaction(A, K), phenotype(K, L).;false;false
6;false;interaction(E, A), interaction(E, E).;true;true
6;false,false;interaction(A, H), enzyme(H, I).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(A, H), complex(A, I).;false;false
7;true;interaction(D, C), interaction(C, D).;true;false
7;false,false;interaction(A, G), interaction(G, G).;true;true
7;true,true,true;enzyme(A, E).;false;false
7;true,true;enzyme(D, E), phenotype(A, F).;true;false
7;false,false,false;interaction(A, J), complex(J, K).;false;false
7;false;interaction(A, A).;false;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;location(A, D).;false;false
8;false,true,true;interaction(H, E), phenotype(A, I).;false;false
8;false,true;enzyme(E, G), enzyme(A, G).;true;true
8;false,true,false;interaction(J, E), complex(J, F).;false;false
8;false,false,false;complex(A, L), location(A, M).;false;false
8;false;interaction(E, A), complex(E, F).;true;true
8;false,false;interaction(A, K), recursion_proteinclass(K, B).;false;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, A).;true;true
9;true;interaction(C, C), recursion_proteinclass(C, B).;false;false
9;false,true,true;interaction(A, F), enzyme(F, G).;false;false
9;false,true;complex(A, E).;true;true
9;false,true,false;interaction(D, H), recursion_proteinclass(H, B).;false;false
9;false,false,false;phenotype(A, J), interaction(K, A).;false;false
9;false;interaction(D, A), interaction(D, D).;true;true
9;false,false;interaction(A, I), recursion_proteinclass(I, B).;false;true


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.8351604293523855;  // std dev = 1,398, 87,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=85 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), tweets(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( follows(D, G) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, A), tweets(H, I) )
%   | | | then return -0.06422549412423194;  // std dev = 3,960, 219,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=17 */
%   | | | else return 0.1359267128772891;  // std dev = 5,375, 144,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=40 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( tweets(C, D) )
%   | then if ( follows(E, A) )
%   | | then return 0.7236823993973092;  // std dev = 0,011, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.6302322013528495;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.7240897207379249;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, F) )
%   | | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | | then return 0.8139306680200218;  // std dev = 0,998, 45,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | | else return -0.12131474374346686;  // std dev = 2,356, 272,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=6 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.1379066901351215;  // std dev = 3,177, 58,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.1639020375278075;  // std dev = 2,526, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then if ( follows(C, D), follows(D, E) )
%   | | then return 0.543736516225389;  // std dev = 0,992, 67,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=66 */
%   | | else return 0.6013275611912317;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6949685438506243;  // std dev = 0,007, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(F, A), follows(G, F) )
%   | | then if ( tweets(F, H), tweets(A, I) )
%   | | | then return -0.04540151857171284;  // std dev = 3,673, 206,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=21 */
%   | | | else return -0.07966653874670193;  // std dev = 1,272, 39,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | | else if ( follows(A, J), follows(J, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10576007603390811;  // std dev = 5,137, 163,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=48 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.4274049419766948;  // std dev = 1,423, 80,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=78 */
%   else if ( follows(A, D), follows(E, A) )
%   | then if ( tweets(A, F), follows(E, D) )
%   | | then return -0.06627151897050977;  // std dev = 2,430, 162,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=11 */
%   | | else if ( follows(D, D), tweets(D, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.047883331048070216;  // std dev = 2,386, 51,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06094847795727691;  // std dev = 2,525, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( follows(A, I), follows(I, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06324334496158442;  // std dev = 4,897, 157,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=40 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(C, C), recursion_accounttype(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.05309520436835309;  // std dev = 4,189, 255,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=82 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), recursion_accounttype(E, B) )
%   | | then return 0.36981321851742766;  // std dev = 0,109, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07986598470309307;  // std dev = 0,332, 71,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | else if ( follows(A, F), recursion_accounttype(F, B) )
%   | | then return 0.47241926445426813;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( follows(A, G) )
%   | | | then return 0.06181556477087454;  // std dev = 3,956, 108,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=29 */
%   | | | else return 0.09812925954988815;  // std dev = 2,764, 36,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, A) )
%   | then return 0.2692314254059553;  // std dev = 1,697, 66,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=63 */
%   | else return 0.4212284125607642;  // std dev = 0,933, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( tweets(A, E), follows(F, A) )
%   | then if ( follows(A, G), tweets(G, H) )
%   | | then if ( follows(A, F), tweets(F, E) )
%   | | | then return -0.030035632709569337;  // std dev = 3,153, 163,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=18 */
%   | | | else return -0.07881470225565494;  // std dev = 1,202, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( follows(I, F) )
%   | | | then return -0.1314482407693704;  // std dev = 0,984, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(J, A), follows(J, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.056028321575777564;  // std dev = 5,099, 178,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=50 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, A) )
%   | then return 0.24396446929599166;  // std dev = 1,008, 64,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=63 */
%   | else return 0.3220279606589388;  // std dev = 0,921, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( follows(E, A), follows(E, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, F), tweets(F, G) )
%   | | then if ( follows(F, H), recursion_accounttype(H, B) )
%   | | | then return 0.5819900952637558;  // std dev = 1,512, 53,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.11777261623084083;  // std dev = 2,264, 276,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=6 */
%   | | else if ( follows(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.01809647369091015;  // std dev = 3,178, 74,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=13 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(C, D) )
%   | then if ( tweets(D, E) )
%   | | then if ( tweets(A, E) )
%   | | | then return 0.21040020152312508;  // std dev = 1,412, 69,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=67 */
%   | | | else return 0.22703264456451347;  // std dev = 0,133, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.18861916790149152;  // std dev = 0,073, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, F), follows(F, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, G) )
%   | | | then return -0.007362942553106811;  // std dev = 4,600, 303,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=58 */
%   | | | else return 0.008159689702713104;  // std dev = 3,126, 66,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.19945311708907223;  // std dev = 0,042, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( follows(D, A) )
%   | then if ( tweets(D, E), tweets(A, E) )
%   | | then if ( follows(F, D) )
%   | | | then return -0.04706464840648291;  // std dev = 3,025, 195,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=20 */
%   | | | else return -0.11203351255464751;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( follows(G, D) )
%   | | | then return -0.06907371642490212;  // std dev = 1,527, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return 0.22908062468067714;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.029339018134567112;  // std dev = 0,357, 149,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=40 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(C, C), recursion_accounttype(C, B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.012455548277246667;  // std dev = 3,180, 244,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=82 */
%   else if ( follows(D, A), follows(D, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), recursion_accounttype(E, B) )
%   | | then return 0.1118469198946271;  // std dev = 1,000, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.026223946986542786;  // std dev = 1,997, 65,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0.05251450735711921;  // std dev = 4,246, 132,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */


Results
   AUC ROC   = 0.987034
   AUC PR    = 0.358508
   CLL	      = -0.14473
   Precision = 0.332237 at threshold = 0.5
   Recall    = 0.801587
   F1        = 0.469767


Total learning time: 6.305 seconds
Total inference time: 17.726 seconds
AUC ROC: 0.987034


Results scoring model
   AUC ROC   = 0.979295
   AUC PR    = 0.367145
   CLL	      = -0.160377
   Precision = 0.346369 at threshold = 0.5
   Recall    = 0.794872
   F1        = 0.48249


Total scoring time: 21.477 seconds
Parameter learned model CLL: -0.160377


Structure after Parameter Learning
[['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,true,false': 'follows(D, G)', 'false,true': 'follows(E, A), tweets(E, F)', 'false,false,false': 'follows(H, A), tweets(H, I)', 'false': 'follows(A, D), recursion_accounttype(D, B)', 'false,false': 'follows(A, A)'}, {'false,true,false,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'true': [1.398, 2, 85], 'false,true,true': [0.0, 0, 6], 'false,false,false,true': [3.96, 202, 17], 'false,true,false,true': [0.943, 1, 8], 'false,false,false,false': [5.375, 104, 40]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false,false,true': 'follows(F, G), recursion_accounttype(G, B)', 'true': 'tweets(C, D)', 'false,false': 'follows(A, F)', 'true,true': 'follows(E, A)', 'false,false,false': 'tweets(A, H)', 'false': 'follows(A, A)'}, {'false,false,true,false': [2.356, 266, 6], 'true,true,false': [0.943, 1, 8], 'false,true': [0.0, 0, 0], 'true,true,true': [0.011, 0, 68], 'false,false,false,true': [3.177, 40, 18], 'false,false,false,false': [2.526, 21, 10], 'false,false,true,true': [0.998, 1, 44], 'true,false': [0.0, 0, 2]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,false,true': 'tweets(F, H), tweets(A, I)', 'true': 'follows(A, D)', 'false,false': 'follows(F, A), follows(G, F)', 'true,true': 'follows(C, D), follows(D, E)', 'false,false,false': 'follows(A, J), follows(J, J)', 'false': 'follows(A, A)'}, {'false,false,true,false': [1.272, 37, 2], 'true,true,false': [0.085, 0, 4], 'false,true': [0.0, 0, 0], 'true,true,true': [0.992, 1, 66], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.137, 115, 48], 'false,false,true,true': [3.673, 185, 21], 'true,false': [0.007, 0, 15]}], ['accounttype(A, B)', {'': 'follows(A, C), recursion_accounttype(C, B)', 'false,false,true': 'follows(H, H)', 'false,true,false': 'follows(D, D), tweets(D, G)', 'false,true': 'tweets(A, F), follows(E, D)', 'false,false,false': 'follows(A, I), follows(I, I)', 'false': 'follows(A, D), follows(E, A)', 'false,false': 'follows(H, A)'}, {'false,true,false,false': [2.386, 41, 10], 'false,false,true,false': [2.525, 42, 17], 'true': [1.423, 2, 78], 'false,true,true': [2.43, 151, 11], 'false,false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,false,false,false': [4.897, 117, 40], 'false,false,true,true': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(C, A)', 'true': 'follows(C, C), recursion_accounttype(C, B)', 'false,false': 'follows(A, F), recursion_accounttype(F, B)', 'false': 'follows(D, A)', 'false,false,false': 'follows(A, G)', 'true,false': 'follows(A, A)', 'false,true': 'follows(A, E), recursion_accounttype(E, B)'}, {'false,false,true': [0.0, 0, 8], 'true,true': [0.0, 0, 0], 'false,true,true': [0.109, 0, 3], 'false,false,false,true': [3.956, 79, 29], 'true,false,false': [4.189, 173, 82], 'false,true,false': [0.332, 48, 23], 'false,false,false,false': [2.764, 25, 11], 'true,false,true': [0.0, 0, 0]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true': 'follows(A, D), follows(D, A)', 'false,true,false': 'follows(I, F)', 'false,true': 'follows(A, G), tweets(G, H)', 'false,true,true': 'follows(A, F), tweets(F, E)', 'false,false,false': 'follows(J, A), follows(J, J)', 'false': 'tweets(A, E), follows(F, A)', 'false,false': 'follows(A, A)'}, {'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,true,true': [3.153, 145, 18], 'true,true': [1.697, 3, 63], 'false,true,true,false': [1.202, 20, 2], 'false,true,false,true': [0.984, 30, 1], 'false,false,false,false': [5.099, 128, 50], 'false,false,false,true': [0.0, 0, 0], 'true,false': [0.933, 1, 22]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,false,true': 'follows(F, H), recursion_accounttype(H, B)', 'true': 'follows(A, D), follows(D, A)', 'false,false': 'follows(A, F), tweets(F, G)', 'false,false,false': 'follows(A, I)', 'false': 'follows(E, A), follows(E, E)'}, {'false,false,true,false': [2.264, 270, 6], 'false,false,true,true': [1.512, 1, 52], 'false,true': [0.0, 0, 0], 'false,false,false,false': [3.178, 61, 13], 'true,true': [1.008, 1, 63], 'false,false,false,true': [0.0, 0, 0], 'true,false': [0.921, 1, 22]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'true': 'follows(D, C), follows(C, D)', 'false,false': 'follows(A, F), follows(F, F)', 'true,true,true': 'tweets(A, E)', 'true,true': 'tweets(D, E)', 'false,false,false': 'follows(A, G)', 'false': 'follows(A, A)'}, {'true,true,true,false': [0.133, 0, 16], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true,true': [1.412, 2, 67], 'false,false,false,false': [3.126, 53, 13], 'false,false,false,true': [4.6, 245, 58], 'false,false,true': [0.0, 0, 0], 'true,false': [0.073, 0, 2]}], ['accounttype(A, B)', {'': 'follows(C, A), recursion_accounttype(C, B)', 'false,true,true': 'follows(F, D)', 'false,true': 'tweets(D, E), tweets(A, E)', 'false,true,false': 'follows(G, D)', 'false': 'follows(D, A)', 'false,false': 'follows(A, H), recursion_accounttype(H, B)'}, {'false,true,false,false': [0.0, 0, 0], 'false,false,true': [7.45e-09, 0, 8], 'true': [0.042, 0, 85], 'false,true,true,true': [3.025, 175, 20], 'false,true,true,false': [0.0, 3, 0], 'false,true,false,true': [1.527, 47, 3], 'false,false,false': [0.357, 109, 40]}], ['accounttype(A, B)', {'': 'follows(A, C), follows(C, A)', 'true': 'follows(C, C), recursion_accounttype(C, B)', 'false,false,false': 'follows(F, A)', 'false,false': 'follows(A, E), recursion_accounttype(E, B)', 'false': 'follows(D, A), follows(D, D)'}, {'false,false,true': [1.0, 1, 11], 'false,true': [0.0, 0, 0], 'false,false,false,false': [4.246, 92, 40], 'true,true': [0.0, 0, 0], 'false,false,false,true': [1.997, 42, 23], 'true,false': [3.18, 162, 82]}]]
[{'': [0.022460034350640704, 0.1522406555231455], 'false,true,false': [0.09876543209876527, 0.0], 'false,false': [nan, 0.13236800764975168], 'false,false,false': [0.0715998415379159, 0.2006172839506185], 'false': [0.10937499999999967, 0.1323680076497515], 'false,true': [-1.4802973661668753e-16, 0.15999999999999986]}, {'': [0.012135007177078801, 0.14305360521615987], 'false,false,true': [0.022111273992671147, 0.020405058471562], 'true': [0.012446952281954048, 0.0], 'false,false': [0.12718760265409326, 0.18522699714189528], 'true,true': [1.7144103048055365e-06, 0.09876543209876543], 'false,false,false': [0.17398955017109421, 0.20581151625190872], 'false': [nan, 0.14305360521615984]}, {'': [0.015080697543409842, 0.10769782900350702], 'false,false,true': [0.06550552736215756, 0.041459371442935], 'true': [0.014446195735069106, 3.5350971435477162e-06], 'false,false': [0.061834917319129254, 0.16190370866160886], 'true,true': [0.014690715263029702, 0.00722062312289351], 'false,false,false': [nan, 0.16190370866160855], 'false': [nan, 0.10769782900350801]}, {'': [0.02529588024096474, 0.10155602585799917], 'false,false,true': [nan, 0.10804915457609986], 'false,true,false': [nan, 0.11167022542263745], 'false,false': [0.10804915457609986, 0.15273046896633602], 'false,false,false': [nan, 0.15273046896633533], 'false': [0.056843482255609964, 0.1405268962684826], 'false,true': [0.036463033704962955, 0.11167022542263759]}, {'': [0.06882886176044545, 0.14426136447945512], 'true,false': [nan, 0.06882886176044545], 'true': [nan, 0.06882886176044545], 'false,false': [-8.326672684688674e-17, 0.1619664675105785], 'false,false,false': [0.14489157398625246, 0.21220213476217906], 'false': [0.10889177884793519, 0.16148071395916191], 'false,true': [0.0039889846498195785, 0.10991607242492595]}, {'': [0.046557784739043324, 0.1008442014337578], 'true': [0.0436153023237878, 0.03786880576353222], 'false,true,true': [0.06100401050311807, 0.06567069096411687], 'false,false': [nan, 0.1460657583143568], 'false,true,false': [0.03121748178980234, nan], 'false,false,false': [nan, 0.1460657583143566], 'false': [0.05854162605737611, 0.14606575831435634], 'false,true': [0.06180827374233852, 0.03121748178980234]}, {'': [0.02261073526291028, 0.09750311653060291], 'false,false,true': [0.04315916908445242, 0.018570756145778772], 'true': [0.01586286293797152, 0.036904548117855644], 'false,false': [0.08870692914208904, 0.13647142525544878], 'false,false,false': [nan, 0.13647142525544878], 'false': [nan, 0.09750311653060291]}, {'': [0.02322221131644431, 0.08386693166571921], 'true': [0.02369090056335366, 0.002696584899068294], 'false,false': [nan, 0.08386693166571907], 'true,true,true': [0.028875858283789625, 0.0011062052981481024], 'true,true': [0.02369090056335366, nan], 'false,false,false': [0.06984779611122809, 0.1480296535431195], 'false': [nan, 0.08386693166571926]}, {'': [0.0017629410047634044, 0.07817999932522478], 'false,true,false': [0.04664442285755098, nan], 'false,false': [6.938893903907228e-18, 0.1277623209518524], 'false,true,true': [0.04692718303256218, -2.3129646346357427e-18], 'false': [0.04642394633142711, 0.12318150235767632], 'false,true': [0.04627914994829142, 0.04664442285755098]}, {'': [0.04144802891071683, 0.11050651360808862], 'true': [nan, 0.04144802891071683], 'false,false,false': [0.061368711504088624, 0.13655211274855147], 'false,false': [0.08329997129087076, 0.11189821772030781], 'false': [nan, 0.11050651360808919]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,true,false;follows(D, G).;true;true
0;false,true;follows(E, A), tweets(E, F).;true;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
1;true,true;follows(E, A).;true;true
1;true;tweets(C, D).;true;true
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
4;false,false;follows(A, F), recursion_accounttype(F, B).;true;true
4;false;follows(D, A).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true;tweets(A, E).;true;true
7;true;follows(D, C), follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,true,true;follows(F, D).;true;true
8;false,true;tweets(D, E), tweets(A, E).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(A, H), recursion_accounttype(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.8581489350995121;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), tweets(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( follows(D, G) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), recursion_accounttype(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1418510649004885;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.08471143509951139;  // std dev = 4,736, 128,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=29 */
%   | | | else return 0.2129876447769317;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.709306691986613;  // std dev = 0,110, 79,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=78 */
%   else if ( follows(D, A), follows(A, D) )
%   | then if ( follows(E, A), follows(E, D) )
%   | | then if ( follows(D, E), tweets(A, F) )
%   | | | then return -0.10405430812992673;  // std dev = 1,180, 79,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=2 */
%   | | | else return -0.12544463852839133;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( follows(D, G), recursion_accounttype(G, B) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.12544463852839116;  // std dev = 2,11e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( tweets(A, H), follows(A, I) )
%   | | then if ( tweets(J, H), recursion_accounttype(J, B) )
%   | | | then return 0.8155090864634993;  // std dev = 0,248, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.14551562028504492;  // std dev = 0,096, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( follows(K, A), recursion_accounttype(K, B) )
%   | | | then return 0.7194734122109543;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.09622300815734391;  // std dev = 4,415, 108,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then return 0.5311293418399394;  // std dev = 0,166, 72,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=70 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( tweets(A, F) )
%   | | then if ( follows(G, A) )
%   | | | then return 0.5578755173468828;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4422210666720017;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.25174487619581126;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), recursion_accounttype(I, B) )
%   | | | then return 0.5817996186134964;  // std dev = 0,254, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.11695969171998984;  // std dev = 0,129, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.07634068344725026;  // std dev = 4,008, 102,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.13110249382649256;  // std dev = 3,151, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, E) )
%   | then return 0.4276471417090475;  // std dev = 0,204, 69,000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return 0.3581629334001515;  // std dev = 0,233, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(A, G), follows(G, F) )
%   | | then return 0.45997507918671676;  // std dev = 0,132, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.12337804285679914;  // std dev = 0,795, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), follows(I, A) )
%   | | | then return -0.10049408192666962;  // std dev = 0,722, 141,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=1 */
%   | | | else return -0.007086340487106531;  // std dev = 1,938, 89,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   | | else if ( follows(A, J), tweets(A, K) )
%   | | | then return 0.058562819306720575;  // std dev = 2,824, 62,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | | else return 0.10491690283046182;  // std dev = 4,203, 85,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(D, A), recursion_accounttype(D, B) )
%   | then return 0.32912919360465465;  // std dev = 0,194, 63,000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | else return -0.04301845557494607;  // std dev = 0,167, 165,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=19 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, A), recursion_accounttype(F, B) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return 0.26605886034952164;  // std dev = 0,965, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.3190977290506518;  // std dev = 0,036, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07592708218792825;  // std dev = 0,136, 72,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=4 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( tweets(A, I) )
%   | | | then return 0.3773611150259828;  // std dev = 0,074, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10338379423176365;  // std dev = 0,749, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.06743841428257945;  // std dev = 2,768, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.09165288915324817;  // std dev = 4,194, 84,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), follows(A, C) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then return 0.25819691296422786;  // std dev = 4,21e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return 0.14708580185311676;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.268559194772585;  // std dev = 0,186, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then if ( follows(F, H), follows(H, A) )
%   | | | then return -0.024819008860058833;  // std dev = 1,064, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4181046325483585;  // std dev = 0,306, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.0950050590785276;  // std dev = 0,098, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return 0.31646179287647813;  // std dev = 0,129, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( follows(A, J), tweets(A, K) )
%   | | | then return 0.033145693690348324;  // std dev = 2,801, 64,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.048039147983698176;  // std dev = 4,276, 93,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.2218382847949485;  // std dev = 0,219, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( tweets(F, E), recursion_accounttype(F, B) )
%   | | then if ( recursion_accounttype(D, B) )
%   | | | then return 0.18028582160048176;  // std dev = 0,990, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.36260977496993474;  // std dev = 0,365, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.08660966574715731;  // std dev = 0,088, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.7007410352729101;  // std dev = 0,590, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.18726540124200441;  // std dev = 0,226, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.25699772268348514;  // std dev = 1,294, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09682457893371071;  // std dev = 2,687, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(C, D) )
%   | then return 0.1709311402112838;  // std dev = 0,111, 84,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=83 */
%   | else return 0.17254307549763415;  // std dev = 0,007, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(F, E), follows(A, F) )
%   | | | then return -0.13268235249956825;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2848323528391806;  // std dev = 0,346, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.08058291439041358;  // std dev = 0,079, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.44167254737555234;  // std dev = 1,591, 34,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.16995219157692285;  // std dev = 0,521, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.05809166575081089;  // std dev = 1,478, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.04891794484806705;  // std dev = 2,746, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.13893466268399138;  // std dev = 0,979, 60,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | | | else return -0.09328877702895871;  // std dev = 0,852, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.18074125794471366;  // std dev = 0,817, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.16894587921346305;  // std dev = 0,152, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( follows(F, A) )
%   | then if ( tweets(F, G), tweets(A, G) )
%   | | then return -0.05181766049807989;  // std dev = 0,124, 192,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=20 */
%   | | else return -0.055110435064732566;  // std dev = 0,078, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return 0.1490094343723639;  // std dev = 0,077, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.039192077559215034;  // std dev = 2,383, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return -0.0021393620752345687;  // std dev = 3,373, 80,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then return 0.14654466495136192;  // std dev = 0,242, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( tweets(F, E), recursion_accounttype(F, B) )
%   | | then if ( recursion_accounttype(D, B) )
%   | | | then return 0.10205424571604127;  // std dev = 0,985, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.24255753566845967;  // std dev = 0,324, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.07099403309333964;  // std dev = 0,071, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.4658316256078338;  // std dev = 0,682, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.1534086264425833;  // std dev = 0,353, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.02479666716457844;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.16291334944815633;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */


Results
   AUC ROC   = 0.993774
   AUC PR    = 0.412072
   CLL	      = -0.11367
   Precision = 0.336111 at threshold = 0.5
   Recall    = 0.960317
   F1        = 0.497942


Total learning time: 30.956 seconds
Total inference time: 54.798 seconds
AUC ROC: 0.993774


Results scoring model
   AUC ROC   = 0.992685
   AUC PR    = 0.421261
   CLL	      = -0.12622
   Precision = 0.334112 at threshold = 0.5
   Recall    = 0.916667
   F1        = 0.489726


Total scoring time: 67.153 seconds
Refined model CLL: -0.12622


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.993774
   AUC PR    = 0.412072
   CLL	      = -0.11367
   Precision = 0.336111 at threshold = 0.5
   Recall    = 0.960317
   F1        = 0.497942


Total learning time: 125.891 seconds
Total inference time: 54.798 seconds
AUC ROC: 0.993774
Total revision time: 125.891
Best scored revision CLL: -0.12622


Dataset: 15_yeast_twitter, Fold: 2, Type: Transfer (trRDN-B), Time: 04:50:31
{'Learning time': 125.891, 'F1': 0.497942, 'Precision': [0.336111, 0.5], 'Recall': 0.960317, 'Inference time': 54.798, 'parameter': {'Learning time': 6.305, 'F1': 0.469767, 'Precision': [0.332237, 0.5], 'Recall': 0.801587, 'Inference time': 17.726, 'CLL': -0.14473, 'AUC ROC': 0.987034, 'AUC PR': 0.358508}, 'CLL': -0.11367, 'AUC ROC': 0.993774, 'AUC PR': 0.412072}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( tweets(D, C), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then if ( recursion_accounttype(E, B), follows(D, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2,06e-07, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return 0.704302781253358;  // std dev = 1,840, 26,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | else return 0.858148935099512;  // std dev = 1,46e-07, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else return -0.1418510649004883;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( follows(A, G), follows(H, A) )
%   | | then if ( follows(H, G), follows(G, I) )
%   | | | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.1914822684328457;  // std dev = 3,266, 48,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.27920156667845974;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( recursion_accounttype(C, B), follows(A, D) )
%   | | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.32546933500082553;  // std dev = 1,079, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7341215627144437;  // std dev = 0,160, 54,000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | else return -0.12558615546826005;  // std dev = 0,024, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( tweets(A, G) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.49987215789821504;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( follows(I, A) )
%   | | | then return -0.07525260740277857;  // std dev = 1,493, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | | | else return 0.14551790526837693;  // std dev = 4,853, 126,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then return 0.5363195720816103;  // std dev = 0,146, 47,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | else return 0.56052772297418;  // std dev = 0,112, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(G, A), follows(G, E) )
%   | | | then return 0.38942180236852914;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6087508778337605;  // std dev = 0,236, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.15812658896640802;  // std dev = 0,795, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), follows(I, A) )
%   | | | then return -0.11005826683327503;  // std dev = 0,723, 135,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=1 */
%   | | | else return 0.0056437645872838066;  // std dev = 2,753, 99,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=16 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.050661881869555565;  // std dev = 3,186, 81,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | | | else return 0.12579498473204098;  // std dev = 3,783, 66,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), follows(A, C) )
%   | then return 0.40402276712968976;  // std dev = 0,141, 47,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | else return 0.4215391153811402;  // std dev = 0,115, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, E), tweets(A, G) )
%   | | | then return 0.46109257323316666;  // std dev = 1,346, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.708962123417329;  // std dev = 0,232, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.109980107534397;  // std dev = 0,212, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.641956178479362;  // std dev = 1,197, 34,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.17783894775076456;  // std dev = 0,243, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.1821374994676455;  // std dev = 1,569, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.14017461541544074;  // std dev = 2,401, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.32717106162635096;  // std dev = 0,170, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( follows(A, F), follows(F, D) )
%   | | | then return 0.27065407599496016;  // std dev = 1,362, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.5075257401292946;  // std dev = 0,296, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.09864215195465362;  // std dev = 0,160, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.5475269131734499;  // std dev = 0,862, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.15594913861907467;  // std dev = 0,279, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07621675050152496;  // std dev = 1,349, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.21866729145027247;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.2596686963241152;  // std dev = 0,152, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( follows(D, A) )
%   | then if ( follows(E, D), recursion_accounttype(E, B) )
%   | | then if ( follows(D, F), follows(F, A) )
%   | | | then return -0.12378505119165578;  // std dev = 0,969, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3820357967955815;  // std dev = 0,280, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( follows(A, G) )
%   | | | then return -0.08644475471377949;  // std dev = 0,811, 176,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=2 */
%   | | | else return -0.1128661938140867;  // std dev = 0,435, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.4028302423270711;  // std dev = 0,721, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.14079397923483855;  // std dev = 0,487, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.05174506089670694;  // std dev = 1,556, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.09394482640283348;  // std dev = 2,296, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.20034759920789766;  // std dev = 0,119, 68,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=67 */
%   | else if ( follows(A, C) )
%   | | then return -0.11579716643095912;  // std dev = 0,792, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2064384264199041;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then return -0.07270575472823886;  // std dev = 0,052, 162,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=2 */
%   | | else return -0.004677793000648083;  // std dev = 0,178, 91,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=21 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.3160147605715806;  // std dev = 0,628, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.1179707628103612;  // std dev = 0,177, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( follows(A, I), tweets(A, J) )
%   | | | then return 0.0037220896276722037;  // std dev = 0,796, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.06958009925547277;  // std dev = 2,661, 36,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then if ( recursion_accounttype(D, B), follows(D, C) )
%   | | then if ( follows(A, C) )
%   | | | then return 0.1808600427827383;  // std dev = 0,010, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.010179245086379818;  // std dev = 0,931, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1826158083644141;  // std dev = 0,095, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.11215810087101635;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( follows(E, A) )
%   | then return -0.042693443960347806;  // std dev = 0,117, 245,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=23 */
%   | else if ( follows(A, F) )
%   | | then if ( follows(G, F), recursion_accounttype(G, B) )
%   | | | then return 0.2608260034503708;  // std dev = 1,274, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.11577701475803281;  // std dev = 0,350, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.08537119335283737;  // std dev = 1,266, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.02417267532041168;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.15974324530959066;  // std dev = 0,156, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then if ( follows(A, F), recursion_accounttype(F, B) )
%   | | | then return -0.31047502151101736;  // std dev = 0,776, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0725077051597235;  // std dev = 0,814, 128,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=1 */
%   | | else if ( follows(D, G), recursion_accounttype(G, B) )
%   | | | then return 0.2658713263219878;  // std dev = 1,086, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.0868843862925442;  // std dev = 0,089, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.24084681736368296;  // std dev = 0,718, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.10599786941023998;  // std dev = 0,332, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.17612689716690091;  // std dev = 1,113, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.057729511096433934;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( follows(A, D), tweets(D, E) )
%   | | then if ( tweets(C, E) )
%   | | | then return 0.1348433641936703;  // std dev = 0,250, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | | else return -0.1712429305936756;  // std dev = 0,852, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23064650020429558;  // std dev = 0,093, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0770509136204506;  // std dev = 0,302, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then return 0.07635069055943072;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( tweets(A, G) )
%   | | then if ( tweets(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.48264708389533795;  // std dev = 0,194, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12555673172017895;  // std dev = 0,474, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( follows(I, A) )
%   | | | then return -0.02143701990093344;  // std dev = 0,509, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.08480903151302512;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */


Results
   AUC ROC   = 0.99372
   AUC PR    = 0.379663
   CLL	      = -0.101435
   Precision = 0.353933 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.522822


Total learning time: 37.804 seconds
Total inference time: 25.935 seconds
AUC ROC: 0.99372


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN-B), Time: 04:51:35
{'Learning time': 37.804, 'CLL': -0.101435, 'Recall': 1.0, 'Inference time': 25.935, 'F1': 0.522822, 'Precision': [0.353933, 0.5], 'AUC ROC': 0.99372, 'AUC PR': 0.379663}


WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.8581489350995121;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( follows(E, A) )
%   | | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1418510649004883;  // std dev = 0,000, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else if ( follows(A, G), tweets(A, H) )
%   | | | then return 0.1914822684328457;  // std dev = 3,162, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.16302698388000017;  // std dev = 4,169, 82,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */


Results
   AUC ROC   = 0.978981
   AUC PR    = 0.238138
   CLL	      = -0.153783
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.466 seconds
Total inference time: 4.564 seconds
AUC ROC: 0.978981


Dataset: 15_yeast_twitter, Fold: 2, Type: Scratch (RDN), Time: 04:51:43
{'Learning time': 3.466, 'CLL': -0.153783, 'Recall': 0.0, 'Inference time': 4.564, 'F1': nan, 'Precision': [nan, 0.5], 'AUC ROC': 0.978981, 'AUC PR': 0.238138}


