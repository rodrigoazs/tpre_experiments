Starting experiment #4 for 10_rec_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.14185106490048918;  // std dev = 0,000, 727,000 (wgt'ed) examples reached here.  /* #neg=727 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839235;  // std dev = 0,000, 706,000 (wgt'ed) examples reached here.  /* #neg=706 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360679;  // std dev = 0,000, 741,000 (wgt'ed) examples reached here.  /* #neg=741 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783627;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783516;  // std dev = 4,34e-07, 693,000 (wgt'ed) examples reached here.  /* #neg=693 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.09269127618926178;  // std dev = 0,000, 764,000 (wgt'ed) examples reached here.  /* #neg=764 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.08518475138839675;  // std dev = 1,23e-07, 688,000 (wgt'ed) examples reached here.  /* #neg=688 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07877675473109265;  // std dev = 0,000, 663,000 (wgt'ed) examples reached here.  /* #neg=663 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333652;  // std dev = 2,37e-07, 684,000 (wgt'ed) examples reached here.  /* #neg=684 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2,47e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.06842697784420256;  // std dev = 1,86e-07, 704,000 (wgt'ed) examples reached here.  /* #neg=704 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06419184008202536;  // std dev = 2,50e-07, 687,000 (wgt'ed) examples reached here.  /* #neg=687 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 162
Target train neg examples: 9107

Target test facts examples: 35095
Target test pos	 examples: 536
Target test neg examples: 18889

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.07883859027192527;  // std dev = 8,649, 435,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=96 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.06547294290698934;  // std dev = 8,669, 442,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=96 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.060348036824982354;  // std dev = 8,649, 435,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=96 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.06325019604529258;  // std dev = 8,587, 414,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=96 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.0455677485235559;  // std dev = 8,635, 430,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=96 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03985480828024724;  // std dev = 8,629, 428,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=96 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.038056484981994064;  // std dev = 8,606, 420,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=96 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.02889891244087328;  // std dev = 8,624, 426,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=96 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.047649450349679975;  // std dev = 8,493, 386,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=96 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.01866979789892114;  // std dev = 8,612, 422,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=96 */


Results
   AUC ROC   = 0.725746
   AUC PR    = 0.48982
   CLL	      = -0.256648
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451493
   F1        = 0.622108


Total learning time: 1.874 seconds
Total inference time: 3.919 seconds
AUC ROC: 0.725746


Results scoring model
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.250966
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total scoring time: 2.083 seconds
Parameter learned model CLL: -0.250966


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.649, 339, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.669, 346, 96], 'true': [1.19e-07, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.649, 339, 96], 'true': [2.86e-07, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.587, 318, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.635, 334, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.629, 332, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.606, 324, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.624, 330, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.493, 290, 96], 'true': [5.16e-08, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.612, 326, 96], 'true': [4.71e-08, 0, 66]}]]
[{'': [-9.689219124001365e-16, 0.1719857312722959]}, {'': [2.153159805333637e-16, 0.1700210888392919]}, {'': [1.2380668880668413e-15, 0.1719857312722893]}, {'': [-1.0765799026668185e-16, 0.17811384162990804]}, {'': [-2.8260222445003984e-16, 0.17341265548945214]}, {'': [-4.0371746350005693e-17, 0.17398899467202403]}, {'': [-6.728624391667616e-17, 0.17632653061224898]}, {'': [-6.7286243916676156e-18, 0.17456853798849045]}, {'': [4.0371746350005693e-17, 0.18685065370882753]}, {'': [3.364312195833808e-17, 0.17573729251364312]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.45516386047264645;  // std dev = 0,490, 67,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.05229882609451755;  // std dev = 2,337, 67,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.05447242412378864;  // std dev = 0,282, 103,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=9 */
%   | | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | | then return 0.08300100610542822;  // std dev = 5,427, 169,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=38 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.20671588211168967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.43844540821089;  // std dev = 3,767, 62,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=40 */
%   | | else if ( author(G, E), title(G, B) )
%   | | | then return 0.18753553199670348;  // std dev = 1,387, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.05097371790753829;  // std dev = 2,347, 69,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=6 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then return -0.04963435212669575;  // std dev = 0,280, 105,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=9 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.057686635218807916;  // std dev = 5,479, 181,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=38 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3698491707856385;  // std dev = 0,473, 61,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=40 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.41481235817362616;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.029115127026210955;  // std dev = 2,330, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.1430828987156737;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.06297770734493242;  // std dev = 2,366, 90,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.06906133644333523;  // std dev = 5,413, 166,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=38 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.23603716103771566;  // std dev = 0,482, 67,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03406382715179682;  // std dev = 2,848, 98,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=9 */
%   | | | else return 0.066200658439979;  // std dev = 5,979, 205,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=47 */
%   | else return -0.11557343267658317;  // std dev = 0,072, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.21642344515710746;  // std dev = 0,473, 63,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.022749187335202953;  // std dev = 2,832, 91,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=9 */
%   | | | else return 0.052980600192495356;  // std dev = 5,978, 212,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=47 */
%   | else return -0.11113088599236888;  // std dev = 0,099, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordvenue(E, D) )
%   | | then if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return 0.08491569638413486;  // std dev = 4,660, 113,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=47 */
%   | | | else return 0.001222686197945721;  // std dev = 6,190, 293,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=47 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return -0.28030018711606836;  // std dev = 0,505, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.09695679193938693;  // std dev = 1,100, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.09616599343675779;  // std dev = 0,058, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordvenue(E, D) )
%   | | then if ( title(F, B), venue(F, E) )
%   | | | then return 0.04552317190340331;  // std dev = 7,359, 337,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=87 */
%   | | | else return -0.0640818057511625;  // std dev = 2,089, 36,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | | then return -0.3461765220825812;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10385303588119227;  // std dev = 1,106, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return -0.09024728194543455;  // std dev = 0,090, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09321337316499229;  // std dev = 0,483, 68,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03618105214928251;  // std dev = 2,860, 100,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=9 */
%   | | | else return 0.042083504146997935;  // std dev = 5,968, 204,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=47 */
%   | else return -0.08139741443071181;  // std dev = 0,086, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.6769281693934539;  // std dev = 1,525, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | else return -0.15729188905961122;  // std dev = 2,959, 282,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=8 */
%   | | else if ( haswordtitle(A, H), haswordvenue(E, H) )
%   | | | then return -0.0806350158156504;  // std dev = 2,155, 41,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | | else return -0.23588289431458237;  // std dev = 0,315, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | | then if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | | then return -0.4073283776609925;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07289115864806366;  // std dev = 0,026, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.21973763054730197;  // std dev = 0,656, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, A), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.5495248380324824;  // std dev = 1,673, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.1390026691924217;  // std dev = 2,881, 261,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=8 */
%   | | else if ( title(H, B), venue(H, E) )
%   | | | then return -0.0795593209947704;  // std dev = 1,598, 29,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return -0.21309538415809803;  // std dev = 0,576, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return -0.12787097781760784;  // std dev = 0,304, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return -0.07313875151725796;  // std dev = 0,032, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.973975
   AUC PR    = 0.926965
   CLL	      = -0.173957
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.656716
   F1        = 0.792793


Total learning time: 46.992 seconds
Total inference time: 249.791 seconds
AUC ROC: 0.973975


Results scoring model
   AUC ROC   = 0.978889
   AUC PR    = 0.81125
   CLL	      = -0.172614
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.62963
   F1        = 0.772727


Total scoring time: 13.353 seconds
Refined model CLL: -0.172614


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.973975
   AUC PR    = 0.926965
   CLL	      = -0.173957
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.656716
   F1        = 0.792793


Total learning time: 64.30199999999999 seconds
Total inference time: 249.791 seconds
AUC ROC: 0.973975
Total revision time: 64.30199999999999
Best scored revision CLL: -0.172614


Dataset: 10_rec_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 02:03:17
{'AUC ROC': 0.973975, 'F1': 0.792793, 'Precision': [1.0, 0.5], 'Recall': 0.656716, 'AUC PR': 0.926965, 'Inference time': 249.791, 'CLL': -0.173957, 'Learning time': 64.30199999999999, 'parameter': {'AUC ROC': 0.725746, 'F1': 0.622108, 'Precision': [1.0, 0.5], 'Recall': 0.451493, 'AUC PR': 0.48982, 'Inference time': 3.919, 'CLL': -0.256648, 'Learning time': 1.874}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5654660082702446;  // std dev = 0,455, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.10814893509951223;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.06492798797741077;  // std dev = 2,353, 78,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | | else return 0.26380931245800154;  // std dev = 7,149, 212,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=86 */
%   else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.27461114353942784;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.44127781020609613;  // std dev = 0,471, 84,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.11719471056302827;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.07412968815847629;  // std dev = 2,375, 100,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=6 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.005933658541231287;  // std dev = 2,781, 64,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=9 */
%   | | | else return 0.27793673581425965;  // std dev = 6,846, 189,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=86 */
%   else return -0.12544463852839147;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D), haswordvenue(F, C) )
%   | | then if ( title(G, A), venue(G, F) )
%   | | | then return 0.4792169552866762;  // std dev = 3,072, 57,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | | | else return 0.2553521041554494;  // std dev = 1,983, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.0919876969090099;  // std dev = 1,541, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.004327442132908064;  // std dev = 2,766, 60,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), title(K, A) )
%   | | | then return 0.12844639559643647;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.0498020500963541;  // std dev = 2,355, 79,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=6 */
%   | | else return 0.19218692732294756;  // std dev = 0,492, 208,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=86 */
%   else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2729313109492652;  // std dev = 0,463, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.10190378927986565;  // std dev = 1,417, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.051576295113711736;  // std dev = 2,376, 81,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 0.026719054795762424;  // std dev = 2,728, 52,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | | | else return 0.13834366622140898;  // std dev = 7,216, 218,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=86 */
%   else return -0.10159632948783634;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then if ( title(G, A), venue(G, F) )
%   | | | then return 0.16365182310219673;  // std dev = 3,954, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | | | else return 0.5703479536612711;  // std dev = 0,038, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( author(H, E), title(H, B) )
%   | | | then return 0.023957302413243026;  // std dev = 1,517, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.05426180935912044;  // std dev = 2,889, 103,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=10 */
%   | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), title(K, A) )
%   | | | then return 0.3502722855425117;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.05597771445748826;  // std dev = 2,332, 64,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=6 */
%   | | else return 0.15538868625295568;  // std dev = 0,496, 196,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.19731853460053556;  // std dev = 0,442, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return -0.19997254863699418;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2036436937459881;  // std dev = 1,308, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.18357429188719457;  // std dev = 0,106, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.02210516907780746;  // std dev = 2,296, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.02987676554292038;  // std dev = 0,272, 105,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=9 */
%   | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | then if ( haswordvenue(K, J) )
%   | | | then return 0.05244676626532483;  // std dev = 7,284, 228,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=84 */
%   | | | else return 0.017359046967080332;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.23538887367986677;  // std dev = 3,097, 66,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=54 */
%   | | | else return 0.009570582002873012;  // std dev = 2,682, 57,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03742851207399887;  // std dev = 2,831, 107,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=9 */
%   | | | else return 0.09049278041461378;  // std dev = 6,993, 201,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=84 */
%   | else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | | then return -0.33894773350512253;  // std dev = 0,281, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(B, K), haswordvenue(L, K) )
%   | | | then return -0.3568838764831719;  // std dev = 0,250, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.6073141769889175;  // std dev = 0,126, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.08075649210633214;  // std dev = 0,013, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.025676921677303118;  // std dev = 0,460, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else return -0.04106381380242387;  // std dev = 0,252, 127,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=9 */
%   else if ( haswordtitle(A, E), haswordtitle(B, E) )
%   | then return 0.05833815974800036;  // std dev = 0,467, 261,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=95 */
%   | else return -0.07425755731544773;  // std dev = 0,009, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.5644015477152207;  // std dev = 0,161, 136,000 (wgt'ed) examples reached here.  /* #pos=136 */
%   | | else if ( haswordtitle(B, C) )
%   | | | then return -0.23652107728564303;  // std dev = 3,576, 256,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=8 */
%   | | | else return -0.15038008606527348;  // std dev = 0,538, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( title(G, A), venue(G, D) )
%   | | then if ( haswordtitle(B, C) )
%   | | | then return -0.17836047442031316;  // std dev = 1,981, 35,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return -0.06823655892036837;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return 0.12526629015011884;  // std dev = 0,903, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.21808355073507524;  // std dev = 1,052, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | then return 0.4500637903376307;  // std dev = 0,125, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07410954087175732;  // std dev = 0,020, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, A) )
%   | | then if ( author(G, E), title(G, B) )
%   | | | then return 0.07047772074396857;  // std dev = 0,461, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.161055885351833;  // std dev = 1,408, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordvenue(H, C), haswordtitle(B, D) )
%   | | | then return -0.007967118479167621;  // std dev = 3,477, 75,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=52 */
%   | | | else return -0.029330400279407812;  // std dev = 2,400, 109,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=10 */
%   | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), title(K, A) )
%   | | | then return 0.32118225563648256;  // std dev = 1,159, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.007433924367540575;  // std dev = 2,080, 46,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | | else return 0.002449135570529751;  // std dev = 0,395, 225,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=86 */
%   else return -0.06458689566805507;  // std dev = 0,034, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */


Results
   AUC ROC   = 0.925365
   AUC PR    = 0.478159
   CLL	      = -0.269641
   Precision = 0.120933 at threshold = 0.5
   Recall    = 0.367537
   F1        = 0.181986


Total learning time: 64.348 seconds
Total inference time: 836.996 seconds
AUC ROC: 0.925365


Dataset: 10_rec_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 02:18:18
{'AUC ROC': 0.925365, 'F1': 0.181986, 'Precision': [0.120933, 0.5], 'Recall': 0.367537, 'AUC PR': 0.478159, 'Inference time': 836.996, 'CLL': -0.269641, 'Learning time': 64.348}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5569441158224046;  // std dev = 0,459, 83,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.19148226843284558;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.036587907005750875;  // std dev = 0,307, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return 0.13087620782678497;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return -0.08680519334085464;  // std dev = 0,228, 109,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=6 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return 0.27971756255049124;  // std dev = 0,494, 204,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=86 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.794402
   AUC PR    = 0.08669
   CLL	      = -0.213545
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.217 seconds
Total inference time: 5.892 seconds
AUC ROC: 0.794402


Dataset: 10_rec_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 02:18:28
{'AUC ROC': 0.794402, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.08669, 'Inference time': 5.892, 'CLL': -0.213545, 'Learning time': 3.217}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 140
Target train neg examples: 4623

Target test facts examples: 33542
Target test pos	 examples: 558
Target test neg examples: 23373

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.061445638396216536;  // std dev = 7,678, 364,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.05954289744650172;  // std dev = 7,651, 354,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.036490865786829835;  // std dev = 7,724, 382,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.039512501306548986;  // std dev = 7,686, 367,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.0507274739395564;  // std dev = 7,606, 339,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04746510284533036;  // std dev = 7,587, 333,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.012517317675772445;  // std dev = 7,722, 381,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.038645191888406906;  // std dev = 7,587, 333,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04473721451380846;  // std dev = 7,528, 316,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03340854450734741;  // std dev = 7,549, 322,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=74 */


Results
   AUC ROC   = 0.716846
   AUC PR    = 0.467514
   CLL	      = -0.242478
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.605


Total learning time: 1.95 seconds
Total inference time: 4.365 seconds
AUC ROC: 0.716846


Results scoring model
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.245318
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total scoring time: 1.638 seconds
Parameter learned model CLL: -0.245318


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.678, 290, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.651, 280, 74], 'true': [1.19e-07, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.724, 308, 74], 'true': [2.86e-07, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.686, 293, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.606, 265, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.587, 259, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.722, 307, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.587, 259, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.528, 242, 74], 'true': [5.16e-08, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.549, 248, 74], 'true': [4.71e-08, 0, 66]}]]
[{'': [-9.689219124001365e-16, 0.16196715372539622]}, {'': [2.153159805333637e-16, 0.16534201538510745]}, {'': [1.2380668880668413e-15, 0.15619089388996973]}, {'': [-1.0765799026668185e-16, 0.160978253606454]}, {'': [-2.8260222445003984e-16, 0.17063896067733747]}, {'': [-4.0371746350005693e-17, 0.17283950617283778]}, {'': [-6.728624391667616e-17, 0.1565020907819588]}, {'': [-6.7286243916676156e-18, 0.17283950617283997]}, {'': [4.0371746350005693e-17, 0.17933824707578755]}, {'': [3.364312195833808e-17, 0.17699934416110275]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.16584124279182003;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.38876117999747045;  // std dev = 3,493, 49,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.14185106490048763;  // std dev = 8,69e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return 0.15951879811321062;  // std dev = 0,459, 146,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.312155586065361;  // std dev = 1,438, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.24963915564140426;  // std dev = 3,798, 59,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=26 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return 0.11260040400542146;  // std dev = 0,447, 160,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=44 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3032198121539391;  // std dev = 0,497, 56,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=30 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.1123163781936062;  // std dev = 7,74e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else return 0.12306590105252875;  // std dev = 0,459, 146,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.5073475773003118;  // std dev = 0,916, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.160553630445928;  // std dev = 3,745, 58,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=26 */
%   | | else return -0.10159632948783619;  // std dev = 5,48e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.10159632948783627;  // std dev = 2,36e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0.11949359101880355;  // std dev = 0,465, 139,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.062457548793211144;  // std dev = 1,526, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.16809065194643308;  // std dev = 3,591, 51,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | | else return -0.09269127618926108;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0.11923208148219094;  // std dev = 0,472, 131,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.17932629705113362;  // std dev = 1,352, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09131036637647888;  // std dev = 3,732, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | else return -0.08518475138839682;  // std dev = 5,77e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.08518475138839679;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0.05773941075453843;  // std dev = 0,456, 149,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=44 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.11822557825132453;  // std dev = 1,644, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.14417181952292177;  // std dev = 3,485, 49,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | else return -0.07877675473109158;  // std dev = 5,96e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0.06610705198365129;  // std dev = 0,464, 140,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.22310295465116722;  // std dev = 1,190, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.11187258663165649;  // std dev = 3,468, 49,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.07324622576333707;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else return 0.049141671505424867;  // std dev = 0,462, 142,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.06964906633429462;  // std dev = 1,350, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.08087429721887583;  // std dev = 3,493, 49,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | else return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.06842697784420265;  // std dev = 4,83e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else return 0.008181023031967442;  // std dev = 0,448, 158,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=44 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.015592766169234638;  // std dev = 1,447, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.049676915216116745;  // std dev = 3,507, 49,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0.07728972279800801;  // std dev = 0,477, 126,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */


Results
   AUC ROC   = 0.847445
   AUC PR    = 0.524883
   CLL	      = -0.238216
   Precision = 0.896296 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.584541


Total learning time: 11.342 seconds
Total inference time: 11.147 seconds
AUC ROC: 0.847445


Results scoring model
   AUC ROC   = 0.900185
   AUC PR    = 0.572973
   CLL	      = -0.23576
   Precision = 0.618182 at threshold = 0.5
   Recall    = 0.485714
   F1        = 0.544


Total scoring time: 3.628 seconds
Refined model CLL: -0.23576


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.847445
   AUC PR    = 0.524883
   CLL	      = -0.238216
   Precision = 0.896296 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.584541


Total learning time: 18.558 seconds
Total inference time: 11.147 seconds
AUC ROC: 0.847445
Total revision time: 18.558
Best scored revision CLL: -0.23576


Dataset: 10_rec_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 02:19:03
{'AUC ROC': 0.847445, 'F1': 0.584541, 'Precision': [0.896296, 0.5], 'Recall': 0.433692, 'AUC PR': 0.524883, 'Inference time': 11.147, 'CLL': -0.238216, 'Learning time': 18.558, 'parameter': {'AUC ROC': 0.716846, 'F1': 0.605, 'Precision': [1.0, 0.5], 'Recall': 0.433692, 'AUC PR': 0.467514, 'Inference time': 4.365, 'CLL': -0.242478, 'Learning time': 1.95}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.6017386786892565;  // std dev = 0,437, 78,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=58 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.14185106490048763;  // std dev = 8,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0.2645660473989785;  // std dev = 0,491, 187,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.5023925530204831;  // std dev = 0,442, 79,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=58 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.12544463852839136;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0.22491637776678486;  // std dev = 0,490, 189,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=76 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.3339378560233372;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.38521990730538835;  // std dev = 3,974, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   | else return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.1123163781936062;  // std dev = 7,88e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0.23465857551692576;  // std dev = 0,497, 170,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=76 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.07715889369221625;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3441669205030313;  // std dev = 3,611, 73,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=56 */
%   | else return -0.10159632948783627;  // std dev = 1,97e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return 0.0605292189076448;  // std dev = 0,416, 287,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=76 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.2747087950353945;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20956998748541947;  // std dev = 3,974, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   | else return -0.10725585662381866;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0.18644285196323795;  // std dev = 0,498, 168,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.20766963212493308;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18619215766532762;  // std dev = 3,767, 75,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   | else return -0.09741007157720408;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then return -0.08518475138839679;  // std dev = 2,24e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0.12070053085844472;  // std dev = 0,494, 179,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.15790549296221057;  // std dev = 0,392, 87,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=64 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.0891751023447915;  // std dev = 7,30e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0.08081110701034312;  // std dev = 0,492, 185,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=76 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.1847800205339616;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09102536829561504;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.11653712393132003;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18081025792967456;  // std dev = 3,144, 68,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=56 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.08219247913099999;  // std dev = 4,71e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0.0694764969279278;  // std dev = 0,493, 182,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=76 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.15854794836710617;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08376909145891574;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.038113569865064985;  // std dev = 0,449, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else return -0.07620125040404191;  // std dev = 6,05e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0.088347174801743;  // std dev = 0,498, 168,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=76 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.13852205265018058;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08803420840184939;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return -0.023539331083291044;  // std dev = 0,265, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.03599287855577615;  // std dev = 3,908, 77,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=56 */
%   | else return -0.07100733756182455;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0.023879775634457492;  // std dev = 0,492, 186,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */


Results
   AUC ROC   = 0.757795
   AUC PR    = 0.077356
   CLL	      = -0.340939
   Precision = 0.103087 at threshold = 0.5
   Recall    = 0.335125
   F1        = 0.157673


Total learning time: 27.362 seconds
Total inference time: 17.638 seconds
AUC ROC: 0.757795


Dataset: 10_rec_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 02:19:48
{'AUC ROC': 0.757795, 'F1': 0.157673, 'Precision': [0.103087, 0.5], 'Recall': 0.335125, 'AUC PR': 0.077356, 'Inference time': 17.638, 'CLL': -0.340939, 'Learning time': 27.362}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.6637044906550683;  // std dev = 0,396, 72,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=58 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.14185106490048768;  // std dev = 6,32e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else return 0.28037115732173545;  // std dev = 0,494, 180,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=76 */


Results
   AUC ROC   = 0.759041
   AUC PR    = 0.07686
   CLL	      = -0.205718
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.056 seconds
Total inference time: 4.265 seconds
AUC ROC: 0.759041


Dataset: 10_rec_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 02:19:57
{'AUC ROC': 0.759041, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.07686, 'Inference time': 4.265, 'CLL': -0.205718, 'Learning time': 4.056}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 113
Target train neg examples: 3827

Target test facts examples: 33252
Target test pos	 examples: 585
Target test neg examples: 24169

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.0626217785499921;  // std dev = 7,135, 313,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=64 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.07811175172034344;  // std dev = 7,030, 281,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=64 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.06708986537875782;  // std dev = 7,034, 282,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=64 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.07062249024342958;  // std dev = 6,976, 267,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=64 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.02139417704911809;  // std dev = 7,153, 319,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=64 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.05203056345910603;  // std dev = 7,000, 273,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=64 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.025198591295166335;  // std dev = 7,086, 297,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=64 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.04109157714162223;  // std dev = 6,996, 272,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=64 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.01050734434225031;  // std dev = 7,105, 303,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=64 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.016773332688004818;  // std dev = 7,069, 292,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=64 */


Results
   AUC ROC   = 0.721368
   AUC PR    = 0.476703
   CLL	      = -0.246337
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.442735
   F1        = 0.613744


Total learning time: 1.617 seconds
Total inference time: 4.195 seconds
AUC ROC: 0.721368


Results scoring model
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.250298
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total scoring time: 1.42 seconds
Parameter learned model CLL: -0.250298


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.135, 249, 64], 'true': [1.69e-07, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.03, 217, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.034, 218, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [6.976, 203, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.153, 255, 64], 'true': [2.98e-08, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.0, 209, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.086, 233, 64], 'true': [4.21e-08, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [6.996, 208, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.105, 239, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.069, 228, 64], 'true': [2.98e-08, 0, 49]}]]
[{'': [5.800348863347756e-16, 0.16266369974175587]}, {'': [-5.800348863347756e-16, 0.1758842973113301]}, {'': [0.0, 0.1754438911523574]}, {'': [-3.625218039592348e-16, 0.18224410498113566]}, {'': [1.8126090197961738e-17, 0.16037578247069184]}, {'': [-2.718913529694261e-17, 0.17947376189134573]}, {'': [3.6252180395923476e-17, 0.16905304447391725]}, {'': [-6.797283824235652e-17, 0.1799307958477533]}, {'': [-3.6252180395923476e-17, 0.16660675968587127]}, {'': [1.8126090197961738e-17, 0.17113905047851208]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.5423594614153009;  // std dev = 2,865, 38,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | | | else return -0.03658790700575091;  // std dev = 1,892, 38,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07835900140842422;  // std dev = 1,935, 63,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=4 */
%   | | | else return 0.237895770542549;  // std dev = 4,314, 79,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=30 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3318111616094725;  // std dev = 0,497, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07678906550104937;  // std dev = 1,944, 71,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=4 */
%   | | | else return 0.11679175626879384;  // std dev = 4,898, 123,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordvenue(F, E) )
%   | | then if ( title(G, A), venue(G, F) )
%   | | | then return 0.10449942089834637;  // std dev = 6,046, 196,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=57 */
%   | | | else return 0.38707516991383495;  // std dev = 1,417, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return -0.28377160900062204;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.18709659150021296;  // std dev = 1,078, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.24932091524920122;  // std dev = 0,495, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return 0.012816365866738082;  // std dev = 5,128, 176,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=34 */
%   | | | else return 0.35757990112785887;  // std dev = 1,272, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return -0.10159632948783617;  // std dev = 4,94e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.17497873913023432;  // std dev = 0,494, 49,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07450010868041528;  // std dev = 1,939, 62,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=4 */
%   | | | else return 0.07440813705784222;  // std dev = 4,851, 122,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2026251123298773;  // std dev = 0,489, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.09881613246364278;  // std dev = 1,919, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | | else return 0.0444378967006336;  // std dev = 4,890, 144,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=34 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.15743644195744239;  // std dev = 0,484, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.05883590653225721;  // std dev = 1,931, 51,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   | | | else return 0.09508487716682268;  // std dev = 4,701, 109,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | else return -0.07877675473109173;  // std dev = 2,24e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E), haswordvenue(G, D) )
%   | | | then return 0.10015022530641779;  // std dev = 3,261, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | | else return -0.08179738043314651;  // std dev = 2,047, 60,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05196102195084361;  // std dev = 1,875, 31,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return 0.14241714442245262;  // std dev = 4,180, 75,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=30 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1377074272835943;  // std dev = 0,473, 40,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07447304684841537;  // std dev = 1,967, 82,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=4 */
%   | | | else return 0.016896604398690146;  // std dev = 4,819, 128,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   | else return -0.0684269778442027;  // std dev = 1,97e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, D) )
%   | | | then return -0.006603546083340844;  // std dev = 3,846, 97,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | | else return -0.2654468035132976;  // std dev = 0,263, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(H, D) )
%   | | | then return 0.010718410788005043;  // std dev = 4,616, 113,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=30 */
%   | | | else return 0.4518501030169694;  // std dev = 0,761, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 0.866074
   AUC PR    = 0.525911
   CLL	      = -0.277663
   Precision = 0.165006 at threshold = 0.5
   Recall    = 0.651282
   F1        = 0.263303


Total learning time: 14.524 seconds
Total inference time: 25.54 seconds
AUC ROC: 0.866074


Results scoring model
   AUC ROC   = 0.909001
   AUC PR    = 0.564771
   CLL	      = -0.231774
   Precision = 0.226866 at threshold = 0.5
   Recall    = 0.672566
   F1        = 0.339286


Total scoring time: 3.366 seconds
Refined model CLL: -0.231774


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.866074
   AUC PR    = 0.525911
   CLL	      = -0.277663
   Precision = 0.165006 at threshold = 0.5
   Recall    = 0.651282
   F1        = 0.263303


Total learning time: 20.927 seconds
Total inference time: 25.54 seconds
AUC ROC: 0.866074
Total revision time: 20.927
Best scored revision CLL: -0.231774


Dataset: 10_rec_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:20:48
{'AUC ROC': 0.866074, 'F1': 0.263303, 'Precision': [0.165006, 0.5], 'Recall': 0.651282, 'AUC PR': 0.525911, 'Inference time': 25.54, 'CLL': -0.277663, 'Learning time': 20.927, 'parameter': {'AUC ROC': 0.721368, 'F1': 0.613744, 'Precision': [1.0, 0.5], 'Recall': 0.442735, 'AUC PR': 0.476703, 'Inference time': 4.195, 'CLL': -0.246337, 'Learning time': 1.617}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4889181658687433;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06492798797741081;  // std dev = 1,922, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.041851064900487754;  // std dev = 1,897, 40,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | | else return 0.4399671169176951;  // std dev = 5,173, 110,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=64 */
%   else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5469533888252753;  // std dev = 0,428, 54,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.06500753179653783;  // std dev = 0,257, 56,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=4 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05436726808710229;  // std dev = 1,916, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return 0.3077650420263819;  // std dev = 5,589, 125,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=64 */
%   else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3228743920885713;  // std dev = 0,480, 64,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.11960054492264803;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.052289992730284444;  // std dev = 1,923, 53,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05915874537518718;  // std dev = 1,929, 57,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=4 */
%   | | | else return 0.30758183047830595;  // std dev = 5,268, 113,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=64 */
%   else return -0.11231637819360626;  // std dev = 4,71e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.28068895346425216;  // std dev = 0,469, 61,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.10756879069613065;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.048039372896963924;  // std dev = 1,924, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.025256331626202264;  // std dev = 1,900, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return 0.20694532650639622;  // std dev = 5,491, 121,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=64 */
%   else return -0.10159632948783626;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then return 0.2418096419730264;  // std dev = 0,457, 57,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return -0.3349447439918852;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.05596098632587018;  // std dev = 1,936, 68,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=4 */
%   | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | then if ( title(J, A), venue(J, I) )
%   | | | then return 0.09041041946849442;  // std dev = 5,284, 136,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=52 */
%   | | | else return 0.5061860536371562;  // std dev = 1,160, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.6312866869268421;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926107;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then return 0.14636669601031022;  // std dev = 0,471, 60,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return -0.04039345233183895;  // std dev = 1,925, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | | else return -0.13182445923040345;  // std dev = 0,906, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then return -0.01728649912399037;  // std dev = 0,319, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( haswordtitle(A, J), haswordvenue(K, J) )
%   | | | then return 0.12686925538188307;  // std dev = 5,216, 113,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=60 */
%   | | | else return 0.5177883434447627;  // std dev = 0,109, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1336263604616001;  // std dev = 0,464, 60,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.08806578817706116;  // std dev = 0,011, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.033309831040905756;  // std dev = 1,924, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.061741205685243376;  // std dev = 5,640, 149,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=64 */
%   | | | else return 0.39843653718450006;  // std dev = 0,093, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then return 0.1379327385177623;  // std dev = 0,445, 55,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return -0.02406077613839133;  // std dev = 1,915, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return -0.11839867939967527;  // std dev = 0,867, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return -0.13512221442297787;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.003711703934787434;  // std dev = 1,862, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( haswordtitle(A, K), haswordvenue(L, K) )
%   | | | then return 0.1476153850956777;  // std dev = 4,802, 100,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=60 */
%   | | | else return 0.3418454955809108;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09396619825077197;  // std dev = 0,454, 58,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.07737121647534;  // std dev = 0,022, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.03315356733239662;  // std dev = 1,930, 58,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04691944161157457;  // std dev = 1,908, 46,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=4 */
%   | | | else return 0.016856074716379052;  // std dev = 5,456, 124,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=64 */
%   else return -0.06842697784420268;  // std dev = 2,69e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10629364459118533;  // std dev = 0,440, 55,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.05020202792919314;  // std dev = 0,263, 53,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=4 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return 0.005054450098001386;  // std dev = 5,627, 168,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=62 */
%   | | | else return 0.1258146259357739;  // std dev = 0,593, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else return -0.06419184008202625;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */


Results
   AUC ROC   = 0.780061
   AUC PR    = 0.077749
   CLL	      = -0.4112
   Precision = 0.089759 at threshold = 0.5
   Recall    = 0.388034
   F1        = 0.145793


Total learning time: 45.262 seconds
Total inference time: 76.53 seconds
AUC ROC: 0.780061


Dataset: 10_rec_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 02:22:50
{'AUC ROC': 0.780061, 'F1': 0.145793, 'Precision': [0.089759, 0.5], 'Recall': 0.388034, 'AUC PR': 0.077749, 'Inference time': 76.53, 'CLL': -0.4112, 'Learning time': 45.262}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5302800826404962;  // std dev = 0,469, 61,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.04661296966239252;  // std dev = 1,902, 42,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04661296966239252;  // std dev = 1,902, 42,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | | else return 0.43472551167608986;  // std dev = 5,206, 111,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=64 */
%   else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */


Results
   AUC ROC   = 0.777052
   AUC PR    = 0.071176
   CLL	      = -0.218434
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.776 seconds
Total inference time: 12.882 seconds
AUC ROC: 0.777052


Dataset: 10_rec_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 02:23:07
{'AUC ROC': 0.777052, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.071176, 'Inference time': 12.882, 'CLL': -0.218434, 'Learning time': 3.776}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 129
Target train neg examples: 4745

Target test facts examples: 34429
Target test pos	 examples: 569
Target test neg examples: 23251

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.08654399682790863;  // std dev = 7,556, 324,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.08990695741996946;  // std dev = 7,486, 305,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.07095279500414615;  // std dev = 7,521, 314,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.04040467391085705;  // std dev = 7,621, 344,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.03142015529085258;  // std dev = 7,636, 349,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.03169786875329643;  // std dev = 7,612, 341,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.032747378174615996;  // std dev = 7,583, 332,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.02499992558780693;  // std dev = 7,596, 336,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.01909297239467798;  // std dev = 7,606, 339,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.004444643999407752;  // std dev = 7,662, 358,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=74 */


Results
   AUC ROC   = 0.72232
   AUC PR    = 0.478862
   CLL	      = -0.243956
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44464
   F1        = 0.615572


Total learning time: 1.821 seconds
Total inference time: 4.362 seconds
AUC ROC: 0.72232


Results scoring model
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.246511
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total scoring time: 1.924 seconds
Parameter learned model CLL: -0.246511


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.556, 250, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.486, 231, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.521, 240, 74], 'true': [1.03e-07, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.621, 270, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.636, 275, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.612, 267, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.583, 258, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.596, 262, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.606, 265, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.662, 284, 74], 'true': [5.16e-08, 0, 55]}]]
[{'': [-1.291895883200182e-16, 0.17623075750647824]}, {'': [-3.2297397080004555e-16, 0.18375705455522648]}, {'': [1.9378438248002731e-16, 0.1801290113189162]}, {'': [-3.2297397080004555e-16, 0.1688412655489432]}, {'': [-9.689219124001366e-17, 0.16707580397533817]}, {'': [-3.229739708000455e-17, 0.16991597939474226]}, {'': [-8.074349270001138e-18, 0.1732109159529705]}, {'': [-4.0371746350005693e-17, 0.17173327664399332]}, {'': [-1.6148698540002276e-17, 0.1706389606773359]}, {'': [4.844609562000683e-17, 0.16397740395118532]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.524815601766179;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07935106490048774;  // std dev = 1,677, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06685106490048777;  // std dev = 1,666, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | else return 0.1615197216163671;  // std dev = 0,460, 178,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=54 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.36496227290862865;  // std dev = 0,493, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return -0.07992978668094919;  // std dev = 0,225, 56,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.05746342934731041;  // std dev = 1,666, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | else return 0.10333789477461822;  // std dev = 0,442, 203,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4130456143136764;  // std dev = 0,458, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else return -0.0676738696466811;  // std dev = 0,231, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.04491715413251736;  // std dev = 1,660, 37,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else return 0.09686913596588752;  // std dev = 0,446, 197,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=54 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2884622384126521;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.11012599937639767;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.052335795184928015;  // std dev = 1,674, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.04970579275922572;  // std dev = 1,669, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | | else return 0.05703503778058178;  // std dev = 0,432, 217,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=54 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3297677520644077;  // std dev = 0,416, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.09978814686639416;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.028895563932884456;  // std dev = 1,658, 36,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.04927483766133802;  // std dev = 1,673, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | | else return 0.0515262371575411;  // std dev = 0,434, 214,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=54 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.24755131031527475;  // std dev = 0,416, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return -0.05790623546359287;  // std dev = 0,219, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | else return 0.06143284510940298;  // std dev = 0,425, 229,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=57 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.14572030177818218;  // std dev = 0,440, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.08260514018282075;  // std dev = 0,015, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.03185383666575792;  // std dev = 1,667, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.05759599027655786;  // std dev = 0,231, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | | else return 0.037590877760769977;  // std dev = 0,437, 210,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=54 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.010543808056647352;  // std dev = 0,481, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else return -0.059643198068914785;  // std dev = 0,216, 61,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.0748540658089749;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.043610067480475675;  // std dev = 1,680, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | | else return 0.033554396001184;  // std dev = 0,438, 208,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=54 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, A) )
%   | | then return -0.08665529725245798;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(A, D) )
%   | | | then return 0.19524384050681245;  // std dev = 1,572, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.03557843439935842;  // std dev = 1,671, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | else return 0.01163784896710529;  // std dev = 0,410, 258,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=57 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return -0.11263184272822305;  // std dev = 0,496, 25,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else return -0.0486963966460233;  // std dev = 0,216, 61,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.040197318730034515;  // std dev = 0,231, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | | else return 0.06930534722770956;  // std dev = 0,460, 178,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=54 */


Results
   AUC ROC   = 0.869293
   AUC PR    = 0.535447
   CLL	      = -0.265373
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total learning time: 9.651 seconds
Total inference time: 26.039 seconds
AUC ROC: 0.869293


Results scoring model
   AUC ROC   = 0.828195
   AUC PR    = 0.521516
   CLL	      = -0.246997
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total scoring time: 2.917 seconds
Refined model CLL: -0.246997


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.72232
   AUC PR    = 0.478862
   CLL	      = -0.243956
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44464
   F1        = 0.615572


Total learning time: 16.313000000000002 seconds
Total inference time: 4.362 seconds
AUC ROC: 0.72232
Total revision time: 16.313000000000002
Best scored revision CLL: -0.246511


Dataset: 10_rec_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:23:55
{'AUC ROC': 0.72232, 'F1': 0.615572, 'Precision': [1.0, 0.5], 'Recall': 0.44464, 'AUC PR': 0.478862, 'Inference time': 4.362, 'CLL': -0.243956, 'Learning time': 16.313000000000002, 'parameter': {'AUC ROC': 0.72232, 'F1': 0.615572, 'Precision': [1.0, 0.5], 'Recall': 0.44464, 'AUC PR': 0.478862, 'Inference time': 4.362, 'CLL': -0.243956, 'Learning time': 1.821}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.7547006592374428;  // std dev = 0,305, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08062657510456937;  // std dev = 0,240, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07935106490048774;  // std dev = 0,242, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | else return 0.27267884962942346;  // std dev = 0,493, 234,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=97 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5277500103460134;  // std dev = 0,409, 33,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07362266359006735;  // std dev = 0,235, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.051235839329663045;  // std dev = 0,273, 37,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.24152744830434586;  // std dev = 0,494, 231,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=97 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5231262636096244;  // std dev = 0,305, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.061585318444299826;  // std dev = 0,242, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.055116010850921576;  // std dev = 0,258, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | else return 0.169888561973667;  // std dev = 0,487, 251,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=97 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.263311652668302;  // std dev = 0,424, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.04624159144053511;  // std dev = 0,258, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return -0.04323969955635533;  // std dev = 0,259, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else return 0.13066027886509107;  // std dev = 0,485, 257,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=97 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.05593916498920648;  // std dev = 0,322, 89,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=29 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.047050656968548106;  // std dev = 0,252, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | else return 0.12086022152822588;  // std dev = 0,488, 247,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=97 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.18420552301039378;  // std dev = 0,424, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.09364649264994762;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.0634055116410003;  // std dev = 0,215, 62,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return -0.09750414159952157;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.05347605136596314;  // std dev = 0,247, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | else return 0.09157591647535962;  // std dev = 0,487, 250,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=97 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.21412985345366556;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.08925435917786648;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.039959940328663936;  // std dev = 0,260, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.08599483934775311;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.019491610530545437;  // std dev = 0,280, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | else return 0.08829483021770262;  // std dev = 0,491, 240,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=97 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.04891904362395848;  // std dev = 0,448, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.0794719187930972;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.03965723315742621;  // std dev = 0,244, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return -0.08226010692900666;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.009262408737364202;  // std dev = 0,300, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | else return 0.01876000432846258;  // std dev = 0,478, 274,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=97 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.08073474543979207;  // std dev = 0,424, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else return -0.044824012904234344;  // std dev = 0,234, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, B) )
%   | | then return -0.07384894059487683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.033099705920466294;  // std dev = 0,249, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | else return 0.06471839948789977;  // std dev = 0,491, 240,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=97 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.13755195650519153;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else return -0.04683659637958869;  // std dev = 0,208, 66,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, A) )
%   | | then return -0.0731613738368769;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.041608667944277054;  // std dev = 0,242, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | else return 0.03860572469399058;  // std dev = 0,488, 247,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=97 */


Results
   AUC ROC   = 0.778678
   AUC PR    = 0.071282
   CLL	      = -0.357511
   Precision = 0.096254 at threshold = 0.5
   Recall    = 0.388401
   F1        = 0.154276


Total learning time: 12.167 seconds
Total inference time: 25.834 seconds
AUC ROC: 0.778678


Dataset: 10_rec_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 02:24:34
{'AUC ROC': 0.778678, 'F1': 0.154276, 'Precision': [0.096254, 0.5], 'Recall': 0.388401, 'AUC PR': 0.071282, 'Inference time': 25.834, 'CLL': -0.357511, 'Learning time': 12.167}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.6228548174524527;  // std dev = 0,424, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07802127766644519;  // std dev = 0,244, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.09100360727336908;  // std dev = 0,220, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | else return 0.23266630961688398;  // std dev = 0,484, 259,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=97 */


Results
   AUC ROC   = 0.77736
   AUC PR    = 0.071212
   CLL	      = -0.20706
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.03 seconds
Total inference time: 5.27 seconds
AUC ROC: 0.77736


Dataset: 10_rec_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 02:24:42
{'AUC ROC': 0.77736, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.071212, 'Inference time': 5.27, 'CLL': -0.20706, 'Learning time': 3.03}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 154
Target train neg examples: 5694

Target test facts examples: 33914
Target test pos	 examples: 544
Target test neg examples: 22302

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.061622880508941845;  // std dev = 8,082, 403,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=82 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.06402247881635655;  // std dev = 8,031, 384,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=82 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,15e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.051874214653333986;  // std dev = 8,050, 391,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=82 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.04647713304140556;  // std dev = 8,042, 388,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=82 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.03160803886002351;  // std dev = 8,084, 404,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=82 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.020275006504096468;  // std dev = 8,119, 418,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=82 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.0196916223886618;  // std dev = 8,107, 413,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=82 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.019708262677555856;  // std dev = 8,092, 407,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=82 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,83e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.036308763883750365;  // std dev = 7,992, 371,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=82 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 4,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.037531634876213596;  // std dev = 7,958, 360,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=82 */


Results
   AUC ROC   = 0.716912
   AUC PR    = 0.468238
   CLL	      = -0.236352
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433824
   F1        = 0.605128


Total learning time: 2.233 seconds
Total inference time: 4.233 seconds
AUC ROC: 0.716912


Results scoring model
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.236933
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total scoring time: 2.387 seconds
Parameter learned model CLL: -0.236933


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.082, 321, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.031, 302, 82], 'true': [1.69e-07, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.05, 309, 82], 'true': [2.15e-07, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.042, 306, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.084, 322, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.119, 336, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.107, 331, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.092, 325, 82], 'true': [2.11e-08, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.992, 289, 82], 'true': [6.83e-08, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.958, 278, 82], 'true': [4.94e-08, 0, 72]}]]
[{'': [-1.282924384011292e-15, 0.16207229894895062]}, {'': [3.9474596431116675e-16, 0.16794162326388773]}, {'': [6.41462192005646e-16, 0.16573674949797676]}, {'': [-9.868649107779169e-17, 0.1666755234350092]}, {'': [-3.4540271877227093e-16, 0.1617733555533771]}, {'': [-1.2335811384723961e-17, 0.1576886976030776]}, {'': [-8.635067969306773e-17, 0.15912621871500784]}, {'': [6.1679056923619804e-18, 0.1608823476145353]}, {'': [6.47630097698008e-17, 0.17217253579965003]}, {'': [3.39234813079909e-17, 0.1758950617283941]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.4518989350995114;  // std dev = 3,929, 64,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=38 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.10387638135618389;  // std dev = 1,699, 79,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=3 */
%   | | | else return 0.048846609518116174;  // std dev = 5,760, 215,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=41 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4207404624428116;  // std dev = 0,480, 61,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.09169568968758533;  // std dev = 1,699, 79,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=3 */
%   | | | else return 0.050165852019733254;  // std dev = 5,734, 207,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=41 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,15e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.17929803576632214;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.25939664514492616;  // std dev = 4,168, 70,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.10956021148858579;  // std dev = 1,693, 67,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=3 */
%   | | | else return 0.0503432573114732;  // std dev = 5,693, 212,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=41 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.20917684802071287;  // std dev = 0,493, 70,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08892996177986791;  // std dev = 1,700, 83,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=3 */
%   | | | else return 0.03732293033418702;  // std dev = 5,724, 213,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=41 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(F, D), haswordtitle(A, D) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1837369144321487;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.25679420194950436;  // std dev = 3,678, 59,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=38 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return -0.10650313579501557;  // std dev = 1,698, 79,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=3 */
%   | | | else return 0.04363119736040194;  // std dev = 5,659, 216,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=41 */
%   | else return -0.09766543838017928;  // std dev = 0,077, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08687023556424213;  // std dev = 0,487, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08204714551341197;  // std dev = 1,699, 79,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=3 */
%   | | | else return 0.04450069217036259;  // std dev = 5,648, 201,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=41 */
%   | else return -0.08628005411162772;  // std dev = 0,022, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.16965159722680725;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1045064993730498;  // std dev = 4,015, 66,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=38 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.10190244843517475;  // std dev = 1,701, 84,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=3 */
%   | | | else return 0.028079535966388892;  // std dev = 5,675, 223,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=41 */
%   | else return -0.081018144103665;  // std dev = 0,023, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.030307199469121;  // std dev = 4,192, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return -0.08596352671773758;  // std dev = 1,697, 75,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.06845594863399264;  // std dev = 1,692, 65,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   | | | else return 0.09877396179524184;  // std dev = 5,224, 135,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=38 */
%   | else return -0.07326758931481465;  // std dev = 0,017, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,83e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.6596957350049998;  // std dev = 1,420, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | else return -0.2031361609825478;  // std dev = 1,973, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return -0.11679952204356739;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07343573997440457;  // std dev = 1,665, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | else return -0.07764761330270023;  // std dev = 0,182, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 4,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.045145831762551276;  // std dev = 2,935, 62,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | | else return -0.06255450196523174;  // std dev = 1,518, 76,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.05512224920619728;  // std dev = 1,584, 76,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=3 */
%   | | | else return 0.03872240894215429;  // std dev = 4,587, 154,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=38 */
%   | else return -0.06260709034407252;  // std dev = 0,025, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */


Results
   AUC ROC   = 0.95396
   AUC PR    = 0.697997
   CLL	      = -0.174864
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.612132
   F1        = 0.759407


Total learning time: 29.492 seconds
Total inference time: 113.7 seconds
AUC ROC: 0.95396


Results scoring model
   AUC ROC   = 0.972048
   AUC PR    = 0.772436
   CLL	      = -0.178154
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.833333


Total scoring time: 7.831 seconds
Refined model CLL: -0.178154


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.95396
   AUC PR    = 0.697997
   CLL	      = -0.174864
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.612132
   F1        = 0.759407


Total learning time: 41.943000000000005 seconds
Total inference time: 113.7 seconds
AUC ROC: 0.95396
Total revision time: 41.943000000000005
Best scored revision CLL: -0.178154


Dataset: 10_rec_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:27:23
{'AUC ROC': 0.95396, 'F1': 0.759407, 'Precision': [1.0, 0.5], 'Recall': 0.612132, 'AUC PR': 0.697997, 'Inference time': 113.7, 'CLL': -0.174864, 'Learning time': 41.943000000000005, 'parameter': {'AUC ROC': 0.716912, 'F1': 0.605128, 'Precision': [1.0, 0.5], 'Recall': 0.433824, 'AUC PR': 0.468238, 'Inference time': 4.233, 'CLL': -0.236352, 'Learning time': 2.233}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4623156017661798;  // std dev = 0,489, 96,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, C) )
%   | | | then return -0.09959754377372713;  // std dev = 1,695, 71,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0942320172814401;  // std dev = 1,690, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | | else return 0.3368723393548287;  // std dev = 6,849, 188,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=90 */
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.042108883660624936;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5228781144298553;  // std dev = 0,444, 78,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=57 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, C) )
%   | | | then return -0.09119299228320686;  // std dev = 1,698, 77,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.08237559334209785;  // std dev = 1,690, 62,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=3 */
%   | | | else return 0.2783318198081883;  // std dev = 6,930, 193,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=90 */
%   else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.035089407697948334;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.4056327474826718;  // std dev = 0,453, 80,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=57 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.37982674730851257;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10337563811652282;  // std dev = 0,992, 60,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.06507715978623373;  // std dev = 1,682, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | | | else return 0.21580901276561512;  // std dev = 7,036, 200,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=90 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.21704401029587905;  // std dev = 0,485, 95,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.07608271328774503;  // std dev = 0,180, 83,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.06317115126925126;  // std dev = 1,687, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | | | else return 0.1597001137748068;  // std dev = 7,132, 207,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=90 */
%   else return -0.10159632948783634;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.18121525064286811;  // std dev = 0,472, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.24383535115737862;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.08912081082905006;  // std dev = 0,993, 75,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.060238649664803745;  // std dev = 1,690, 62,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=3 */
%   | | | else return 0.1837607653062133;  // std dev = 6,763, 183,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=90 */
%   else return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12614547222145858;  // std dev = 0,484, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.06579229955761456;  // std dev = 0,171, 88,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.05677524711922126;  // std dev = 1,692, 65,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   | | | else return 0.14060472859168943;  // std dev = 6,781, 184,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=90 */
%   else return -0.0851847513883968;  // std dev = 1,49e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1567333987638447;  // std dev = 0,453, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.0597973496390126;  // std dev = 0,173, 87,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.036579201096196126;  // std dev = 1,678, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | | | else return 0.08523051749474887;  // std dev = 6,930, 193,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=90 */
%   else return -0.07877675473109177;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.15619618086151155;  // std dev = 0,446, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else if ( haswordvenue(E, C) )
%   | | then return -0.03990653599909276;  // std dev = 0,225, 56,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return 0.24744082335218245;  // std dev = 1,062, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.072555521799901;  // std dev = 0,103, 93,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=1 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return 0.039789816481965376;  // std dev = 0,497, 204,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=90 */
%   | | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.06080441090030491;  // std dev = 0,471, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.2894078822235109;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06504461636571007;  // std dev = 0,993, 73,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04125924479462811;  // std dev = 1,688, 60,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=3 */
%   | | | else return 0.050554902783051914;  // std dev = 6,961, 195,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=90 */
%   else return -0.06863365939363653;  // std dev = 0,004, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.5648943294068077;  // std dev = 0,358, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.40258235218154026;  // std dev = 0,089, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordtitle(B, C) )
%   | | then return -0.015467022255028625;  // std dev = 0,489, 91,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=55 */
%   | | else return -0.061948360120661364;  // std dev = 0,105, 90,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=1 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then if ( author(I, H), title(I, A) )
%   | | then return 0.32633442820601766;  // std dev = 1,069, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( author(J, H), title(J, B) )
%   | | | then return -0.0878947911123658;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07079675683375036;  // std dev = 0,992, 72,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=1 */
%   | else if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return 0.07396318419584659;  // std dev = 0,500, 181,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=90 */
%   | | else return -0.06417942558172676;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.786629
   AUC PR    = 0.077464
   CLL	      = -0.349298
   Precision = 0.114813 at threshold = 0.5
   Recall    = 0.354779
   F1        = 0.173483


Total learning time: 22.358 seconds
Total inference time: 39.225 seconds
AUC ROC: 0.786629


Dataset: 10_rec_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 02:28:25
{'AUC ROC': 0.786629, 'F1': 0.173483, 'Precision': [0.114813, 0.5], 'Recall': 0.354779, 'AUC PR': 0.077464, 'Inference time': 39.225, 'CLL': -0.349298, 'Learning time': 22.358}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.48858371770820874;  // std dev = 0,483, 92,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.10570648658723468;  // std dev = 0,187, 83,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=3 */
%   | | else return 0.21584124279181793;  // std dev = 0,479, 260,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=93 */
%   else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */


Results
   AUC ROC   = 0.744719
   AUC PR    = 0.068284
   CLL	      = -0.20847
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.012 seconds
Total inference time: 2.931 seconds
AUC ROC: 0.744719


Dataset: 10_rec_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 02:28:32
{'AUC ROC': 0.744719, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.068284, 'Inference time': 2.931, 'CLL': -0.20847, 'Learning time': 4.012}


