Starting experiment #5 for 10_rec_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.14185106490048902;  // std dev = 0,000, 695,000 (wgt'ed) examples reached here.  /* #neg=695 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839238;  // std dev = 0,000, 724,000 (wgt'ed) examples reached here.  /* #neg=724 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360625;  // std dev = 5,48e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.11231637819360671;  // std dev = 0,000, 724,000 (wgt'ed) examples reached here.  /* #neg=724 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783513;  // std dev = 4,51e-07, 729,000 (wgt'ed) examples reached here.  /* #neg=729 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.09269127618926186;  // std dev = 0,000, 729,000 (wgt'ed) examples reached here.  /* #neg=729 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.08518475138839675;  // std dev = 1,33e-07, 724,000 (wgt'ed) examples reached here.  /* #neg=724 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109166;  // std dev = 4,01e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.07877675473109286;  // std dev = 0,000, 724,000 (wgt'ed) examples reached here.  /* #neg=724 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07324622576333648;  // std dev = 2,54e-07, 718,000 (wgt'ed) examples reached here.  /* #neg=718 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2,69e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.06842697784420257;  // std dev = 1,84e-07, 707,000 (wgt'ed) examples reached here.  /* #neg=707 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06419184008202529;  // std dev = 2,24e-07, 727,000 (wgt'ed) examples reached here.  /* #neg=727 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 162
Target train neg examples: 9107

Target test facts examples: 35095
Target test pos	 examples: 536
Target test neg examples: 18889

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.07436515131572775;  // std dev = 8,674, 444,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=96 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.07367757349886246;  // std dev = 8,627, 427,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=96 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.0618932253476433;  // std dev = 8,638, 431,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=96 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.05865361780144159;  // std dev = 8,609, 421,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=96 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03891687247613329;  // std dev = 8,672, 443,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=96 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.05002888960983871;  // std dev = 8,578, 411,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=96 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03632418122520366;  // std dev = 8,612, 422,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=96 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.035602004202252145;  // std dev = 8,584, 413,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=96 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.00938766971434436;  // std dev = 8,698, 453,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=96 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.01714482829712503;  // std dev = 8,647, 434,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=96 */


Results
   AUC ROC   = 0.725746
   AUC PR    = 0.48982
   CLL	      = -0.250781
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451493
   F1        = 0.622108


Total learning time: 1.871 seconds
Total inference time: 3.902 seconds
AUC ROC: 0.725746


Results scoring model
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.244919
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total scoring time: 2.016 seconds
Parameter learned model CLL: -0.244919


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.674, 348, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.627, 331, 96], 'true': [1.19e-07, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.638, 335, 96], 'true': [2.86e-07, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.609, 325, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.672, 347, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.578, 315, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.612, 326, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.584, 317, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.698, 357, 96], 'true': [5.16e-08, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.647, 338, 96], 'true': [4.71e-08, 0, 66]}]]
[{'': [-9.689219124001365e-16, 0.16946676406135966]}, {'': [2.153159805333637e-16, 0.17427836493371776]}, {'': [1.2380668880668413e-15, 0.17312568300127515]}, {'': [-1.0765799026668185e-16, 0.1760315051257864]}, {'': [-2.8260222445003984e-16, 0.1697435400944696]}, {'': [-4.0371746350005693e-17, 0.1790185944909176]}, {'': [-6.728624391667616e-17, 0.17573729251364784]}, {'': [-6.7286243916676156e-18, 0.17841460054288993]}, {'': [4.0371746350005693e-17, 0.16701021885004647]}, {'': [3.364312195833808e-17, 0.1722695321624988]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.47353355048412754;  // std dev = 0,487, 65,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.060032883082305845;  // std dev = 2,875, 110,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=9 */
%   | | | else return 0.07777510332381096;  // std dev = 6,056, 214,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=47 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3963161494763808;  // std dev = 0,489, 66,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | | else return -0.009528836819886501;  // std dev = 0,344, 65,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.06530078079283494;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.06939263718395643;  // std dev = 2,367, 94,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=6 */
%   | | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | | then return 0.09200493875388331;  // std dev = 5,361, 156,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=38 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E), haswordvenue(G, D) )
%   | | | then return 0.42080948082135916;  // std dev = 3,355, 54,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | | | else return -0.022240132687708854;  // std dev = 3,071, 75,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.01607810721838917;  // std dev = 2,816, 80,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=9 */
%   | | | else return 0.08953310191201015;  // std dev = 5,327, 150,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=38 */
%   | else return -0.11694426575215658;  // std dev = 0,028, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2361360724215105;  // std dev = 0,480, 67,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.01143477507460287;  // std dev = 2,811, 78,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=9 */
%   | | | else return 0.05480326326657918;  // std dev = 6,028, 210,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=47 */
%   | else return -0.10743647632876505;  // std dev = 0,026, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.21269557581641024;  // std dev = 0,476, 63,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=40 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.11065367790947477;  // std dev = 1,471, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.0446372944564981;  // std dev = 2,302, 61,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.2358352893904438;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.06496888715775853;  // std dev = 2,374, 108,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.03260247546729663;  // std dev = 5,454, 175,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=38 */
%   | | | else return -0.09181466428089888;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.4848773211040855;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.17249700635886372;  // std dev = 3,704, 62,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=40 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.03151650287356166;  // std dev = 2,832, 96,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=9 */
%   | | | else return 0.03337246837797018;  // std dev = 6,060, 221,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=47 */
%   | else return -0.09139858649516328;  // std dev = 0,026, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.0837035660322373;  // std dev = 0,481, 67,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.03140228686375368;  // std dev = 2,835, 101,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=9 */
%   | | | else return 0.01180263808514551;  // std dev = 6,120, 241,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=47 */
%   | else return -0.0832140414242093;  // std dev = 0,028, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.06682126148111747;  // std dev = 7,041, 308,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=87 */
%   | | | else return -0.11810496912917702;  // std dev = 0,356, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( title(G, A), venue(G, E) )
%   | | | then return -0.047899125179025656;  // std dev = 1,978, 35,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return -0.2564668684798167;  // std dev = 0,618, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then return -0.15275955388674928;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.07733472250044439;  // std dev = 0,021, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordvenue(E, D) )
%   | | then if ( title(F, B), venue(F, E) )
%   | | | then return 0.016880686798354052;  // std dev = 7,433, 345,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=87 */
%   | | | else return -0.09021680447647218;  // std dev = 2,095, 44,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | else if ( haswordtitle(A, G), haswordvenue(H, G) )
%   | | | then return -0.2707140102334463;  // std dev = 0,326, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 2.311456357124391E-5;  // std dev = 1,050, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return -0.07172729767283176;  // std dev = 0,028, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, A) )
%   | | then return 0.06407084073412984;  // std dev = 0,435, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, D) )
%   | | | then return -0.00980654189024541;  // std dev = 4,179, 78,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=40 */
%   | | | else return -0.04662456940660289;  // std dev = 2,364, 91,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=6 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.17188425769339466;  // std dev = 1,360, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.05261694250567428;  // std dev = 2,309, 65,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.06114970584959251;  // std dev = 5,264, 141,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=38 */
%   | | | else return -0.06035815471652637;  // std dev = 0,012, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.87644
   AUC PR    = 0.557292
   CLL	      = -0.238046
   Precision = 0.221795 at threshold = 0.5
   Recall    = 0.645522
   F1        = 0.330153


Total learning time: 30.209 seconds
Total inference time: 35.505 seconds
AUC ROC: 0.87644


Results scoring model
   AUC ROC   = 0.863676
   AUC PR    = 0.501098
   CLL	      = -0.230435
   Precision = 0.168013 at threshold = 0.5
   Recall    = 0.641975
   F1        = 0.266325


Total scoring time: 5.777 seconds
Refined model CLL: -0.230435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.87644
   AUC PR    = 0.557292
   CLL	      = -0.238046
   Precision = 0.221795 at threshold = 0.5
   Recall    = 0.645522
   F1        = 0.330153


Total learning time: 39.873 seconds
Total inference time: 35.505 seconds
AUC ROC: 0.87644
Total revision time: 39.873
Best scored revision CLL: -0.230435


Dataset: 10_rec_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 02:29:57
{'AUC ROC': 0.87644, 'F1': 0.330153, 'Precision': [0.221795, 0.5], 'Recall': 0.645522, 'AUC PR': 0.557292, 'Inference time': 35.505, 'CLL': -0.238046, 'Learning time': 39.873, 'parameter': {'AUC ROC': 0.725746, 'F1': 0.622108, 'Precision': [1.0, 0.5], 'Recall': 0.451493, 'AUC PR': 0.48982, 'Inference time': 3.902, 'CLL': -0.250781, 'Learning time': 1.871}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5325675397506758;  // std dev = 0,469, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.04564893509951222;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.08730561035503312;  // std dev = 2,382, 110,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0012260649004876617;  // std dev = 2,781, 64,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=9 */
%   | | | else return 0.2776611302214621;  // std dev = 7,066, 205,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=86 */
%   else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.18030291064577594;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.40951639379184185;  // std dev = 0,483, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.28790672451148397;  // std dev = 1,294, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.06463870077523984;  // std dev = 2,368, 88,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=6 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.04579811764418993;  // std dev = 2,704, 48,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return 0.2574308562379366;  // std dev = 6,961, 197,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=86 */
%   else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.14784081180134695;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4390671823667473;  // std dev = 0,440, 76,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=56 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.24940977565030412;  // std dev = 1,290, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.06373798033097906;  // std dev = 2,375, 98,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=6 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.0026361176788948074;  // std dev = 2,766, 60,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | else return 0.17986983782742613;  // std dev = 7,183, 215,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=86 */
%   else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2527965739623611;  // std dev = 0,478, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.034018411207216034;  // std dev = 1,449, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.05193377190494739;  // std dev = 2,388, 82,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 0.03597805676740684;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return 0.16090776519312075;  // std dev = 7,102, 208,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=86 */
%   else return -0.10159632948783634;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( title(E, B), venue(E, D) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.6734347755206734;  // std dev = 1,142, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.18005817255340958;  // std dev = 3,026, 268,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=8 */
%   | | else if ( title(G, A), venue(G, D) )
%   | | | then return -0.08279247027451504;  // std dev = 2,119, 46,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | | else return 0.4680577756786924;  // std dev = 0,955, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return -0.45858204813583736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.19820074227932247;  // std dev = 0,172, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(B, K), haswordvenue(L, K) )
%   | | | then return -0.3940705399318755;  // std dev = 0,289, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.5995729536642473;  // std dev = 0,201, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.16812014571279205;  // std dev = 0,378, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.23298383709362008;  // std dev = 1,291, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.020472526938743782;  // std dev = 2,108, 69,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 0.02920391313184898;  // std dev = 2,544, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else return 0.0807583629846784;  // std dev = 5,848, 212,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=86 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12830891826054838;  // std dev = 0,371, 83,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.06300931795749022;  // std dev = 1,359, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.03948330735338093;  // std dev = 2,166, 83,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 0.011100939254127057;  // std dev = 2,564, 56,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | | else return 0.0823448346922964;  // std dev = 5,695, 201,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=86 */
%   else return -0.07877675473109179;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.17539932580140913;  // std dev = 0,686, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.09021747620885287;  // std dev = 0,379, 80,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=56 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.2068348887636023;  // std dev = 1,397, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.030450739200945792;  // std dev = 2,050, 49,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.02668383608265946;  // std dev = 2,598, 100,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=9 */
%   | | | else return 0.057340050829700784;  // std dev = 5,710, 205,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=86 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( title(E, B), venue(E, D) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.46089681530318427;  // std dev = 1,593, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.18722076066419016;  // std dev = 3,218, 266,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=8 */
%   | | else if ( title(G, A), venue(G, D) )
%   | | | then return -0.10491172525121624;  // std dev = 2,088, 39,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return 0.20693255455682955;  // std dev = 1,246, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then return -0.23635547307395954;  // std dev = 0,276, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | then if ( haswordtitle(A, K), haswordtitle(B, K) )
%   | | then return -0.44078228075618325;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.37915380358409134;  // std dev = 0,254, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( title(E, B), venue(E, D) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.3583746087146378;  // std dev = 1,530, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.1672424781134361;  // std dev = 3,105, 248,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=8 */
%   | | else if ( title(G, A), venue(G, D) )
%   | | | then return -0.07661257911137184;  // std dev = 2,116, 38,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return 0.06180530909486137;  // std dev = 1,555, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | then return -0.31775729223765903;  // std dev = 0,084, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(B, J), haswordvenue(K, J) )
%   | | | then return -0.39895245712991745;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2982874549241041;  // std dev = 0,231, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.06419184008202623;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */


Results
   AUC ROC   = 0.978049
   AUC PR    = 0.869912
   CLL	      = -0.191092
   Precision = 0.816993 at threshold = 0.5
   Recall    = 0.932836
   F1        = 0.87108


Total learning time: 72.847 seconds
Total inference time: 715.034 seconds
AUC ROC: 0.978049


Dataset: 10_rec_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 02:43:06
{'AUC ROC': 0.978049, 'F1': 0.87108, 'Precision': [0.816993, 0.5], 'Recall': 0.932836, 'AUC PR': 0.869912, 'Inference time': 715.034, 'CLL': -0.191092, 'Learning time': 72.847}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D), haswordvenue(F, C) )
%   | | then if ( author(G, E), title(G, B) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5608516378022156;  // std dev = 3,932, 74,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=52 */
%   | | else if ( haswordtitle(A, D) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.01069130798086828;  // std dev = 2,762, 59,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return 0.10814893509951223;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.06492798797741077;  // std dev = 2,353, 78,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=6 */
%   | | else return 0.25084299902645174;  // std dev = 0,488, 219,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=86 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.796538
   AUC PR    = 0.089919
   CLL	      = -0.212528
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.226 seconds
Total inference time: 346.44100000000003 seconds
AUC ROC: 0.796538


Dataset: 10_rec_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 02:48:59
{'AUC ROC': 0.796538, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.089919, 'Inference time': 346.44100000000003, 'CLL': -0.212528, 'Learning time': 6.226}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 140
Target train neg examples: 4623

Target test facts examples: 33542
Target test pos	 examples: 558
Target test neg examples: 23373

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.05600989766635809;  // std dev = 7,704, 374,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.06948225929848457;  // std dev = 7,606, 339,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04887981924956715;  // std dev = 7,662, 358,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04520156933180269;  // std dev = 7,648, 353,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.027125868415553395;  // std dev = 7,704, 374,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04694681411860577;  // std dev = 7,590, 334,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.010230051818518533;  // std dev = 7,734, 386,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.0352847165071464;  // std dev = 7,606, 339,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03796065884825925;  // std dev = 7,567, 327,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.032088947708469304;  // std dev = 7,567, 327,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=74 */


Results
   AUC ROC   = 0.716846
   AUC PR    = 0.467514
   CLL	      = -0.239647
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.605


Total learning time: 2.163 seconds
Total inference time: 3.958 seconds
AUC ROC: 0.716846


Results scoring model
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.242533
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total scoring time: 2.366 seconds
Parameter learned model CLL: -0.242533


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.704, 300, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.606, 265, 74], 'true': [1.19e-07, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.662, 284, 74], 'true': [2.86e-07, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.648, 279, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.704, 300, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.59, 260, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.734, 312, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.606, 265, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.567, 253, 74], 'true': [5.16e-08, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.567, 253, 74], 'true': [4.71e-08, 0, 66]}]]
[{'': [-9.689219124001365e-16, 0.15871200205896727]}, {'': [2.153159805333637e-16, 0.17063896067733353]}, {'': [1.2380668880668413e-15, 0.16397740395118518]}, {'': [-1.0765799026668185e-16, 0.16568626664205807]}, {'': [-2.8260222445003984e-16, 0.15871200205896707]}, {'': [-4.0371746350005693e-17, 0.17246943239269916]}, {'': [-6.728624391667616e-17, 0.15495718005852613]}, {'': [-6.7286243916676156e-18, 0.1706389606773366]}, {'': [4.0371746350005693e-17, 0.1750881425992946]}, {'': [3.364312195833808e-17, 0.1750881425992964]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.49229527656292604;  // std dev = 3,084, 41,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.14185106490048763;  // std dev = 8,56e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return 0.15951879811321062;  // std dev = 0,459, 146,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.1570669878174392;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.3780379104992207;  // std dev = 3,261, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return 0.11965168605670352;  // std dev = 0,450, 156,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.7583829646185671;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22162570394674347;  // std dev = 3,591, 53,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.1123163781936062;  // std dev = 8,16e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return 0.09739015828590676;  // std dev = 0,447, 159,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=44 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.07686727464093993;  // std dev = 1,547, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.30724301266473575;  // std dev = 3,051, 40,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else return 0.12471761270595726;  // std dev = 0,466, 138,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.138684245924981;  // std dev = 0,484, 58,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=30 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.09269127618926103;  // std dev = 3,16e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else return 0.055558426497928234;  // std dev = 0,444, 163,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.25796448084218543;  // std dev = 1,237, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.10983319121946516;  // std dev = 3,402, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return -0.08518475138839682;  // std dev = 5,37e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0.06944748893039725;  // std dev = 0,455, 150,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.12093027109094574;  // std dev = 1,595, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.05751916620384829;  // std dev = 3,522, 53,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
%   | | else return -0.07877675473109158;  // std dev = 5,96e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0.049530298199948225;  // std dev = 0,452, 154,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=44 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.07344946364867576;  // std dev = 1,621, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.09550507120744582;  // std dev = 3,309, 45,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | | else return -0.07324622576333707;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0.048097597244918217;  // std dev = 0,455, 150,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.035726777016301545;  // std dev = 1,597, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.10831114221211385;  // std dev = 3,183, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | else return -0.06842697784420265;  // std dev = 4,83e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0.03146723323745169;  // std dev = 0,452, 154,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=44 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.2689821874160915;  // std dev = 1,010, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.049287450936009836;  // std dev = 3,315, 49,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return 0.016470148674929096;  // std dev = 0,447, 159,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=44 */


Results
   AUC ROC   = 0.847445
   AUC PR    = 0.524883
   CLL	      = -0.231334
   Precision = 0.181178 at threshold = 0.5
   Recall    = 0.645161
   F1        = 0.282908


Total learning time: 11.079 seconds
Total inference time: 11.106 seconds
AUC ROC: 0.847445


Results scoring model
   AUC ROC   = 0.900185
   AUC PR    = 0.572973
   CLL	      = -0.230565
   Precision = 0.210046 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.318339


Total scoring time: 3.672 seconds
Refined model CLL: -0.230565


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.847445
   AUC PR    = 0.524883
   CLL	      = -0.231334
   Precision = 0.181178 at threshold = 0.5
   Recall    = 0.645161
   F1        = 0.282908


Total learning time: 19.28 seconds
Total inference time: 11.106 seconds
AUC ROC: 0.847445
Total revision time: 19.28
Best scored revision CLL: -0.230565


Dataset: 10_rec_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 02:49:34
{'AUC ROC': 0.847445, 'F1': 0.282908, 'Precision': [0.181178, 0.5], 'Recall': 0.645161, 'AUC PR': 0.524883, 'Inference time': 11.106, 'CLL': -0.231334, 'Learning time': 19.28, 'parameter': {'AUC ROC': 0.716846, 'F1': 0.605, 'Precision': [1.0, 0.5], 'Recall': 0.433692, 'AUC PR': 0.467514, 'Inference time': 3.958, 'CLL': -0.239647, 'Learning time': 2.163}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5670096945931838;  // std dev = 4,038, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.14185106490048766;  // std dev = 7,60e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0.25605469426181693;  // std dev = 0,489, 191,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.3332054912315484;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5521192968543439;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.12544463852839133;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return 0.2737416668516723;  // std dev = 0,497, 169,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=76 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.34656453648439955;  // std dev = 0,464, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   | else return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.11231637819360618;  // std dev = 8,56e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return 0.2101561366119002;  // std dev = 0,495, 177,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=76 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.05015448603606771;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.44434529894874;  // std dev = 2,785, 65,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=56 */
%   | else return -0.10159632948783624;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.10159632948783628;  // std dev = 3,33e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return 0.1924037649562627;  // std dev = 0,497, 169,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=76 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.4493181035955796;  // std dev = 0,446, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2934693835335606;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return 0.04510976492720923;  // std dev = 0,477, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.29604743001398426;  // std dev = 3,144, 68,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=56 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.09269127618926087;  // std dev = 6,83e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else return 0.11729865058754348;  // std dev = 0,492, 184,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.2579930726354052;  // std dev = 0,092, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.09043271116801409;  // std dev = 0,029, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( haswordtitle(B, C) )
%   | | then if ( author(G, D), title(G, A) )
%   | | | then return 0.044245278533197006;  // std dev = 0,972, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.09985093355527944;  // std dev = 4,099, 80,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=56 */
%   | | else return -0.08518475138839682;  // std dev = 5,58e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.09914338995909479;  // std dev = 0,494, 181,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.2120457783068079;  // std dev = 0,081, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08894935243095566;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return 0.03531913358804887;  // std dev = 0,970, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.15392420258089176;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return -0.07877675473109175;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.0787297873677879;  // std dev = 0,001, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0.06588336171516279;  // std dev = 0,492, 186,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.15481352982571212;  // std dev = 0,343, 85,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.0732148121865691;  // std dev = 0,001, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0.046545554008722075;  // std dev = 0,491, 188,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=76 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.1388741118616975;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.27192434032005364;  // std dev = 0,678, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return -0.02217778118779084;  // std dev = 0,354, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.04373729892892284;  // std dev = 3,839, 76,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=56 */
%   | else return -0.06838943180446629;  // std dev = 0,001, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.07597133362268362;  // std dev = 0,497, 171,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=76 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.14808517197822266;  // std dev = 0,087, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.092553734693555;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.10217865141611694;  // std dev = 0,400, 73,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=58 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.0641685578507887;  // std dev = 0,000946, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0.007460929980921723;  // std dev = 0,489, 193,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=76 */


Results
   AUC ROC   = 0.758288
   AUC PR    = 0.081454
   CLL	      = -0.342724
   Precision = 0.104703 at threshold = 0.5
   Recall    = 0.335125
   F1        = 0.159556


Total learning time: 26.987 seconds
Total inference time: 19.67 seconds
AUC ROC: 0.758288


Dataset: 10_rec_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 02:50:21
{'AUC ROC': 0.758288, 'F1': 0.159556, 'Precision': [0.104703, 0.5], 'Recall': 0.335125, 'AUC PR': 0.081454, 'Inference time': 19.67, 'CLL': -0.342724, 'Learning time': 26.987}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.6314822684328462;  // std dev = 0,419, 75,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=58 */
%   | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.14185106490048763;  // std dev = 8,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0.27803843786194415;  // std dev = 0,494, 181,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=76 */


Results
   AUC ROC   = 0.757496
   AUC PR    = 0.076801
   CLL	      = -0.205232
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.314 seconds
Total inference time: 4.02 seconds
AUC ROC: 0.757496


Dataset: 10_rec_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 02:50:30
{'AUC ROC': 0.757496, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.076801, 'Inference time': 4.02, 'CLL': -0.205232, 'Learning time': 4.314}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 113
Target train neg examples: 3827

Target test facts examples: 33252
Target test pos	 examples: 585
Target test neg examples: 24169

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.08271033860828501;  // std dev = 7,045, 285,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=64 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.07000162034413718;  // std dev = 7,055, 288,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=64 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.05547333702171113;  // std dev = 7,079, 295,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=64 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.050049348237217094;  // std dev = 7,069, 292,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=64 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.05067156408387938;  // std dev = 7,034, 282,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=64 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.04645821531070191;  // std dev = 7,019, 278,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=64 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.05159571318146145;  // std dev = 6,963, 264,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=64 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.01656531207172228;  // std dev = 7,086, 297,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=64 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.01911385602397698;  // std dev = 7,062, 290,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=64 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.0017820195672565552;  // std dev = 7,127, 310,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=64 */


Results
   AUC ROC   = 0.721368
   AUC PR    = 0.476703
   CLL	      = -0.246143
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.442735
   F1        = 0.613744


Total learning time: 1.851 seconds
Total inference time: 4.095 seconds
AUC ROC: 0.721368


Results scoring model
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.250108
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total scoring time: 1.67 seconds
Parameter learned model CLL: -0.250108


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.045, 221, 64], 'true': [1.69e-07, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.055, 224, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.079, 231, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.069, 228, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.034, 218, 64], 'true': [2.98e-08, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.019, 214, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [6.963, 200, 64], 'true': [4.21e-08, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.086, 233, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.062, 226, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.127, 246, 64], 'true': [2.98e-08, 0, 49]}]]
[{'': [5.800348863347756e-16, 0.17413357956294315]}, {'': [-5.800348863347756e-16, 0.17283950617283708]}, {'': [0.0, 0.16988221775352116]}, {'': [-3.625218039592348e-16, 0.1711390504785158]}, {'': [1.8126090197961738e-17, 0.17544389115235687]}, {'': [-2.718913529694261e-17, 0.17721650018115048]}, {'': [3.6252180395923476e-17, 0.1836547291092739]}, {'': [-6.797283824235652e-17, 0.1690530444739194]}, {'': [-3.6252180395923476e-17, 0.17198573127229233]}, {'': [1.8126090197961738e-17, 0.16382934443288175]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E), haswordvenue(G, D) )
%   | | | then return 0.6460277229782995;  // std dev = 2,348, 33,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return -0.02420400607695833;  // std dev = 1,879, 34,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.07042249347191629;  // std dev = 1,927, 56,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=4 */
%   | | | else return 0.20698614440183657;  // std dev = 4,420, 86,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3198634292440743;  // std dev = 0,491, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06606486752629645;  // std dev = 1,932, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | | else return 0.12195875072413027;  // std dev = 4,903, 121,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2782227542056956;  // std dev = 0,479, 46,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06369612538874062;  // std dev = 1,937, 64,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=4 */
%   | | | else return 0.11240755021704495;  // std dev = 4,872, 118,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | else return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.27636053094642954;  // std dev = 0,474, 41,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.0730904206407156;  // std dev = 1,901, 42,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | | else return 0.0737563040404836;  // std dev = 4,948, 136,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=34 */
%   | else return -0.10159632948783621;  // std dev = 3,65e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.17412412903660754;  // std dev = 0,477, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08373481934809286;  // std dev = 1,920, 58,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | | else return 0.050514401680197475;  // std dev = 4,974, 146,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=34 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14202916788740352;  // std dev = 0,477, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06903074758088219;  // std dev = 1,934, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
%   | | | else return 0.09375369567310339;  // std dev = 4,815, 114,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1039071060206377;  // std dev = 0,468, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.07416766997873989;  // std dev = 1,909, 51,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   | | | else return 0.06238729652955534;  // std dev = 4,839, 132,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, D), haswordtitle(B, E) )
%   | | | then return 0.09907034176029345;  // std dev = 3,084, 41,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | | else return -0.07675407323518538;  // std dev = 1,979, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
%   | | else if ( haswordvenue(H, D) )
%   | | | then return 0.04788019741918096;  // std dev = 4,598, 110,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=30 */
%   | | | else return 0.33228544098839674;  // std dev = 1,267, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, D), haswordtitle(B, E) )
%   | | | then return 0.07452999115890013;  // std dev = 3,084, 41,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | | else return -0.0743218467564576;  // std dev = 1,999, 68,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.059273968470755056;  // std dev = 1,903, 40,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | | else return 0.10445698192692397;  // std dev = 4,314, 81,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=30 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, D), haswordtitle(B, E) )
%   | | | then return 0.12480841493159861;  // std dev = 2,780, 37,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=26 */
%   | | | else return -0.0771609466801723;  // std dev = 2,032, 82,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=4 */
%   | | else if ( haswordvenue(H, D) )
%   | | | then return 0.016803414747444102;  // std dev = 4,615, 115,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=30 */
%   | | | else return 0.34767969971477597;  // std dev = 1,071, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */


Results
   AUC ROC   = 0.86679
   AUC PR    = 0.533073
   CLL	      = -0.281983
   Precision = 0.166959 at threshold = 0.5
   Recall    = 0.651282
   F1        = 0.265783


Total learning time: 13.031 seconds
Total inference time: 452.019 seconds
AUC ROC: 0.86679


Results scoring model
   AUC ROC   = 0.908251
   AUC PR    = 0.563383
   CLL	      = -0.233548
   Precision = 0.227964 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.339367


Total scoring time: 4.174 seconds
Refined model CLL: -0.233548


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.86679
   AUC PR    = 0.533073
   CLL	      = -0.281983
   Precision = 0.166959 at threshold = 0.5
   Recall    = 0.651282
   F1        = 0.265783


Total learning time: 20.726 seconds
Total inference time: 452.019 seconds
AUC ROC: 0.86679
Total revision time: 20.726
Best scored revision CLL: -0.233548


Dataset: 10_rec_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:58:27
{'AUC ROC': 0.86679, 'F1': 0.265783, 'Precision': [0.166959, 0.5], 'Recall': 0.651282, 'AUC PR': 0.533073, 'Inference time': 452.019, 'CLL': -0.281983, 'Learning time': 20.726, 'parameter': {'AUC ROC': 0.721368, 'F1': 0.613744, 'Precision': [1.0, 0.5], 'Recall': 0.442735, 'AUC PR': 0.476703, 'Inference time': 4.095, 'CLL': -0.246143, 'Learning time': 1.851}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.6174081943587716;  // std dev = 0,428, 54,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=41 */
%   | | else if ( haswordvenue(F, C) )
%   | | | then return -0.024204006076958332;  // std dev = 1,879, 34,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(G, C) )
%   | | then if ( title(H, A), venue(H, G) )
%   | | | then return 0.17689893509951296;  // std dev = 5,894, 160,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=51 */
%   | | | else return 0.43709630352056494;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.14185106490048766;  // std dev = 7,15e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.37735379577378564;  // std dev = 0,487, 67,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1540504573042109;  // std dev = 0,058, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08609717350968037;  // std dev = 1,920, 51,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04071138243456848;  // std dev = 1,899, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return 0.36262450187258866;  // std dev = 5,363, 119,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=64 */
%   else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.43654837127730367;  // std dev = 0,436, 55,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.13763292235966035;  // std dev = 0,094, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07518321331420146;  // std dev = 1,920, 52,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.00913115145351787;  // std dev = 1,871, 32,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return 0.288733792570311;  // std dev = 5,458, 122,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=64 */
%   else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.24193596180719226;  // std dev = 0,477, 63,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return -0.1304749190844274;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.025862810732275556;  // std dev = 1,888, 38,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.054599481324721165;  // std dev = 1,905, 48,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | | else return 0.23039102088359573;  // std dev = 5,460, 123,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=64 */
%   else return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.23854261215632522;  // std dev = 0,455, 58,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.11494719146969799;  // std dev = 0,076, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07019621213062409;  // std dev = 1,933, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02401127826081315;  // std dev = 1,888, 39,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | | else return 0.17261754882112923;  // std dev = 5,506, 125,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=64 */
%   else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then return 0.21282257474283772;  // std dev = 0,438, 54,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=40 */
%   | | else if ( haswordvenue(G, C) )
%   | | | then return -0.05488654561767881;  // std dev = 1,924, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | | else return -0.36125149933123596;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), title(J, A) )
%   | | | then return -0.11190800881011373;  // std dev = 0,016, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.01631389167785767;  // std dev = 1,886, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | else if ( haswordvenue(K, C) )
%   | | | then return 0.17242243455006923;  // std dev = 5,117, 107,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=58 */
%   | | | else return 0.47190068825271325;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0851847513883968;  // std dev = 1,97e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then return 0.07529000536901718;  // std dev = 0,475, 61,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=40 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return -0.23795578485872695;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.06039015063246206;  // std dev = 1,936, 68,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=4 */
%   | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | then return -0.01821217734841581;  // std dev = 0,306, 38,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | else if ( haswordvenue(J, C) )
%   | | | then return 0.18052007224569092;  // std dev = 4,835, 98,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=58 */
%   | | | else return 0.35791699434142354;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.09194140444447717;  // std dev = 0,464, 60,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.08705436291730546;  // std dev = 0,107, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.04723072642282528;  // std dev = 1,931, 57,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=4 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.017568660663975416;  // std dev = 0,307, 38,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | else if ( haswordtitle(A, I), haswordvenue(J, I) )
%   | | | then return 0.08715828945335631;  // std dev = 5,173, 109,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=60 */
%   | | | else return 0.2804292312019907;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.13417650014754315;  // std dev = 3,132, 53,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | | | else return 0.022433778494661282;  // std dev = 1,844, 29,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( title(G, A), venue(G, D) )
%   | | | then return -0.008340977198274072;  // std dev = 5,363, 147,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=51 */
%   | | | else return 0.16320242405430704;  // std dev = 1,764, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return -0.40239953604375056;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.3654029667566481;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(A, K), haswordvenue(L, K) )
%   | | | then return -0.14829771600432334;  // std dev = 0,785, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.3508339078940354;  // std dev = 0,302, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420268;  // std dev = 2,58e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.06791880754621098;  // std dev = 0,445, 58,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.03752413391984087;  // std dev = 0,252, 58,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | else if ( haswordtitle(B, G), haswordvenue(H, G) )
%   | | | then return 0.02503623579758889;  // std dev = 5,629, 151,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=64 */
%   | | | else return 0.23231733585919323;  // std dev = 0,121, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06419184008202625;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */


Results
   AUC ROC   = 0.781334
   AUC PR    = 0.077333
   CLL	      = -0.41086
   Precision = 0.090119 at threshold = 0.5
   Recall    = 0.389744
   F1        = 0.146388


Total learning time: 43.798 seconds
Total inference time: 290.633 seconds
AUC ROC: 0.781334


Dataset: 10_rec_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 03:04:02
{'AUC ROC': 0.781334, 'F1': 0.146388, 'Precision': [0.090119, 0.5], 'Recall': 0.389744, 'AUC PR': 0.077333, 'Inference time': 290.633, 'CLL': -0.41086, 'Learning time': 43.798}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5194392576801578;  // std dev = 0,473, 62,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06341969235146812;  // std dev = 1,920, 51,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02756535061477346;  // std dev = 1,882, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return 0.3742779673575779;  // std dev = 5,565, 124,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=64 */
%   else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */


Results
   AUC ROC   = 0.779265
   AUC PR    = 0.071286
   CLL	      = -0.214234
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.347 seconds
Total inference time: 13.32 seconds
AUC ROC: 0.779265


Dataset: 10_rec_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 03:04:19
{'AUC ROC': 0.779265, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.071286, 'Inference time': 13.32, 'CLL': -0.214234, 'Learning time': 3.347}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 129
Target train neg examples: 4745

Target test facts examples: 34429
Target test pos	 examples: 569
Target test neg examples: 23251

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.10318204768229523;  // std dev = 7,474, 302,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.06405359534450052;  // std dev = 7,603, 338,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.0656501433219476;  // std dev = 7,553, 323,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.0469563971162687;  // std dev = 7,599, 337,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.06722838537063619;  // std dev = 7,466, 300,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.02873795246201179;  // std dev = 7,606, 339,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.025579236923569396;  // std dev = 7,599, 337,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.01278979076084154;  // std dev = 7,642, 351,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.019509053426951632;  // std dev = 7,599, 337,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.03549355186801738;  // std dev = 7,506, 310,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=74 */


Results
   AUC ROC   = 0.72232
   AUC PR    = 0.478862
   CLL	      = -0.251
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44464
   F1        = 0.615572


Total learning time: 1.948 seconds
Total inference time: 4.294 seconds
AUC ROC: 0.72232


Results scoring model
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.253479
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total scoring time: 2.089 seconds
Parameter learned model CLL: -0.253479


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.474, 228, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.603, 264, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.553, 249, 74], 'true': [1.03e-07, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.599, 263, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.466, 226, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.606, 265, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.599, 263, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.642, 277, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.599, 263, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.506, 236, 74], 'true': [5.16e-08, 0, 55]}]]
[{'': [-1.291895883200182e-16, 0.18499188632077587]}, {'': [-3.2297397080004555e-16, 0.1710024158817989]}, {'': [1.9378438248002731e-16, 0.17661436417486837]}, {'': [-3.2297397080004555e-16, 0.17136718646813862]}, {'': [-9.689219124001366e-17, 0.18582222222222214]}, {'': [-3.229739708000455e-17, 0.17063896067733414]}, {'': [-8.074349270001138e-18, 0.17136718646813984]}, {'': [-4.0371746350005693e-17, 0.16637851965487493]}, {'': [-1.6148698540002276e-17, 0.17136718646813726]}, {'': [4.844609562000683e-17, 0.18172736732570208]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.524815601766179;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08185106490048774;  // std dev = 1,679, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08062657510456937;  // std dev = 1,678, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | | else return 0.12680565151742332;  // std dev = 0,443, 201,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=54 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5184710448384532;  // std dev = 0,440, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07095191126128729;  // std dev = 1,678, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06413510222892592;  // std dev = 1,672, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | else return 0.12621177249555912;  // std dev = 0,451, 190,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=54 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.4174818475733611;  // std dev = 0,440, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.058439498769232774;  // std dev = 1,673, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0617480436767634;  // std dev = 1,677, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | else return 0.07919447584168018;  // std dev = 0,436, 212,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=54 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3617816122198072;  // std dev = 0,416, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.05064724446449841;  // std dev = 1,672, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.03873623518604589;  // std dev = 1,662, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | | else return 0.10304353597231446;  // std dev = 0,454, 186,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=54 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.31789212404672673;  // std dev = 0,381, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.09437264760226143;  // std dev = 0,009, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.03440692318368024;  // std dev = 1,662, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.04850325232382289;  // std dev = 1,675, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | | else return 0.05614511632733388;  // std dev = 0,438, 208,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=54 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.0823687246701793;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.08505381630913798;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.04897096052994775;  // std dev = 1,678, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.04225624846170266;  // std dev = 1,673, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | | else return 0.05863548237005759;  // std dev = 0,445, 199,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=54 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.0322079456754987;  // std dev = 0,481, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.07953517075339803;  // std dev = 0,008, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.03881381402079924;  // std dev = 1,673, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.03670702493169315;  // std dev = 1,672, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | else return 0.014135728626854641;  // std dev = 0,425, 228,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=54 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, A) )
%   | | then return -0.15018703034408976;  // std dev = 0,188, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(A, D) )
%   | | | then return -0.028498524495272657;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return -0.041074913719943054;  // std dev = 1,679, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.07308965240052388;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.016208537274715367;  // std dev = 1,656, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | else return 0.039542906178287235;  // std dev = 0,441, 204,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=54 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.061624205624555964;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else return -0.04231782981163354;  // std dev = 0,219, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | else return 0.016900126762508596;  // std dev = 0,408, 257,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=57 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.1171728593049959;  // std dev = 0,440, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else return -0.03013032601387296;  // std dev = 0,234, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.03473007280743559;  // std dev = 0,241, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | else return 0.044629989898756266;  // std dev = 0,449, 193,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=54 */


Results
   AUC ROC   = 0.867311
   AUC PR    = 0.53536
   CLL	      = -0.263458
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total learning time: 10.581 seconds
Total inference time: 33.429 seconds
AUC ROC: 0.867311


Results scoring model
   AUC ROC   = 0.828332
   AUC PR    = 0.521522
   CLL	      = -0.243757
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total scoring time: 3.033 seconds
Refined model CLL: -0.243757


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.867311
   AUC PR    = 0.53536
   CLL	      = -0.263458
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total learning time: 17.651 seconds
Total inference time: 33.429 seconds
AUC ROC: 0.867311
Total revision time: 17.651
Best scored revision CLL: -0.243757


Dataset: 10_rec_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 03:05:15
{'AUC ROC': 0.867311, 'F1': 0.255361, 'Precision': [0.157189, 0.5], 'Recall': 0.680141, 'AUC PR': 0.53536, 'Inference time': 33.429, 'CLL': -0.263458, 'Learning time': 17.651, 'parameter': {'AUC ROC': 0.72232, 'F1': 0.615572, 'Precision': [1.0, 0.5], 'Recall': 0.44464, 'AUC PR': 0.478862, 'Inference time': 4.294, 'CLL': -0.251, 'Learning time': 1.948}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.6968586125188665;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08302753548872303;  // std dev = 0,235, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.08629550934493217;  // std dev = 0,229, 54,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=3 */
%   | else return 0.25897538138050086;  // std dev = 0,490, 242,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=97 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.15648724948651072;  // std dev = 0,427, 88,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.05704151144396654;  // std dev = 0,263, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | else return 0.2547247363636564;  // std dev = 0,495, 225,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=97 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5591514780144199;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.15061210705469943;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07170879581294123;  // std dev = 0,270, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return -0.06835754431378846;  // std dev = 0,229, 54,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=3 */
%   | else return 0.1945371965760199;  // std dev = 0,492, 236,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=97 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.3835601591299304;  // std dev = 0,409, 33,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | else return -0.05296973961586481;  // std dev = 0,247, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, A) )
%   | | then return -0.13234059679358465;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07916649503252449;  // std dev = 0,242, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | else return 0.12910565833128804;  // std dev = 0,485, 255,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=97 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.28886441181470096;  // std dev = 0,409, 33,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.11875634611081776;  // std dev = 0,008, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07251725174432543;  // std dev = 0,238, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   else return 0.08991857360988971;  // std dev = 0,464, 292,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=100 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.26795719677108765;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.10742015429180979;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.05789818049210991;  // std dev = 0,250, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.10922280910765916;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.04328288127247678;  // std dev = 0,270, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else return 0.09802774420177408;  // std dev = 0,488, 247,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=97 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.17769669231618146;  // std dev = 0,390, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.09904087711941265;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06427699477860291;  // std dev = 0,225, 56,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.05504377846395859;  // std dev = 0,239, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | else return 0.08536547901073564;  // std dev = 0,490, 242,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=97 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.16377806219935545;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.09162266011563937;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.05489559489467502;  // std dev = 0,233, 52,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return -0.05143727345411304;  // std dev = 0,230, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | else return 0.0447275041970701;  // std dev = 0,485, 256,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=97 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.012434383153201618;  // std dev = 0,448, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | else return -0.04889200226784563;  // std dev = 0,231, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, B) )
%   | | then return -0.08639998339695573;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.03299918390081514;  // std dev = 0,260, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else return 0.02045821082862795;  // std dev = 0,481, 266,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=97 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.052363393284680405;  // std dev = 0,424, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.07981925425083237;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0299705504147467;  // std dev = 0,260, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.026107289611021836;  // std dev = 0,260, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else return 0.027132965583815793;  // std dev = 0,484, 258,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=97 */


Results
   AUC ROC   = 0.776714
   AUC PR    = 0.07119
   CLL	      = -0.353716
   Precision = 0.096254 at threshold = 0.5
   Recall    = 0.388401
   F1        = 0.154276


Total learning time: 10.966 seconds
Total inference time: 22.578 seconds
AUC ROC: 0.776714


Dataset: 10_rec_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 03:05:49
{'AUC ROC': 0.776714, 'F1': 0.154276, 'Precision': [0.096254, 0.5], 'Recall': 0.388401, 'AUC PR': 0.07119, 'Inference time': 22.578, 'CLL': -0.353716, 'Learning time': 10.966}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5803711573217337;  // std dev = 0,448, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07208362304002264;  // std dev = 0,255, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.09569721874664155;  // std dev = 0,210, 65,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   | else return 0.21087620782678246;  // std dev = 0,478, 275,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=97 */


Results
   AUC ROC   = 0.77736
   AUC PR    = 0.071212
   CLL	      = -0.205395
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.41 seconds
Total inference time: 5.558 seconds
AUC ROC: 0.77736


Dataset: 10_rec_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 03:05:57
{'AUC ROC': 0.77736, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.071212, 'Inference time': 5.558, 'CLL': -0.205395, 'Learning time': 2.41}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 154
Target train neg examples: 5694

Target test facts examples: 33914
Target test pos	 examples: 544
Target test neg examples: 22302

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.06948914128507964;  // std dev = 8,042, 388,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=82 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.06357696972993791;  // std dev = 8,028, 383,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=82 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,15e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.050885270782298;  // std dev = 8,050, 391,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=82 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.046135769726950396;  // std dev = 8,039, 387,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=82 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.039657488681944957;  // std dev = 8,039, 387,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=82 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.02302406548366434;  // std dev = 8,094, 408,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=82 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.038489664373607735;  // std dev = 7,998, 373,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=82 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.030372675929790524;  // std dev = 8,010, 377,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=82 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,83e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.032245663390580145;  // std dev = 7,977, 366,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=82 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 4,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.01781345051607723;  // std dev = 8,025, 382,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=82 */


Results
   AUC ROC   = 0.716912
   AUC PR    = 0.468238
   CLL	      = -0.240468
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433824
   F1        = 0.605128


Total learning time: 1.862 seconds
Total inference time: 3.898 seconds
AUC ROC: 0.716912


Results scoring model
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.241028
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total scoring time: 2.16 seconds
Parameter learned model CLL: -0.241028


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.042, 306, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.028, 301, 82], 'true': [1.69e-07, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.05, 309, 82], 'true': [2.15e-07, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.039, 305, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.039, 305, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.094, 326, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.998, 291, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.01, 295, 82], 'true': [2.11e-08, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.977, 284, 82], 'true': [6.83e-08, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.025, 300, 82], 'true': [4.94e-08, 0, 72]}]]
[{'': [-1.282924384011292e-15, 0.16667552343500977]}, {'': [3.9474596431116675e-16, 0.168260742114267]}, {'': [6.41462192005646e-16, 0.16573674949797398]}, {'': [-9.868649107779169e-17, 0.16699049870133167]}, {'': [-3.4540271877227093e-16, 0.1669904987013322]}, {'': [-1.2335811384723961e-17, 0.16058727412533785]}, {'': [-8.635067969306773e-17, 0.17150989369577968]}, {'': [6.1679056923619804e-18, 0.17019749664037873]}, {'': [6.47630097698008e-17, 0.1738481292364675]}, {'': [3.39234813079909e-17, 0.1685809051286948]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.425313114203989;  // std dev = 0,495, 67,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.10613677918620197;  // std dev = 1,701, 84,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=3 */
%   | | | else return 0.07508015203072833;  // std dev = 5,666, 189,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=41 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.2853158223192956;  // std dev = 4,414, 78,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=38 */
%   | | | else return -0.0912385409725335;  // std dev = 1,679, 50,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09532457822841006;  // std dev = 1,702, 88,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=3 */
%   | | | else return 0.12214275399149663;  // std dev = 5,255, 139,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=38 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,15e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3240208460162757;  // std dev = 0,494, 66,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08058803576842977;  // std dev = 1,698, 78,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=3 */
%   | | | else return 0.03498908742441516;  // std dev = 5,706, 211,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=41 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2954174209699825;  // std dev = 0,487, 62,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10190528796054775;  // std dev = 1,695, 71,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=3 */
%   | | | else return 0.04087474580373911;  // std dev = 5,635, 219,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=41 */
%   | else return -0.10159632948783631;  // std dev = 1,83e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.2282710759048735;  // std dev = 3,835, 62,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | | else return -0.08725999943894891;  // std dev = 1,693, 67,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.07547349181782448;  // std dev = 1,698, 76,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=3 */
%   | | | else return 0.08728850417820619;  // std dev = 5,282, 143,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=38 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.07363662697263851;  // std dev = 4,300, 74,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=38 */
%   | | | else return -0.07134463107106924;  // std dev = 1,700, 83,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07150549559183912;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | | | else return 0.10527153611830925;  // std dev = 5,169, 128,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=38 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.14508232652750616;  // std dev = 0,489, 63,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06285925266432862;  // std dev = 1,699, 79,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=3 */
%   | | | else return 0.03414074098088096;  // std dev = 5,552, 191,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=41 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08149301595056974;  // std dev = 0,494, 66,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06466375158863458;  // std dev = 1,705, 98,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=3 */
%   | | | else return 0.001936198412858074;  // std dev = 5,653, 219,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=41 */
%   | else return -0.07324622576333704;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,83e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.6479500321397662;  // std dev = 1,410, 79,000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | else return -0.20133557713306047;  // std dev = 2,005, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.11728226886368912;  // std dev = 1,238, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.1226300546072973;  // std dev = 1,348, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | else return -0.07353147731575983;  // std dev = 0,146, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 4,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.08396461652233071;  // std dev = 0,368, 55,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=38 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.06554711946333901;  // std dev = 1,521, 78,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=3 */
%   | | | else return 0.031011703130657355;  // std dev = 4,725, 200,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=41 */
%   | else return -0.0626625531281072;  // std dev = 0,015, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.944067
   AUC PR    = 0.694198
   CLL	      = -0.184436
   Precision = 0.532508 at threshold = 0.5
   Recall    = 0.632353
   F1        = 0.578151


Total learning time: 28.956 seconds
Total inference time: 110.90299999999999 seconds
AUC ROC: 0.944067


Results scoring model
   AUC ROC   = 0.963172
   AUC PR    = 0.764809
   CLL	      = -0.189019
   Precision = 0.650888 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.681115


Total scoring time: 7.496 seconds
Refined model CLL: -0.189019


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.944067
   AUC PR    = 0.694198
   CLL	      = -0.184436
   Precision = 0.532508 at threshold = 0.5
   Recall    = 0.632353
   F1        = 0.578151


Total learning time: 40.474000000000004 seconds
Total inference time: 110.90299999999999 seconds
AUC ROC: 0.944067
Total revision time: 40.474000000000004
Best scored revision CLL: -0.189019


Dataset: 10_rec_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 03:08:33
{'AUC ROC': 0.944067, 'F1': 0.578151, 'Precision': [0.532508, 0.5], 'Recall': 0.632353, 'AUC PR': 0.694198, 'Inference time': 110.90299999999999, 'CLL': -0.184436, 'Learning time': 40.474000000000004, 'parameter': {'AUC ROC': 0.716912, 'F1': 0.605128, 'Precision': [1.0, 0.5], 'Recall': 0.433824, 'AUC PR': 0.468238, 'Inference time': 3.898, 'CLL': -0.240468, 'Learning time': 1.862}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5741983178155623;  // std dev = 0,451, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.10888403193345471;  // std dev = 0,179, 91,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.09569721874664155;  // std dev = 1,692, 65,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   | | | else return 0.2993254056877452;  // std dev = 7,092, 204,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=90 */
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4175273703000486;  // std dev = 0,479, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.2708937227348406;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1141809041308311;  // std dev = 0,993, 67,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1 */
%   | | else return 0.1994788739629648;  // std dev = 0,479, 249,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=93 */
%   else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.1082583512357218;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.37848863671608546;  // std dev = 0,464, 83,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=57 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.15495981662560632;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10734076900655859;  // std dev = 1,690, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.08102505162246328;  // std dev = 1,649, 80,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=3 */
%   | | | else return 0.2647595562953876;  // std dev = 6,849, 188,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=90 */
%   else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.2467624642040887;  // std dev = 0,479, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.09791165500864757;  // std dev = 0,202, 70,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=3 */
%   | | else return 0.11562757695831774;  // std dev = 0,446, 280,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=93 */
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.17188163234712953;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.193355776470432;  // std dev = 0,478, 88,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=57 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.3700578970907674;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.115410598862844;  // std dev = 0,993, 71,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=1 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.0812589021983429;  // std dev = 1,645, 73,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=3 */
%   | | | else return 0.20971232674894763;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=90 */
%   else return -0.09269127618926098;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.051187003333892034;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.13075021493829247;  // std dev = 0,482, 90,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=57 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, C) )
%   | | | then return -0.07444310921110944;  // std dev = 1,650, 75,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=3 */
%   | | | else return -0.11207476882848921;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.06650251685032005;  // std dev = 1,618, 57,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
%   | | | else return 0.10542595670105229;  // std dev = 7,132, 207,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=90 */
%   else return -0.0851847513883968;  // std dev = 1,67e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10159887314906108;  // std dev = 0,476, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, C) )
%   | | | then return -0.0736523356021545;  // std dev = 1,660, 88,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=3 */
%   | | | else return -0.10139715931411133;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06746533061639311;  // std dev = 1,630, 66,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   | | | else return 0.11815669679381648;  // std dev = 6,899, 191,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=90 */
%   else return -0.07877675473109176;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.1770492008999532;  // std dev = 0,436, 80,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.5287547353681926;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08581622982447609;  // std dev = 0,994, 81,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=1 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.05489188375469953;  // std dev = 1,626, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | | | else return 0.06069699757747117;  // std dev = 7,092, 204,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=90 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.04943610124283452;  // std dev = 0,475, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.5148306126562004;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08491633960720793;  // std dev = 0,993, 71,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=1 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.04961566016808006;  // std dev = 1,564, 64,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=3 */
%   | | | else return 0.04413763871705462;  // std dev = 7,105, 205,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=90 */
%   else return -0.0684269778442027;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.007408950650950535;  // std dev = 0,476, 96,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   | else return -0.060968569491013126;  // std dev = 0,157, 103,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, A) )
%   | | then return 0.4361581349701899;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(H, E) )
%   | | | then return -0.07822334806164626;  // std dev = 0,993, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return 0.06084031874347834;  // std dev = 0,499, 193,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=90 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.784157
   AUC PR    = 0.075665
   CLL	      = -0.344795
   Precision = 0.11058 at threshold = 0.5
   Recall    = 0.340074
   F1        = 0.166892


Total learning time: 22.999 seconds
Total inference time: 38.74 seconds
AUC ROC: 0.784157


Dataset: 10_rec_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 03:09:36
{'AUC ROC': 0.784157, 'F1': 0.166892, 'Precision': [0.11058, 0.5], 'Recall': 0.340074, 'AUC PR': 0.075665, 'Inference time': 38.74, 'CLL': -0.344795, 'Learning time': 22.999}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5172398441904221;  // std dev = 0,474, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | | else return -0.09012692696945324;  // std dev = 0,221, 58,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, C) )
%   | | | then return -0.10185106490048769;  // std dev = 1,697, 75,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3104102416321731;  // std dev = 0,498, 199,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=90 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */


Results
   AUC ROC   = 0.782914
   AUC PR    = 0.073742
   CLL	      = -0.206954
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.859 seconds
Total inference time: 3.994 seconds
AUC ROC: 0.782914


Dataset: 10_rec_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 03:09:45
{'AUC ROC': 0.782914, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.073742, 'Inference time': 3.994, 'CLL': -0.206954, 'Learning time': 4.859}


