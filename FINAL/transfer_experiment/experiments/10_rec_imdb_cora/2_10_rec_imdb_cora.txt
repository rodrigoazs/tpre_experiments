Starting experiment #2 for 10_rec_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.14185106490048904;  // std dev = 0,000, 701,000 (wgt'ed) examples reached here.  /* #neg=701 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839235;  // std dev = 0,000, 736,000 (wgt'ed) examples reached here.  /* #neg=736 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360626;  // std dev = 0,000, 664,000 (wgt'ed) examples reached here.  /* #neg=664 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1015963294878362;  // std dev = 4,34e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783517;  // std dev = 4,31e-07, 685,000 (wgt'ed) examples reached here.  /* #neg=685 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.09269127618926187;  // std dev = 0,000, 762,000 (wgt'ed) examples reached here.  /* #neg=762 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839675;  // std dev = 1,23e-07, 634,000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109173;  // std dev = 2,36e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109258;  // std dev = 0,000, 633,000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333648;  // std dev = 2,56e-07, 711,000 (wgt'ed) examples reached here.  /* #neg=711 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06842697784420265;  // std dev = 1,76e-07, 754,000 (wgt'ed) examples reached here.  /* #neg=754 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202512;  // std dev = 2,55e-07, 712,000 (wgt'ed) examples reached here.  /* #neg=712 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.12944490767857392;  // std dev = 0,588, 391,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 162
Target train neg examples: 9107

Target test facts examples: 35095
Target test pos	 examples: 536
Target test neg examples: 18889

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(B).;false;true
9;false;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.09003299307052584;  // std dev = 8,587, 414,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=96 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.07704783217132327;  // std dev = 8,596, 417,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=96 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.060345367893539004;  // std dev = 8,632, 429,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=96 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.043880552371208845;  // std dev = 8,677, 445,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=96 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.05482475003315849;  // std dev = 8,581, 412,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=96 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04552872565299346;  // std dev = 8,587, 414,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=96 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.027332157435791662;  // std dev = 8,649, 435,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=96 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.016629448453917013;  // std dev = 8,685, 448,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=96 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.011613763436187351;  // std dev = 8,698, 453,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=96 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.012591519030443277;  // std dev = 8,682, 447,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=96 */


Results
   AUC ROC   = 0.725746
   AUC PR    = 0.48982
   CLL	      = -0.247745
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.451493
   F1        = 0.622108


Total learning time: 2.0 seconds
Total inference time: 4.112 seconds
AUC ROC: 0.725746


Results scoring model
   AUC ROC   = 0.703704
   AUC PR    = 0.43503
   CLL	      = -0.241787
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.407407
   F1        = 0.578947


Total scoring time: 2.496 seconds
Parameter learned model CLL: -0.241787


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.587, 318, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.596, 321, 96], 'true': [1.19e-07, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.632, 333, 96], 'true': [2.86e-07, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.677, 349, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.581, 316, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.587, 318, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.649, 339, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.685, 352, 96], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.698, 357, 96], 'true': [5.16e-08, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.682, 351, 96], 'true': [4.71e-08, 0, 66]}]]
[{'': [-9.689219124001365e-16, 0.1781138416299107]}, {'': [2.153159805333637e-16, 0.17721650018114557]}, {'': [1.2380668880668413e-15, 0.173700425448676]}, {'': [-1.0765799026668185e-16, 0.1691907587425811]}, {'': [-2.8260222445003984e-16, 0.17871618437175774]}, {'': [-4.0371746350005693e-17, 0.17811384162991176]}, {'': [-6.728624391667616e-17, 0.17198573127229086]}, {'': [-6.7286243916676156e-18, 0.16836734693877514]}, {'': [4.0371746350005693e-17, 0.16701021885005138]}, {'': [3.364312195833808e-17, 0.16864105220485204]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5599033210644246;  // std dev = 0,457, 57,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.04185106490048771;  // std dev = 2,324, 60,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.07999539479739488;  // std dev = 2,373, 97,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.1098045642385838;  // std dev = 5,333, 151,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=38 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3909654575734314;  // std dev = 0,487, 65,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=40 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.08391739750466444;  // std dev = 1,496, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.05207830908265638;  // std dev = 2,347, 69,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.15288007360931777;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.07881797393458896;  // std dev = 2,383, 112,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.05190013307505914;  // std dev = 5,487, 183,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=38 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3157694799624116;  // std dev = 0,487, 65,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=40 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.0860549413456891;  // std dev = 1,488, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.03585782905331819;  // std dev = 2,333, 62,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then return 0.029949637219587117;  // std dev = 0,385, 256,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=47 */
%   | | else return -0.11876160532546785;  // std dev = 0,030, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( title(F, B), venue(F, E) )
%   | | | then return 0.07816437659957058;  // std dev = 7,512, 332,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=87 */
%   | | | else return -0.03676150779343996;  // std dev = 2,193, 43,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.30899340168214934;  // std dev = 0,210, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1119214216642373;  // std dev = 0,063, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | then return -0.19762448425894316;  // std dev = 0,345, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return -0.11647793291782128;  // std dev = 0,067, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.18819298998293263;  // std dev = 0,489, 71,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=40 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.13937582350645333;  // std dev = 1,380, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.03085610435750327;  // std dev = 2,323, 58,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.011861120233198508;  // std dev = 1,482, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return -0.07727924361063486;  // std dev = 2,382, 105,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.08959767192376186;  // std dev = 5,273, 143,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=38 */
%   | | | else return -0.0910504069934484;  // std dev = 0,000602, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.1461793695714367;  // std dev = 0,486, 71,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=40 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.1854137906714452;  // std dev = 1,310, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.025071706994031478;  // std dev = 2,320, 57,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return 0.10245840501131002;  // std dev = 1,381, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.06258060418885009;  // std dev = 2,385, 88,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=6 */
%   | | else if ( haswordtitle(A, J), haswordtitle(B, J) )
%   | | | then return 0.03720952400723556;  // std dev = 5,414, 167,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=38 */
%   | | | else return -0.08384841699070565;  // std dev = 0,000720, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1494556747675471;  // std dev = 0,481, 66,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.019452441574100587;  // std dev = 2,753, 80,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=9 */
%   | | | else return 0.04344467697449904;  // std dev = 5,978, 208,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=47 */
%   | else return -0.09395853040433964;  // std dev = 0,102, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2297788964931969;  // std dev = 0,442, 55,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.049423923333348344;  // std dev = 2,814, 111,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=9 */
%   | | | else return 0.01297901188385055;  // std dev = 6,052, 240,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=47 */
%   | else return -0.08636933378354181;  // std dev = 0,094, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.07597316670522451;  // std dev = 0,474, 64,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.2073142759541736;  // std dev = 1,219, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0014501033487890767;  // std dev = 2,279, 45,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.03532785051969017;  // std dev = 0,264, 111,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=9 */
%   | | else if ( haswordtitle(A, I), haswordtitle(B, I) )
%   | | | then return 0.012962217642203682;  // std dev = 5,447, 174,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=38 */
%   | | | else return -0.06567193239063111;  // std dev = 0,000518, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.03266497261506264;  // std dev = 0,486, 66,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.02031233668316222;  // std dev = 1,531, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.06466469339978585;  // std dev = 2,438, 116,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0019884332804520704;  // std dev = 2,678, 57,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | else return 0.051106643416835754;  // std dev = 5,304, 147,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=38 */
%   | | else return -0.06908291724035705;  // std dev = 0,050, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.876795
   AUC PR    = 0.556235
   CLL	      = -0.238638
   Precision = 0.196409 at threshold = 0.5
   Recall    = 0.652985
   F1        = 0.301984


Total learning time: 16.919 seconds
Total inference time: 40.815 seconds
AUC ROC: 0.876795


Results scoring model
   AUC ROC   = 0.867771
   AUC PR    = 0.505499
   CLL	      = -0.23907
   Precision = 0.129584 at threshold = 0.5
   Recall    = 0.654321
   F1        = 0.216327


Total scoring time: 5.199 seconds
Refined model CLL: -0.23907


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.876795
   AUC PR    = 0.556235
   CLL	      = -0.238638
   Precision = 0.196409 at threshold = 0.5
   Recall    = 0.652985
   F1        = 0.301984


Total learning time: 26.613999999999997 seconds
Total inference time: 40.815 seconds
AUC ROC: 0.876795
Total revision time: 26.613999999999997
Best scored revision CLL: -0.23907


Dataset: 10_rec_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:37:58
{'AUC ROC': 0.876795, 'F1': 0.301984, 'Precision': [0.196409, 0.5], 'Recall': 0.652985, 'AUC PR': 0.556235, 'Inference time': 40.815, 'CLL': -0.238638, 'Learning time': 26.613999999999997, 'parameter': {'AUC ROC': 0.725746, 'F1': 0.622108, 'Precision': [1.0, 0.5], 'Recall': 0.451493, 'AUC PR': 0.48982, 'Inference time': 4.112, 'CLL': -0.247745, 'Learning time': 2.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5405018762759836;  // std dev = 0,466, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | else return 0.13548226843284333;  // std dev = 0,448, 375,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=104 */
%   else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D), haswordvenue(F, C) )
%   | | then if ( title(G, A), venue(G, F) )
%   | | | then return 0.5047461520882943;  // std dev = 3,513, 62,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   | | | else return 0.471247392783084;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.22338414491983613;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.001557808701297169;  // std dev = 2,748, 56,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), title(K, A) )
%   | | | then return 0.17417685632034477;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.07915647701298856;  // std dev = 2,349, 75,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=6 */
%   | | else return 0.2563024601850783;  // std dev = 0,493, 207,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=86 */
%   else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.08166171880036716;  // std dev = 1,099, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4158501790177002;  // std dev = 0,441, 77,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=56 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.2567058220504563;  // std dev = 1,282, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.08760650374478933;  // std dev = 2,377, 95,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=6 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.02430840683573267;  // std dev = 2,711, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return 0.1979797053038871;  // std dev = 7,216, 218,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=86 */
%   else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3289689177244845;  // std dev = 0,438, 79,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.1071650906360084;  // std dev = 1,382, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.06552397038054365;  // std dev = 2,364, 80,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0426486345452349;  // std dev = 2,814, 75,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */
%   | | | else return 0.193985947293055;  // std dev = 7,040, 203,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=86 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.08721821454692008;  // std dev = 1,004, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21169967670184672;  // std dev = 0,454, 80,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=56 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.12412483271629217;  // std dev = 1,339, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.0529777950826124;  // std dev = 2,360, 74,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=6 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return 0.023076615736208783;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | | else return 0.17078965054119838;  // std dev = 6,961, 197,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=86 */
%   else return -0.092691276189261;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.6336988372529273;  // std dev = 0,132, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.19952253615141866;  // std dev = 0,202, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | else if ( title(G, A), venue(G, D) )
%   | | then return -0.08172456104155425;  // std dev = 0,318, 38,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return -0.002233374550259656;  // std dev = 1,335, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.3856944399467649;  // std dev = 0,860, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( haswordtitle(A, J), haswordvenue(K, J) )
%   | then if ( haswordtitle(A, L), haswordtitle(B, L) )
%   | | then return -0.48011169757525607;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( haswordtitle(A, M), haswordauthor(N, M) )
%   | | then return 0.519888302424744;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4380143500951161;  // std dev = 0,641, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.053777495405169226;  // std dev = 0,999, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.08577564037066847;  // std dev = 0,385, 81,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=56 */
%   | else if ( author(F, D), title(F, B) )
%   | | then return -0.019791713714126743;  // std dev = 0,323, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.17392649792503326;  // std dev = 0,030, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.033301052812411656;  // std dev = 2,098, 77,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=6 */
%   else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | then if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), title(K, A) )
%   | | | then return 0.23823982473478633;  // std dev = 1,373, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.007879163856634721;  // std dev = 2,026, 41,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else return 0.09500624638745366;  // std dev = 0,406, 198,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=86 */
%   | else return -0.0832139373266285;  // std dev = 0,057, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.0668803169398782;  // std dev = 0,388, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.0374635502397431;  // std dev = 1,426, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.04640453936868798;  // std dev = 2,132, 92,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.010980460938338928;  // std dev = 2,574, 64,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=9 */
%   | | | else return 0.03553269333248509;  // std dev = 5,926, 221,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=86 */
%   else return -0.07236153635900668;  // std dev = 0,016, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( title(E, A), venue(E, D) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.4697993039164218;  // std dev = 1,667, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.19304002554009503;  // std dev = 3,248, 274,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=8 */
%   | | else if ( title(G, B), venue(G, D) )
%   | | | then return -0.08198349613616468;  // std dev = 1,645, 36,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.16338052986477467;  // std dev = 1,444, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | then return -0.3641560766729032;  // std dev = 0,094, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(B, J), haswordvenue(K, J) )
%   | | | then return -0.38617169694603765;  // std dev = 0,293, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.4269015579515513;  // std dev = 0,246, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0709236914048512;  // std dev = 0,052, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, C) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.020959835700462923;  // std dev = 3,049, 77,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=54 */
%   | | | else return 0.0014318501851411287;  // std dev = 2,404, 82,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=9 */
%   | | else return -0.09537990005285155;  // std dev = 0,295, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return 0.024413962460241252;  // std dev = 0,323, 265,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=95 */
%   else return -0.06892954367125434;  // std dev = 0,070, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.976574
   AUC PR    = 0.851019
   CLL	      = -0.223087
   Precision = 0.793677 at threshold = 0.5
   Recall    = 0.889925
   F1        = 0.83905


Total learning time: 69.428 seconds
Total inference time: 759.331 seconds
AUC ROC: 0.976574


Dataset: 10_rec_imdb_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:51:47
{'AUC ROC': 0.976574, 'F1': 0.83905, 'Precision': [0.793677, 0.5], 'Recall': 0.889925, 'AUC PR': 0.851019, 'Inference time': 759.331, 'CLL': -0.223087, 'Learning time': 69.428}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5098343283579401;  // std dev = 0,476, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return 0.088918165868743;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.07208362304002257;  // std dev = 2,362, 86,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=6 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0012260649004876617;  // std dev = 2,781, 64,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=9 */
%   | | | else return 0.25814893509951103;  // std dev = 7,183, 215,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=86 */
%   else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.795894
   AUC PR    = 0.086763
   CLL	      = -0.212179
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.053 seconds
Total inference time: 16.64 seconds
AUC ROC: 0.795894


Dataset: 10_rec_imdb_cora, Fold: 1, Type: Scratch (RDN), Time: 00:52:08
{'AUC ROC': 0.795894, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.086763, 'Inference time': 16.64, 'CLL': -0.212179, 'Learning time': 4.053}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 140
Target train neg examples: 4623

Target test facts examples: 33542
Target test pos	 examples: 558
Target test neg examples: 23373

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(B).;false;true
9;false;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.07264168872270178;  // std dev = 7,624, 345,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.047465628236643936;  // std dev = 7,702, 373,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.055533998218248296;  // std dev = 7,633, 348,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03648232537687769;  // std dev = 7,689, 368,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04174568333793182;  // std dev = 7,639, 350,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.032804882713118266;  // std dev = 7,653, 355,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.026257476952731194;  // std dev = 7,662, 358,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.031381275348673306;  // std dev = 7,618, 343,000 (wgt'ed) examples reached here.  /* #neg=269 #pos=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.04212213246825487;  // std dev = 7,542, 320,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.009883170037086431;  // std dev = 7,667, 360,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */


Results
   AUC ROC   = 0.716846
   AUC PR    = 0.467514
   CLL	      = -0.237287
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433692
   F1        = 0.605


Total learning time: 1.869 seconds
Total inference time: 4.031 seconds
AUC ROC: 0.716846


Results scoring model
   AUC ROC   = 0.735714
   AUC PR    = 0.511561
   CLL	      = -0.240213
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.640777


Total scoring time: 2.068 seconds
Parameter learned model CLL: -0.240213


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.624, 271, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.702, 299, 74], 'true': [1.19e-07, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.633, 274, 74], 'true': [2.86e-07, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.689, 294, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.639, 276, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.653, 281, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.662, 284, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.618, 269, 74], 'true': [0.0, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.542, 246, 74], 'true': [5.16e-08, 0, 66]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.667, 286, 74], 'true': [4.71e-08, 0, 66]}]]
[{'': [-9.689219124001365e-16, 0.16848561226633127]}, {'': [2.153159805333637e-16, 0.15903226502023085]}, {'': [1.2380668880668413e-15, 0.1674263442991126]}, {'': [-1.0765799026668185e-16, 0.16065099243856584]}, {'': [-2.8260222445003984e-16, 0.16672653061224368]}, {'': [-4.0371746350005693e-17, 0.16499900813330465]}, {'': [-6.728624391667616e-17, 0.16397740395118496]}, {'': [-6.7286243916676156e-18, 0.16919820822956186]}, {'': [4.0371746350005693e-17, 0.17777343750000157]}, {'': [3.364312195833808e-17, 0.16330246913580254]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995126;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.37814893509951125;  // std dev = 3,533, 50,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.14185106490048763;  // std dev = 7,88e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return 0.14020021715079395;  // std dev = 0,450, 156,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,19e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.6166592610814454;  // std dev = 0,907, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.29017403915732143;  // std dev = 3,666, 54,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else return 0.11181606272684935;  // std dev = 0,445, 162,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=44 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462837;  // std dev = 2,86e-07, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.11233081488396472;  // std dev = 1,586, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.32958841363621016;  // std dev = 3,310, 45,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.11231637819360621;  // std dev = 7,45e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else return 0.11409601178749423;  // std dev = 0,454, 152,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.12179846196772527;  // std dev = 1,547, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.3137803071943952;  // std dev = 3,131, 41,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | else return -0.10159632948783624;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else return 0.12405310569813667;  // std dev = 0,465, 139,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601499;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.6106141159686918;  // std dev = 0,140, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1746643794651459;  // std dev = 3,436, 48,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | else return -0.09269127618926087;  // std dev = 6,58e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0.11584368655272373;  // std dev = 0,470, 134,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return -0.07358566970172159;  // std dev = 1,525, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16943103079803426;  // std dev = 3,256, 46,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | | else return -0.08518475138839682;  // std dev = 5,96e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0.08862195963046228;  // std dev = 0,467, 137,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253567;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.020903391894822137;  // std dev = 1,414, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.16032077737204706;  // std dev = 3,150, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else return -0.0787767547310916;  // std dev = 5,67e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0.06332147163993955;  // std dev = 0,463, 141,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527725;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), title(F, A) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.47601572508967216;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2231051294731788;  // std dev = 1,086, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( author(H, E), title(H, B) )
%   | | | then return -0.12087375771044506;  // std dev = 1,304, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return -0.042252968437629525;  // std dev = 3,425, 135,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=24 */
%   | else return 0.011138042855566813;  // std dev = 0,398, 197,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=44 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367066;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.18184875756766672;  // std dev = 0,822, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.002603922065329548;  // std dev = 3,627, 56,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
%   | | else return -0.06915419333485663;  // std dev = 0,031, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.07400589265481548;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0.06301809805946237;  // std dev = 0,469, 135,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801095;  // std dev = 4,71e-08, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.019570673524829416;  // std dev = 1,400, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.09976794608934318;  // std dev = 3,221, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | else return -0.06909151509758925;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.06508649028438704;  // std dev = 0,024, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return 0.004953775515599044;  // std dev = 0,449, 157,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */


Results
   AUC ROC   = 0.850734
   AUC PR    = 0.523276
   CLL	      = -0.23647
   Precision = 0.179422 at threshold = 0.5
   Recall    = 0.634409
   F1        = 0.279731


Total learning time: 12.915 seconds
Total inference time: 14.633 seconds
AUC ROC: 0.850734


Results scoring model
   AUC ROC   = 0.90119
   AUC PR    = 0.582798
   CLL	      = -0.232839
   Precision = 0.213636 at threshold = 0.5
   Recall    = 0.671429
   F1        = 0.324138


Total scoring time: 3.768 seconds
Refined model CLL: -0.232839


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.850734
   AUC PR    = 0.523276
   CLL	      = -0.23647
   Precision = 0.179422 at threshold = 0.5
   Recall    = 0.634409
   F1        = 0.279731


Total learning time: 20.62 seconds
Total inference time: 14.633 seconds
AUC ROC: 0.850734
Total revision time: 20.62
Best scored revision CLL: -0.232839


Dataset: 10_rec_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:52:48
{'AUC ROC': 0.850734, 'F1': 0.279731, 'Precision': [0.179422, 0.5], 'Recall': 0.634409, 'AUC PR': 0.523276, 'Inference time': 14.633, 'CLL': -0.23647, 'Learning time': 20.62, 'parameter': {'AUC ROC': 0.716846, 'F1': 0.605, 'Precision': [1.0, 0.5], 'Recall': 0.433692, 'AUC PR': 0.467514, 'Inference time': 4.031, 'CLL': -0.237287, 'Learning time': 1.869}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5538011090125565;  // std dev = 0,460, 92,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=64 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.14185106490048763;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0.31875499570557375;  // std dev = 0,498, 165,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.7766411775182829;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22335882248171715;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.48395825068901593;  // std dev = 0,455, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.12544463852839136;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0.261819381134609;  // std dev = 0,497, 170,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=76 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( author(F, D), title(F, A) )
%   | | | then return 0.6152790677601079;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21413460955510377;  // std dev = 0,802, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3978893859665541;  // std dev = 0,451, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.1123163781936062;  // std dev = 7,74e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0.19892874611164973;  // std dev = 0,495, 178,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=76 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.49692627978301623;  // std dev = 0,115, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22176278549100806;  // std dev = 1,29e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.30614272315113567;  // std dev = 0,451, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else return -0.10159632948783626;  // std dev = 2,58e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.1015963294878363;  // std dev = 2,58e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return 0.124812963535065;  // std dev = 0,488, 195,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=76 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.4012815308284221;  // std dev = 0,196, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.4854519746479607;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.23615215001581033;  // std dev = 0,440, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.09269127618926092;  // std dev = 5,87e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return 0.13702803075032494;  // std dev = 0,495, 178,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then if ( author(F, D), title(F, B) )
%   | | | then return 0.2603925706990362;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.154263312604887;  // std dev = 0,639, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( author(G, D), title(G, B) )
%   | | | then return 0.01856871559739794;  // std dev = 0,665, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.12229777468345913;  // std dev = 4,320, 84,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   | else return -0.08518475138839682;  // std dev = 5,67e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then return -0.08518475138839679;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0.15019764275004124;  // std dev = 0,499, 162,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.2684351971334056;  // std dev = 0,191, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22750294312178806;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.12094197434295155;  // std dev = 0,454, 84,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=58 */
%   | else return -0.07877675473109158;  // std dev = 5,96e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.16459582833873518;  // std dev = 0,500, 147,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=76 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.2204276664902419;  // std dev = 0,168, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19000649598736008;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.041556623158788886;  // std dev = 0,783, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13307572056808026;  // std dev = 3,839, 76,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=56 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | then return -0.07324622576333707;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0.03614527245426463;  // std dev = 0,495, 178,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=76 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.06280119317553247;  // std dev = 0,428, 94,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=64 */
%   | else return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.06842697784420265;  // std dev = 5,00e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0.022762587768618215;  // std dev = 0,494, 180,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=76 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.17665803469579036;  // std dev = 0,144, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17119618857967175;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.019018135829697167;  // std dev = 0,462, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return -0.004932477467333808;  // std dev = 0,490, 190,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=76 */


Results
   AUC ROC   = 0.757346
   AUC PR    = 0.077344
   CLL	      = -0.339409
   Precision = 0.104703 at threshold = 0.5
   Recall    = 0.335125
   F1        = 0.159556


Total learning time: 23.46 seconds
Total inference time: 13.913 seconds
AUC ROC: 0.757346


Dataset: 10_rec_imdb_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:53:26
{'AUC ROC': 0.757346, 'F1': 0.159556, 'Precision': [0.104703, 0.5], 'Recall': 0.335125, 'AUC PR': 0.077344, 'Inference time': 13.913, 'CLL': -0.339409, 'Learning time': 23.46}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.5831489350995129;  // std dev = 0,447, 80,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=58 */
%   | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | then return -0.14185106490048763;  // std dev = 8,30e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0.3132387554587946;  // std dev = 0,498, 167,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=76 */


Results
   AUC ROC   = 0.759041
   AUC PR    = 0.07686
   CLL	      = -0.207031
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.353 seconds
Total inference time: 4.325 seconds
AUC ROC: 0.759041


Dataset: 10_rec_imdb_cora, Fold: 2, Type: Scratch (RDN), Time: 00:53:34
{'AUC ROC': 0.759041, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.07686, 'Inference time': 4.325, 'CLL': -0.207031, 'Learning time': 3.353}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 113
Target train neg examples: 3827

Target test facts examples: 33252
Target test pos	 examples: 585
Target test neg examples: 24169

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(B).;false;true
9;false;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.07808020657717626;  // std dev = 7,066, 291,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=64 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.06755403481575599;  // std dev = 7,069, 292,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=64 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.06562863243583188;  // std dev = 7,038, 283,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=64 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.05112800654800622;  // std dev = 7,062, 290,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=64 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.042294974929879756;  // std dev = 7,069, 292,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=64 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.026710622799154742;  // std dev = 7,111, 305,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=64 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.01666669149075017;  // std dev = 7,138, 314,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=64 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.025784550595264615;  // std dev = 7,086, 297,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=64 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.008832733914496297;  // std dev = 7,144, 316,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=64 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else return 0.012710069611903477;  // std dev = 7,120, 308,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=64 */


Results
   AUC ROC   = 0.721368
   AUC PR    = 0.476703
   CLL	      = -0.237037
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.442735
   F1        = 0.613744


Total learning time: 1.889 seconds
Total inference time: 4.693 seconds
AUC ROC: 0.721368


Results scoring model
   AUC ROC   = 0.716814
   AUC PR    = 0.474529
   CLL	      = -0.241172
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433628
   F1        = 0.604938


Total scoring time: 1.333 seconds
Parameter learned model CLL: -0.241172


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.066, 227, 64], 'true': [1.69e-07, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.069, 228, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.038, 219, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.062, 226, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.069, 228, 64], 'true': [2.98e-08, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.111, 241, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.138, 250, 64], 'true': [4.21e-08, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.086, 233, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.144, 252, 64], 'true': [0.0, 0, 49]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.12, 244, 64], 'true': [2.98e-08, 0, 49]}]]
[{'': [5.800348863347756e-16, 0.1715615073038824]}, {'': [-5.800348863347756e-16, 0.17113905047851327]}, {'': [0.0, 0.17500530659641017]}, {'': [-3.625218039592348e-16, 0.17198573127229705]}, {'': [1.8126090197961738e-17, 0.17113905047851408]}, {'': [-2.718913529694261e-17, 0.16580489115829208]}, {'': [3.6252180395923476e-17, 0.16227838857560273]}, {'': [-6.797283824235652e-17, 0.16905304447391775]}, {'': [-3.6252180395923476e-17, 0.16151257811248151]}, {'': [1.8126090197961738e-17, 0.16461460617304782]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5248156017661781;  // std dev = 0,471, 39,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08851773156715437;  // std dev = 1,946, 75,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=4 */
%   | | | else return 0.178903652080643;  // std dev = 4,806, 106,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109547;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.35940671735307317;  // std dev = 0,494, 45,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.08848778836811248;  // std dev = 1,920, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | | else return 0.07690633827581383;  // std dev = 5,061, 149,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=34 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3050900894003315;  // std dev = 0,492, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07200941674000247;  // std dev = 1,930, 59,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | | else return 0.11551233166365829;  // std dev = 4,908, 119,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | else return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.41751358415831025;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2527487978239642;  // std dev = 0,489, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return 0.017076552079637566;  // std dev = 5,174, 185,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
%   | | | else return 0.39564698986356844;  // std dev = 1,257, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716014944;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.29124408541478264;  // std dev = 0,457, 37,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=26 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return 0.004853658321378669;  // std dev = 5,211, 194,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=34 */
%   | | | else return 0.3424762887898232;  // std dev = 1,207, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E), haswordvenue(G, D) )
%   | | | then return 0.1357151182239495;  // std dev = 3,147, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | | else return -0.10418853142743446;  // std dev = 2,085, 81,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.08769794698679603;  // std dev = 1,935, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | | | else return 0.13636821205593977;  // std dev = 4,385, 88,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253554;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordvenue(E, D) )
%   | | then if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return 0.009371131802710694;  // std dev = 3,774, 102,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | | | else return 0.04641689271758976;  // std dev = 4,697, 121,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=30 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.3864954514821627;  // std dev = 0,194, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.06353412006846489;  // std dev = 1,485, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return -0.07877675473109175;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.1253653733699305;  // std dev = 0,455, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.0705587169928748;  // std dev = 1,968, 66,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=4 */
%   | | | else return 0.06387013888055808;  // std dev = 4,798, 124,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordvenue(E, D) )
%   | | then if ( title(F, A), venue(F, E) )
%   | | | then return 0.01341653772137834;  // std dev = 5,759, 204,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=56 */
%   | | | else return 0.22643390475992492;  // std dev = 1,440, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordtitle(A, G), haswordvenue(H, G) )
%   | | | then return 0.07477562035813037;  // std dev = 0,979, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2721880834280812;  // std dev = 0,815, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.0684269778442027;  // std dev = 1,39e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.134007030008011;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, D) )
%   | | | then return -0.02459084027953963;  // std dev = 3,891, 107,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   | | | else return -0.3054740318728699;  // std dev = 0,194, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.06422233056744542;  // std dev = 1,898, 33,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | | else return 0.11268742648338637;  // std dev = 4,243, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */


Results
   AUC ROC   = 0.866148
   AUC PR    = 0.524355
   CLL	      = -0.26807
   Precision = 0.166959 at threshold = 0.5
   Recall    = 0.651282
   F1        = 0.265783


Total learning time: 15.798 seconds
Total inference time: 65.176 seconds
AUC ROC: 0.866148


Results scoring model
   AUC ROC   = 0.909208
   AUC PR    = 0.564974
   CLL	      = -0.226411
   Precision = 0.227964 at threshold = 0.5
   Recall    = 0.663717
   F1        = 0.339367


Total scoring time: 4.34 seconds
Refined model CLL: -0.226411


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.866148
   AUC PR    = 0.524355
   CLL	      = -0.26807
   Precision = 0.166959 at threshold = 0.5
   Recall    = 0.651282
   F1        = 0.265783


Total learning time: 23.36 seconds
Total inference time: 65.176 seconds
AUC ROC: 0.866148
Total revision time: 23.36
Best scored revision CLL: -0.226411


Dataset: 10_rec_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 00:55:08
{'AUC ROC': 0.866148, 'F1': 0.265783, 'Precision': [0.166959, 0.5], 'Recall': 0.651282, 'AUC PR': 0.524355, 'Inference time': 65.176, 'CLL': -0.26807, 'Learning time': 23.36, 'parameter': {'AUC ROC': 0.721368, 'F1': 0.613744, 'Precision': [1.0, 0.5], 'Recall': 0.442735, 'AUC PR': 0.476703, 'Inference time': 4.693, 'CLL': -0.237037, 'Learning time': 1.889}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5194392576801578;  // std dev = 0,473, 62,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07288554765910842;  // std dev = 1,930, 58,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.030739953789376637;  // std dev = 1,886, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return 0.40515748210806035;  // std dev = 5,384, 117,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=64 */
%   else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.4133144428231879;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.05320819354583706;  // std dev = 1,918, 50,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.040589171606706304;  // std dev = 1,900, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return 0.286212683210637;  // std dev = 5,742, 132,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=64 */
%   else return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.36546270990824375;  // std dev = 0,473, 62,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.042077191651758016;  // std dev = 1,913, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.02812484865029219;  // std dev = 1,892, 38,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | | else return 0.32330215346448504;  // std dev = 5,237, 112,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=64 */
%   else return -0.11231637819360625;  // std dev = 5,27e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.329774941459635;  // std dev = 0,455, 58,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.05806935334221634;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03260931059486175;  // std dev = 1,900, 41,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return 0.24334895287429564;  // std dev = 5,328, 115,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=64 */
%   else return -0.1015963294878362;  // std dev = 4,59e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.26219469508218746;  // std dev = 0,449, 57,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.05090150159930443;  // std dev = 1,933, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.01841427344178109;  // std dev = 1,889, 37,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return 0.11347560772290528;  // std dev = 5,762, 133,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=64 */
%   else return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.14959990526440406;  // std dev = 0,469, 61,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordvenue(E, C) )
%   | | then if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.04376451994921592;  // std dev = 1,927, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
%   | | | else return 0.03148867841149282;  // std dev = 6,016, 169,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=62 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.04194919678247408;  // std dev = 1,024, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.36217701568651944;  // std dev = 0,843, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D), haswordvenue(F, C) )
%   | | then return 0.14209348608284578;  // std dev = 0,457, 57,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return -0.22632756654873323;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.048156822206634003;  // std dev = 1,937, 73,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=4 */
%   | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | then if ( title(J, B), venue(J, I) )
%   | | | then return 0.04804394973629359;  // std dev = 5,365, 139,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=52 */
%   | | | else return 0.44929908784379874;  // std dev = 1,303, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.5560141511405859;  // std dev = 0,079, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( title(E, A), venue(E, D) )
%   | | then if ( samebib(E, F), title(F, B) )
%   | | | then return 0.53518164234228;  // std dev = 1,326, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | | else return -0.27903152865746594;  // std dev = 2,128, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.13343242412331344;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.3741791242413265;  // std dev = 0,982, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | then return -0.05216716563910432;  // std dev = 0,713, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.4308977749463631;  // std dev = 0,113, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07324622576333704;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07415563946170467;  // std dev = 0,360, 56,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return -0.1444979696837616;  // std dev = 0,153, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.03562058643991229;  // std dev = 1,721, 54,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.036045067519161554;  // std dev = 4,820, 149,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=64 */
%   | | | else return 0.14799531768119686;  // std dev = 0,529, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return -0.07363443808310592;  // std dev = 0,075, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( haswordtitle(B, C) )
%   | | then return -0.03959913375365657;  // std dev = 0,397, 67,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
%   | | else return -0.03282714898324981;  // std dev = 0,204, 76,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=4 */
%   else if ( haswordtitle(A, F), haswordtitle(B, F) )
%   | then if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.12740820857072938;  // std dev = 0,110, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.022728198520815666;  // std dev = 1,719, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | else if ( haswordvenue(J, F) )
%   | | | then return 0.05239363284697611;  // std dev = 4,242, 110,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=58 */
%   | | | else return 0.30713936567726574;  // std dev = 0,112, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 0.952084
   AUC PR    = 0.53692
   CLL	      = -0.306553
   Precision = 0.190242 at threshold = 0.5
   Recall    = 0.926496
   F1        = 0.315667


Total learning time: 43.049 seconds
Total inference time: 370.996 seconds
AUC ROC: 0.952084


Dataset: 10_rec_imdb_cora, Fold: 3, Type: Scratch (RDN-B), Time: 01:02:03
{'AUC ROC': 0.952084, 'F1': 0.315667, 'Precision': [0.190242, 0.5], 'Recall': 0.926496, 'AUC PR': 0.53692, 'Inference time': 370.996, 'CLL': -0.306553, 'Learning time': 43.049}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6036034805540578;  // std dev = 0,436, 55,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=41 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0716756263039965;  // std dev = 1,929, 57,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.030739953789376637;  // std dev = 1,886, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return 0.37847413835154586;  // std dev = 5,541, 123,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=64 */
%   else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */


Results
   AUC ROC   = 0.779265
   AUC PR    = 0.071286
   CLL	      = -0.215055
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.575 seconds
Total inference time: 13.384 seconds
AUC ROC: 0.779265


Dataset: 10_rec_imdb_cora, Fold: 3, Type: Scratch (RDN), Time: 01:02:20
{'AUC ROC': 0.779265, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.071286, 'Inference time': 13.384, 'CLL': -0.215055, 'Learning time': 3.575}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 129
Target train neg examples: 4745

Target test facts examples: 34429
Target test pos	 examples: 569
Target test neg examples: 23251

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(B).;false;true
9;false;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.09457066033913028;  // std dev = 7,517, 313,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=74 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.07968099414324883;  // std dev = 7,532, 317,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=74 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.06902485777290657;  // std dev = 7,532, 317,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=74 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.03791707590276141;  // std dev = 7,636, 349,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=74 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.03058992414753933;  // std dev = 7,645, 352,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=74 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.03736731245273731;  // std dev = 7,590, 334,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=74 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.02906399971974208;  // std dev = 7,603, 338,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=74 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.03759304470314705;  // std dev = 7,539, 319,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=74 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.02527318710968017;  // std dev = 7,570, 328,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=74 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else return 0.04061705414853523;  // std dev = 7,474, 302,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=74 */


Results
   AUC ROC   = 0.72232
   AUC PR    = 0.478862
   CLL	      = -0.253435
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.44464
   F1        = 0.615572


Total learning time: 1.752 seconds
Total inference time: 4.793 seconds
AUC ROC: 0.72232


Results scoring model
   AUC ROC   = 0.713178
   AUC PR    = 0.464756
   CLL	      = -0.255889
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.426357
   F1        = 0.597826


Total scoring time: 1.861 seconds
Parameter learned model CLL: -0.255889


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.517, 239, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.532, 243, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.532, 243, 74], 'true': [1.03e-07, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.636, 275, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.645, 278, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.59, 260, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.603, 264, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.539, 245, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.57, 254, 74], 'true': [0.0, 0, 55]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.474, 228, 74], 'true': [5.16e-08, 0, 55]}]]
[{'': [-1.291895883200182e-16, 0.18052649307434038]}, {'': [-3.2297397080004555e-16, 0.17894495914975603]}, {'': [1.9378438248002731e-16, 0.1789449591497579]}, {'': [-3.2297397080004555e-16, 0.16707580397533858]}, {'': [-9.689219124001366e-17, 0.16603176652892312]}, {'': [-3.229739708000455e-17, 0.1724694323926974]}, {'': [-8.074349270001138e-18, 0.17100241588179466]}, {'': [-4.0371746350005693e-17, 0.17816255736480374]}, {'': [-1.6148698540002276e-17, 0.174709994051162]}, {'': [4.844609562000683e-17, 0.18499188632077507]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995124;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.6359267128772901;  // std dev = 0,416, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08062657510456937;  // std dev = 1,678, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06868033319317068;  // std dev = 1,667, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | | else return 0.1202848574296099;  // std dev = 0,440, 206,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=54 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3454053976297235;  // std dev = 0,493, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07571314682583842;  // std dev = 1,682, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.07600111585086669;  // std dev = 0,231, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | | else return 0.09286680761115747;  // std dev = 0,433, 216,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=54 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462838;  // std dev = 1,03e-07, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.39395349687897036;  // std dev = 0,458, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.11734126266887798;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06383216133538801;  // std dev = 1,678, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.04694064293738638;  // std dev = 1,664, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else return 0.09618207594617574;  // std dev = 0,442, 203,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3823885882076821;  // std dev = 0,416, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.1057229679475367;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.04843187423775883;  // std dev = 1,670, 43,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.04871545688331533;  // std dev = 0,252, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | else return 0.09028992847924425;  // std dev = 0,446, 197,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=54 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.3207118471601496;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.385579871685235;  // std dev = 0,331, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return -0.04493180436206034;  // std dev = 0,249, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.09613588179137647;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.04192388630209511;  // std dev = 1,669, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | | else return 0.07775380382127488;  // std dev = 0,447, 196,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=54 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.25517224256948967;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.11501924240869843;  // std dev = 0,458, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.09336195762709555;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.050477703321360354;  // std dev = 1,680, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.08810044257220725;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.034206760933322325;  // std dev = 1,666, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | else return 0.050487260944853986;  // std dev = 0,439, 207,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=54 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.054062189311528876;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.08127467424433467;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.028926026910309953;  // std dev = 1,664, 39,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return -0.08575365889410647;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.018859648597068592;  // std dev = 1,656, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | else return 0.025451942479090096;  // std dev = 0,430, 221,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=54 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return -0.08689227170286194;  // std dev = 0,499, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return -0.07926504637581673;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.029590958803513902;  // std dev = 1,667, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, B) )
%   | | | then return -0.07540882125309577;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.017500695347157404;  // std dev = 1,656, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | else return 0.03886112289252097;  // std dev = 0,440, 206,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=54 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.17299274791345465;  // std dev = 0,416, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return -0.0710918576332425;  // std dev = 0,014, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.036221044455029536;  // std dev = 1,674, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | else return 0.013931421832142118;  // std dev = 0,405, 263,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=57 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801079;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.05470159945946611;  // std dev = 0,458, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else return -0.05489386846355949;  // std dev = 0,202, 70,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.06580876749943311;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.025176605767642114;  // std dev = 1,667, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | | else return 0.029572126895572287;  // std dev = 0,440, 206,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=54 */


Results
   AUC ROC   = 0.869855
   AUC PR    = 0.537856
   CLL	      = -0.26377
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total learning time: 10.052 seconds
Total inference time: 31.083 seconds
AUC ROC: 0.869855


Results scoring model
   AUC ROC   = 0.828172
   AUC PR    = 0.521145
   CLL	      = -0.24124
   Precision = 0.348485 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.422018


Total scoring time: 2.471 seconds
Refined model CLL: -0.24124


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.869855
   AUC PR    = 0.537856
   CLL	      = -0.26377
   Precision = 0.157189 at threshold = 0.5
   Recall    = 0.680141
   F1        = 0.255361


Total learning time: 16.136 seconds
Total inference time: 31.083 seconds
AUC ROC: 0.869855
Total revision time: 16.136
Best scored revision CLL: -0.24124


Dataset: 10_rec_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 01:03:13
{'AUC ROC': 0.869855, 'F1': 0.255361, 'Precision': [0.157189, 0.5], 'Recall': 0.680141, 'AUC PR': 0.537856, 'Inference time': 31.083, 'CLL': -0.26377, 'Learning time': 16.136, 'parameter': {'AUC ROC': 0.72232, 'F1': 0.615572, 'Precision': [1.0, 0.5], 'Recall': 0.44464, 'AUC PR': 0.478862, 'Inference time': 4.793, 'CLL': -0.253435, 'Learning time': 1.752}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5803711573217337;  // std dev = 0,448, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | else return -0.09569721874664155;  // std dev = 0,210, 65,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07663367359613991;  // std dev = 0,247, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | else return 0.26916588425205135;  // std dev = 0,492, 236,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=97 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5367041083898194;  // std dev = 0,424, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07141807000178331;  // std dev = 0,240, 49,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.13059623981738208;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.033822046268995;  // std dev = 0,296, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | else return 0.2314110229462764;  // std dev = 0,492, 237,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=97 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.4768911548724028;  // std dev = 0,390, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else return -0.07938029758873955;  // std dev = 0,210, 65,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.05658413296868992;  // std dev = 0,252, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | else return 0.17529610742698057;  // std dev = 0,488, 249,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=97 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5513269547830381;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.10854658398255015;  // std dev = 8,33e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.05134737206477992;  // std dev = 0,249, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.04824577358377551;  // std dev = 0,249, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | else return 0.19566251810772672;  // std dev = 0,496, 220,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=97 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.15738137153290344;  // std dev = 0,437, 35,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.0984807462687815;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.041415624498329695;  // std dev = 0,257, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return -0.09727658876386547;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.03268044916156011;  // std dev = 0,273, 37,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.11430463898443788;  // std dev = 0,489, 244,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=97 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.21562197696236643;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.09045878079941351;  // std dev = 0,005, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.05397234161256738;  // std dev = 0,227, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return -0.0890626196305217;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0516845194816015;  // std dev = 0,235, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | else return 0.08099522939556363;  // std dev = 0,487, 250,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=97 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.09247404851525977;  // std dev = 0,424, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return -0.08293205797309137;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.03690944689327299;  // std dev = 0,249, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.03878340715344929;  // std dev = 0,247, 46,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | else return 0.06821188810437408;  // std dev = 0,488, 247,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=97 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.1464359505210764;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.07922086614224712;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.043100217380202;  // std dev = 0,235, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   else return 0.038105432514430625;  // std dev = 0,459, 295,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=100 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.042143686247909484;  // std dev = 0,424, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else return -0.044556703705653525;  // std dev = 0,219, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, B) )
%   | | then return -0.07958591782414855;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.013008060302855647;  // std dev = 0,287, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | else return 0.011033508119935054;  // std dev = 0,480, 270,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=97 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.13573582451811145;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | else return -0.042622590531999106;  // std dev = 0,230, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   else return 0.035998155592329224;  // std dev = 0,460, 290,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=100 */


Results
   AUC ROC   = 0.777074
   AUC PR    = 0.071206
   CLL	      = -0.365539
   Precision = 0.096254 at threshold = 0.5
   Recall    = 0.388401
   F1        = 0.154276


Total learning time: 10.958 seconds
Total inference time: 23.387 seconds
AUC ROC: 0.777074


Dataset: 10_rec_imdb_cora, Fold: 4, Type: Scratch (RDN-B), Time: 01:03:48
{'AUC ROC': 0.777074, 'F1': 0.154276, 'Precision': [0.096254, 0.5], 'Recall': 0.388401, 'AUC PR': 0.071206, 'Inference time': 23.387, 'CLL': -0.365539, 'Learning time': 10.958}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.6968586125188665;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06685106490048777;  // std dev = 0,263, 40,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06290369647943514;  // std dev = 0,270, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else return 0.24927796735757377;  // std dev = 0,488, 248,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=97 */


Results
   AUC ROC   = 0.776891
   AUC PR    = 0.071201
   CLL	      = -0.210014
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.607 seconds
Total inference time: 6.129 seconds
AUC ROC: 0.776891


Dataset: 10_rec_imdb_cora, Fold: 4, Type: Scratch (RDN), Time: 01:03:57
{'AUC ROC': 0.776891, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.071201, 'Inference time': 6.129, 'CLL': -0.210014, 'Learning time': 2.607}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 154
Target train neg examples: 5694

Target test facts examples: 33914
Target test pos	 examples: 544
Target test neg examples: 22302

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(B).;false;true
9;false;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.05962313657371402;  // std dev = 8,092, 407,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=82 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.07914718406851665;  // std dev = 7,954, 359,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=82 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,15e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.05965434072247567;  // std dev = 8,001, 374,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=82 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.045780111955759595;  // std dev = 8,031, 384,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=82 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.017786637913918796;  // std dev = 8,140, 427,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=82 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.030245753200853126;  // std dev = 8,064, 396,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=82 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.010766893237967189;  // std dev = 8,140, 427,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=82 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.04681788089009656;  // std dev = 7,948, 357,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=82 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,83e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.026957053231250618;  // std dev = 8,013, 378,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=82 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 4,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.020502558173542258;  // std dev = 8,025, 382,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=82 */


Results
   AUC ROC   = 0.716912
   AUC PR    = 0.468238
   CLL	      = -0.237831
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.433824
   F1        = 0.605128


Total learning time: 1.639 seconds
Total inference time: 4.453 seconds
AUC ROC: 0.716912


Results scoring model
   AUC ROC   = 0.733766
   AUC PR    = 0.504348
   CLL	      = -0.238405
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.467532
   F1        = 0.637168


Total scoring time: 2.209 seconds
Parameter learned model CLL: -0.238405


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.092, 325, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.954, 277, 82], 'true': [1.69e-07, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.001, 292, 82], 'true': [2.15e-07, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.031, 302, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.14, 345, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.064, 314, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.14, 345, 82], 'true': [0.0, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [7.948, 275, 82], 'true': [2.11e-08, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.013, 296, 82], 'true': [6.83e-08, 0, 72]}], ['sametitle(A, B)', {'': 'title(C, A), title(C, B)'}, {'false': [8.025, 300, 82], 'true': [4.94e-08, 0, 72]}]]
[{'': [-1.282924384011292e-15, 0.16088234761453513]}, {'': [3.9474596431116675e-16, 0.17624009745424032]}, {'': [6.41462192005646e-16, 0.1711801881666614]}, {'': [-9.868649107779169e-17, 0.1679416232638896]}, {'': [-3.4540271877227093e-16, 0.1551590805631602]}, {'': [-1.2335811384723961e-17, 0.16419242934394385]}, {'': [-8.635067969306773e-17, 0.1551590805631561]}, {'': [6.1679056923619804e-18, 0.17693351850544178]}, {'': [6.47630097698008e-17, 0.16987206405195798]}, {'': [3.39234813079909e-17, 0.16858090512869636]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
1;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
2;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
3;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
4;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
5;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
6;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
7;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
8;;sametitle(A, B) :- title(C, A), title(C, B).;true;true
9;;sametitle(A, B) :- title(C, A), title(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.8581489350995128;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4518989350995114;  // std dev = 0,491, 64,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.10338952643894923;  // std dev = 1,698, 78,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=3 */
%   | | | else return 0.07058416826013318;  // std dev = 5,682, 193,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=41 */
%   | else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.719473412210954;  // std dev = 1,69e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.35264253155998343;  // std dev = 0,497, 68,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=38 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.1149480308076676;  // std dev = 1,701, 84,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=3 */
%   | | | else return 0.06028891192024581;  // std dev = 5,672, 202,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=41 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.5553664367462836;  // std dev = 2,15e-07, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return -0.26983526432286664;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.31478012029251706;  // std dev = 3,973, 65,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=38 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.09772396191042715;  // std dev = 1,698, 77,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=3 */
%   | | | else return 0.038207563403468654;  // std dev = 5,724, 217,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=41 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.4175135841583105;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.21006283717276125;  // std dev = 0,495, 70,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10264177526279777;  // std dev = 1,698, 78,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=3 */
%   | | | else return 0.040592150041319504;  // std dev = 5,686, 216,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=41 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.32071184716015;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11723390412215025;  // std dev = 0,493, 77,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.08954163000515031;  // std dev = 1,697, 74,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=3 */
%   | | | else return 0.028391766679826874;  // std dev = 5,716, 222,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=41 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.2551722425694895;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( haswordtitle(A, D), haswordauthor(F, D) )
%   | | then return 0.21469172918764987;  // std dev = 0,480, 61,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=38 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return -0.08316188330109676;  // std dev = 1,689, 61,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=3 */
%   | | | else return 0.00940848908241527;  // std dev = 5,766, 249,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=41 */
%   | else return -0.08914416093260169;  // std dev = 0,098, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.20975771563253573;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.04009270399660742;  // std dev = 4,317, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return -0.08513529528647303;  // std dev = 1,700, 83,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.07223394836441724;  // std dev = 1,687, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | | | else return 0.07203164915857495;  // std dev = 5,350, 154,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=38 */
%   | else return -0.07964897650275427;  // std dev = 0,018, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.17709649774527722;  // std dev = 2,11e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11354708276678727;  // std dev = 0,488, 65,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.07379108701153071;  // std dev = 1,698, 78,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=3 */
%   | | | else return 0.04333646292532117;  // std dev = 5,604, 197,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=41 */
%   | else return -0.07346032618794687;  // std dev = 0,012, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.1527438580936706;  // std dev = 6,83e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.11146298578762052;  // std dev = 0,485, 62,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return -0.06586241362327135;  // std dev = 1,698, 76,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=3 */
%   | | | else return 0.029109388315619312;  // std dev = 5,635, 204,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=41 */
%   | else return -0.06938211529700715;  // std dev = 0,015, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, A), title(C, B) )
%   then return 0.13400703000801092;  // std dev = 4,94e-08, 72,000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return -0.003114675480448795;  // std dev = 0,492, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.16247037245845652;  // std dev = 1,206, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.08516745254740396;  // std dev = 0,997, 98,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=1 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.08085075787197255;  // std dev = 1,695, 71,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=3 */
%   | | | else return 0.08505143423596398;  // std dev = 5,225, 135,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=38 */
%   | | else return -0.06428106243869401;  // std dev = 0,008, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */


Results
   AUC ROC   = 0.865864
   AUC PR    = 0.528084
   CLL	      = -0.213781
   Precision = 0.186885 at threshold = 0.5
   Recall    = 0.628676
   F1        = 0.288121


Total learning time: 16.841 seconds
Total inference time: 25.455 seconds
AUC ROC: 0.865864


Results scoring model
   AUC ROC   = 0.904632
   AUC PR    = 0.576061
   CLL	      = -0.216525
   Precision = 0.184874 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.293725


Total scoring time: 4.021 seconds
Refined model CLL: -0.216525


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.865864
   AUC PR    = 0.528084
   CLL	      = -0.213781
   Precision = 0.186885 at threshold = 0.5
   Recall    = 0.628676
   F1        = 0.288121


Total learning time: 24.71 seconds
Total inference time: 25.455 seconds
AUC ROC: 0.865864
Total revision time: 24.71
Best scored revision CLL: -0.216525


Dataset: 10_rec_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 01:04:52
{'AUC ROC': 0.865864, 'F1': 0.288121, 'Precision': [0.186885, 0.5], 'Recall': 0.628676, 'AUC PR': 0.528084, 'Inference time': 25.455, 'CLL': -0.213781, 'Learning time': 24.71, 'parameter': {'AUC ROC': 0.716912, 'F1': 0.605128, 'Precision': [1.0, 0.5], 'Recall': 0.433824, 'AUC PR': 0.468238, 'Inference time': 4.453, 'CLL': -0.237831, 'Learning time': 1.639}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5654660082702446;  // std dev = 0,455, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.10289002593944874;  // std dev = 0,194, 77,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.1007551744895288;  // std dev = 1,696, 73,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=3 */
%   | | | else return 0.3368723393548287;  // std dev = 6,849, 188,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=90 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5087883587293028;  // std dev = 0,442, 79,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, A) )
%   | | | then return -0.12978172999377585;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08432718453923044;  // std dev = 1,692, 66,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.058594455962103054;  // std dev = 1,669, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | | | else return 0.3204851525560589;  // std dev = 6,651, 177,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=90 */
%   else return -0.12544463852839144;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.007204320956519831;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3366616852976058;  // std dev = 0,473, 86,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=57 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.12353744970504459;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08695208385138602;  // std dev = 1,700, 82,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=3 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.07888491268498239;  // std dev = 1,696, 72,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=3 */
%   | | | else return 0.22691447625173589;  // std dev = 6,915, 192,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=90 */
%   else return -0.11231637819360636;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.13488195001145328;  // std dev = 0,932, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.31951085674898383;  // std dev = 0,445, 79,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=57 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return -0.11077126671909497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.057822832607199254;  // std dev = 1,682, 53,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return -0.06698088945087387;  // std dev = 1,692, 66,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   | | | else return 0.14071114805821242;  // std dev = 7,184, 211,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=90 */
%   else return -0.10159632948783634;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return -0.033935284994729455;  // std dev = 0,900, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.15440920681099765;  // std dev = 0,477, 90,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=57 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(H, C) )
%   | | | then return -0.07139130720743622;  // std dev = 1,702, 87,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=3 */
%   | | | else return -0.10592266603427931;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.06856170157520569;  // std dev = 1,696, 76,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=3 */
%   | | | else return 0.15828935642257919;  // std dev = 6,882, 190,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=90 */
%   else return -0.09269127618926107;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return -0.03631717374996527;  // std dev = 0,912, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1655506702485863;  // std dev = 0,464, 83,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=57 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, B) )
%   | | | then return 0.40065058733794867;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.08648983097072835;  // std dev = 0,994, 78,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=1 */
%   | | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | | then return -0.057646131654726526;  // std dev = 1,693, 68,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=3 */
%   | | | else return 0.16375962465848978;  // std dev = 6,612, 175,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=90 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10759108368579476;  // std dev = 0,475, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.05767810946866418;  // std dev = 0,178, 85,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.045185806625937124;  // std dev = 1,686, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | | | else return 0.03587294914274688;  // std dev = 7,197, 212,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=90 */
%   else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.07649514929016463;  // std dev = 0,467, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then return -0.05197374725529149;  // std dev = 0,184, 80,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.037564509046654926;  // std dev = 1,682, 55,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   | | | else return 0.05733334375818064;  // std dev = 7,006, 198,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=90 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.12419969685835568;  // std dev = 0,437, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, C) )
%   | | | then return -0.050198562742100064;  // std dev = 1,653, 86,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=3 */
%   | | | else return -0.08053150052813635;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.0456155979308906;  // std dev = 1,693, 68,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=3 */
%   | | | else return 0.04816639875761339;  // std dev = 6,977, 196,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=90 */
%   else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.05711823203228935;  // std dev = 0,459, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then return -0.04546827341121815;  // std dev = 0,197, 74,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=3 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.04103973747282954;  // std dev = 1,649, 75,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=3 */
%   | | | else return 0.0388130477575924;  // std dev = 6,961, 195,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=90 */
%   else return -0.06419184008202623;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */


Results
   AUC ROC   = 0.779138
   AUC PR    = 0.075595
   CLL	      = -0.347943
   Precision = 0.11058 at threshold = 0.5
   Recall    = 0.340074
   F1        = 0.166892


Total learning time: 23.359 seconds
Total inference time: 32.937 seconds
AUC ROC: 0.779138


Dataset: 10_rec_imdb_cora, Fold: 5, Type: Scratch (RDN-B), Time: 01:05:49
{'AUC ROC': 0.779138, 'F1': 0.166892, 'Precision': [0.11058, 0.5], 'Recall': 0.340074, 'AUC PR': 0.075595, 'Inference time': 32.937, 'CLL': -0.347943, 'Learning time': 23.359}


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5172398441904221;  // std dev = 0,474, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, C) )
%   | | | then return -0.10185106490048769;  // std dev = 1,697, 75,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.09639651944594226;  // std dev = 1,692, 66,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   | | | else return 0.29717332534341234;  // std dev = 7,105, 205,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=90 */
%   else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */


Results
   AUC ROC   = 0.783599
   AUC PR    = 0.073779
   CLL	      = -0.206039
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.44 seconds
Total inference time: 4.106 seconds
AUC ROC: 0.783599


Dataset: 10_rec_imdb_cora, Fold: 5, Type: Scratch (RDN), Time: 01:05:58
{'AUC ROC': 0.783599, 'F1': nan, 'Precision': [nan, 0.5], 'Recall': 0.0, 'AUC PR': 0.073779, 'Inference time': 4.106, 'CLL': -0.206039, 'Learning time': 4.44}


