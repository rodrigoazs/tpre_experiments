Starting experiment #5 for 54_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 698
Source train neg examples: 27996

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.5805369948010008;  // std dev = 0,448, 335,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=242 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.10227322848887843;  // std dev = 3,796, 379,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=15 */
%   | | | else return 0.1914822684328457;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.05988385178573388;  // std dev = 4,791, 305,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=25 */
%   | | | else return 0.2887346183966876;  // std dev = 15,035, 922,000 (wgt'ed) examples reached here.  /* #neg=525 #pos=397 */
%   else return -0.1418510649004879;  // std dev = 0,000, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.46828487512841627;  // std dev = 0,454, 362,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=251 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.09058439033253414;  // std dev = 3,796, 382,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=15 */
%   | | | else return 0.10347576150181864;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.032675774219695565;  // std dev = 4,738, 245,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=25 */
%   | | | else return 0.24567186148628836;  // std dev = 15,090, 931,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=397 */
%   else return -0.1254446385283911;  // std dev = 7,88e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.38789855609369367;  // std dev = 0,450, 355,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=251 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.08099382921427067;  // std dev = 3,797, 385,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=15 */
%   | | | else return 0.11244291144583862;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04198492635932261;  // std dev = 4,772, 281,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=25 */
%   | | | else return 0.23112386176978286;  // std dev = 14,761, 880,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=397 */
%   else return -0.11231637819360621;  // std dev = 9,77e-08, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.32964904640221376;  // std dev = 0,431, 341,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=251 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.07290473061536248;  // std dev = 3,797, 387,000 (wgt'ed) examples reached here.  /* #neg=372 #pos=15 */
%   | | | else return 0.039102082006186596;  // std dev = 2,760, 42,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.04150265687486326;  // std dev = 4,783, 295,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=25 */
%   | | | else return 0.1774271399525417;  // std dev = 14,915, 903,000 (wgt'ed) examples reached here.  /* #neg=506 #pos=397 */
%   else return -0.1015963294878364;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.4393054286592389;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.31951129745310014;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( author(G, D), title(G, A) )
%   | | | then return -0.15825982711136669;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.23348236825620985;  // std dev = 8,123, 331,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=240 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.0670407502820184;  // std dev = 3,799, 399,000 (wgt'ed) examples reached here.  /* #neg=384 #pos=15 */
%   | | | else return 0.08881840011677536;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(B, K), haswordauthor(L, K) )
%   | | | then return -0.03553394223914895;  // std dev = 4,780, 290,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=25 */
%   | | | else return 0.1491144536299458;  // std dev = 14,816, 888,000 (wgt'ed) examples reached here.  /* #neg=491 #pos=397 */
%   else return -0.09269127618926076;  // std dev = 8,02e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then if ( samebib(E, F), title(F, A) )
%   | | | then return 0.33552810890654894;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.25435287618510044;  // std dev = 2,58e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.1786883790549933;  // std dev = 0,444, 333,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=242 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return -0.057309552867021905;  // std dev = 3,792, 364,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=15 */
%   | | | else return 0.029830447181498566;  // std dev = 2,739, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | | then return -0.01995311205355776;  // std dev = 4,749, 255,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=25 */
%   | | | else return 0.10910246836552602;  // std dev = 14,922, 904,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=397 */
%   else return -0.0851847513883968;  // std dev = 6,32e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.10799537012191382;  // std dev = 0,451, 359,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=251 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.05659853442593611;  // std dev = 3,801, 406,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=15 */
%   | | | else return 0.13180884082988029;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else return 0.05071977789855481;  // std dev = 0,457, 1.206,000 (wgt'ed) examples reached here.  /* #neg=784 #pos=422 */
%   else return -0.07877675473109151;  // std dev = 8,43e-08, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.09586319897452629;  // std dev = 0,437, 358,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=251 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), title(G, B) )
%   | | | then return 0.004216547140607545;  // std dev = 2,139, 52,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
%   | | | else return -0.05244598860888312;  // std dev = 4,155, 382,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=20 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.03320387101465182;  // std dev = 4,775, 284,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=25 */
%   | | | else return 0.06334969452415994;  // std dev = 15,048, 924,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=397 */
%   else return -0.07324622576333711;  // std dev = 4,21e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.057361153618468906;  // std dev = 0,443, 368,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=251 */
%   | else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.04703014482732431;  // std dev = 3,795, 392,000 (wgt'ed) examples reached here.  /* #neg=377 #pos=15 */
%   | | | else return 0.05462904558757239;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.021213826988224365;  // std dev = 4,753, 259,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=25 */
%   | | | else return 0.05417735101229034;  // std dev = 14,973, 912,000 (wgt'ed) examples reached here.  /* #neg=515 #pos=397 */
%   else return -0.06842697784420265;  // std dev = 5,48e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then if ( haswordtitle(A, D) )
%   | | | then return 0.08708917507021409;  // std dev = 7,819, 333,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=245 */
%   | | | else return -0.06100202817012675;  // std dev = 3,785, 268,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=15 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.3453008067463128;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.36862896254769373;  // std dev = 2,254, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | then if ( haswordvenue(J, H) )
%   | | | then return -0.03968300740418791;  // std dev = 3,787, 358,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=15 */
%   | | | else return 0.18520311190510685;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else return 0.040842095610229494;  // std dev = 0,496, 913,000 (wgt'ed) examples reached here.  /* #neg=516 #pos=397 */
%   else return -0.06419184008202626;  // std dev = 3,94e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
0;true,false,true;haswordvenue(I, G).;false;false
0;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
0;true;haswordauthor(D, C).;true;true
0;true,true;author(E, D), title(E, B).;true;false
0;true,true,true;samebib(E, F), title(F, A).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;true,false,true;haswordvenue(G, E).;false;false
1;true;haswordauthor(D, C).;false;true
1;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
2;true,false,true;haswordvenue(G, E).;false;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;true,false,true;haswordvenue(G, E).;false;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;true
4;true,false,true;haswordvenue(J, H).;false;false
4;true,false,false;haswordtitle(B, K), haswordauthor(L, K).;false;false
4;true,true,false;author(G, D), title(G, A).;false;false
4;true;haswordauthor(D, C).;true;true
4;true,true;author(E, D), title(E, B).;true;true
4;true,true,true;samebib(E, F), title(F, A).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
5;true,false,true;haswordvenue(I, G).;false;false
5;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;true;haswordauthor(D, C).;true;true
5;true,true;author(E, D), title(E, B).;true;false
5;true,true,true;samebib(E, F), title(F, A).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false
6;true,false,true;haswordvenue(G, E).;false;false
6;true;haswordauthor(D, C).;false;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
7;true,false,true;author(G, F), title(G, B).;false;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;true,false,true;haswordvenue(G, E).;false;false
8;true;haswordauthor(D, C).;false;true
8;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
9;true,false,true;haswordvenue(J, H).;false;false
9;true,true,false;haswordauthor(G, C).;false;false
9;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
9;true,true;haswordvenue(F, D).;true;true
9;true,true,true;haswordtitle(A, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.39661047356105167;  // std dev = 0,499, 104,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.43908484071208886;  // std dev = 0,481, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3603464829534781;  // std dev = 0,481, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,66e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.24871189529782112;  // std dev = 0,489, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.2545558807040802;  // std dev = 0,471, 84,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.12089604124813251;  // std dev = 0,491, 94,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 3,49e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.17787559750216897;  // std dev = 0,465, 82,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109161;  // std dev = 4,94e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.046385660645347014;  // std dev = 4,758, 94,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1138846507426468;  // std dev = 0,468, 83,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 2,89e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.08605746932087865;  // std dev = 4,268, 83,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */


Results
   AUC ROC   = 0.871431
   AUC PR    = 0.103954
   CLL	      = -0.293991
   Precision = 0.103954 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.18833


Total learning time: 3.09 seconds
Total inference time: 5.754 seconds
AUC ROC: 0.871431


Results scoring model
   AUC ROC   = 0.857618
   AUC PR    = 0.056112
   CLL	      = -0.315274
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total scoring time: 2.686 seconds
Parameter learned model CLL: -0.315274


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [8.3e-08, 89, 0], 'true,true': [0.499, 48, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 77, 0], 'true,true': [0.481, 32, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [6.66e-08, 82, 0], 'true,true': [0.481, 32, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [3.65e-08, 100, 0], 'true,true': [0.489, 37, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [4.21e-08, 96, 0], 'true,true': [0.471, 28, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [3.49e-08, 89, 0], 'true,true': [0.491, 38, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [4.94e-08, 87, 0], 'true,true': [0.465, 26, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 95, 0], 'true,true,true': [4.758, 38, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [2.89e-08, 67, 0], 'true,true': [0.468, 27, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 78, 0], 'true,true,true': [4.268, 27, 56]}]]
[{'': [0.2485207100591714, 7.734137924355023e-17], 'true': [0.2485207100591714, nan]}, {'': [0.23140495867768535, -2.5953265510717945e-17], 'true': [0.23140495867768535, nan]}, {'': [0.2314049586776872, 5.415722071342227e-17], 'true': [0.2314049586776872, nan]}, {'': [0.23956526766100164, 1.3322676295501878e-17], 'true': [0.23956526766100164, nan]}, {'': [0.22222222222222202, 1.850371707708594e-17], 'true': [0.22222222222222202, nan]}, {'': [0.2408329560887285, 1.3721857607726653e-17], 'true': [0.2408329560887285, nan]}, {'': [0.21653777513384925, 2.807460522040626e-17], 'true': [0.21653777513384925, nan]}, {'': [0.24083295608872773, -8.18059070776431e-18], 'true': [0.24083295608872773, nan], 'true,true': [0.24083295608872773, nan]}, {'': [0.21948033096240382, 1.2427869678639812e-17], 'true': [0.21948033096240382, nan]}, {'': [0.21948033096240366, -9.25185853854297e-18], 'true': [0.21948033096240366, nan], 'true,true': [0.21948033096240366, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.14185106490048766;  // std dev = 7,15e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1296360425624631;  // std dev = 0,153, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.12544463852839138;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11189916785612865;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.11231637819360622;  // std dev = 6,23e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10125235940726805;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.10159632948783615;  // std dev = 5,67e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09240319851628372;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.09269127618926108;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08494020820803082;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.08518475138839682;  // std dev = 4,94e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07856672935660097;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07877675473109162;  // std dev = 4,94e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07306399885355037;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07324622576333707;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.068267447537313;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06842697784420265;  // std dev = 4,28e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06405106771735289;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06419184008202626;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078359
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.438 seconds
Total inference time: 3.23 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064599
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.538 seconds
Refined model CLL: -0.064599


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078359
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 10.752 seconds
Total inference time: 3.23 seconds
AUC ROC: 1.0
Total revision time: 10.752
Best scored revision CLL: -0.064599


Dataset: 54_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:55:39
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'parameter': {'AUC PR': 0.103954, 'AUC ROC': 0.871431, 'Inference time': 5.754, 'CLL': -0.293991, 'Precision': [0.103954, 0.5], 'F1': 0.18833, 'Learning time': 3.09, 'Recall': 1.0}, 'Inference time': 3.23, 'CLL': -0.078359, 'Precision': [0.735892, 0.5], 'F1': 0.847854, 'Learning time': 10.752, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8,16e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22751829855267267;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1900175797366686;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926085;  // std dev = 7,30e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16247682877816094;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5,67e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( female(A) )
%   | then return 0.22781137501185694;  // std dev = 0,101, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6,50e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( female(A) )
%   | then return 0.20054713792963735;  // std dev = 0,072, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.19691617772136844;  // std dev = 0,069, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18066973934241873;  // std dev = 0,013, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.20196922189639013;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5,96e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1554496168915019;  // std dev = 0,012, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17272093797734606;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13611616665458706;  // std dev = 0,010, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15047406568309976;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.992299
   AUC PR    = 0.64118
   CLL	      = -0.09417
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.902 seconds
Total inference time: 2.56 seconds
AUC ROC: 0.992299


Dataset: 54_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:55:45
{'AUC PR': 0.64118, 'AUC ROC': 0.992299, 'Inference time': 2.56, 'CLL': -0.09417, 'Precision': [0.735892, 0.5], 'F1': 0.847854, 'Learning time': 2.902, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 5,58e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.994647
   AUC PR    = 0.735892
   CLL	      = -0.169006
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.968 seconds
Total inference time: 1.315 seconds
AUC ROC: 0.994647


Dataset: 54_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:55:48
{'AUC PR': 0.735892, 'AUC ROC': 0.994647, 'Inference time': 1.315, 'CLL': -0.169006, 'Precision': [nan, 0.5], 'F1': nan, 'Learning time': 0.968, 'Recall': 0.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
0;true,false,true;haswordvenue(I, G).;false;false
0;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
0;true;haswordauthor(D, C).;true;true
0;true,true;author(E, D), title(E, B).;true;false
0;true,true,true;samebib(E, F), title(F, A).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;true,false,true;haswordvenue(G, E).;false;false
1;true;haswordauthor(D, C).;false;true
1;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
2;true,false,true;haswordvenue(G, E).;false;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;true,false,true;haswordvenue(G, E).;false;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;true
4;true,false,true;haswordvenue(J, H).;false;false
4;true,false,false;haswordtitle(B, K), haswordauthor(L, K).;false;false
4;true,true,false;author(G, D), title(G, A).;false;false
4;true;haswordauthor(D, C).;true;true
4;true,true;author(E, D), title(E, B).;true;true
4;true,true,true;samebib(E, F), title(F, A).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
5;true,false,true;haswordvenue(I, G).;false;false
5;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;true;haswordauthor(D, C).;true;true
5;true,true;author(E, D), title(E, B).;true;false
5;true,true,true;samebib(E, F), title(F, A).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false
6;true,false,true;haswordvenue(G, E).;false;false
6;true;haswordauthor(D, C).;false;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
7;true,false,true;author(G, F), title(G, B).;false;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;true,false,true;haswordvenue(G, E).;false;false
8;true;haswordauthor(D, C).;false;true
8;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
9;true,false,true;haswordvenue(J, H).;false;false
9;true,true,false;haswordauthor(G, C).;false;false
9;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
9;true,true;haswordvenue(F, D).;true;true
9;true,true,true;haswordtitle(A, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.5172398441904221;  // std dev = 0,474, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5079192497050757;  // std dev = 0,447, 80,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.33625254065540294;  // std dev = 0,476, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,83e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.27458928180152725;  // std dev = 0,471, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5,67e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.18535256871222075;  // std dev = 0,479, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.1391062760143841;  // std dev = 0,479, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,16e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.05180764445682537;  // std dev = 0,491, 98,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109162;  // std dev = 4,94e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.12948445083279458;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.05982843751548944;  // std dev = 0,479, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 2,98e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.06759938325046853;  // std dev = 4,397, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 0.86826
   AUC PR    = 0.102112
   CLL	      = -0.30302
   Precision = 0.102112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.185302


Total learning time: 1.248 seconds
Total inference time: 2.418 seconds
AUC ROC: 0.86826


Results scoring model
   AUC ROC   = 0.868098
   AUC PR    = 0.060354
   CLL	      = -0.300965
   Precision = 0.060354 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.113837


Total scoring time: 1.716 seconds
Parameter learned model CLL: -0.300965


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [7.88e-08, 83, 0], 'true,true': [0.474, 30, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 92, 0], 'true,true': [0.447, 22, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [6.83e-08, 83, 0], 'true,true': [0.476, 31, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [5.67e-08, 75, 0], 'true,true': [0.471, 29, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 86, 0], 'true,true': [0.479, 32, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [5.16e-08, 89, 0], 'true,true': [0.479, 32, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [4.94e-08, 87, 0], 'true,true': [0.491, 40, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 88, 0], 'true,true,true': [4.292, 27, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [2.98e-08, 68, 0], 'true,true': [0.479, 32, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 74, 0], 'true,true,true': [4.397, 29, 58]}]]
[{'': [0.2246900826446277, 7.490661370964911e-17], 'true': [0.2246900826446277, nan]}, {'': [0.1993749999999998, -1.68946982008176e-17], 'true': [0.1993749999999998, nan]}, {'': [0.22699154147203704, 5.617996028223683e-17], 'true': [0.22699154147203704, nan]}, {'': [0.2222222222222217, 4.2928623618839385e-17], 'true': [0.2222222222222217, nan]}, {'': [0.22913580246913517, 0.0], 'true': [0.22913580246913517, nan]}, {'': [0.22913580246913617, 2.993859841685815e-17], 'true': [0.22913580246913617, nan]}, {'': [0.24156601416076642, 2.807460522040626e-17], 'true': [0.24156601416076642, nan]}, {'': [0.21674740484429106, -7.569702440626067e-18], 'true': [0.21674740484429106, nan], 'true,true': [0.21674740484429106, nan]}, {'': [0.22913580246913565, 1.3061447348531253e-17], 'true': [0.22913580246913565, nan]}, {'': [0.2222222222222221, -9.00180830777154e-18], 'true': [0.2222222222222221, nan], 'true,true': [0.2222222222222221, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1254446385283913;  // std dev = 3,16e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.1254446385283915;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.11231637819360621;  // std dev = 7,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.1015963294878362;  // std dev = 5,27e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.15135096385431993;  // std dev = 0,556, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926107;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08381200928366096;  // std dev = 0,010, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.08518475138839678;  // std dev = 3,94e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07679742920286631;  // std dev = 0,012, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.0787767547310916;  // std dev = 5,27e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07095397197538733;  // std dev = 0,011, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.07324622576333707;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then return -0.06878765118968012;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(B) )
%   | | | then return -0.06878765118968012;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.12972797594185484;  // std dev = 0,678, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06842697784420265;  // std dev = 4,28e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.061377353684205084;  // std dev = 0,020, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.06419184008202626;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078636
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.695 seconds
Total inference time: 3.317 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064399
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.582 seconds
Refined model CLL: -0.064399


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078636
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 7.241 seconds
Total inference time: 3.317 seconds
AUC ROC: 1.0
Total revision time: 7.241
Best scored revision CLL: -0.064399


Dataset: 54_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:56:01
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'parameter': {'AUC PR': 0.102112, 'AUC ROC': 0.86826, 'Inference time': 2.418, 'CLL': -0.30302, 'Precision': [0.102112, 0.5], 'F1': 0.185302, 'Learning time': 1.248, 'Recall': 1.0}, 'Inference time': 3.317, 'CLL': -0.078636, 'Precision': [0.736364, 0.5], 'F1': 0.848168, 'Learning time': 7.241, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048774;  // std dev = 4,21e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.6792392193186044;  // std dev = 0,180, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.6978088468073818;  // std dev = 0,134, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.1254446385283911;  // std dev = 7,60e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5652782325614896;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.5405956329485367;  // std dev = 0,124, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.11231637819360624;  // std dev = 7,60e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 2,58e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4258849165214262;  // std dev = 0,005, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.3317260920131613;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32639297619297464;  // std dev = 0,005, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.26252647926912753;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09255465501314007;  // std dev = 0,018, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851953986490875;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25904517438945673;  // std dev = 0,004, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.21481048828863358;  // std dev = 0,002, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2124898601862789;  // std dev = 0,004, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18102029093241834;  // std dev = 0,000906, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0785739719356743;  // std dev = 0,022, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17909785870055203;  // std dev = 0,003, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.15551309650135417;  // std dev = 0,000696, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07306082030326005;  // std dev = 0,021, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15426042912987478;  // std dev = 0,003, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13598529515224328;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06904376834071559;  // std dev = 0,083, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06418567534618466;  // std dev = 2,36e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( female(A) )
%   | then return 0.1347219818720778;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.12262517505874952;  // std dev = 0,056, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071936
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.727 seconds
Total inference time: 4.4 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:56:09
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 4.4, 'CLL': -0.071936, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.727, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.1418510649004879;  // std dev = 0,000, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */


Results
   AUC ROC   = 0.957991
   AUC PR    = 0.262472
   CLL	      = -0.182945
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.069 seconds
Total inference time: 2.058 seconds
AUC ROC: 0.957991


Dataset: 54_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:56:13
{'AUC PR': 0.262472, 'AUC ROC': 0.957991, 'Inference time': 2.058, 'CLL': -0.182945, 'Precision': [nan, 0.5], 'F1': nan, 'Learning time': 2.069, 'Recall': 0.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
0;true,false,true;haswordvenue(I, G).;false;false
0;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
0;true;haswordauthor(D, C).;true;true
0;true,true;author(E, D), title(E, B).;true;false
0;true,true,true;samebib(E, F), title(F, A).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;true,false,true;haswordvenue(G, E).;false;false
1;true;haswordauthor(D, C).;false;true
1;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
2;true,false,true;haswordvenue(G, E).;false;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;true,false,true;haswordvenue(G, E).;false;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;true
4;true,false,true;haswordvenue(J, H).;false;false
4;true,false,false;haswordtitle(B, K), haswordauthor(L, K).;false;false
4;true,true,false;author(G, D), title(G, A).;false;false
4;true;haswordauthor(D, C).;true;true
4;true,true;author(E, D), title(E, B).;true;true
4;true,true,true;samebib(E, F), title(F, A).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
5;true,false,true;haswordvenue(I, G).;false;false
5;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;true;haswordauthor(D, C).;true;true
5;true,true;author(E, D), title(E, B).;true;false
5;true,true,true;samebib(E, F), title(F, A).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false
6;true,false,true;haswordvenue(G, E).;false;false
6;true;haswordauthor(D, C).;false;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
7;true,false,true;author(G, F), title(G, B).;false;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;true,false,true;haswordvenue(G, E).;false;false
8;true;haswordauthor(D, C).;false;true
8;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
9;true,false,true;haswordvenue(J, H).;false;false
9;true,true,false;haswordauthor(G, C).;false;false
9;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
9;true,true;haswordvenue(F, D).;true;true
9;true,true,true;haswordtitle(A, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.5998156017661755;  // std dev = 0,438, 240,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004879;  // std dev = 5,96e-08, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.4377305176262125;  // std dev = 0,471, 266,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839194;  // std dev = 0,000, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.38544357282833297;  // std dev = 0,457, 253,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360696;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.24278686012887565;  // std dev = 0,477, 274,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783662;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.2261125780506131;  // std dev = 0,461, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926043;  // std dev = 1,37e-07, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.17235636785056863;  // std dev = 0,460, 256,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 9,88e-08, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11370967154328077;  // std dev = 0,467, 262,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109141;  // std dev = 4,71e-08, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.11862017976349205;  // std dev = 7,160, 250,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333682;  // std dev = 1,14e-07, 259,000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.07913321281396914;  // std dev = 0,458, 254,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442029;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.05523315004229806;  // std dev = 7,364, 256,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202597;  // std dev = 1,13e-07, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */


Results
   AUC ROC   = 0.861638
   AUC PR    = 0.064496
   CLL	      = -0.339413
   Precision = 0.064496 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.121176


Total learning time: 2.061 seconds
Total inference time: 2.859 seconds
AUC ROC: 0.861638


Results scoring model
   AUC ROC   = 0.888089
   AUC PR    = 0.183316
   CLL	      = -0.29187
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total scoring time: 3.031 seconds
Parameter learned model CLL: -0.29187


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [5.96e-08, 292, 0], 'true,true': [0.438, 62, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 276, 0], 'true,true': [0.471, 88, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 280, 0], 'true,true': [0.457, 75, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 283, 0], 'true,true': [0.477, 96, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [1.37e-07, 280, 0], 'true,true': [0.461, 79, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [9.88e-08, 285, 0], 'true,true': [0.46, 78, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [4.71e-08, 290, 0], 'true,true': [0.467, 84, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.14e-07, 259, 0], 'true,true,true': [7.16, 72, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 280, 0], 'true,true': [0.458, 76, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.13e-07, 297, 0], 'true,true,true': [7.364, 78, 178]}]]
[{'': [0.19159722222222797, 1.2166827667125003e-17], 'true': [0.19159722222222797, nan]}, {'': [0.22138051896659358, -7.401486830834377e-17], 'true': [0.22138051896659358, nan]}, {'': [0.2085644206283501, -1.1419436824715895e-16], 'true': [0.2085644206283501, nan]}, {'': [0.22760935585273784, -5.963035326608615e-17], 'true': [0.22760935585273784, nan]}, {'': [0.21290254205211248, 6.661338147750939e-17], 'true': [0.21290254205211248, nan]}, {'': [0.21185302734374947, 3.4280570584917116e-17], 'true': [0.21185302734374947, nan]}, {'': [0.21781947438960383, 7.656710514656252e-18], 'true': [0.21781947438960383, nan]}, {'': [0.2050559999999994, 5.0581589538906743e-17], 'true': [0.2050559999999994, nan], 'true,true': [0.2050559999999994, nan]}, {'': [0.20968441936883897, -3.8857805861880476e-17], 'true': [0.20968441936883897, nan]}, {'': [0.2118530273437505, 4.261462114722823e-17], 'true': [0.2118530273437505, nan], 'true,true': [0.2118530273437505, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5,96e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return -0.1418510649004879;  // std dev = 5,96e-08, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return -0.125444638528392;  // std dev = 0,000, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360636;  // std dev = 2,11e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return -0.11231637819360689;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783628;  // std dev = 1,49e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.10159632948783659;  // std dev = 0,000, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.09269127618926044;  // std dev = 1,28e-07, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return -0.08518475138839678;  // std dev = 1,01e-07, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 1,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return -0.07877675473109143;  // std dev = 5,58e-08, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else return -0.07324622576333682;  // std dev = 1,14e-07, 259,000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return -0.06842697784420285;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.06419184008202612;  // std dev = 7,60e-08, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.657 seconds
Total inference time: 3.388 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.055 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.804 seconds
Total inference time: 3.388 seconds
AUC ROC: 1.0
Total revision time: 10.804
Best scored revision CLL: -0.065435


Dataset: 54_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:56:32
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'parameter': {'AUC PR': 0.064496, 'AUC ROC': 0.861638, 'Inference time': 2.859, 'CLL': -0.339413, 'Precision': [0.064496, 0.5], 'F1': 0.121176, 'Learning time': 2.061, 'Recall': 1.0}, 'Inference time': 3.388, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 10.804, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048807;  // std dev = 0,000, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.12544463852839188;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360689;  // std dev = 0,000, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783627;  // std dev = 2,36e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783644;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926065;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839678;  // std dev = 8,43e-08, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109169;  // std dev = 3,33e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.07877675473109146;  // std dev = 5,37e-08, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.0732462257633369;  // std dev = 1,08e-07, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2,47e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06842697784420274;  // std dev = 0,000, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06419184008202625;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #neg=326 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.417 seconds
Total inference time: 2.911 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:56:38
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 2.911, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 3.417, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048816;  // std dev = 0,000, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.155326
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.258 seconds
Total inference time: 1.657 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:56:41
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.657, 'CLL': -0.155326, 'Precision': [nan, 0.5], 'F1': nan, 'Learning time': 1.258, 'Recall': 0.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
0;true,false,true;haswordvenue(I, G).;false;false
0;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
0;true;haswordauthor(D, C).;true;true
0;true,true;author(E, D), title(E, B).;true;false
0;true,true,true;samebib(E, F), title(F, A).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;true,false,true;haswordvenue(G, E).;false;false
1;true;haswordauthor(D, C).;false;true
1;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
2;true,false,true;haswordvenue(G, E).;false;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;true,false,true;haswordvenue(G, E).;false;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;true
4;true,false,true;haswordvenue(J, H).;false;false
4;true,false,false;haswordtitle(B, K), haswordauthor(L, K).;false;false
4;true,true,false;author(G, D), title(G, A).;false;false
4;true;haswordauthor(D, C).;true;true
4;true,true;author(E, D), title(E, B).;true;true
4;true,true,true;samebib(E, F), title(F, A).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
5;true,false,true;haswordvenue(I, G).;false;false
5;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;true;haswordauthor(D, C).;true;true
5;true,true;author(E, D), title(E, B).;true;false
5;true,true,true;samebib(E, F), title(F, A).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false
6;true,false,true;haswordvenue(G, E).;false;false
6;true;haswordauthor(D, C).;false;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
7;true,false,true;author(G, F), title(G, B).;false;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;true,false,true;haswordvenue(G, E).;false;false
8;true;haswordauthor(D, C).;false;true
8;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
9;true,false,true;haswordvenue(J, H).;false;false
9;true,true,false;haswordauthor(G, C).;false;false
9;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
9;true,true;haswordvenue(F, D).;true;true
9;true,true,true;haswordtitle(A, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.5612739350995126;  // std dev = 0,457, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.36744745274220675;  // std dev = 0,491, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3571855939674917;  // std dev = 0,476, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360625;  // std dev = 5,27e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.28753018812809633;  // std dev = 0,473, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5,27e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.23821784256282302;  // std dev = 0,466, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.13088909675944693;  // std dev = 0,482, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,67e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.06442419051040188;  // std dev = 0,490, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109165;  // std dev = 4,08e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.09129898157481202;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.05978393210426737;  // std dev = 0,482, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 2,24e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.011431393934332536;  // std dev = 4,243, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */


Results
   AUC ROC   = 0.870352
   AUC PR    = 0.095252
   CLL	      = -0.28478
   Precision = 0.095252 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.173935


Total learning time: 1.426 seconds
Total inference time: 3.229 seconds
AUC ROC: 0.870352


Results scoring model
   AUC ROC   = 0.85431
   AUC PR    = 0.075503
   CLL	      = -0.310047
   Precision = 0.075503 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.140406


Total scoring time: 1.354 seconds
Parameter learned model CLL: -0.310047


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [7.3e-08, 74, 0], 'true,true': [0.457, 19, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 68, 0], 'true,true': [0.491, 31, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [5.27e-08, 67, 0], 'true,true': [0.476, 24, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [5.27e-08, 69, 0], 'true,true': [0.473, 23, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 63, 0], 'true,true': [0.466, 21, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [1.67e-08, 58, 0], 'true,true': [0.482, 26, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [4.08e-08, 75, 0], 'true,true': [0.49, 30, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 56, 0], 'true,true,true': [4.009, 25, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [2.24e-08, 62, 0], 'true,true': [0.482, 26, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 68, 0], 'true,true,true': [4.243, 30, 45]}]]
[{'': [0.20874023437500033, 7.201446646217232e-17], 'true': [0.20874023437500033, nan]}, {'': [0.24151662049861444, -3.591898020846095e-17], 'true': [0.24151662049861444, nan]}, {'': [0.22684310018903678, 4.142623226213271e-17], 'true': [0.22684310018903678, nan]}, {'': [0.22383217993079593, 4.022547190670857e-17], 'true': [0.22383217993079593, nan]}, {'': [0.2169421487603305, 0.0], 'true': [0.2169421487603305, nan]}, {'': [0.23209680618924808, 4.785444071660158e-18], 'true': [0.23209680618924808, nan]}, {'': [0.2400000000000001, 2.2204460492503132e-17], 'true': [0.2400000000000001, nan]}, {'': [0.22959183673469385, 9.912705577010326e-19], 'true': [0.22959183673469385, nan], 'true,true': [0.22959183673469385, nan]}, {'': [0.23209680618924827, 8.058070340021298e-18], 'true': [0.23209680618924827, nan]}, {'': [0.24, -5.714383214982423e-18], 'true': [0.24, nan], 'true,true': [0.24, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.14185106490048766;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.12544463852839155;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.11231637819360625;  // std dev = 5,58e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.1015963294878362;  // std dev = 4,34e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.31593193127654934;  // std dev = 0,581, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0787767547310917;  // std dev = 2,98e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07168655199899568;  // std dev = 0,024, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06754971805744647;  // std dev = 0,019, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.062405650191502994;  // std dev = 0,021, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06419184008202625;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078582
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 1.737 seconds
Total inference time: 2.397 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066963
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.265 seconds
Refined model CLL: -0.066963


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078582
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 5.782 seconds
Total inference time: 2.397 seconds
AUC ROC: 1.0
Total revision time: 5.782
Best scored revision CLL: -0.066963


Dataset: 54_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:56:53
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'parameter': {'AUC PR': 0.095252, 'AUC ROC': 0.870352, 'Inference time': 3.229, 'CLL': -0.28478, 'Precision': [0.095252, 0.5], 'F1': 0.173935, 'Learning time': 1.426, 'Recall': 1.0}, 'Inference time': 2.397, 'CLL': -0.078582, 'Precision': [0.743929, 0.5], 'F1': 0.853165, 'Learning time': 5.782, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,15e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6,66e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878362;  // std dev = 5,37e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return -0.19045742229769255;  // std dev = 0,535, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08428050002003952;  // std dev = 0,023, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07818559418771755;  // std dev = 0,018, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07284077742863955;  // std dev = 0,016, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0678357372511015;  // std dev = 0,018, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then return -0.06434170637787907;  // std dev = 1,05e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.18140325707226812;  // std dev = 0,672, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.05870075861442463;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075997
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 2.153 seconds
Total inference time: 2.29 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:56:58
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 2.29, 'CLL': -0.075997, 'Precision': [0.743929, 0.5], 'F1': 0.853165, 'Learning time': 2.153, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.995302
   AUC PR    = 0.743929
   CLL	      = -0.16604
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.749 seconds
Total inference time: 1.638 seconds
AUC ROC: 0.995302


Dataset: 54_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:57:01
{'AUC PR': 0.743929, 'AUC ROC': 0.995302, 'Inference time': 1.638, 'CLL': -0.16604, 'Precision': [nan, 0.5], 'F1': nan, 'Learning time': 0.749, 'Recall': 0.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
0;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
0;true,false,true;haswordvenue(I, G).;false;false
0;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
0;true;haswordauthor(D, C).;true;true
0;true,true;author(E, D), title(E, B).;true;false
0;true,true,true;samebib(E, F), title(F, A).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
1;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
1;true,false,true;haswordvenue(G, E).;false;false
1;true;haswordauthor(D, C).;false;true
1;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
2;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
2;true,false,true;haswordvenue(G, E).;false;false
2;true;haswordauthor(D, C).;false;true
2;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
3;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
3;true,false,true;haswordvenue(G, E).;false;false
3;true;haswordauthor(D, C).;false;true
3;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;true
4;true,false,true;haswordvenue(J, H).;false;false
4;true,false,false;haswordtitle(B, K), haswordauthor(L, K).;false;false
4;true,true,false;author(G, D), title(G, A).;false;false
4;true;haswordauthor(D, C).;true;true
4;true,true;author(E, D), title(E, B).;true;true
4;true,true,true;samebib(E, F), title(F, A).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
5;true,false;haswordtitle(A, G), haswordauthor(H, G).;true;true
5;true,false,true;haswordvenue(I, G).;false;false
5;true,false,false;haswordtitle(B, J), haswordauthor(K, J).;false;false
5;true;haswordauthor(D, C).;true;true
5;true,true;author(E, D), title(E, B).;true;false
5;true,true,true;samebib(E, F), title(F, A).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
6;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;false
6;true,false,true;haswordvenue(G, E).;false;false
6;true;haswordauthor(D, C).;false;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
7;true,false,true;author(G, F), title(G, B).;false;false
7;true;haswordauthor(D, C).;false;true
7;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
8;true,false;haswordtitle(A, E), haswordauthor(F, E).;true;true
8;true,false,true;haswordvenue(G, E).;false;false
8;true;haswordauthor(D, C).;false;true
8;true,false,false;haswordtitle(B, H), haswordauthor(I, H).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
9;true,false;haswordtitle(A, H), haswordauthor(I, H).;true;false
9;true,false,true;haswordvenue(J, H).;false;false
9;true,true,false;haswordauthor(G, C).;false;false
9;true;haswordtitle(B, D), haswordauthor(E, D).;true;true
9;true,true;haswordvenue(F, D).;true;true
9;true,true,true;haswordtitle(A, D).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.5612739350995126;  // std dev = 0,457, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3597577739998964;  // std dev = 0,493, 77,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283916;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.4097333800097301;  // std dev = 0,457, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2580597969383132;  // std dev = 0,479, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 4,94e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.24490614722781215;  // std dev = 0,462, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(D, E) )
%   | then return 0.14374195418751212;  // std dev = 0,476, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.13756602362920928;  // std dev = 0,466, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310917;  // std dev = 3,07e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(E, F) )
%   | | then return 0.0647423952131642;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09848731259644199;  // std dev = 0,462, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 2,89e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.025518168162401357;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */


Results
   AUC ROC   = 0.868927
   AUC PR    = 0.095576
   CLL	      = -0.306571
   Precision = 0.095576 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.174476


Total learning time: 1.244 seconds
Total inference time: 2.925 seconds
AUC ROC: 0.868927


Results scoring model
   AUC ROC   = 0.864075
   AUC PR    = 0.074013
   CLL	      = -0.314282
   Precision = 0.074013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.137825


Total scoring time: 1.35 seconds
Parameter learned model CLL: -0.314282


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [6.32e-08, 63, 0], 'true,true': [0.457, 19, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 58, 0], 'true,true': [0.493, 32, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [4.21e-08, 58, 0], 'true,true': [0.457, 19, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [4.94e-08, 69, 0], 'true,true': [0.479, 25, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 50, 0], 'true,true': [0.462, 20, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [1.83e-08, 62, 0], 'true,true': [0.476, 24, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [3.07e-08, 65, 0], 'true,true': [0.466, 21, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(E, F)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 65, 0], 'true,true,true': [4.009, 25, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [2.89e-08, 69, 0], 'true,true': [0.462, 20, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 64, 0], 'true,true,true': [4.009, 25, 45]}]]
[{'': [0.20874023437500033, 6.344131569286608e-17], 'true': [0.20874023437500033, nan]}, {'': [0.24287400910777482, -4.0197730201945323e-17], 'true': [0.24287400910777482, nan]}, {'': [0.20874023437500064, 3.062684205862501e-17], 'true': [0.20874023437500064, nan]}, {'': [0.2295918367346946, 3.539841527790354e-17], 'true': [0.2295918367346946, nan]}, {'': [0.21301775147929017, -3.3306690738754695e-18], 'true': [0.21301775147929017, nan]}, {'': [0.22684310018903578, 5.3720468933475315e-18], 'true': [0.22684310018903578, nan]}, {'': [0.21694214876033094, 1.4518301091252048e-17], 'true': [0.21694214876033094, nan]}, {'': [0.2295918367346939, -1.708035422500241e-18], 'true': [0.2295918367346939, nan], 'true,true': [0.2295918367346939, nan]}, {'': [0.21301775147928978, 1.206764157201257e-17], 'true': [0.21301775147928978, nan]}, {'': [0.22959183673469374, -3.469446951953614e-18], 'true': [0.22959183673469374, nan], 'true,true': [0.22959183673469374, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.11231637819360626;  // std dev = 4,71e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.1015963294878362;  // std dev = 4,47e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.09269127618926107;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 2,04e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.08518475138839679;  // std dev = 2,36e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07877675473109173;  // std dev = 2,24e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07324622576333704;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.06842697784420268;  // std dev = 2,69e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.06419184008202625;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070744
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 1.789 seconds
Total inference time: 2.717 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064728
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.426 seconds
Refined model CLL: -0.064728


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070744
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 5.809 seconds
Total inference time: 2.717 seconds
AUC ROC: 1.0
Total revision time: 5.809
Best scored revision CLL: -0.064728


Dataset: 54_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:57:13
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'parameter': {'AUC PR': 0.095576, 'AUC ROC': 0.868927, 'Inference time': 2.925, 'CLL': -0.306571, 'Precision': [0.095576, 0.5], 'F1': 0.174476, 'Learning time': 1.244, 'Recall': 1.0}, 'Inference time': 2.717, 'CLL': -0.070744, 'Precision': [0.742291, 0.5], 'F1': 0.852086, 'Learning time': 5.809, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1273592304945724;  // std dev = 0,154, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5263367491402023;  // std dev = 0,136, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.11365145849588194;  // std dev = 0,143, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10130010100875625;  // std dev = 5,27e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4209731337415502;  // std dev = 0,024, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17852448309797989;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3230626689993596;  // std dev = 0,021, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15445668867184406;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09237568369261058;  // std dev = 0,006, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08497941290113058;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25677834525752036;  // std dev = 0,019, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1347790265385735;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07860040567831718;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21089321123947788;  // std dev = 0,016, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12033146404781735;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17792989854764027;  // std dev = 0,014, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10700256190589705;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07285137243543365;  // std dev = 0,015, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06830842438735076;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( female(A) )
%   | then return 0.14108927327979146;  // std dev = 0,050, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.14435291474799297;  // std dev = 0,051, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06408722997509887;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13574870576699702;  // std dev = 0,010, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11160350550012928;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072566
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.327 seconds
Total inference time: 2.506 seconds
AUC ROC: 1.0


Dataset: 54_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:57:18
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 2.506, 'CLL': -0.072566, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.327, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.995191
   AUC PR    = 0.742291
   CLL	      = -0.166516
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.8 seconds
Total inference time: 1.445 seconds
AUC ROC: 0.995191


Dataset: 54_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:57:21
{'AUC PR': 0.742291, 'AUC ROC': 0.995191, 'Inference time': 1.445, 'CLL': -0.166516, 'Precision': [nan, 0.5], 'F1': nan, 'Learning time': 0.8, 'Recall': 0.0}


